{
	"id": "fb99737197b011e550d0a896773ddde3",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.26",
	"solcLongVersion": "0.8.26+commit.8a97fa7a",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/real-estate-marketplace/Marketplace.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"@openzeppelin/contracts/utils/Pausable.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\";\nimport \"@openzeppelin/contracts/utils/math/Math.sol\";\n\ninterface IAlvaraProtocol {\n    function checkPropertyIntegration(uint256 propertyId) external view returns (bool);\n}\n\ncontract Marketplace is Ownable, Pausable {\n    using SafeERC20 for IERC20;\n\n    // Define events\n    event PropertyListed(uint256 propertyId, address indexed owner, uint256 price, uint256 totalShares);\n    event SharesPurchased(uint256 propertyId, address indexed buyer, uint256 shares);\n    event PropertySold(uint256 propertyId, address indexed buyer, uint256 shares);\n    \n    // Define state variables\n    struct Property {\n        address owner;\n        uint256 price;\n        uint256 totalShares;\n        uint256 availableShares;\n        address tokenAddress; // ERC20 token used for payments\n        bool isListed;\n    }\n    \n    mapping(uint256 => Property) public properties;\n    uint256 public nextPropertyId;\n    \n    IERC20 public paymentToken; // Payment token for purchasing shares\n    IAlvaraProtocol public alvaraProtocol; // Instance of the Alvara Protocol\n    \n    // Constructor\n    constructor(IERC20 _paymentToken, IAlvaraProtocol _alvaraProtocol) Ownable(msg.sender) {\n        paymentToken = _paymentToken;\n        alvaraProtocol = _alvaraProtocol;\n    }\n    \n    // Function to list a property\n    function listProperty(uint256 price, uint256 totalShares, address tokenAddress) external whenNotPaused {\n        require(price > 0, \"Price must be greater than 0\");\n        require(totalShares > 0, \"Total shares must be greater than 0\");\n        \n        properties[nextPropertyId] = Property({\n            owner: msg.sender,\n            price: price,\n            totalShares: totalShares,\n            availableShares: totalShares,\n            tokenAddress: tokenAddress,\n            isListed: true\n        });\n        \n        emit PropertyListed(nextPropertyId, msg.sender, price, totalShares);\n        nextPropertyId++;\n    }\n    \n    // Function to purchase shares in a property\n    function purchaseShares(uint256 propertyId, uint256 sharesToBuy) external whenNotPaused {\n        Property storage property = properties[propertyId];\n        require(property.isListed, \"Property is not listed\");\n        require(property.availableShares >= sharesToBuy, \"Not enough shares available\");\n        require(sharesToBuy > 0, \"Shares to buy must be greater than 0\");\n        \n        uint256 totalPrice = (property.price * sharesToBuy) / property.totalShares;\n        paymentToken.safeTransferFrom(msg.sender, address(this), totalPrice);\n        \n        property.availableShares -= sharesToBuy;\n        \n        emit SharesPurchased(propertyId, msg.sender, sharesToBuy);\n    }\n    \n    // Function to finalize the sale of a property\n    function finalizeSale(uint256 propertyId, address buyer) external whenNotPaused {\n        Property storage property = properties[propertyId];\n        require(property.owner == msg.sender, \"Only the owner can finalize the sale\");\n        require(property.availableShares == 0, \"Shares are still available\");\n        \n        property.isListed = false;\n        property.owner = buyer;\n        \n        uint256 totalPayment = property.price;\n        paymentToken.safeTransfer(property.owner, totalPayment);\n        \n        emit PropertySold(propertyId, buyer, property.totalShares);\n    }\n    \n    // Function to pause contract functions in emergencies\n    function pause() external onlyOwner {\n        _pause();\n    }\n    \n    // Function to unpause contract functions\n    function unpause() external onlyOwner {\n        _unpause();\n    }\n    \n    // Function to integrate with Alvara Protocol\n    function integrateWithAlvara(uint256 propertyId) external view returns (bool) {\n        return alvaraProtocol.checkPropertyIntegration(propertyId);\n    }\n}"
			},
			"@openzeppelin/contracts/utils/math/Math.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    /**\n     * @dev Muldiv operation overflow.\n     */\n    error MathOverflowedMulDiv();\n\n    enum Rounding {\n        Floor, // Toward negative infinity\n        Ceil, // Toward positive infinity\n        Trunc, // Toward zero\n        Expand // Away from zero\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds towards infinity instead\n     * of rounding towards zero.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        if (b == 0) {\n            // Guarantee the same behavior as in a regular Solidity division.\n            return a / b;\n        }\n\n        // (a + b - 1) / b can overflow on addition, so we distribute.\n        return a == 0 ? 0 : (a - 1) / b + 1;\n    }\n\n    /**\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n     * denominator == 0.\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n     * Uniswap Labs also under MIT license.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\n        unchecked {\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n            // variables such that product = prod1 * 2^256 + prod0.\n            uint256 prod0 = x * y; // Least significant 256 bits of the product\n            uint256 prod1; // Most significant 256 bits of the product\n            assembly {\n                let mm := mulmod(x, y, not(0))\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\n            }\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (prod1 == 0) {\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\n                // The surrounding unchecked block does not change this fact.\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\n                return prod0 / denominator;\n            }\n\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\n            if (denominator <= prod1) {\n                revert MathOverflowedMulDiv();\n            }\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [prod1 prod0].\n            uint256 remainder;\n            assembly {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                prod1 := sub(prod1, gt(remainder, prod0))\n                prod0 := sub(prod0, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator.\n            // Always >= 1. See https://cs.stackexchange.com/q/138556/92363.\n\n            uint256 twos = denominator & (0 - denominator);\n            assembly {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [prod1 prod0] by twos.\n                prod0 := div(prod0, twos)\n\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from prod1 into prod0.\n            prod0 |= prod1 * twos;\n\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv = 1 mod 2^4.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also\n            // works in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\n            // is no longer required.\n            result = prod0 * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\n        uint256 result = mulDiv(x, y, denominator);\n        if (unsignedRoundsUp(rounding) && mulmod(x, y, denominator) > 0) {\n            result += 1;\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n     * towards zero.\n     *\n     * Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11).\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        if (a == 0) {\n            return 0;\n        }\n\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\n        //\n        // We know that the \"msb\" (most significant bit) of our target number `a` is a power of 2 such that we have\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\n        //\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\n        // → `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\n        // → `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\n        //\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\n        uint256 result = 1 << (log2(a) >> 1);\n\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\n        // into the expected uint128 result.\n        unchecked {\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            return min(result, a / result);\n        }\n    }\n\n    /**\n     * @notice Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = sqrt(a);\n            return result + (unsignedRoundsUp(rounding) && result * result < a ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 128;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 64;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 32;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 16;\n            }\n            if (value >> 8 > 0) {\n                value >>= 8;\n                result += 8;\n            }\n            if (value >> 4 > 0) {\n                value >>= 4;\n                result += 4;\n            }\n            if (value >> 2 > 0) {\n                value >>= 2;\n                result += 2;\n            }\n            if (value >> 1 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log2(value);\n            return result + (unsignedRoundsUp(rounding) && 1 << result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 10 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10 ** 64) {\n                value /= 10 ** 64;\n                result += 64;\n            }\n            if (value >= 10 ** 32) {\n                value /= 10 ** 32;\n                result += 32;\n            }\n            if (value >= 10 ** 16) {\n                value /= 10 ** 16;\n                result += 16;\n            }\n            if (value >= 10 ** 8) {\n                value /= 10 ** 8;\n                result += 8;\n            }\n            if (value >= 10 ** 4) {\n                value /= 10 ** 4;\n                result += 4;\n            }\n            if (value >= 10 ** 2) {\n                value /= 10 ** 2;\n                result += 2;\n            }\n            if (value >= 10 ** 1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log10(value);\n            return result + (unsignedRoundsUp(rounding) && 10 ** result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 256 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     *\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\n     */\n    function log256(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 16;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 8;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 4;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 2;\n            }\n            if (value >> 8 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log256(value);\n            return result + (unsignedRoundsUp(rounding) && 1 << (result << 3) < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers.\n     */\n    function unsignedRoundsUp(Rounding rounding) internal pure returns (bool) {\n        return uint8(rounding) % 2 == 1;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/utils/SafeERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\nimport {IERC20Permit} from \"../extensions/IERC20Permit.sol\";\nimport {Address} from \"../../../utils/Address.sol\";\n\n/**\n * @title SafeERC20\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\n * contract returns false). Tokens that return no value (and instead revert or\n * throw on failure) are also supported, non-reverting calls are assumed to be\n * successful.\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\n */\nlibrary SafeERC20 {\n    using Address for address;\n\n    /**\n     * @dev An operation with an ERC20 token failed.\n     */\n    error SafeERC20FailedOperation(address token);\n\n    /**\n     * @dev Indicates a failed `decreaseAllowance` request.\n     */\n    error SafeERC20FailedDecreaseAllowance(address spender, uint256 currentAllowance, uint256 requestedDecrease);\n\n    /**\n     * @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     */\n    function safeTransfer(IERC20 token, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value)));\n    }\n\n    /**\n     * @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n     * calling contract. If `token` returns no value, non-reverting calls are assumed to be successful.\n     */\n    function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeCall(token.transferFrom, (from, to, value)));\n    }\n\n    /**\n     * @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     */\n    function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {\n        uint256 oldAllowance = token.allowance(address(this), spender);\n        forceApprove(token, spender, oldAllowance + value);\n    }\n\n    /**\n     * @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\n     * value, non-reverting calls are assumed to be successful.\n     */\n    function safeDecreaseAllowance(IERC20 token, address spender, uint256 requestedDecrease) internal {\n        unchecked {\n            uint256 currentAllowance = token.allowance(address(this), spender);\n            if (currentAllowance < requestedDecrease) {\n                revert SafeERC20FailedDecreaseAllowance(spender, currentAllowance, requestedDecrease);\n            }\n            forceApprove(token, spender, currentAllowance - requestedDecrease);\n        }\n    }\n\n    /**\n     * @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n     * to be set to zero before setting it to a non-zero value, such as USDT.\n     */\n    function forceApprove(IERC20 token, address spender, uint256 value) internal {\n        bytes memory approvalCall = abi.encodeCall(token.approve, (spender, value));\n\n        if (!_callOptionalReturnBool(token, approvalCall)) {\n            _callOptionalReturn(token, abi.encodeCall(token.approve, (spender, 0)));\n            _callOptionalReturn(token, approvalCall);\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     */\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\n        // we're implementing it ourselves. We use {Address-functionCall} to perform this call, which verifies that\n        // the target address contains contract code and also asserts for success in the low-level call.\n\n        bytes memory returndata = address(token).functionCall(data);\n        if (returndata.length != 0 && !abi.decode(returndata, (bool))) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     *\n     * This is a variant of {_callOptionalReturn} that silents catches all reverts and returns a bool instead.\n     */\n    function _callOptionalReturnBool(IERC20 token, bytes memory data) private returns (bool) {\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\n        // we're implementing it ourselves. We cannot use {Address-functionCall} here since this should return false\n        // and not revert is the subcall reverts.\n\n        (bool success, bytes memory returndata) = address(token).call(data);\n        return success && (returndata.length == 0 || abi.decode(returndata, (bool))) && address(token).code.length > 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/utils/Pausable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Pausable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which allows children to implement an emergency stop\n * mechanism that can be triggered by an authorized account.\n *\n * This module is used through inheritance. It will make available the\n * modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n * the functions of your contract. Note that they will not be pausable by\n * simply including this module, only once the modifiers are put in place.\n */\nabstract contract Pausable is Context {\n    bool private _paused;\n\n    /**\n     * @dev Emitted when the pause is triggered by `account`.\n     */\n    event Paused(address account);\n\n    /**\n     * @dev Emitted when the pause is lifted by `account`.\n     */\n    event Unpaused(address account);\n\n    /**\n     * @dev The operation failed because the contract is paused.\n     */\n    error EnforcedPause();\n\n    /**\n     * @dev The operation failed because the contract is not paused.\n     */\n    error ExpectedPause();\n\n    /**\n     * @dev Initializes the contract in unpaused state.\n     */\n    constructor() {\n        _paused = false;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is not paused.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    modifier whenNotPaused() {\n        _requireNotPaused();\n        _;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is paused.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    modifier whenPaused() {\n        _requirePaused();\n        _;\n    }\n\n    /**\n     * @dev Returns true if the contract is paused, and false otherwise.\n     */\n    function paused() public view virtual returns (bool) {\n        return _paused;\n    }\n\n    /**\n     * @dev Throws if the contract is paused.\n     */\n    function _requireNotPaused() internal view virtual {\n        if (paused()) {\n            revert EnforcedPause();\n        }\n    }\n\n    /**\n     * @dev Throws if the contract is not paused.\n     */\n    function _requirePaused() internal view virtual {\n        if (!paused()) {\n            revert ExpectedPause();\n        }\n    }\n\n    /**\n     * @dev Triggers stopped state.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    function _pause() internal virtual whenNotPaused {\n        _paused = true;\n        emit Paused(_msgSender());\n    }\n\n    /**\n     * @dev Returns to normal state.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    function _unpause() internal virtual whenPaused {\n        _paused = false;\n        emit Unpaused(_msgSender());\n    }\n}\n"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Address.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev The ETH balance of the account is not enough to perform the operation.\n     */\n    error AddressInsufficientBalance(address account);\n\n    /**\n     * @dev There's no code at `target` (it is not a contract).\n     */\n    error AddressEmptyCode(address target);\n\n    /**\n     * @dev A call to an address target failed. The target may have reverted.\n     */\n    error FailedInnerCall();\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        if (address(this).balance < amount) {\n            revert AddressInsufficientBalance(address(this));\n        }\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        if (!success) {\n            revert FailedInnerCall();\n        }\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason or custom error, it is bubbled\n     * up by this function (like regular Solidity function calls). However, if\n     * the call reverted with no returned reason, this function reverts with a\n     * {FailedInnerCall} error.\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     */\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\n        if (address(this).balance < value) {\n            revert AddressInsufficientBalance(address(this));\n        }\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\n     * was not a contract or bubbling up the revert reason (falling back to {FailedInnerCall}) in case of an\n     * unsuccessful call.\n     */\n    function verifyCallResultFromTarget(\n        address target,\n        bool success,\n        bytes memory returndata\n    ) internal view returns (bytes memory) {\n        if (!success) {\n            _revert(returndata);\n        } else {\n            // only check if target is a contract if the call was successful and the return data is empty\n            // otherwise we already know that it was a contract\n            if (returndata.length == 0 && target.code.length == 0) {\n                revert AddressEmptyCode(target);\n            }\n            return returndata;\n        }\n    }\n\n    /**\n     * @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\n     * revert reason or with a default {FailedInnerCall} error.\n     */\n    function verifyCallResult(bool success, bytes memory returndata) internal pure returns (bytes memory) {\n        if (!success) {\n            _revert(returndata);\n        } else {\n            return returndata;\n        }\n    }\n\n    /**\n     * @dev Reverts with returndata if present. Otherwise reverts with {FailedInnerCall}.\n     */\n    function _revert(bytes memory returndata) private pure {\n        // Look for revert reason and bubble it up if present\n        if (returndata.length > 0) {\n            // The easiest way to bubble the revert reason is using memory via assembly\n            /// @solidity memory-safe-assembly\n            assembly {\n                let returndata_size := mload(returndata)\n                revert(add(32, returndata), returndata_size)\n            }\n        } else {\n            revert FailedInnerCall();\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/IERC20Permit.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n * https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n *\n * Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n * presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n * need to send a transaction, and thus is not required to hold Ether at all.\n *\n * ==== Security Considerations\n *\n * There are two important considerations concerning the use of `permit`. The first is that a valid permit signature\n * expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be\n * considered as an intention to spend the allowance in any specific way. The second is that because permits have\n * built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should\n * take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be\n * generally recommended is:\n *\n * ```solidity\n * function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {\n *     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}\n *     doThing(..., value);\n * }\n *\n * function doThing(..., uint256 value) public {\n *     token.safeTransferFrom(msg.sender, address(this), value);\n *     ...\n * }\n * ```\n *\n * Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of\n * `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also\n * {SafeERC20-safeTransferFrom}).\n *\n * Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so\n * contracts should have entry points that don't rely on permit.\n */\ninterface IERC20Permit {\n    /**\n     * @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n     * given ``owner``'s signed approval.\n     *\n     * IMPORTANT: The same issues {IERC20-approve} has related to transaction\n     * ordering also apply here.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `deadline` must be a timestamp in the future.\n     * - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n     * over the EIP712-formatted function arguments.\n     * - the signature must use ``owner``'s current nonce (see {nonces}).\n     *\n     * For more information on the signature format, see the\n     * https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n     * section].\n     *\n     * CAUTION: See Security Considerations above.\n     */\n    function permit(\n        address owner,\n        address spender,\n        uint256 value,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) external;\n\n    /**\n     * @dev Returns the current nonce for `owner`. This value must be\n     * included whenever a signature is generated for {permit}.\n     *\n     * Every successful call to {permit} increases ``owner``'s nonce by one. This\n     * prevents a signature from being used multiple times.\n     */\n    function nonces(address owner) external view returns (uint256);\n\n    /**\n     * @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the address provided by the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol": {
				"IERC20Permit": {
					"abi": [
						{
							"inputs": [],
							"name": "DOMAIN_SEPARATOR",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "nonces",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "permit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[EIP-2612]. Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all. ==== Security Considerations There are two important considerations concerning the use of `permit`. The first is that a valid permit signature expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be considered as an intention to spend the allowance in any specific way. The second is that because permits have built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be generally recommended is: ```solidity function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}     doThing(..., value); } function doThing(..., uint256 value) public {     token.safeTransferFrom(msg.sender, address(this), value);     ... } ``` Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also {SafeERC20-safeTransferFrom}). Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so contracts should have entry points that don't rely on permit.",
						"kind": "dev",
						"methods": {
							"DOMAIN_SEPARATOR()": {
								"details": "Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}."
							},
							"nonces(address)": {
								"details": "Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times."
							},
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": {
								"details": "Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]. CAUTION: See Security Considerations above."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"DOMAIN_SEPARATOR()": "3644e515",
							"nonces(address)": "7ecebe00",
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": "d505accf"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[EIP-2612]. Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all. ==== Security Considerations There are two important considerations concerning the use of `permit`. The first is that a valid permit signature expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be considered as an intention to spend the allowance in any specific way. The second is that because permits have built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be generally recommended is: ```solidity function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}     doThing(..., value); } function doThing(..., uint256 value) public {     token.safeTransferFrom(msg.sender, address(this), value);     ... } ``` Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also {SafeERC20-safeTransferFrom}). Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so contracts should have entry points that don't rely on permit.\",\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\"},\"nonces(address)\":{\"details\":\"Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]. CAUTION: See Security Considerations above.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":\"IERC20Permit\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x6008dabfe393240d73d7dd7688033f72740d570aa422254d29a7dce8568f3aff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5196ec75139918c6c7bb4251b36395e668f1fa6d206beba7e7520e74913940d\",\"dweb:/ipfs/QmSyqjksXxmm2mCG6qRd1yuwLykypkSVBbnBnGqJRcuJMi\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"SafeERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "currentAllowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "requestedDecrease",
									"type": "uint256"
								}
							],
							"name": "SafeERC20FailedDecreaseAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "SafeERC20FailedOperation",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.",
						"errors": {
							"SafeERC20FailedDecreaseAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failed `decreaseAllowance` request."
								}
							],
							"SafeERC20FailedOperation(address)": [
								{
									"details": "An operation with an ERC20 token failed."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"title": "SafeERC20",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":751:5769  library SafeERC20 {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":751:5769  library SafeERC20 {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122000840fa72512133acbe1fa59dfc491535cd1a951920b11430d489aa1712b6a7864736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122000840fa72512133acbe1fa59dfc491535cd1a951920b11430d489aa1712b6a7864736f6c634300081a0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 STOP DUP5 0xF 0xA7 0x25 SLT SGT GASPRICE 0xCB 0xE1 STATICCALL MSIZE 0xDF 0xC4 SWAP2 MSTORE8 TLOAD 0xD1 0xA9 MLOAD SWAP3 SIGNEXTEND GT NUMBER 0xD BASEFEE SWAP11 LOG1 PUSH18 0x2B6A7864736F6C634300081A003300000000 ",
							"sourceMap": "751:5018:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122000840fa72512133acbe1fa59dfc491535cd1a951920b11430d489aa1712b6a7864736f6c634300081a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 STOP DUP5 0xF 0xA7 0x25 SLT SGT GASPRICE 0xCB 0xE1 STATICCALL MSIZE 0xDF 0xC4 SWAP2 MSTORE8 TLOAD 0xD1 0xA9 MLOAD SWAP3 SIGNEXTEND GT NUMBER 0xD BASEFEE SWAP11 LOG1 PUSH18 0x2B6A7864736F6C634300081A003300000000 ",
							"sourceMap": "751:5018:3:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"_callOptionalReturn(contract IERC20,bytes memory)": "infinite",
								"_callOptionalReturnBool(contract IERC20,bytes memory)": "infinite",
								"forceApprove(contract IERC20,address,uint256)": "infinite",
								"safeDecreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeIncreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeTransfer(contract IERC20,address,uint256)": "infinite",
								"safeTransferFrom(contract IERC20,address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH #[$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH [$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 3,
									"value": "B"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "CODECOPY",
									"source": 3
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "BYTE",
									"source": 3
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 3,
									"value": "73"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "EQ",
									"source": 3
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 3,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 3,
									"value": "24"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "tag",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "ADDRESS",
									"source": 3
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 3,
									"value": "73"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "MSTORE8",
									"source": 3
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "RETURN",
									"source": 3
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122000840fa72512133acbe1fa59dfc491535cd1a951920b11430d489aa1712b6a7864736f6c634300081a0033",
									".code": [
										{
											"begin": 751,
											"end": 5769,
											"name": "PUSHDEPLOYADDRESS",
											"source": 3
										},
										{
											"begin": 751,
											"end": 5769,
											"name": "ADDRESS",
											"source": 3
										},
										{
											"begin": 751,
											"end": 5769,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 751,
											"end": 5769,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 751,
											"end": 5769,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 751,
											"end": 5769,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 751,
											"end": 5769,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 751,
											"end": 5769,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 751,
											"end": 5769,
											"name": "REVERT",
											"source": 3
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Pausable.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"contracts/real-estate-marketplace/Marketplace.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"currentAllowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"requestedDecrease\",\"type\":\"uint256\"}],\"name\":\"SafeERC20FailedDecreaseAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\",\"errors\":{\"SafeERC20FailedDecreaseAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failed `decreaseAllowance` request.\"}],\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC20 token failed.\"}]},\"kind\":\"dev\",\"methods\":{},\"title\":\"SafeERC20\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":\"SafeERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x6008dabfe393240d73d7dd7688033f72740d570aa422254d29a7dce8568f3aff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5196ec75139918c6c7bb4251b36395e668f1fa6d206beba7e7520e74913940d\",\"dweb:/ipfs/QmSyqjksXxmm2mCG6qRd1yuwLykypkSVBbnBnGqJRcuJMi\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x37bb49513c49c87c4642a891b13b63571bc87013dde806617aa1efb54605f386\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3036b3a83b7c48f96641f2a9002b9f2dcb6a5958dd670894ada21ae8229b3d0\",\"dweb:/ipfs/QmUNfSBdoVtjhETaUJCYcaC7pTMgbhht926tJ2uXJbiVd3\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245\",\"dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"Address": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "target",
									"type": "address"
								}
							],
							"name": "AddressEmptyCode",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "AddressInsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "FailedInnerCall",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"errors": {
							"AddressEmptyCode(address)": [
								{
									"details": "There's no code at `target` (it is not a contract)."
								}
							],
							"AddressInsufficientBalance(address)": [
								{
									"details": "The ETH balance of the account is not enough to perform the operation."
								}
							],
							"FailedInnerCall()": [
								{
									"details": "A call to an address target failed. The target may have reverted."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Address.sol\":195:6261  library Address {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Address.sol\":195:6261  library Address {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122088136072b9f4c078ed84d9aed48871292807a66bde8217a15371a57aab632c0064736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122088136072b9f4c078ed84d9aed48871292807a66bde8217a15371a57aab632c0064736f6c634300081a0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP9 SGT PUSH1 0x72 0xB9 DELEGATECALL 0xC0 PUSH25 0xED84D9AED48871292807A66BDE8217A15371A57AAB632C0064 PUSH20 0x6F6C634300081A00330000000000000000000000 ",
							"sourceMap": "195:6066:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122088136072b9f4c078ed84d9aed48871292807a66bde8217a15371a57aab632c0064736f6c634300081a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP9 SGT PUSH1 0x72 0xB9 DELEGATECALL 0xC0 PUSH25 0xED84D9AED48871292807A66BDE8217A15371A57AAB632C0064 PUSH20 0x6F6C634300081A00330000000000000000000000 ",
							"sourceMap": "195:6066:4:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"_revert(bytes memory)": "infinite",
								"functionCall(address,bytes memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionDelegateCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"sendValue(address payable,uint256)": "infinite",
								"verifyCallResult(bool,bytes memory)": "infinite",
								"verifyCallResultFromTarget(address,bool,bytes memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH #[$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH [$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 4,
									"value": "B"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "BYTE",
									"source": 4
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 4,
									"value": "73"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "EQ",
									"source": 4
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 4,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 4,
									"value": "24"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "tag",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "ADDRESS",
									"source": 4
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 4,
									"value": "73"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "MSTORE8",
									"source": 4
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "RETURN",
									"source": 4
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122088136072b9f4c078ed84d9aed48871292807a66bde8217a15371a57aab632c0064736f6c634300081a0033",
									".code": [
										{
											"begin": 195,
											"end": 6261,
											"name": "PUSHDEPLOYADDRESS",
											"source": 4
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "ADDRESS",
											"source": 4
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "REVERT",
											"source": 4
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Pausable.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"contracts/real-estate-marketplace/Marketplace.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"AddressInsufficientBalance\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedInnerCall\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}],\"AddressInsufficientBalance(address)\":[{\"details\":\"The ETH balance of the account is not enough to perform the operation.\"}],\"FailedInnerCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245\",\"dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Pausable.sol": {
				"Pausable": {
					"abi": [
						{
							"inputs": [],
							"name": "EnforcedPause",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ExpectedPause",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Paused",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Unpaused",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "paused",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which allows children to implement an emergency stop mechanism that can be triggered by an authorized account. This module is used through inheritance. It will make available the modifiers `whenNotPaused` and `whenPaused`, which can be applied to the functions of your contract. Note that they will not be pausable by simply including this module, only once the modifiers are put in place.",
						"errors": {
							"EnforcedPause()": [
								{
									"details": "The operation failed because the contract is paused."
								}
							],
							"ExpectedPause()": [
								{
									"details": "The operation failed because the contract is not paused."
								}
							]
						},
						"events": {
							"Paused(address)": {
								"details": "Emitted when the pause is triggered by `account`."
							},
							"Unpaused(address)": {
								"details": "Emitted when the pause is lifted by `account`."
							}
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract in unpaused state."
							},
							"paused()": {
								"details": "Returns true if the contract is paused, and false otherwise."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"paused()": "5c975abb"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"EnforcedPause\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ExpectedPause\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which allows children to implement an emergency stop mechanism that can be triggered by an authorized account. This module is used through inheritance. It will make available the modifiers `whenNotPaused` and `whenPaused`, which can be applied to the functions of your contract. Note that they will not be pausable by simply including this module, only once the modifiers are put in place.\",\"errors\":{\"EnforcedPause()\":[{\"details\":\"The operation failed because the contract is paused.\"}],\"ExpectedPause()\":[{\"details\":\"The operation failed because the contract is not paused.\"}]},\"events\":{\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract in unpaused state.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Pausable.sol\":\"Pausable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Pausable.sol\":{\"keccak256\":\"0xb2e5f50762c27fb4b123e3619c3c02bdcba5e515309382e5bfb6f7d6486510bd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1a4b83328c98d518a2699c2cbe9e9b055e78aa57fa8639f1b88deb8b3750b5dc\",\"dweb:/ipfs/QmXdcYj5v7zQxXFPULShHkR5p4Wa2zYuupbHnFdV3cHYtc\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 843,
								"contract": "@openzeppelin/contracts/utils/Pausable.sol:Pausable",
								"label": "_paused",
								"offset": 0,
								"slot": "0",
								"type": "t_bool"
							}
						],
						"types": {
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/math/Math.sol": {
				"Math": {
					"abi": [
						{
							"inputs": [],
							"name": "MathOverflowedMulDiv",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard math utilities missing in the Solidity language.",
						"errors": {
							"MathOverflowedMulDiv()": [
								{
									"details": "Muldiv operation overflow."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/math/Math.sol\":203:15117  library Math {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":203:15117  library Math {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220203246029dab93f34b327ba02915d37e6c29f598a14b59593a6c7ca26ac8c1c664736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220203246029dab93f34b327ba02915d37e6c29f598a14b59593a6c7ca26ac8c1c664736f6c634300081a0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 KECCAK256 ORIGIN CHAINID MUL SWAP14 0xAB SWAP4 RETURN 0x4B ORIGIN PUSH28 0xA02915D37E6C29F598A14B59593A6C7CA26AC8C1C664736F6C634300 ADDMOD BYTE STOP CALLER ",
							"sourceMap": "203:14914:7:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220203246029dab93f34b327ba02915d37e6c29f598a14b59593a6c7ca26ac8c1c664736f6c634300081a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 KECCAK256 ORIGIN CHAINID MUL SWAP14 0xAB SWAP4 RETURN 0x4B ORIGIN PUSH28 0xA02915D37E6C29F598A14B59593A6C7CA26AC8C1C664736F6C634300 ADDMOD BYTE STOP CALLER ",
							"sourceMap": "203:14914:7:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"average(uint256,uint256)": "infinite",
								"ceilDiv(uint256,uint256)": "infinite",
								"log10(uint256)": "infinite",
								"log10(uint256,enum Math.Rounding)": "infinite",
								"log2(uint256)": "infinite",
								"log2(uint256,enum Math.Rounding)": "infinite",
								"log256(uint256)": "infinite",
								"log256(uint256,enum Math.Rounding)": "infinite",
								"max(uint256,uint256)": "infinite",
								"min(uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256,enum Math.Rounding)": "infinite",
								"sqrt(uint256)": "infinite",
								"sqrt(uint256,enum Math.Rounding)": "infinite",
								"tryAdd(uint256,uint256)": "infinite",
								"tryDiv(uint256,uint256)": "infinite",
								"tryMod(uint256,uint256)": "infinite",
								"tryMul(uint256,uint256)": "infinite",
								"trySub(uint256,uint256)": "infinite",
								"unsignedRoundsUp(enum Math.Rounding)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH #[$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH [$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 7,
									"value": "B"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "CODECOPY",
									"source": 7
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "BYTE",
									"source": 7
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 7,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "tag",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "ADDRESS",
									"source": 7
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MSTORE8",
									"source": 7
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "RETURN",
									"source": 7
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220203246029dab93f34b327ba02915d37e6c29f598a14b59593a6c7ca26ac8c1c664736f6c634300081a0033",
									".code": [
										{
											"begin": 203,
											"end": 15117,
											"name": "PUSHDEPLOYADDRESS",
											"source": 7
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "ADDRESS",
											"source": 7
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "REVERT",
											"source": 7
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Pausable.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"contracts/real-estate-marketplace/Marketplace.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"MathOverflowedMulDiv\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"errors\":{\"MathOverflowedMulDiv()\":[{\"details\":\"Muldiv operation overflow.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/Math.sol\":\"Math\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/real-estate-marketplace/Marketplace.sol": {
				"IAlvaraProtocol": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "propertyId",
									"type": "uint256"
								}
							],
							"name": "checkPropertyIntegration",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"checkPropertyIntegration(uint256)": "7485cdc2"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"propertyId\",\"type\":\"uint256\"}],\"name\":\"checkPropertyIntegration\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/real-estate-marketplace/Marketplace.sol\":\"IAlvaraProtocol\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x6008dabfe393240d73d7dd7688033f72740d570aa422254d29a7dce8568f3aff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5196ec75139918c6c7bb4251b36395e668f1fa6d206beba7e7520e74913940d\",\"dweb:/ipfs/QmSyqjksXxmm2mCG6qRd1yuwLykypkSVBbnBnGqJRcuJMi\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x37bb49513c49c87c4642a891b13b63571bc87013dde806617aa1efb54605f386\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3036b3a83b7c48f96641f2a9002b9f2dcb6a5958dd670894ada21ae8229b3d0\",\"dweb:/ipfs/QmUNfSBdoVtjhETaUJCYcaC7pTMgbhht926tJ2uXJbiVd3\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245\",\"dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Pausable.sol\":{\"keccak256\":\"0xb2e5f50762c27fb4b123e3619c3c02bdcba5e515309382e5bfb6f7d6486510bd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1a4b83328c98d518a2699c2cbe9e9b055e78aa57fa8639f1b88deb8b3750b5dc\",\"dweb:/ipfs/QmXdcYj5v7zQxXFPULShHkR5p4Wa2zYuupbHnFdV3cHYtc\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"contracts/real-estate-marketplace/Marketplace.sol\":{\"keccak256\":\"0xa5b8be45f160ff5d4f4002eb634b455e3cb25f85484998a62f1e2c17bf823694\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41d0a807a9ef879bbbb8b40f416c90128a9221fb8dd41f5e4c85b9e30556cc39\",\"dweb:/ipfs/QmWgiK8WvkvPJ7NuiNu4gyrCy2KhhWJ8pMa8Ztz4oGjujk\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"Marketplace": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "contract IERC20",
									"name": "_paymentToken",
									"type": "address"
								},
								{
									"internalType": "contract IAlvaraProtocol",
									"name": "_alvaraProtocol",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "target",
									"type": "address"
								}
							],
							"name": "AddressEmptyCode",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "AddressInsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "EnforcedPause",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ExpectedPause",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "FailedInnerCall",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "SafeERC20FailedOperation",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Paused",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "propertyId",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "price",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "totalShares",
									"type": "uint256"
								}
							],
							"name": "PropertyListed",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "propertyId",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "buyer",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "shares",
									"type": "uint256"
								}
							],
							"name": "PropertySold",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "propertyId",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "buyer",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "shares",
									"type": "uint256"
								}
							],
							"name": "SharesPurchased",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Unpaused",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "alvaraProtocol",
							"outputs": [
								{
									"internalType": "contract IAlvaraProtocol",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "propertyId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "buyer",
									"type": "address"
								}
							],
							"name": "finalizeSale",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "propertyId",
									"type": "uint256"
								}
							],
							"name": "integrateWithAlvara",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "price",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "totalShares",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "tokenAddress",
									"type": "address"
								}
							],
							"name": "listProperty",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "nextPropertyId",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "pause",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "paused",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "paymentToken",
							"outputs": [
								{
									"internalType": "contract IERC20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "properties",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "price",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "totalShares",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "availableShares",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "tokenAddress",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "isListed",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "propertyId",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "sharesToBuy",
									"type": "uint256"
								}
							],
							"name": "purchaseShares",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "unpause",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"AddressEmptyCode(address)": [
								{
									"details": "There's no code at `target` (it is not a contract)."
								}
							],
							"AddressInsufficientBalance(address)": [
								{
									"details": "The ETH balance of the account is not enough to perform the operation."
								}
							],
							"EnforcedPause()": [
								{
									"details": "The operation failed because the contract is paused."
								}
							],
							"ExpectedPause()": [
								{
									"details": "The operation failed because the contract is not paused."
								}
							],
							"FailedInnerCall()": [
								{
									"details": "A call to an address target failed. The target may have reverted."
								}
							],
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							],
							"SafeERC20FailedOperation(address)": [
								{
									"details": "An operation with an ERC20 token failed."
								}
							]
						},
						"events": {
							"Paused(address)": {
								"details": "Emitted when the pause is triggered by `account`."
							},
							"Unpaused(address)": {
								"details": "Emitted when the pause is lifted by `account`."
							}
						},
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"paused()": {
								"details": "Returns true if the contract is paused, and false otherwise."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/real-estate-marketplace/Marketplace.sol\":460:4067  contract Marketplace is Ownable, Pausable {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/real-estate-marketplace/Marketplace.sol\":1363:1537  constructor(IERC20 _paymentToken, IAlvaraProtocol _alvaraProtocol) Ownable(msg.sender) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"contracts/real-estate-marketplace/Marketplace.sol\":1438:1448  msg.sender */\n  caller\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1297:1298  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1285  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\n  tag_8\n  jumpi\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1350:1351  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_9\n  swap2\n  swap1\n  tag_10\n  jump\t// in\ntag_9:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\ntag_8:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  tag_11\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1392:1404  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1391  _transferOwnership */\n  shl(0x20, tag_12)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  0x20\n  shr\n  jump\t// in\ntag_11:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1225:1412  constructor(address initialOwner) {... */\n  pop\n    /* \"@openzeppelin/contracts/utils/Pausable.sol\":1241:1246  false */\n  0x00\n    /* \"@openzeppelin/contracts/utils/Pausable.sol\":1231:1238  _paused */\n  dup1\n  0x14\n    /* \"@openzeppelin/contracts/utils/Pausable.sol\":1231:1246  _paused = false */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  iszero\n  iszero\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/real-estate-marketplace/Marketplace.sol\":1475:1488  _paymentToken */\n  dup2\n    /* \"contracts/real-estate-marketplace/Marketplace.sol\":1460:1472  paymentToken */\n  0x03\n  0x00\n    /* \"contracts/real-estate-marketplace/Marketplace.sol\":1460:1488  paymentToken = _paymentToken */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/real-estate-marketplace/Marketplace.sol\":1515:1530  _alvaraProtocol */\n  dup1\n    /* \"contracts/real-estate-marketplace/Marketplace.sol\":1498:1512  alvaraProtocol */\n  0x04\n  0x00\n    /* \"contracts/real-estate-marketplace/Marketplace.sol\":1498:1530  alvaraProtocol = _alvaraProtocol */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/real-estate-marketplace/Marketplace.sol\":1363:1537  constructor(IERC20 _paymentToken, IAlvaraProtocol _alvaraProtocol) Ownable(msg.sender) {... */\n  pop\n  pop\n    /* \"contracts/real-estate-marketplace/Marketplace.sol\":460:4067  contract Marketplace is Ownable, Pausable {... */\n  jump(tag_15)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\ntag_12:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n  dup1\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n  0x00\n  dup1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":88:205   */\ntag_18:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:460   */\ntag_20:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":411:453   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":404:409   */\n  dup3\n    /* \"#utility.yul\":400:454   */\n  and\n    /* \"#utility.yul\":389:454   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:460   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":466:562   */\ntag_21:\n    /* \"#utility.yul\":503:510   */\n  0x00\n    /* \"#utility.yul\":532:556   */\n  tag_35\n    /* \"#utility.yul\":550:555   */\n  dup3\n    /* \"#utility.yul\":532:556   */\n  tag_20\n  jump\t// in\ntag_35:\n    /* \"#utility.yul\":521:556   */\n  swap1\n  pop\n    /* \"#utility.yul\":466:562   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":568:678   */\ntag_22:\n    /* \"#utility.yul\":619:626   */\n  0x00\n    /* \"#utility.yul\":648:672   */\n  tag_37\n    /* \"#utility.yul\":666:671   */\n  dup3\n    /* \"#utility.yul\":648:672   */\n  tag_21\n  jump\t// in\ntag_37:\n    /* \"#utility.yul\":637:672   */\n  swap1\n  pop\n    /* \"#utility.yul\":568:678   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":684:834   */\ntag_23:\n    /* \"#utility.yul\":771:809   */\n  tag_39\n    /* \"#utility.yul\":803:808   */\n  dup2\n    /* \"#utility.yul\":771:809   */\n  tag_22\n  jump\t// in\ntag_39:\n    /* \"#utility.yul\":764:769   */\n  dup2\n    /* \"#utility.yul\":761:810   */\n  eq\n    /* \"#utility.yul\":751:828   */\n  tag_40\n  jumpi\n    /* \"#utility.yul\":824:825   */\n  0x00\n    /* \"#utility.yul\":821:822   */\n  dup1\n    /* \"#utility.yul\":814:826   */\n  revert\n    /* \"#utility.yul\":751:828   */\ntag_40:\n    /* \"#utility.yul\":684:834   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":840:1011   */\ntag_24:\n    /* \"#utility.yul\":911:916   */\n  0x00\n    /* \"#utility.yul\":942:948   */\n  dup2\n    /* \"#utility.yul\":936:949   */\n  mload\n    /* \"#utility.yul\":927:949   */\n  swap1\n  pop\n    /* \"#utility.yul\":958:1005   */\n  tag_42\n    /* \"#utility.yul\":999:1004   */\n  dup2\n    /* \"#utility.yul\":958:1005   */\n  tag_23\n  jump\t// in\ntag_42:\n    /* \"#utility.yul\":840:1011   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1017:1137   */\ntag_25:\n    /* \"#utility.yul\":1078:1085   */\n  0x00\n    /* \"#utility.yul\":1107:1131   */\n  tag_44\n    /* \"#utility.yul\":1125:1130   */\n  dup3\n    /* \"#utility.yul\":1107:1131   */\n  tag_21\n  jump\t// in\ntag_44:\n    /* \"#utility.yul\":1096:1131   */\n  swap1\n  pop\n    /* \"#utility.yul\":1017:1137   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1143:1313   */\ntag_26:\n    /* \"#utility.yul\":1240:1288   */\n  tag_46\n    /* \"#utility.yul\":1282:1287   */\n  dup2\n    /* \"#utility.yul\":1240:1288   */\n  tag_25\n  jump\t// in\ntag_46:\n    /* \"#utility.yul\":1233:1238   */\n  dup2\n    /* \"#utility.yul\":1230:1289   */\n  eq\n    /* \"#utility.yul\":1220:1307   */\n  tag_47\n  jumpi\n    /* \"#utility.yul\":1303:1304   */\n  0x00\n    /* \"#utility.yul\":1300:1301   */\n  dup1\n    /* \"#utility.yul\":1293:1305   */\n  revert\n    /* \"#utility.yul\":1220:1307   */\ntag_47:\n    /* \"#utility.yul\":1143:1313   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1319:1510   */\ntag_27:\n    /* \"#utility.yul\":1400:1405   */\n  0x00\n    /* \"#utility.yul\":1431:1437   */\n  dup2\n    /* \"#utility.yul\":1425:1438   */\n  mload\n    /* \"#utility.yul\":1416:1438   */\n  swap1\n  pop\n    /* \"#utility.yul\":1447:1504   */\n  tag_49\n    /* \"#utility.yul\":1498:1503   */\n  dup2\n    /* \"#utility.yul\":1447:1504   */\n  tag_26\n  jump\t// in\ntag_49:\n    /* \"#utility.yul\":1319:1510   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1516:2099   */\ntag_3:\n    /* \"#utility.yul\":1633:1639   */\n  0x00\n    /* \"#utility.yul\":1641:1647   */\n  dup1\n    /* \"#utility.yul\":1690:1692   */\n  0x40\n    /* \"#utility.yul\":1678:1687   */\n  dup4\n    /* \"#utility.yul\":1669:1676   */\n  dup6\n    /* \"#utility.yul\":1665:1688   */\n  sub\n    /* \"#utility.yul\":1661:1693   */\n  slt\n    /* \"#utility.yul\":1658:1777   */\n  iszero\n  tag_51\n  jumpi\n    /* \"#utility.yul\":1696:1775   */\n  tag_52\n  tag_18\n  jump\t// in\ntag_52:\n    /* \"#utility.yul\":1658:1777   */\ntag_51:\n    /* \"#utility.yul\":1816:1817   */\n  0x00\n    /* \"#utility.yul\":1841:1919   */\n  tag_53\n    /* \"#utility.yul\":1911:1918   */\n  dup6\n    /* \"#utility.yul\":1902:1908   */\n  dup3\n    /* \"#utility.yul\":1891:1900   */\n  dup7\n    /* \"#utility.yul\":1887:1909   */\n  add\n    /* \"#utility.yul\":1841:1919   */\n  tag_24\n  jump\t// in\ntag_53:\n    /* \"#utility.yul\":1831:1919   */\n  swap3\n  pop\n    /* \"#utility.yul\":1787:1929   */\n  pop\n    /* \"#utility.yul\":1968:1970   */\n  0x20\n    /* \"#utility.yul\":1994:2082   */\n  tag_54\n    /* \"#utility.yul\":2074:2081   */\n  dup6\n    /* \"#utility.yul\":2065:2071   */\n  dup3\n    /* \"#utility.yul\":2054:2063   */\n  dup7\n    /* \"#utility.yul\":2050:2072   */\n  add\n    /* \"#utility.yul\":1994:2082   */\n  tag_27\n  jump\t// in\ntag_54:\n    /* \"#utility.yul\":1984:2082   */\n  swap2\n  pop\n    /* \"#utility.yul\":1939:2092   */\n  pop\n    /* \"#utility.yul\":1516:2099   */\n  swap3\n  pop\n  swap3\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2105:2223   */\ntag_28:\n    /* \"#utility.yul\":2192:2216   */\n  tag_56\n    /* \"#utility.yul\":2210:2215   */\n  dup2\n    /* \"#utility.yul\":2192:2216   */\n  tag_21\n  jump\t// in\ntag_56:\n    /* \"#utility.yul\":2187:2190   */\n  dup3\n    /* \"#utility.yul\":2180:2217   */\n  mstore\n    /* \"#utility.yul\":2105:2223   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2229:2451   */\ntag_10:\n    /* \"#utility.yul\":2322:2326   */\n  0x00\n    /* \"#utility.yul\":2360:2362   */\n  0x20\n    /* \"#utility.yul\":2349:2358   */\n  dup3\n    /* \"#utility.yul\":2345:2363   */\n  add\n    /* \"#utility.yul\":2337:2363   */\n  swap1\n  pop\n    /* \"#utility.yul\":2373:2444   */\n  tag_58\n    /* \"#utility.yul\":2441:2442   */\n  0x00\n    /* \"#utility.yul\":2430:2439   */\n  dup4\n    /* \"#utility.yul\":2426:2443   */\n  add\n    /* \"#utility.yul\":2417:2423   */\n  dup5\n    /* \"#utility.yul\":2373:2444   */\n  tag_28\n  jump\t// in\ntag_58:\n    /* \"#utility.yul\":2229:2451   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"contracts/real-estate-marketplace/Marketplace.sol\":460:4067  contract Marketplace is Ownable, Pausable {... */\ntag_15:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/real-estate-marketplace/Marketplace.sol\":460:4067  contract Marketplace is Ownable, Pausable {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x8da5cb5b\n      gt\n      tag_17\n      jumpi\n      dup1\n      0xbaf52c77\n      gt\n      tag_18\n      jumpi\n      dup1\n      0xbaf52c77\n      eq\n      tag_13\n      jumpi\n      dup1\n      0xd2bcdc60\n      eq\n      tag_14\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xf7b10808\n      eq\n      tag_16\n      jumpi\n      jump(tag_2)\n    tag_18:\n      dup1\n      0x8da5cb5b\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xb41b936d\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xb4d346be\n      eq\n      tag_12\n      jumpi\n      jump(tag_2)\n    tag_17:\n      dup1\n      0x5c975abb\n      gt\n      tag_19\n      jumpi\n      dup1\n      0x5c975abb\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x8456cb59\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x86aa217e\n      eq\n      tag_9\n      jumpi\n      jump(tag_2)\n    tag_19:\n      dup1\n      0x3013ce29\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x39500f34\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x3f4ba83a\n      eq\n      tag_5\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/real-estate-marketplace/Marketplace.sol\":1190:1216  IERC20 public paymentToken */\n    tag_3:\n      tag_20\n      tag_21\n      jump\t// in\n    tag_20:\n      mload(0x40)\n      tag_22\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_22:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/real-estate-marketplace/Marketplace.sol\":1150:1179  uint256 public nextPropertyId */\n    tag_4:\n      tag_24\n      tag_25\n      jump\t// in\n    tag_24:\n      mload(0x40)\n      tag_26\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_26:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/real-estate-marketplace/Marketplace.sol\":3787:3852  function unpause() external onlyOwner {... */\n    tag_5:\n      tag_28\n      tag_29\n      jump\t// in\n    tag_28:\n      stop\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1850:1934  function paused() public view virtual returns (bool) {... */\n    tag_6:\n      tag_30\n      tag_31\n      jump\t// in\n    tag_30:\n      mload(0x40)\n      tag_32\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_32:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_7:\n      tag_34\n      tag_35\n      jump\t// in\n    tag_34:\n      stop\n        /* \"contracts/real-estate-marketplace/Marketplace.sol\":3670:3731  function pause() external onlyOwner {... */\n    tag_8:\n      tag_36\n      tag_37\n      jump\t// in\n    tag_36:\n      stop\n        /* \"contracts/real-estate-marketplace/Marketplace.sol\":1582:2210  function listProperty(uint256 price, uint256 totalShares, address tokenAddress) external whenNotPaused {... */\n    tag_9:\n      tag_38\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_39\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_39:\n      tag_41\n      jump\t// in\n    tag_38:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_10:\n      tag_42\n      tag_43\n      jump\t// in\n    tag_42:\n      mload(0x40)\n      tag_44\n      swap2\n      swap1\n      tag_45\n      jump\t// in\n    tag_44:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/real-estate-marketplace/Marketplace.sol\":1261:1298  IAlvaraProtocol public alvaraProtocol */\n    tag_11:\n      tag_46\n      tag_47\n      jump\t// in\n    tag_46:\n      mload(0x40)\n      tag_48\n      swap2\n      swap1\n      tag_49\n      jump\t// in\n    tag_48:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/real-estate-marketplace/Marketplace.sol\":3015:3601  function finalizeSale(uint256 propertyId, address buyer) external whenNotPaused {... */\n    tag_12:\n      tag_50\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_51\n      swap2\n      swap1\n      tag_52\n      jump\t// in\n    tag_51:\n      tag_53\n      jump\t// in\n    tag_50:\n      stop\n        /* \"contracts/real-estate-marketplace/Marketplace.sol\":3912:4065  function integrateWithAlvara(uint256 propertyId) external view returns (bool) {... */\n    tag_13:\n      tag_54\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_55\n      swap2\n      swap1\n      tag_56\n      jump\t// in\n    tag_55:\n      tag_57\n      jump\t// in\n    tag_54:\n      mload(0x40)\n      tag_58\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_58:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/real-estate-marketplace/Marketplace.sol\":2269:2954  function purchaseShares(uint256 propertyId, uint256 sharesToBuy) external whenNotPaused {... */\n    tag_14:\n      tag_59\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_60\n      swap2\n      swap1\n      tag_61\n      jump\t// in\n    tag_60:\n      tag_62\n      jump\t// in\n    tag_59:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_15:\n      tag_63\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_64\n      swap2\n      swap1\n      tag_65\n      jump\t// in\n    tag_64:\n      tag_66\n      jump\t// in\n    tag_63:\n      stop\n        /* \"contracts/real-estate-marketplace/Marketplace.sol\":1098:1144  mapping(uint256 => Property) public properties */\n    tag_16:\n      tag_67\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_68\n      swap2\n      swap1\n      tag_56\n      jump\t// in\n    tag_68:\n      tag_69\n      jump\t// in\n    tag_67:\n      mload(0x40)\n      tag_70\n      swap7\n      swap6\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_71\n      jump\t// in\n    tag_70:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/real-estate-marketplace/Marketplace.sol\":1190:1216  IERC20 public paymentToken */\n    tag_21:\n      0x03\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/real-estate-marketplace/Marketplace.sol\":1150:1179  uint256 public nextPropertyId */\n    tag_25:\n      sload(0x02)\n      dup2\n      jump\t// out\n        /* \"contracts/real-estate-marketplace/Marketplace.sol\":3787:3852  function unpause() external onlyOwner {... */\n    tag_29:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_73\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_74\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_73:\n        /* \"contracts/real-estate-marketplace/Marketplace.sol\":3835:3845  _unpause() */\n      tag_76\n        /* \"contracts/real-estate-marketplace/Marketplace.sol\":3835:3843  _unpause */\n      tag_77\n        /* \"contracts/real-estate-marketplace/Marketplace.sol\":3835:3845  _unpause() */\n      jump\t// in\n    tag_76:\n        /* \"contracts/real-estate-marketplace/Marketplace.sol\":3787:3852  function unpause() external onlyOwner {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1850:1934  function paused() public view virtual returns (bool) {... */\n    tag_31:\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1897:1901  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1920:1927  _paused */\n      dup1\n      0x14\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1913:1927  return _paused */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1850:1934  function paused() public view virtual returns (bool) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_35:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_80\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_74\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_80:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      tag_82\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2384:2385  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2375  _transferOwnership */\n      tag_83\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_82:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"contracts/real-estate-marketplace/Marketplace.sol\":3670:3731  function pause() external onlyOwner {... */\n    tag_37:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_85\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_74\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_85:\n        /* \"contracts/real-estate-marketplace/Marketplace.sol\":3716:3724  _pause() */\n      tag_87\n        /* \"contracts/real-estate-marketplace/Marketplace.sol\":3716:3722  _pause */\n      tag_88\n        /* \"contracts/real-estate-marketplace/Marketplace.sol\":3716:3724  _pause() */\n      jump\t// in\n    tag_87:\n        /* \"contracts/real-estate-marketplace/Marketplace.sol\":3670:3731  function pause() external onlyOwner {... */\n      jump\t// out\n        /* \"contracts/real-estate-marketplace/Marketplace.sol\":1582:2210  function listProperty(uint256 price, uint256 totalShares, address tokenAddress) external whenNotPaused {... */\n    tag_41:\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1474:1493  _requireNotPaused() */\n      tag_90\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1474:1491  _requireNotPaused */\n      tag_91\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1474:1493  _requireNotPaused() */\n      jump\t// in\n    tag_90:\n        /* \"contracts/real-estate-marketplace/Marketplace.sol\":1711:1712  0 */\n      0x00\n        /* \"contracts/real-estate-marketplace/Marketplace.sol\":1703:1708  price */\n      dup4\n        /* \"contracts/real-estate-marketplace/Marketplace.sol\":1703:1712  price > 0 */\n      gt\n        /* \"contracts/real-estate-marketplace/Marketplace.sol\":1695:1745  require(price > 0, \"Price must be greater than 0\") */\n      tag_93\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_94\n      swap1\n      tag_95\n      jump\t// in\n    tag_94:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_93:\n        /* \"contracts/real-estate-marketplace/Marketplace.sol\":1777:1778  0 */\n      0x00\n        /* \"contracts/real-estate-marketplace/Marketplace.sol\":1763:1774  totalShares */\n      dup3\n        /* \"contracts/real-estate-marketplace/Marketplace.sol\":1763:1778  totalShares > 0 */\n      gt\n        /* \"contracts/real-estate-marketplace/Marketplace.sol\":1755:1818  require(totalShares > 0, \"Total shares must be greater than 0\") */\n      tag_96\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_97\n      swap1\n      tag_98\n      jump\t// in\n    tag_97:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_96:\n        /* \"contracts/real-estate-marketplace/Marketplace.sol\":1866:2091  Property({... */\n      mload(0x40)\n      dup1\n      0xc0\n      add\n      0x40\n      mstore\n      dup1\n        /* \"contracts/real-estate-marketplace/Marketplace.sol\":1896:1906  msg.sender */\n      caller\n        /* \"contracts/real-estate-marketplace/Marketplace.sol\":1866:2091  Property({... */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/real-estate-marketplace/Marketplace.sol\":1927:1932  price */\n      dup5\n        /* \"contracts/real-estate-marketplace/Marketplace.sol\":1866:2091  Property({... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/real-estate-marketplace/Marketplace.sol\":1959:1970  totalShares */\n      dup4\n        /* \"contracts/real-estate-marketplace/Marketplace.sol\":1866:2091  Property({... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/real-estate-marketplace/Marketplace.sol\":2001:2012  totalShares */\n      dup4\n        /* \"contracts/real-estate-marketplace/Marketplace.sol\":1866:2091  Property({... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/real-estate-marketplace/Marketplace.sol\":2040:2052  tokenAddress */\n      dup3\n        /* \"contracts/real-estate-marketplace/Marketplace.sol\":1866:2091  Property({... */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/real-estate-marketplace/Marketplace.sol\":2076:2080  true */\n      0x01\n        /* \"contracts/real-estate-marketplace/Marketplace.sol\":1866:2091  Property({... */\n      iszero\n      iszero\n      dup2\n      mstore\n      pop\n        /* \"contracts/real-estate-marketplace/Marketplace.sol\":1837:1847  properties */\n      0x01\n        /* \"contracts/real-estate-marketplace/Marketplace.sol\":1837:1863  properties[nextPropertyId] */\n      0x00\n        /* \"contracts/real-estate-marketplace/Marketplace.sol\":1848:1862  nextPropertyId */\n      sload(0x02)\n        /* \"contracts/real-estate-marketplace/Marketplace.sol\":1837:1863  properties[nextPropertyId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/real-estate-marketplace/Marketplace.sol\":1837:2091  properties[nextPropertyId] = Property({... */\n      0x00\n      dup3\n      add\n      mload\n      dup2\n      0x00\n      add\n      exp(0x0100, 0x00)\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n      0x20\n      dup3\n      add\n      mload\n      dup2\n      0x01\n      add\n      sstore\n      0x40\n      dup3\n      add\n      mload\n      dup2\n      0x02\n      add\n      sstore\n      0x60\n      dup3\n      add\n      mload\n      dup2\n      0x03\n      add\n      sstore\n      0x80\n      dup3\n      add\n      mload\n      dup2\n      0x04\n      add\n      exp(0x0100, 0x00)\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n      0xa0\n      dup3\n      add\n      mload\n      dup2\n      0x04\n      add\n      exp(0x0100, 0x14)\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n      swap1\n      pop\n      pop\n        /* \"contracts/real-estate-marketplace/Marketplace.sol\":2146:2156  msg.sender */\n      caller\n        /* \"contracts/real-estate-marketplace/Marketplace.sol\":2115:2177  PropertyListed(nextPropertyId, msg.sender, price, totalShares) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x2c479e2e638a3a97a6f194336f17f298b4ec7145f37c7d35ff6346f9cd4a0030\n        /* \"contracts/real-estate-marketplace/Marketplace.sol\":2130:2144  nextPropertyId */\n      sload(0x02)\n        /* \"contracts/real-estate-marketplace/Marketplace.sol\":2158:2163  price */\n      dup6\n        /* \"contracts/real-estate-marketplace/Marketplace.sol\":2165:2176  totalShares */\n      dup6\n        /* \"contracts/real-estate-marketplace/Marketplace.sol\":2115:2177  PropertyListed(nextPropertyId, msg.sender, price, totalShares) */\n      mload(0x40)\n      tag_99\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_100\n      jump\t// in\n    tag_99:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/real-estate-marketplace/Marketplace.sol\":2187:2201  nextPropertyId */\n      0x02\n      0x00\n        /* \"contracts/real-estate-marketplace/Marketplace.sol\":2187:2203  nextPropertyId++ */\n      dup2\n      sload\n      dup1\n      swap3\n      swap2\n      swap1\n      tag_101\n      swap1\n      tag_102\n      jump\t// in\n    tag_101:\n      swap2\n      swap1\n      pop\n      sstore\n      pop\n        /* \"contracts/real-estate-marketplace/Marketplace.sol\":1582:2210  function listProperty(uint256 price, uint256 totalShares, address tokenAddress) external whenNotPaused {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_43:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1684:1691  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1703:1716  return _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/real-estate-marketplace/Marketplace.sol\":1261:1298  IAlvaraProtocol public alvaraProtocol */\n    tag_47:\n      0x04\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/real-estate-marketplace/Marketplace.sol\":3015:3601  function finalizeSale(uint256 propertyId, address buyer) external whenNotPaused {... */\n    tag_53:\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1474:1493  _requireNotPaused() */\n      tag_105\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1474:1491  _requireNotPaused */\n      tag_91\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1474:1493  _requireNotPaused() */\n      jump\t// in\n    tag_105:\n        /* \"contracts/real-estate-marketplace/Marketplace.sol\":3105:3130  Property storage property */\n      0x00\n        /* \"contracts/real-estate-marketplace/Marketplace.sol\":3133:3143  properties */\n      0x01\n        /* \"contracts/real-estate-marketplace/Marketplace.sol\":3133:3155  properties[propertyId] */\n      0x00\n        /* \"contracts/real-estate-marketplace/Marketplace.sol\":3144:3154  propertyId */\n      dup5\n        /* \"contracts/real-estate-marketplace/Marketplace.sol\":3133:3155  properties[propertyId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/real-estate-marketplace/Marketplace.sol\":3105:3155  Property storage property = properties[propertyId] */\n      swap1\n      pop\n        /* \"contracts/real-estate-marketplace/Marketplace.sol\":3191:3201  msg.sender */\n      caller\n        /* \"contracts/real-estate-marketplace/Marketplace.sol\":3173:3201  property.owner == msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/real-estate-marketplace/Marketplace.sol\":3173:3181  property */\n      dup2\n        /* \"contracts/real-estate-marketplace/Marketplace.sol\":3173:3187  property.owner */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/real-estate-marketplace/Marketplace.sol\":3173:3201  property.owner == msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/real-estate-marketplace/Marketplace.sol\":3165:3242  require(property.owner == msg.sender, \"Only the owner can finalize the sale\") */\n      tag_107\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_108\n      swap1\n      tag_109\n      jump\t// in\n    tag_108:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_107:\n        /* \"contracts/real-estate-marketplace/Marketplace.sol\":3288:3289  0 */\n      0x00\n        /* \"contracts/real-estate-marketplace/Marketplace.sol\":3260:3268  property */\n      dup2\n        /* \"contracts/real-estate-marketplace/Marketplace.sol\":3260:3284  property.availableShares */\n      0x03\n      add\n      sload\n        /* \"contracts/real-estate-marketplace/Marketplace.sol\":3260:3289  property.availableShares == 0 */\n      eq\n        /* \"contracts/real-estate-marketplace/Marketplace.sol\":3252:3320  require(property.availableShares == 0, \"Shares are still available\") */\n      tag_110\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_111\n      swap1\n      tag_112\n      jump\t// in\n    tag_111:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_110:\n        /* \"contracts/real-estate-marketplace/Marketplace.sol\":3359:3364  false */\n      0x00\n        /* \"contracts/real-estate-marketplace/Marketplace.sol\":3339:3347  property */\n      dup2\n        /* \"contracts/real-estate-marketplace/Marketplace.sol\":3339:3356  property.isListed */\n      0x04\n      add\n      0x14\n        /* \"contracts/real-estate-marketplace/Marketplace.sol\":3339:3364  property.isListed = false */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/real-estate-marketplace/Marketplace.sol\":3391:3396  buyer */\n      dup2\n        /* \"contracts/real-estate-marketplace/Marketplace.sol\":3374:3382  property */\n      dup2\n        /* \"contracts/real-estate-marketplace/Marketplace.sol\":3374:3388  property.owner */\n      0x00\n      add\n      0x00\n        /* \"contracts/real-estate-marketplace/Marketplace.sol\":3374:3396  property.owner = buyer */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/real-estate-marketplace/Marketplace.sol\":3415:3435  uint256 totalPayment */\n      0x00\n        /* \"contracts/real-estate-marketplace/Marketplace.sol\":3438:3446  property */\n      dup2\n        /* \"contracts/real-estate-marketplace/Marketplace.sol\":3438:3452  property.price */\n      0x01\n      add\n      sload\n        /* \"contracts/real-estate-marketplace/Marketplace.sol\":3415:3452  uint256 totalPayment = property.price */\n      swap1\n      pop\n        /* \"contracts/real-estate-marketplace/Marketplace.sol\":3462:3517  paymentToken.safeTransfer(property.owner, totalPayment) */\n      tag_113\n        /* \"contracts/real-estate-marketplace/Marketplace.sol\":3488:3496  property */\n      dup3\n        /* \"contracts/real-estate-marketplace/Marketplace.sol\":3488:3502  property.owner */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/real-estate-marketplace/Marketplace.sol\":3504:3516  totalPayment */\n      dup3\n        /* \"contracts/real-estate-marketplace/Marketplace.sol\":3462:3474  paymentToken */\n      0x03\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/real-estate-marketplace/Marketplace.sol\":3462:3487  paymentToken.safeTransfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_114\n      swap1\n        /* \"contracts/real-estate-marketplace/Marketplace.sol\":3462:3517  paymentToken.safeTransfer(property.owner, totalPayment) */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_113:\n        /* \"contracts/real-estate-marketplace/Marketplace.sol\":3566:3571  buyer */\n      dup3\n        /* \"contracts/real-estate-marketplace/Marketplace.sol\":3541:3594  PropertySold(propertyId, buyer, property.totalShares) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xf17a6666765db393a6218bb324c4de5cc60c9ee3b981bd102ba416effc13b895\n        /* \"contracts/real-estate-marketplace/Marketplace.sol\":3554:3564  propertyId */\n      dup6\n        /* \"contracts/real-estate-marketplace/Marketplace.sol\":3573:3581  property */\n      dup5\n        /* \"contracts/real-estate-marketplace/Marketplace.sol\":3573:3593  property.totalShares */\n      0x02\n      add\n      sload\n        /* \"contracts/real-estate-marketplace/Marketplace.sol\":3541:3594  PropertySold(propertyId, buyer, property.totalShares) */\n      mload(0x40)\n      tag_115\n      swap3\n      swap2\n      swap1\n      tag_116\n      jump\t// in\n    tag_115:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/real-estate-marketplace/Marketplace.sol\":3095:3601  {... */\n      pop\n      pop\n        /* \"contracts/real-estate-marketplace/Marketplace.sol\":3015:3601  function finalizeSale(uint256 propertyId, address buyer) external whenNotPaused {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/real-estate-marketplace/Marketplace.sol\":3912:4065  function integrateWithAlvara(uint256 propertyId) external view returns (bool) {... */\n    tag_57:\n        /* \"contracts/real-estate-marketplace/Marketplace.sol\":3984:3988  bool */\n      0x00\n        /* \"contracts/real-estate-marketplace/Marketplace.sol\":4007:4021  alvaraProtocol */\n      0x04\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/real-estate-marketplace/Marketplace.sol\":4007:4046  alvaraProtocol.checkPropertyIntegration */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x7485cdc2\n        /* \"contracts/real-estate-marketplace/Marketplace.sol\":4047:4057  propertyId */\n      dup4\n        /* \"contracts/real-estate-marketplace/Marketplace.sol\":4007:4058  alvaraProtocol.checkPropertyIntegration(propertyId) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_118\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_118:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_120\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_120:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_121\n      swap2\n      swap1\n      tag_122\n      jump\t// in\n    tag_121:\n        /* \"contracts/real-estate-marketplace/Marketplace.sol\":4000:4058  return alvaraProtocol.checkPropertyIntegration(propertyId) */\n      swap1\n      pop\n        /* \"contracts/real-estate-marketplace/Marketplace.sol\":3912:4065  function integrateWithAlvara(uint256 propertyId) external view returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/real-estate-marketplace/Marketplace.sol\":2269:2954  function purchaseShares(uint256 propertyId, uint256 sharesToBuy) external whenNotPaused {... */\n    tag_62:\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1474:1493  _requireNotPaused() */\n      tag_124\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1474:1491  _requireNotPaused */\n      tag_91\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1474:1493  _requireNotPaused() */\n      jump\t// in\n    tag_124:\n        /* \"contracts/real-estate-marketplace/Marketplace.sol\":2367:2392  Property storage property */\n      0x00\n        /* \"contracts/real-estate-marketplace/Marketplace.sol\":2395:2405  properties */\n      0x01\n        /* \"contracts/real-estate-marketplace/Marketplace.sol\":2395:2417  properties[propertyId] */\n      0x00\n        /* \"contracts/real-estate-marketplace/Marketplace.sol\":2406:2416  propertyId */\n      dup5\n        /* \"contracts/real-estate-marketplace/Marketplace.sol\":2395:2417  properties[propertyId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/real-estate-marketplace/Marketplace.sol\":2367:2417  Property storage property = properties[propertyId] */\n      swap1\n      pop\n        /* \"contracts/real-estate-marketplace/Marketplace.sol\":2435:2443  property */\n      dup1\n        /* \"contracts/real-estate-marketplace/Marketplace.sol\":2435:2452  property.isListed */\n      0x04\n      add\n      0x14\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/real-estate-marketplace/Marketplace.sol\":2427:2479  require(property.isListed, \"Property is not listed\") */\n      tag_126\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_127\n      swap1\n      tag_128\n      jump\t// in\n    tag_127:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_126:\n        /* \"contracts/real-estate-marketplace/Marketplace.sol\":2525:2536  sharesToBuy */\n      dup2\n        /* \"contracts/real-estate-marketplace/Marketplace.sol\":2497:2505  property */\n      dup2\n        /* \"contracts/real-estate-marketplace/Marketplace.sol\":2497:2521  property.availableShares */\n      0x03\n      add\n      sload\n        /* \"contracts/real-estate-marketplace/Marketplace.sol\":2497:2536  property.availableShares >= sharesToBuy */\n      lt\n      iszero\n        /* \"contracts/real-estate-marketplace/Marketplace.sol\":2489:2568  require(property.availableShares >= sharesToBuy, \"Not enough shares available\") */\n      tag_129\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_130\n      swap1\n      tag_131\n      jump\t// in\n    tag_130:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_129:\n        /* \"contracts/real-estate-marketplace/Marketplace.sol\":2600:2601  0 */\n      0x00\n        /* \"contracts/real-estate-marketplace/Marketplace.sol\":2586:2597  sharesToBuy */\n      dup3\n        /* \"contracts/real-estate-marketplace/Marketplace.sol\":2586:2601  sharesToBuy > 0 */\n      gt\n        /* \"contracts/real-estate-marketplace/Marketplace.sol\":2578:2642  require(sharesToBuy > 0, \"Shares to buy must be greater than 0\") */\n      tag_132\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_133\n      swap1\n      tag_134\n      jump\t// in\n    tag_133:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_132:\n        /* \"contracts/real-estate-marketplace/Marketplace.sol\":2661:2679  uint256 totalPrice */\n      0x00\n        /* \"contracts/real-estate-marketplace/Marketplace.sol\":2715:2723  property */\n      dup2\n        /* \"contracts/real-estate-marketplace/Marketplace.sol\":2715:2735  property.totalShares */\n      0x02\n      add\n      sload\n        /* \"contracts/real-estate-marketplace/Marketplace.sol\":2700:2711  sharesToBuy */\n      dup4\n        /* \"contracts/real-estate-marketplace/Marketplace.sol\":2683:2691  property */\n      dup4\n        /* \"contracts/real-estate-marketplace/Marketplace.sol\":2683:2697  property.price */\n      0x01\n      add\n      sload\n        /* \"contracts/real-estate-marketplace/Marketplace.sol\":2683:2711  property.price * sharesToBuy */\n      tag_135\n      swap2\n      swap1\n      tag_136\n      jump\t// in\n    tag_135:\n        /* \"contracts/real-estate-marketplace/Marketplace.sol\":2682:2735  (property.price * sharesToBuy) / property.totalShares */\n      tag_137\n      swap2\n      swap1\n      tag_138\n      jump\t// in\n    tag_137:\n        /* \"contracts/real-estate-marketplace/Marketplace.sol\":2661:2735  uint256 totalPrice = (property.price * sharesToBuy) / property.totalShares */\n      swap1\n      pop\n        /* \"contracts/real-estate-marketplace/Marketplace.sol\":2745:2813  paymentToken.safeTransferFrom(msg.sender, address(this), totalPrice) */\n      tag_139\n        /* \"contracts/real-estate-marketplace/Marketplace.sol\":2775:2785  msg.sender */\n      caller\n        /* \"contracts/real-estate-marketplace/Marketplace.sol\":2795:2799  this */\n      address\n        /* \"contracts/real-estate-marketplace/Marketplace.sol\":2802:2812  totalPrice */\n      dup4\n        /* \"contracts/real-estate-marketplace/Marketplace.sol\":2745:2757  paymentToken */\n      0x03\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/real-estate-marketplace/Marketplace.sol\":2745:2774  paymentToken.safeTransferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_140\n      swap1\n        /* \"contracts/real-estate-marketplace/Marketplace.sol\":2745:2813  paymentToken.safeTransferFrom(msg.sender, address(this), totalPrice) */\n      swap4\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_139:\n        /* \"contracts/real-estate-marketplace/Marketplace.sol\":2860:2871  sharesToBuy */\n      dup3\n        /* \"contracts/real-estate-marketplace/Marketplace.sol\":2832:2840  property */\n      dup3\n        /* \"contracts/real-estate-marketplace/Marketplace.sol\":2832:2856  property.availableShares */\n      0x03\n      add\n      0x00\n        /* \"contracts/real-estate-marketplace/Marketplace.sol\":2832:2871  property.availableShares -= sharesToBuy */\n      dup3\n      dup3\n      sload\n      tag_141\n      swap2\n      swap1\n      tag_142\n      jump\t// in\n    tag_141:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/real-estate-marketplace/Marketplace.sol\":2923:2933  msg.sender */\n      caller\n        /* \"contracts/real-estate-marketplace/Marketplace.sol\":2895:2947  SharesPurchased(propertyId, msg.sender, sharesToBuy) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xd4a7a37d339805413b4085e0f8e0932dfb0a4f84f08f98a6e53673b5ee8eee15\n        /* \"contracts/real-estate-marketplace/Marketplace.sol\":2911:2921  propertyId */\n      dup6\n        /* \"contracts/real-estate-marketplace/Marketplace.sol\":2935:2946  sharesToBuy */\n      dup6\n        /* \"contracts/real-estate-marketplace/Marketplace.sol\":2895:2947  SharesPurchased(propertyId, msg.sender, sharesToBuy) */\n      mload(0x40)\n      tag_143\n      swap3\n      swap2\n      swap1\n      tag_116\n      jump\t// in\n    tag_143:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/real-estate-marketplace/Marketplace.sol\":2357:2954  {... */\n      pop\n      pop\n        /* \"contracts/real-estate-marketplace/Marketplace.sol\":2269:2954  function purchaseShares(uint256 propertyId, uint256 sharesToBuy) external whenNotPaused {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_66:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_145\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_74\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_145:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2647:2648  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2635  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n      tag_147\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2700:2701  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_148\n      swap2\n      swap1\n      tag_45\n      jump\t// in\n    tag_148:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n    tag_147:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      tag_149\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2742:2750  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2741  _transferOwnership */\n      tag_83\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_149:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/real-estate-marketplace/Marketplace.sol\":1098:1144  mapping(uint256 => Property) public properties */\n    tag_69:\n      mstore(0x20, 0x01)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      dup1\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      dup1\n      0x01\n      add\n      sload\n      swap1\n      dup1\n      0x02\n      add\n      sload\n      swap1\n      dup1\n      0x03\n      add\n      sload\n      swap1\n      dup1\n      0x04\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      dup1\n      0x04\n      add\n      0x14\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      swap1\n      pop\n      dup7\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n    tag_74:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      tag_151\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1876  _msgSender */\n      tag_152\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      jump\t// in\n    tag_151:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      tag_153\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1860  owner */\n      tag_43\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      jump\t// in\n    tag_153:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n      tag_154\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      tag_155\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1938  _msgSender */\n      tag_152\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      jump\t// in\n    tag_155:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      mload(0x40)\n      0x118cdaa700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_156\n      swap2\n      swap1\n      tag_45\n      jump\t// in\n    tag_156:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n    tag_154:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2710:2827  function _unpause() internal virtual whenPaused {... */\n    tag_77:\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1721:1737  _requirePaused() */\n      tag_158\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1721:1735  _requirePaused */\n      tag_159\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1721:1737  _requirePaused() */\n      jump\t// in\n    tag_158:\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2778:2783  false */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2768:2775  _paused */\n      dup1\n      0x14\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2768:2783  _paused = false */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2798:2820  Unpaused(_msgSender()) */\n      0x5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2807:2819  _msgSender() */\n      tag_161\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2807:2817  _msgSender */\n      tag_152\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2807:2819  _msgSender() */\n      jump\t// in\n    tag_161:\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2798:2820  Unpaused(_msgSender()) */\n      mload(0x40)\n      tag_162\n      swap2\n      swap1\n      tag_45\n      jump\t// in\n    tag_162:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2710:2827  function _unpause() internal virtual whenPaused {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_83:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n      0x00\n      dup1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2463:2578  function _pause() internal virtual whenNotPaused {... */\n    tag_88:\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1474:1493  _requireNotPaused() */\n      tag_165\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1474:1491  _requireNotPaused */\n      tag_91\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1474:1493  _requireNotPaused() */\n      jump\t// in\n    tag_165:\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2532:2536  true */\n      0x01\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2522:2529  _paused */\n      0x00\n      0x14\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2522:2536  _paused = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2551:2571  Paused(_msgSender()) */\n      0x62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2558:2570  _msgSender() */\n      tag_167\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2558:2568  _msgSender */\n      tag_152\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2558:2570  _msgSender() */\n      jump\t// in\n    tag_167:\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2551:2571  Paused(_msgSender()) */\n      mload(0x40)\n      tag_168\n      swap2\n      swap1\n      tag_45\n      jump\t// in\n    tag_168:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2463:2578  function _pause() internal virtual whenNotPaused {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2002:2130  function _requireNotPaused() internal view virtual {... */\n    tag_91:\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2067:2075  paused() */\n      tag_170\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2067:2073  paused */\n      tag_31\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2067:2075  paused() */\n      jump\t// in\n    tag_170:\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2063:2124  if (paused()) {... */\n      iszero\n      tag_171\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2098:2113  EnforcedPause() */\n      mload(0x40)\n      0xd93c066500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2063:2124  if (paused()) {... */\n    tag_171:\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2002:2130  function _requireNotPaused() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1303:1463  function safeTransfer(IERC20 token, address to, uint256 value) internal {... */\n    tag_114:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1385:1456  _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value))) */\n      tag_173\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1405:1410  token */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1427:1432  token */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1427:1441  token.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1444:1446  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1448:1453  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1412:1455  abi.encodeCall(token.transfer, (to, value)) */\n      add(0x24, mload(0x40))\n      tag_174\n      swap3\n      swap2\n      swap1\n      tag_175\n      jump\t// in\n    tag_174:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n      swap2\n      pop\n      0xe0\n      shl\n      0x20\n      dup3\n      add\n      dup1\n      mload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      dup4\n      dup2\n      dup4\n      and\n      or\n      dup4\n      mstore\n      pop\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1385:1404  _callOptionalReturn */\n      tag_176\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1385:1456  _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value))) */\n      jump\t// in\n    tag_173:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1303:1463  function safeTransfer(IERC20 token, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1702:1890  function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {... */\n    tag_140:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1802:1883  _callOptionalReturn(token, abi.encodeCall(token.transferFrom, (from, to, value))) */\n      tag_178\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1822:1827  token */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1844:1849  token */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1844:1862  token.transferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x23b872dd\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1865:1869  from */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1871:1873  to */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1875:1880  value */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1829:1882  abi.encodeCall(token.transferFrom, (from, to, value)) */\n      add(0x24, mload(0x40))\n      tag_179\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_180\n      jump\t// in\n    tag_179:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n      swap2\n      pop\n      0xe0\n      shl\n      0x20\n      dup3\n      add\n      dup1\n      mload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      dup4\n      dup2\n      dup4\n      and\n      or\n      dup4\n      mstore\n      pop\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1802:1821  _callOptionalReturn */\n      tag_176\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1802:1883  _callOptionalReturn(token, abi.encodeCall(token.transferFrom, (from, to, value))) */\n      jump\t// in\n    tag_178:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1702:1890  function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n    tag_152:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":709:716  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":728:745  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2202:2328  function _requirePaused() internal view virtual {... */\n    tag_159:\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2265:2273  paused() */\n      tag_183\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2265:2271  paused */\n      tag_31\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2265:2273  paused() */\n      jump\t// in\n    tag_183:\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2260:2322  if (!paused()) {... */\n      tag_184\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2296:2311  ExpectedPause() */\n      mload(0x40)\n      0x8dfc202b00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2260:2322  if (!paused()) {... */\n    tag_184:\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2202:2328  function _requirePaused() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4059:4688  function _callOptionalReturn(IERC20 token, bytes memory data) private {... */\n    tag_176:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4478:4501  bytes memory returndata */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4504:4537  address(token).functionCall(data) */\n      tag_186\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4532:4536  data */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4512:4517  token */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4504:4531  address(token).functionCall */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_187\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4504:4537  address(token).functionCall(data) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_186:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4478:4537  bytes memory returndata = address(token).functionCall(data) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4572:4573  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4551:4561  returndata */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4551:4568  returndata.length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4551:4573  returndata.length != 0 */\n      eq\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4551:4608  returndata.length != 0 && !abi.decode(returndata, (bool)) */\n      dup1\n      iszero\n      tag_188\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4589:4599  returndata */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4578:4608  abi.decode(returndata, (bool)) */\n      dup1\n      0x20\n      add\n      swap1\n      mload\n      dup2\n      add\n      swap1\n      tag_189\n      swap2\n      swap1\n      tag_122\n      jump\t// in\n    tag_189:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4577:4608  !abi.decode(returndata, (bool)) */\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4551:4608  returndata.length != 0 && !abi.decode(returndata, (bool)) */\n    tag_188:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4547:4682  if (returndata.length != 0 && !abi.decode(returndata, (bool))) {... */\n      iszero\n      tag_190\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4664:4669  token */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4631:4671  SafeERC20FailedOperation(address(token)) */\n      mload(0x40)\n      0x5274afe700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_191\n      swap2\n      swap1\n      tag_45\n      jump\t// in\n    tag_191:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4547:4682  if (returndata.length != 0 && !abi.decode(returndata, (bool))) {... */\n    tag_190:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4129:4688  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4059:4688  function _callOptionalReturn(IERC20 token, bytes memory data) private {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":2705:2856  function functionCall(address target, bytes memory data) internal returns (bytes memory) {... */\n    tag_187:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":2780:2792  bytes memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Address.sol\":2811:2849  functionCallWithValue(target, data, 0) */\n      tag_193\n        /* \"@openzeppelin/contracts/utils/Address.sol\":2833:2839  target */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":2841:2845  data */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":2847:2848  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":2811:2832  functionCallWithValue */\n      tag_194\n        /* \"@openzeppelin/contracts/utils/Address.sol\":2811:2849  functionCallWithValue(target, data, 0) */\n      jump\t// in\n    tag_193:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":2804:2849  return functionCallWithValue(target, data, 0) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":2705:2856  function functionCall(address target, bytes memory data) internal returns (bytes memory) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3180:3572  function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {... */\n    tag_194:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3279:3291  bytes memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3331:3336  value */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3307:3328  address(this).balance */\n      selfbalance\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3307:3336  address(this).balance < value */\n      lt\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3303:3411  if (address(this).balance < value) {... */\n      iszero\n      tag_196\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3394:3398  this */\n      address\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3359:3400  AddressInsufficientBalance(address(this)) */\n      mload(0x40)\n      0xcd78605900000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_197\n      swap2\n      swap1\n      tag_45\n      jump\t// in\n    tag_197:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3303:3411  if (address(this).balance < value) {... */\n    tag_196:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3421:3433  bool success */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3435:3458  bytes memory returndata */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3462:3468  target */\n      dup6\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3462:3473  target.call */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3481:3486  value */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3488:3492  data */\n      dup7\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3462:3493  target.call{value: value}(data) */\n      mload(0x40)\n      tag_198\n      swap2\n      swap1\n      tag_199\n      jump\t// in\n    tag_198:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_202\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_201)\n    tag_202:\n      0x60\n      swap2\n      pop\n    tag_201:\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3420:3493  (bool success, bytes memory returndata) = target.call{value: value}(data) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3510:3565  verifyCallResultFromTarget(target, success, returndata) */\n      tag_203\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3537:3543  target */\n      dup7\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3545:3552  success */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3554:3564  returndata */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3510:3536  verifyCallResultFromTarget */\n      tag_204\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3510:3565  verifyCallResultFromTarget(target, success, returndata) */\n      jump\t// in\n    tag_203:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3503:3565  return verifyCallResultFromTarget(target, success, returndata) */\n      swap3\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3180:3572  function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4625:5207  function verifyCallResultFromTarget(... */\n    tag_204:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4769:4781  bytes memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4798:4805  success */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4793:5201  if (!success) {... */\n      tag_206\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4821:4840  _revert(returndata) */\n      tag_207\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4829:4839  returndata */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4821:4828  _revert */\n      tag_208\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4821:4840  _revert(returndata) */\n      jump\t// in\n    tag_207:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4793:5201  if (!success) {... */\n      jump(tag_209)\n    tag_206:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5066:5067  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5045:5055  returndata */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5045:5062  returndata.length */\n      mload\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5045:5067  returndata.length == 0 */\n      eq\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5045:5094  returndata.length == 0 && target.code.length == 0 */\n      dup1\n      iszero\n      tag_210\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5093:5094  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5071:5077  target */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5071:5089  target.code.length */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      extcodesize\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5071:5094  target.code.length == 0 */\n      eq\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5045:5094  returndata.length == 0 && target.code.length == 0 */\n    tag_210:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5041:5160  if (returndata.length == 0 && target.code.length == 0) {... */\n      iszero\n      tag_211\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5138:5144  target */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5121:5145  AddressEmptyCode(target) */\n      mload(0x40)\n      0x9996b31500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_212\n      swap2\n      swap1\n      tag_45\n      jump\t// in\n    tag_212:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5041:5160  if (returndata.length == 0 && target.code.length == 0) {... */\n    tag_211:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5180:5190  returndata */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5173:5190  return returndata */\n      swap1\n      pop\n      jump(tag_205)\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4793:5201  if (!success) {... */\n    tag_209:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4625:5207  function verifyCallResultFromTarget(... */\n    tag_205:\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5743:6259  function _revert(bytes memory returndata) private pure {... */\n    tag_208:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5894:5895  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5874:5884  returndata */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5874:5891  returndata.length */\n      mload\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5874:5895  returndata.length > 0 */\n      gt\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5870:6253  if (returndata.length > 0) {... */\n      iszero\n      tag_214\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6102:6112  returndata */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6096:6113  mload(returndata) */\n      mload\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6158:6173  returndata_size */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6145:6155  returndata */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6141:6143  32 */\n      0x20\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6137:6156  add(32, returndata) */\n      add\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6130:6174  revert(add(32, returndata), returndata_size) */\n      revert\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5870:6253  if (returndata.length > 0) {... */\n    tag_214:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6225:6242  FailedInnerCall() */\n      mload(0x40)\n      0x1425ea4200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"#utility.yul\":7:133   */\n    tag_216:\n        /* \"#utility.yul\":44:51   */\n      0x00\n        /* \"#utility.yul\":84:126   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":77:82   */\n      dup3\n        /* \"#utility.yul\":73:127   */\n      and\n        /* \"#utility.yul\":62:127   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:133   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":139:199   */\n    tag_217:\n        /* \"#utility.yul\":167:170   */\n      0x00\n        /* \"#utility.yul\":188:193   */\n      dup2\n        /* \"#utility.yul\":181:193   */\n      swap1\n      pop\n        /* \"#utility.yul\":139:199   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":205:347   */\n    tag_218:\n        /* \"#utility.yul\":255:264   */\n      0x00\n        /* \"#utility.yul\":288:341   */\n      tag_264\n        /* \"#utility.yul\":306:340   */\n      tag_265\n        /* \"#utility.yul\":315:339   */\n      tag_266\n        /* \"#utility.yul\":333:338   */\n      dup5\n        /* \"#utility.yul\":315:339   */\n      tag_216\n      jump\t// in\n    tag_266:\n        /* \"#utility.yul\":306:340   */\n      tag_217\n      jump\t// in\n    tag_265:\n        /* \"#utility.yul\":288:341   */\n      tag_216\n      jump\t// in\n    tag_264:\n        /* \"#utility.yul\":275:341   */\n      swap1\n      pop\n        /* \"#utility.yul\":205:347   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":353:479   */\n    tag_219:\n        /* \"#utility.yul\":403:412   */\n      0x00\n        /* \"#utility.yul\":436:473   */\n      tag_268\n        /* \"#utility.yul\":467:472   */\n      dup3\n        /* \"#utility.yul\":436:473   */\n      tag_218\n      jump\t// in\n    tag_268:\n        /* \"#utility.yul\":423:473   */\n      swap1\n      pop\n        /* \"#utility.yul\":353:479   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":485:625   */\n    tag_220:\n        /* \"#utility.yul\":549:558   */\n      0x00\n        /* \"#utility.yul\":582:619   */\n      tag_270\n        /* \"#utility.yul\":613:618   */\n      dup3\n        /* \"#utility.yul\":582:619   */\n      tag_219\n      jump\t// in\n    tag_270:\n        /* \"#utility.yul\":569:619   */\n      swap1\n      pop\n        /* \"#utility.yul\":485:625   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":631:790   */\n    tag_221:\n        /* \"#utility.yul\":732:783   */\n      tag_272\n        /* \"#utility.yul\":777:782   */\n      dup2\n        /* \"#utility.yul\":732:783   */\n      tag_220\n      jump\t// in\n    tag_272:\n        /* \"#utility.yul\":727:730   */\n      dup3\n        /* \"#utility.yul\":720:784   */\n      mstore\n        /* \"#utility.yul\":631:790   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":796:1046   */\n    tag_23:\n        /* \"#utility.yul\":903:907   */\n      0x00\n        /* \"#utility.yul\":941:943   */\n      0x20\n        /* \"#utility.yul\":930:939   */\n      dup3\n        /* \"#utility.yul\":926:944   */\n      add\n        /* \"#utility.yul\":918:944   */\n      swap1\n      pop\n        /* \"#utility.yul\":954:1039   */\n      tag_274\n        /* \"#utility.yul\":1036:1037   */\n      0x00\n        /* \"#utility.yul\":1025:1034   */\n      dup4\n        /* \"#utility.yul\":1021:1038   */\n      add\n        /* \"#utility.yul\":1012:1018   */\n      dup5\n        /* \"#utility.yul\":954:1039   */\n      tag_221\n      jump\t// in\n    tag_274:\n        /* \"#utility.yul\":796:1046   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1052:1129   */\n    tag_222:\n        /* \"#utility.yul\":1089:1096   */\n      0x00\n        /* \"#utility.yul\":1118:1123   */\n      dup2\n        /* \"#utility.yul\":1107:1123   */\n      swap1\n      pop\n        /* \"#utility.yul\":1052:1129   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1135:1253   */\n    tag_223:\n        /* \"#utility.yul\":1222:1246   */\n      tag_277\n        /* \"#utility.yul\":1240:1245   */\n      dup2\n        /* \"#utility.yul\":1222:1246   */\n      tag_222\n      jump\t// in\n    tag_277:\n        /* \"#utility.yul\":1217:1220   */\n      dup3\n        /* \"#utility.yul\":1210:1247   */\n      mstore\n        /* \"#utility.yul\":1135:1253   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1259:1481   */\n    tag_27:\n        /* \"#utility.yul\":1352:1356   */\n      0x00\n        /* \"#utility.yul\":1390:1392   */\n      0x20\n        /* \"#utility.yul\":1379:1388   */\n      dup3\n        /* \"#utility.yul\":1375:1393   */\n      add\n        /* \"#utility.yul\":1367:1393   */\n      swap1\n      pop\n        /* \"#utility.yul\":1403:1474   */\n      tag_279\n        /* \"#utility.yul\":1471:1472   */\n      0x00\n        /* \"#utility.yul\":1460:1469   */\n      dup4\n        /* \"#utility.yul\":1456:1473   */\n      add\n        /* \"#utility.yul\":1447:1453   */\n      dup5\n        /* \"#utility.yul\":1403:1474   */\n      tag_223\n      jump\t// in\n    tag_279:\n        /* \"#utility.yul\":1259:1481   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1487:1577   */\n    tag_224:\n        /* \"#utility.yul\":1521:1528   */\n      0x00\n        /* \"#utility.yul\":1564:1569   */\n      dup2\n        /* \"#utility.yul\":1557:1570   */\n      iszero\n        /* \"#utility.yul\":1550:1571   */\n      iszero\n        /* \"#utility.yul\":1539:1571   */\n      swap1\n      pop\n        /* \"#utility.yul\":1487:1577   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1583:1692   */\n    tag_225:\n        /* \"#utility.yul\":1664:1685   */\n      tag_282\n        /* \"#utility.yul\":1679:1684   */\n      dup2\n        /* \"#utility.yul\":1664:1685   */\n      tag_224\n      jump\t// in\n    tag_282:\n        /* \"#utility.yul\":1659:1662   */\n      dup3\n        /* \"#utility.yul\":1652:1686   */\n      mstore\n        /* \"#utility.yul\":1583:1692   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1698:1908   */\n    tag_33:\n        /* \"#utility.yul\":1785:1789   */\n      0x00\n        /* \"#utility.yul\":1823:1825   */\n      0x20\n        /* \"#utility.yul\":1812:1821   */\n      dup3\n        /* \"#utility.yul\":1808:1826   */\n      add\n        /* \"#utility.yul\":1800:1826   */\n      swap1\n      pop\n        /* \"#utility.yul\":1836:1901   */\n      tag_284\n        /* \"#utility.yul\":1898:1899   */\n      0x00\n        /* \"#utility.yul\":1887:1896   */\n      dup4\n        /* \"#utility.yul\":1883:1900   */\n      add\n        /* \"#utility.yul\":1874:1880   */\n      dup5\n        /* \"#utility.yul\":1836:1901   */\n      tag_225\n      jump\t// in\n    tag_284:\n        /* \"#utility.yul\":1698:1908   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1995:2112   */\n    tag_227:\n        /* \"#utility.yul\":2104:2105   */\n      0x00\n        /* \"#utility.yul\":2101:2102   */\n      dup1\n        /* \"#utility.yul\":2094:2106   */\n      revert\n        /* \"#utility.yul\":2241:2363   */\n    tag_229:\n        /* \"#utility.yul\":2314:2338   */\n      tag_289\n        /* \"#utility.yul\":2332:2337   */\n      dup2\n        /* \"#utility.yul\":2314:2338   */\n      tag_222\n      jump\t// in\n    tag_289:\n        /* \"#utility.yul\":2307:2312   */\n      dup2\n        /* \"#utility.yul\":2304:2339   */\n      eq\n        /* \"#utility.yul\":2294:2357   */\n      tag_290\n      jumpi\n        /* \"#utility.yul\":2353:2354   */\n      0x00\n        /* \"#utility.yul\":2350:2351   */\n      dup1\n        /* \"#utility.yul\":2343:2355   */\n      revert\n        /* \"#utility.yul\":2294:2357   */\n    tag_290:\n        /* \"#utility.yul\":2241:2363   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2369:2508   */\n    tag_230:\n        /* \"#utility.yul\":2415:2420   */\n      0x00\n        /* \"#utility.yul\":2453:2459   */\n      dup2\n        /* \"#utility.yul\":2440:2460   */\n      calldataload\n        /* \"#utility.yul\":2431:2460   */\n      swap1\n      pop\n        /* \"#utility.yul\":2469:2502   */\n      tag_292\n        /* \"#utility.yul\":2496:2501   */\n      dup2\n        /* \"#utility.yul\":2469:2502   */\n      tag_229\n      jump\t// in\n    tag_292:\n        /* \"#utility.yul\":2369:2508   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2514:2610   */\n    tag_231:\n        /* \"#utility.yul\":2551:2558   */\n      0x00\n        /* \"#utility.yul\":2580:2604   */\n      tag_294\n        /* \"#utility.yul\":2598:2603   */\n      dup3\n        /* \"#utility.yul\":2580:2604   */\n      tag_216\n      jump\t// in\n    tag_294:\n        /* \"#utility.yul\":2569:2604   */\n      swap1\n      pop\n        /* \"#utility.yul\":2514:2610   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2616:2738   */\n    tag_232:\n        /* \"#utility.yul\":2689:2713   */\n      tag_296\n        /* \"#utility.yul\":2707:2712   */\n      dup2\n        /* \"#utility.yul\":2689:2713   */\n      tag_231\n      jump\t// in\n    tag_296:\n        /* \"#utility.yul\":2682:2687   */\n      dup2\n        /* \"#utility.yul\":2679:2714   */\n      eq\n        /* \"#utility.yul\":2669:2732   */\n      tag_297\n      jumpi\n        /* \"#utility.yul\":2728:2729   */\n      0x00\n        /* \"#utility.yul\":2725:2726   */\n      dup1\n        /* \"#utility.yul\":2718:2730   */\n      revert\n        /* \"#utility.yul\":2669:2732   */\n    tag_297:\n        /* \"#utility.yul\":2616:2738   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2744:2883   */\n    tag_233:\n        /* \"#utility.yul\":2790:2795   */\n      0x00\n        /* \"#utility.yul\":2828:2834   */\n      dup2\n        /* \"#utility.yul\":2815:2835   */\n      calldataload\n        /* \"#utility.yul\":2806:2835   */\n      swap1\n      pop\n        /* \"#utility.yul\":2844:2877   */\n      tag_299\n        /* \"#utility.yul\":2871:2876   */\n      dup2\n        /* \"#utility.yul\":2844:2877   */\n      tag_232\n      jump\t// in\n    tag_299:\n        /* \"#utility.yul\":2744:2883   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2889:3508   */\n    tag_40:\n        /* \"#utility.yul\":2966:2972   */\n      0x00\n        /* \"#utility.yul\":2974:2980   */\n      dup1\n        /* \"#utility.yul\":2982:2988   */\n      0x00\n        /* \"#utility.yul\":3031:3033   */\n      0x60\n        /* \"#utility.yul\":3019:3028   */\n      dup5\n        /* \"#utility.yul\":3010:3017   */\n      dup7\n        /* \"#utility.yul\":3006:3029   */\n      sub\n        /* \"#utility.yul\":3002:3034   */\n      slt\n        /* \"#utility.yul\":2999:3118   */\n      iszero\n      tag_301\n      jumpi\n        /* \"#utility.yul\":3037:3116   */\n      tag_302\n      tag_227\n      jump\t// in\n    tag_302:\n        /* \"#utility.yul\":2999:3118   */\n    tag_301:\n        /* \"#utility.yul\":3157:3158   */\n      0x00\n        /* \"#utility.yul\":3182:3235   */\n      tag_303\n        /* \"#utility.yul\":3227:3234   */\n      dup7\n        /* \"#utility.yul\":3218:3224   */\n      dup3\n        /* \"#utility.yul\":3207:3216   */\n      dup8\n        /* \"#utility.yul\":3203:3225   */\n      add\n        /* \"#utility.yul\":3182:3235   */\n      tag_230\n      jump\t// in\n    tag_303:\n        /* \"#utility.yul\":3172:3235   */\n      swap4\n      pop\n        /* \"#utility.yul\":3128:3245   */\n      pop\n        /* \"#utility.yul\":3284:3286   */\n      0x20\n        /* \"#utility.yul\":3310:3363   */\n      tag_304\n        /* \"#utility.yul\":3355:3362   */\n      dup7\n        /* \"#utility.yul\":3346:3352   */\n      dup3\n        /* \"#utility.yul\":3335:3344   */\n      dup8\n        /* \"#utility.yul\":3331:3353   */\n      add\n        /* \"#utility.yul\":3310:3363   */\n      tag_230\n      jump\t// in\n    tag_304:\n        /* \"#utility.yul\":3300:3363   */\n      swap3\n      pop\n        /* \"#utility.yul\":3255:3373   */\n      pop\n        /* \"#utility.yul\":3412:3414   */\n      0x40\n        /* \"#utility.yul\":3438:3491   */\n      tag_305\n        /* \"#utility.yul\":3483:3490   */\n      dup7\n        /* \"#utility.yul\":3474:3480   */\n      dup3\n        /* \"#utility.yul\":3463:3472   */\n      dup8\n        /* \"#utility.yul\":3459:3481   */\n      add\n        /* \"#utility.yul\":3438:3491   */\n      tag_233\n      jump\t// in\n    tag_305:\n        /* \"#utility.yul\":3428:3491   */\n      swap2\n      pop\n        /* \"#utility.yul\":3383:3501   */\n      pop\n        /* \"#utility.yul\":2889:3508   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":3514:3632   */\n    tag_234:\n        /* \"#utility.yul\":3601:3625   */\n      tag_307\n        /* \"#utility.yul\":3619:3624   */\n      dup2\n        /* \"#utility.yul\":3601:3625   */\n      tag_231\n      jump\t// in\n    tag_307:\n        /* \"#utility.yul\":3596:3599   */\n      dup3\n        /* \"#utility.yul\":3589:3626   */\n      mstore\n        /* \"#utility.yul\":3514:3632   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3638:3860   */\n    tag_45:\n        /* \"#utility.yul\":3731:3735   */\n      0x00\n        /* \"#utility.yul\":3769:3771   */\n      0x20\n        /* \"#utility.yul\":3758:3767   */\n      dup3\n        /* \"#utility.yul\":3754:3772   */\n      add\n        /* \"#utility.yul\":3746:3772   */\n      swap1\n      pop\n        /* \"#utility.yul\":3782:3853   */\n      tag_309\n        /* \"#utility.yul\":3850:3851   */\n      0x00\n        /* \"#utility.yul\":3839:3848   */\n      dup4\n        /* \"#utility.yul\":3835:3852   */\n      add\n        /* \"#utility.yul\":3826:3832   */\n      dup5\n        /* \"#utility.yul\":3782:3853   */\n      tag_234\n      jump\t// in\n    tag_309:\n        /* \"#utility.yul\":3638:3860   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3866:4016   */\n    tag_235:\n        /* \"#utility.yul\":3940:3949   */\n      0x00\n        /* \"#utility.yul\":3973:4010   */\n      tag_311\n        /* \"#utility.yul\":4004:4009   */\n      dup3\n        /* \"#utility.yul\":3973:4010   */\n      tag_219\n      jump\t// in\n    tag_311:\n        /* \"#utility.yul\":3960:4010   */\n      swap1\n      pop\n        /* \"#utility.yul\":3866:4016   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4022:4201   */\n    tag_236:\n        /* \"#utility.yul\":4133:4194   */\n      tag_313\n        /* \"#utility.yul\":4188:4193   */\n      dup2\n        /* \"#utility.yul\":4133:4194   */\n      tag_235\n      jump\t// in\n    tag_313:\n        /* \"#utility.yul\":4128:4131   */\n      dup3\n        /* \"#utility.yul\":4121:4195   */\n      mstore\n        /* \"#utility.yul\":4022:4201   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4207:4477   */\n    tag_49:\n        /* \"#utility.yul\":4324:4328   */\n      0x00\n        /* \"#utility.yul\":4362:4364   */\n      0x20\n        /* \"#utility.yul\":4351:4360   */\n      dup3\n        /* \"#utility.yul\":4347:4365   */\n      add\n        /* \"#utility.yul\":4339:4365   */\n      swap1\n      pop\n        /* \"#utility.yul\":4375:4470   */\n      tag_315\n        /* \"#utility.yul\":4467:4468   */\n      0x00\n        /* \"#utility.yul\":4456:4465   */\n      dup4\n        /* \"#utility.yul\":4452:4469   */\n      add\n        /* \"#utility.yul\":4443:4449   */\n      dup5\n        /* \"#utility.yul\":4375:4470   */\n      tag_236\n      jump\t// in\n    tag_315:\n        /* \"#utility.yul\":4207:4477   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4483:4957   */\n    tag_52:\n        /* \"#utility.yul\":4551:4557   */\n      0x00\n        /* \"#utility.yul\":4559:4565   */\n      dup1\n        /* \"#utility.yul\":4608:4610   */\n      0x40\n        /* \"#utility.yul\":4596:4605   */\n      dup4\n        /* \"#utility.yul\":4587:4594   */\n      dup6\n        /* \"#utility.yul\":4583:4606   */\n      sub\n        /* \"#utility.yul\":4579:4611   */\n      slt\n        /* \"#utility.yul\":4576:4695   */\n      iszero\n      tag_317\n      jumpi\n        /* \"#utility.yul\":4614:4693   */\n      tag_318\n      tag_227\n      jump\t// in\n    tag_318:\n        /* \"#utility.yul\":4576:4695   */\n    tag_317:\n        /* \"#utility.yul\":4734:4735   */\n      0x00\n        /* \"#utility.yul\":4759:4812   */\n      tag_319\n        /* \"#utility.yul\":4804:4811   */\n      dup6\n        /* \"#utility.yul\":4795:4801   */\n      dup3\n        /* \"#utility.yul\":4784:4793   */\n      dup7\n        /* \"#utility.yul\":4780:4802   */\n      add\n        /* \"#utility.yul\":4759:4812   */\n      tag_230\n      jump\t// in\n    tag_319:\n        /* \"#utility.yul\":4749:4812   */\n      swap3\n      pop\n        /* \"#utility.yul\":4705:4822   */\n      pop\n        /* \"#utility.yul\":4861:4863   */\n      0x20\n        /* \"#utility.yul\":4887:4940   */\n      tag_320\n        /* \"#utility.yul\":4932:4939   */\n      dup6\n        /* \"#utility.yul\":4923:4929   */\n      dup3\n        /* \"#utility.yul\":4912:4921   */\n      dup7\n        /* \"#utility.yul\":4908:4930   */\n      add\n        /* \"#utility.yul\":4887:4940   */\n      tag_233\n      jump\t// in\n    tag_320:\n        /* \"#utility.yul\":4877:4940   */\n      swap2\n      pop\n        /* \"#utility.yul\":4832:4950   */\n      pop\n        /* \"#utility.yul\":4483:4957   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4963:5292   */\n    tag_56:\n        /* \"#utility.yul\":5022:5028   */\n      0x00\n        /* \"#utility.yul\":5071:5073   */\n      0x20\n        /* \"#utility.yul\":5059:5068   */\n      dup3\n        /* \"#utility.yul\":5050:5057   */\n      dup5\n        /* \"#utility.yul\":5046:5069   */\n      sub\n        /* \"#utility.yul\":5042:5074   */\n      slt\n        /* \"#utility.yul\":5039:5158   */\n      iszero\n      tag_322\n      jumpi\n        /* \"#utility.yul\":5077:5156   */\n      tag_323\n      tag_227\n      jump\t// in\n    tag_323:\n        /* \"#utility.yul\":5039:5158   */\n    tag_322:\n        /* \"#utility.yul\":5197:5198   */\n      0x00\n        /* \"#utility.yul\":5222:5275   */\n      tag_324\n        /* \"#utility.yul\":5267:5274   */\n      dup5\n        /* \"#utility.yul\":5258:5264   */\n      dup3\n        /* \"#utility.yul\":5247:5256   */\n      dup6\n        /* \"#utility.yul\":5243:5265   */\n      add\n        /* \"#utility.yul\":5222:5275   */\n      tag_230\n      jump\t// in\n    tag_324:\n        /* \"#utility.yul\":5212:5275   */\n      swap2\n      pop\n        /* \"#utility.yul\":5168:5285   */\n      pop\n        /* \"#utility.yul\":4963:5292   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5298:5772   */\n    tag_61:\n        /* \"#utility.yul\":5366:5372   */\n      0x00\n        /* \"#utility.yul\":5374:5380   */\n      dup1\n        /* \"#utility.yul\":5423:5425   */\n      0x40\n        /* \"#utility.yul\":5411:5420   */\n      dup4\n        /* \"#utility.yul\":5402:5409   */\n      dup6\n        /* \"#utility.yul\":5398:5421   */\n      sub\n        /* \"#utility.yul\":5394:5426   */\n      slt\n        /* \"#utility.yul\":5391:5510   */\n      iszero\n      tag_326\n      jumpi\n        /* \"#utility.yul\":5429:5508   */\n      tag_327\n      tag_227\n      jump\t// in\n    tag_327:\n        /* \"#utility.yul\":5391:5510   */\n    tag_326:\n        /* \"#utility.yul\":5549:5550   */\n      0x00\n        /* \"#utility.yul\":5574:5627   */\n      tag_328\n        /* \"#utility.yul\":5619:5626   */\n      dup6\n        /* \"#utility.yul\":5610:5616   */\n      dup3\n        /* \"#utility.yul\":5599:5608   */\n      dup7\n        /* \"#utility.yul\":5595:5617   */\n      add\n        /* \"#utility.yul\":5574:5627   */\n      tag_230\n      jump\t// in\n    tag_328:\n        /* \"#utility.yul\":5564:5627   */\n      swap3\n      pop\n        /* \"#utility.yul\":5520:5637   */\n      pop\n        /* \"#utility.yul\":5676:5678   */\n      0x20\n        /* \"#utility.yul\":5702:5755   */\n      tag_329\n        /* \"#utility.yul\":5747:5754   */\n      dup6\n        /* \"#utility.yul\":5738:5744   */\n      dup3\n        /* \"#utility.yul\":5727:5736   */\n      dup7\n        /* \"#utility.yul\":5723:5745   */\n      add\n        /* \"#utility.yul\":5702:5755   */\n      tag_230\n      jump\t// in\n    tag_329:\n        /* \"#utility.yul\":5692:5755   */\n      swap2\n      pop\n        /* \"#utility.yul\":5647:5765   */\n      pop\n        /* \"#utility.yul\":5298:5772   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5778:6107   */\n    tag_65:\n        /* \"#utility.yul\":5837:5843   */\n      0x00\n        /* \"#utility.yul\":5886:5888   */\n      0x20\n        /* \"#utility.yul\":5874:5883   */\n      dup3\n        /* \"#utility.yul\":5865:5872   */\n      dup5\n        /* \"#utility.yul\":5861:5884   */\n      sub\n        /* \"#utility.yul\":5857:5889   */\n      slt\n        /* \"#utility.yul\":5854:5973   */\n      iszero\n      tag_331\n      jumpi\n        /* \"#utility.yul\":5892:5971   */\n      tag_332\n      tag_227\n      jump\t// in\n    tag_332:\n        /* \"#utility.yul\":5854:5973   */\n    tag_331:\n        /* \"#utility.yul\":6012:6013   */\n      0x00\n        /* \"#utility.yul\":6037:6090   */\n      tag_333\n        /* \"#utility.yul\":6082:6089   */\n      dup5\n        /* \"#utility.yul\":6073:6079   */\n      dup3\n        /* \"#utility.yul\":6062:6071   */\n      dup6\n        /* \"#utility.yul\":6058:6080   */\n      add\n        /* \"#utility.yul\":6037:6090   */\n      tag_233\n      jump\t// in\n    tag_333:\n        /* \"#utility.yul\":6027:6090   */\n      swap2\n      pop\n        /* \"#utility.yul\":5983:6100   */\n      pop\n        /* \"#utility.yul\":5778:6107   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6113:6876   */\n    tag_71:\n        /* \"#utility.yul\":6340:6344   */\n      0x00\n        /* \"#utility.yul\":6378:6381   */\n      0xc0\n        /* \"#utility.yul\":6367:6376   */\n      dup3\n        /* \"#utility.yul\":6363:6382   */\n      add\n        /* \"#utility.yul\":6355:6382   */\n      swap1\n      pop\n        /* \"#utility.yul\":6392:6463   */\n      tag_335\n        /* \"#utility.yul\":6460:6461   */\n      0x00\n        /* \"#utility.yul\":6449:6458   */\n      dup4\n        /* \"#utility.yul\":6445:6462   */\n      add\n        /* \"#utility.yul\":6436:6442   */\n      dup10\n        /* \"#utility.yul\":6392:6463   */\n      tag_234\n      jump\t// in\n    tag_335:\n        /* \"#utility.yul\":6473:6545   */\n      tag_336\n        /* \"#utility.yul\":6541:6543   */\n      0x20\n        /* \"#utility.yul\":6530:6539   */\n      dup4\n        /* \"#utility.yul\":6526:6544   */\n      add\n        /* \"#utility.yul\":6517:6523   */\n      dup9\n        /* \"#utility.yul\":6473:6545   */\n      tag_223\n      jump\t// in\n    tag_336:\n        /* \"#utility.yul\":6555:6627   */\n      tag_337\n        /* \"#utility.yul\":6623:6625   */\n      0x40\n        /* \"#utility.yul\":6612:6621   */\n      dup4\n        /* \"#utility.yul\":6608:6626   */\n      add\n        /* \"#utility.yul\":6599:6605   */\n      dup8\n        /* \"#utility.yul\":6555:6627   */\n      tag_223\n      jump\t// in\n    tag_337:\n        /* \"#utility.yul\":6637:6709   */\n      tag_338\n        /* \"#utility.yul\":6705:6707   */\n      0x60\n        /* \"#utility.yul\":6694:6703   */\n      dup4\n        /* \"#utility.yul\":6690:6708   */\n      add\n        /* \"#utility.yul\":6681:6687   */\n      dup7\n        /* \"#utility.yul\":6637:6709   */\n      tag_223\n      jump\t// in\n    tag_338:\n        /* \"#utility.yul\":6719:6792   */\n      tag_339\n        /* \"#utility.yul\":6787:6790   */\n      0x80\n        /* \"#utility.yul\":6776:6785   */\n      dup4\n        /* \"#utility.yul\":6772:6791   */\n      add\n        /* \"#utility.yul\":6763:6769   */\n      dup6\n        /* \"#utility.yul\":6719:6792   */\n      tag_234\n      jump\t// in\n    tag_339:\n        /* \"#utility.yul\":6802:6869   */\n      tag_340\n        /* \"#utility.yul\":6864:6867   */\n      0xa0\n        /* \"#utility.yul\":6853:6862   */\n      dup4\n        /* \"#utility.yul\":6849:6868   */\n      add\n        /* \"#utility.yul\":6840:6846   */\n      dup5\n        /* \"#utility.yul\":6802:6869   */\n      tag_225\n      jump\t// in\n    tag_340:\n        /* \"#utility.yul\":6113:6876   */\n      swap8\n      swap7\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6882:7051   */\n    tag_237:\n        /* \"#utility.yul\":6966:6977   */\n      0x00\n        /* \"#utility.yul\":7000:7006   */\n      dup3\n        /* \"#utility.yul\":6995:6998   */\n      dup3\n        /* \"#utility.yul\":6988:7007   */\n      mstore\n        /* \"#utility.yul\":7040:7044   */\n      0x20\n        /* \"#utility.yul\":7035:7038   */\n      dup3\n        /* \"#utility.yul\":7031:7045   */\n      add\n        /* \"#utility.yul\":7016:7045   */\n      swap1\n      pop\n        /* \"#utility.yul\":6882:7051   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7057:7235   */\n    tag_238:\n        /* \"#utility.yul\":7197:7227   */\n      0x5072696365206d7573742062652067726561746572207468616e203000000000\n        /* \"#utility.yul\":7193:7194   */\n      0x00\n        /* \"#utility.yul\":7185:7191   */\n      dup3\n        /* \"#utility.yul\":7181:7195   */\n      add\n        /* \"#utility.yul\":7174:7228   */\n      mstore\n        /* \"#utility.yul\":7057:7235   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7241:7607   */\n    tag_239:\n        /* \"#utility.yul\":7383:7386   */\n      0x00\n        /* \"#utility.yul\":7404:7471   */\n      tag_344\n        /* \"#utility.yul\":7468:7470   */\n      0x1c\n        /* \"#utility.yul\":7463:7466   */\n      dup4\n        /* \"#utility.yul\":7404:7471   */\n      tag_237\n      jump\t// in\n    tag_344:\n        /* \"#utility.yul\":7397:7471   */\n      swap2\n      pop\n        /* \"#utility.yul\":7480:7573   */\n      tag_345\n        /* \"#utility.yul\":7569:7572   */\n      dup3\n        /* \"#utility.yul\":7480:7573   */\n      tag_238\n      jump\t// in\n    tag_345:\n        /* \"#utility.yul\":7598:7600   */\n      0x20\n        /* \"#utility.yul\":7593:7596   */\n      dup3\n        /* \"#utility.yul\":7589:7601   */\n      add\n        /* \"#utility.yul\":7582:7601   */\n      swap1\n      pop\n        /* \"#utility.yul\":7241:7607   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7613:8032   */\n    tag_95:\n        /* \"#utility.yul\":7779:7783   */\n      0x00\n        /* \"#utility.yul\":7817:7819   */\n      0x20\n        /* \"#utility.yul\":7806:7815   */\n      dup3\n        /* \"#utility.yul\":7802:7820   */\n      add\n        /* \"#utility.yul\":7794:7820   */\n      swap1\n      pop\n        /* \"#utility.yul\":7866:7875   */\n      dup2\n        /* \"#utility.yul\":7860:7864   */\n      dup2\n        /* \"#utility.yul\":7856:7876   */\n      sub\n        /* \"#utility.yul\":7852:7853   */\n      0x00\n        /* \"#utility.yul\":7841:7850   */\n      dup4\n        /* \"#utility.yul\":7837:7854   */\n      add\n        /* \"#utility.yul\":7830:7877   */\n      mstore\n        /* \"#utility.yul\":7894:8025   */\n      tag_347\n        /* \"#utility.yul\":8020:8024   */\n      dup2\n        /* \"#utility.yul\":7894:8025   */\n      tag_239\n      jump\t// in\n    tag_347:\n        /* \"#utility.yul\":7886:8025   */\n      swap1\n      pop\n        /* \"#utility.yul\":7613:8032   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8038:8260   */\n    tag_240:\n        /* \"#utility.yul\":8178:8212   */\n      0x546f74616c20736861726573206d757374206265206772656174657220746861\n        /* \"#utility.yul\":8174:8175   */\n      0x00\n        /* \"#utility.yul\":8166:8172   */\n      dup3\n        /* \"#utility.yul\":8162:8176   */\n      add\n        /* \"#utility.yul\":8155:8213   */\n      mstore\n        /* \"#utility.yul\":8247:8252   */\n      0x6e20300000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":8242:8244   */\n      0x20\n        /* \"#utility.yul\":8234:8240   */\n      dup3\n        /* \"#utility.yul\":8230:8245   */\n      add\n        /* \"#utility.yul\":8223:8253   */\n      mstore\n        /* \"#utility.yul\":8038:8260   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8266:8632   */\n    tag_241:\n        /* \"#utility.yul\":8408:8411   */\n      0x00\n        /* \"#utility.yul\":8429:8496   */\n      tag_350\n        /* \"#utility.yul\":8493:8495   */\n      0x23\n        /* \"#utility.yul\":8488:8491   */\n      dup4\n        /* \"#utility.yul\":8429:8496   */\n      tag_237\n      jump\t// in\n    tag_350:\n        /* \"#utility.yul\":8422:8496   */\n      swap2\n      pop\n        /* \"#utility.yul\":8505:8598   */\n      tag_351\n        /* \"#utility.yul\":8594:8597   */\n      dup3\n        /* \"#utility.yul\":8505:8598   */\n      tag_240\n      jump\t// in\n    tag_351:\n        /* \"#utility.yul\":8623:8625   */\n      0x40\n        /* \"#utility.yul\":8618:8621   */\n      dup3\n        /* \"#utility.yul\":8614:8626   */\n      add\n        /* \"#utility.yul\":8607:8626   */\n      swap1\n      pop\n        /* \"#utility.yul\":8266:8632   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8638:9057   */\n    tag_98:\n        /* \"#utility.yul\":8804:8808   */\n      0x00\n        /* \"#utility.yul\":8842:8844   */\n      0x20\n        /* \"#utility.yul\":8831:8840   */\n      dup3\n        /* \"#utility.yul\":8827:8845   */\n      add\n        /* \"#utility.yul\":8819:8845   */\n      swap1\n      pop\n        /* \"#utility.yul\":8891:8900   */\n      dup2\n        /* \"#utility.yul\":8885:8889   */\n      dup2\n        /* \"#utility.yul\":8881:8901   */\n      sub\n        /* \"#utility.yul\":8877:8878   */\n      0x00\n        /* \"#utility.yul\":8866:8875   */\n      dup4\n        /* \"#utility.yul\":8862:8879   */\n      add\n        /* \"#utility.yul\":8855:8902   */\n      mstore\n        /* \"#utility.yul\":8919:9050   */\n      tag_353\n        /* \"#utility.yul\":9045:9049   */\n      dup2\n        /* \"#utility.yul\":8919:9050   */\n      tag_241\n      jump\t// in\n    tag_353:\n        /* \"#utility.yul\":8911:9050   */\n      swap1\n      pop\n        /* \"#utility.yul\":8638:9057   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9063:9505   */\n    tag_100:\n        /* \"#utility.yul\":9212:9216   */\n      0x00\n        /* \"#utility.yul\":9250:9252   */\n      0x60\n        /* \"#utility.yul\":9239:9248   */\n      dup3\n        /* \"#utility.yul\":9235:9253   */\n      add\n        /* \"#utility.yul\":9227:9253   */\n      swap1\n      pop\n        /* \"#utility.yul\":9263:9334   */\n      tag_355\n        /* \"#utility.yul\":9331:9332   */\n      0x00\n        /* \"#utility.yul\":9320:9329   */\n      dup4\n        /* \"#utility.yul\":9316:9333   */\n      add\n        /* \"#utility.yul\":9307:9313   */\n      dup7\n        /* \"#utility.yul\":9263:9334   */\n      tag_223\n      jump\t// in\n    tag_355:\n        /* \"#utility.yul\":9344:9416   */\n      tag_356\n        /* \"#utility.yul\":9412:9414   */\n      0x20\n        /* \"#utility.yul\":9401:9410   */\n      dup4\n        /* \"#utility.yul\":9397:9415   */\n      add\n        /* \"#utility.yul\":9388:9394   */\n      dup6\n        /* \"#utility.yul\":9344:9416   */\n      tag_223\n      jump\t// in\n    tag_356:\n        /* \"#utility.yul\":9426:9498   */\n      tag_357\n        /* \"#utility.yul\":9494:9496   */\n      0x40\n        /* \"#utility.yul\":9483:9492   */\n      dup4\n        /* \"#utility.yul\":9479:9497   */\n      add\n        /* \"#utility.yul\":9470:9476   */\n      dup5\n        /* \"#utility.yul\":9426:9498   */\n      tag_223\n      jump\t// in\n    tag_357:\n        /* \"#utility.yul\":9063:9505   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9511:9691   */\n    tag_242:\n        /* \"#utility.yul\":9559:9636   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":9556:9557   */\n      0x00\n        /* \"#utility.yul\":9549:9637   */\n      mstore\n        /* \"#utility.yul\":9656:9660   */\n      0x11\n        /* \"#utility.yul\":9653:9654   */\n      0x04\n        /* \"#utility.yul\":9646:9661   */\n      mstore\n        /* \"#utility.yul\":9680:9684   */\n      0x24\n        /* \"#utility.yul\":9677:9678   */\n      0x00\n        /* \"#utility.yul\":9670:9685   */\n      revert\n        /* \"#utility.yul\":9697:9930   */\n    tag_102:\n        /* \"#utility.yul\":9736:9739   */\n      0x00\n        /* \"#utility.yul\":9759:9783   */\n      tag_360\n        /* \"#utility.yul\":9777:9782   */\n      dup3\n        /* \"#utility.yul\":9759:9783   */\n      tag_222\n      jump\t// in\n    tag_360:\n        /* \"#utility.yul\":9750:9783   */\n      swap2\n      pop\n        /* \"#utility.yul\":9805:9871   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":9798:9803   */\n      dup3\n        /* \"#utility.yul\":9795:9872   */\n      sub\n        /* \"#utility.yul\":9792:9895   */\n      tag_361\n      jumpi\n        /* \"#utility.yul\":9875:9893   */\n      tag_362\n      tag_242\n      jump\t// in\n    tag_362:\n        /* \"#utility.yul\":9792:9895   */\n    tag_361:\n        /* \"#utility.yul\":9922:9923   */\n      0x01\n        /* \"#utility.yul\":9915:9920   */\n      dup3\n        /* \"#utility.yul\":9911:9924   */\n      add\n        /* \"#utility.yul\":9904:9924   */\n      swap1\n      pop\n        /* \"#utility.yul\":9697:9930   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9936:10159   */\n    tag_243:\n        /* \"#utility.yul\":10076:10110   */\n      0x4f6e6c7920746865206f776e65722063616e2066696e616c697a652074686520\n        /* \"#utility.yul\":10072:10073   */\n      0x00\n        /* \"#utility.yul\":10064:10070   */\n      dup3\n        /* \"#utility.yul\":10060:10074   */\n      add\n        /* \"#utility.yul\":10053:10111   */\n      mstore\n        /* \"#utility.yul\":10145:10151   */\n      0x73616c6500000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":10140:10142   */\n      0x20\n        /* \"#utility.yul\":10132:10138   */\n      dup3\n        /* \"#utility.yul\":10128:10143   */\n      add\n        /* \"#utility.yul\":10121:10152   */\n      mstore\n        /* \"#utility.yul\":9936:10159   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10165:10531   */\n    tag_244:\n        /* \"#utility.yul\":10307:10310   */\n      0x00\n        /* \"#utility.yul\":10328:10395   */\n      tag_365\n        /* \"#utility.yul\":10392:10394   */\n      0x24\n        /* \"#utility.yul\":10387:10390   */\n      dup4\n        /* \"#utility.yul\":10328:10395   */\n      tag_237\n      jump\t// in\n    tag_365:\n        /* \"#utility.yul\":10321:10395   */\n      swap2\n      pop\n        /* \"#utility.yul\":10404:10497   */\n      tag_366\n        /* \"#utility.yul\":10493:10496   */\n      dup3\n        /* \"#utility.yul\":10404:10497   */\n      tag_243\n      jump\t// in\n    tag_366:\n        /* \"#utility.yul\":10522:10524   */\n      0x40\n        /* \"#utility.yul\":10517:10520   */\n      dup3\n        /* \"#utility.yul\":10513:10525   */\n      add\n        /* \"#utility.yul\":10506:10525   */\n      swap1\n      pop\n        /* \"#utility.yul\":10165:10531   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10537:10956   */\n    tag_109:\n        /* \"#utility.yul\":10703:10707   */\n      0x00\n        /* \"#utility.yul\":10741:10743   */\n      0x20\n        /* \"#utility.yul\":10730:10739   */\n      dup3\n        /* \"#utility.yul\":10726:10744   */\n      add\n        /* \"#utility.yul\":10718:10744   */\n      swap1\n      pop\n        /* \"#utility.yul\":10790:10799   */\n      dup2\n        /* \"#utility.yul\":10784:10788   */\n      dup2\n        /* \"#utility.yul\":10780:10800   */\n      sub\n        /* \"#utility.yul\":10776:10777   */\n      0x00\n        /* \"#utility.yul\":10765:10774   */\n      dup4\n        /* \"#utility.yul\":10761:10778   */\n      add\n        /* \"#utility.yul\":10754:10801   */\n      mstore\n        /* \"#utility.yul\":10818:10949   */\n      tag_368\n        /* \"#utility.yul\":10944:10948   */\n      dup2\n        /* \"#utility.yul\":10818:10949   */\n      tag_244\n      jump\t// in\n    tag_368:\n        /* \"#utility.yul\":10810:10949   */\n      swap1\n      pop\n        /* \"#utility.yul\":10537:10956   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10962:11138   */\n    tag_245:\n        /* \"#utility.yul\":11102:11130   */\n      0x53686172657320617265207374696c6c20617661696c61626c65000000000000\n        /* \"#utility.yul\":11098:11099   */\n      0x00\n        /* \"#utility.yul\":11090:11096   */\n      dup3\n        /* \"#utility.yul\":11086:11100   */\n      add\n        /* \"#utility.yul\":11079:11131   */\n      mstore\n        /* \"#utility.yul\":10962:11138   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11144:11510   */\n    tag_246:\n        /* \"#utility.yul\":11286:11289   */\n      0x00\n        /* \"#utility.yul\":11307:11374   */\n      tag_371\n        /* \"#utility.yul\":11371:11373   */\n      0x1a\n        /* \"#utility.yul\":11366:11369   */\n      dup4\n        /* \"#utility.yul\":11307:11374   */\n      tag_237\n      jump\t// in\n    tag_371:\n        /* \"#utility.yul\":11300:11374   */\n      swap2\n      pop\n        /* \"#utility.yul\":11383:11476   */\n      tag_372\n        /* \"#utility.yul\":11472:11475   */\n      dup3\n        /* \"#utility.yul\":11383:11476   */\n      tag_245\n      jump\t// in\n    tag_372:\n        /* \"#utility.yul\":11501:11503   */\n      0x20\n        /* \"#utility.yul\":11496:11499   */\n      dup3\n        /* \"#utility.yul\":11492:11504   */\n      add\n        /* \"#utility.yul\":11485:11504   */\n      swap1\n      pop\n        /* \"#utility.yul\":11144:11510   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11516:11935   */\n    tag_112:\n        /* \"#utility.yul\":11682:11686   */\n      0x00\n        /* \"#utility.yul\":11720:11722   */\n      0x20\n        /* \"#utility.yul\":11709:11718   */\n      dup3\n        /* \"#utility.yul\":11705:11723   */\n      add\n        /* \"#utility.yul\":11697:11723   */\n      swap1\n      pop\n        /* \"#utility.yul\":11769:11778   */\n      dup2\n        /* \"#utility.yul\":11763:11767   */\n      dup2\n        /* \"#utility.yul\":11759:11779   */\n      sub\n        /* \"#utility.yul\":11755:11756   */\n      0x00\n        /* \"#utility.yul\":11744:11753   */\n      dup4\n        /* \"#utility.yul\":11740:11757   */\n      add\n        /* \"#utility.yul\":11733:11780   */\n      mstore\n        /* \"#utility.yul\":11797:11928   */\n      tag_374\n        /* \"#utility.yul\":11923:11927   */\n      dup2\n        /* \"#utility.yul\":11797:11928   */\n      tag_246\n      jump\t// in\n    tag_374:\n        /* \"#utility.yul\":11789:11928   */\n      swap1\n      pop\n        /* \"#utility.yul\":11516:11935   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11941:12273   */\n    tag_116:\n        /* \"#utility.yul\":12062:12066   */\n      0x00\n        /* \"#utility.yul\":12100:12102   */\n      0x40\n        /* \"#utility.yul\":12089:12098   */\n      dup3\n        /* \"#utility.yul\":12085:12103   */\n      add\n        /* \"#utility.yul\":12077:12103   */\n      swap1\n      pop\n        /* \"#utility.yul\":12113:12184   */\n      tag_376\n        /* \"#utility.yul\":12181:12182   */\n      0x00\n        /* \"#utility.yul\":12170:12179   */\n      dup4\n        /* \"#utility.yul\":12166:12183   */\n      add\n        /* \"#utility.yul\":12157:12163   */\n      dup6\n        /* \"#utility.yul\":12113:12184   */\n      tag_223\n      jump\t// in\n    tag_376:\n        /* \"#utility.yul\":12194:12266   */\n      tag_377\n        /* \"#utility.yul\":12262:12264   */\n      0x20\n        /* \"#utility.yul\":12251:12260   */\n      dup4\n        /* \"#utility.yul\":12247:12265   */\n      add\n        /* \"#utility.yul\":12238:12244   */\n      dup5\n        /* \"#utility.yul\":12194:12266   */\n      tag_223\n      jump\t// in\n    tag_377:\n        /* \"#utility.yul\":11941:12273   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12279:12395   */\n    tag_247:\n        /* \"#utility.yul\":12349:12370   */\n      tag_379\n        /* \"#utility.yul\":12364:12369   */\n      dup2\n        /* \"#utility.yul\":12349:12370   */\n      tag_224\n      jump\t// in\n    tag_379:\n        /* \"#utility.yul\":12342:12347   */\n      dup2\n        /* \"#utility.yul\":12339:12371   */\n      eq\n        /* \"#utility.yul\":12329:12389   */\n      tag_380\n      jumpi\n        /* \"#utility.yul\":12385:12386   */\n      0x00\n        /* \"#utility.yul\":12382:12383   */\n      dup1\n        /* \"#utility.yul\":12375:12387   */\n      revert\n        /* \"#utility.yul\":12329:12389   */\n    tag_380:\n        /* \"#utility.yul\":12279:12395   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12401:12538   */\n    tag_248:\n        /* \"#utility.yul\":12455:12460   */\n      0x00\n        /* \"#utility.yul\":12486:12492   */\n      dup2\n        /* \"#utility.yul\":12480:12493   */\n      mload\n        /* \"#utility.yul\":12471:12493   */\n      swap1\n      pop\n        /* \"#utility.yul\":12502:12532   */\n      tag_382\n        /* \"#utility.yul\":12526:12531   */\n      dup2\n        /* \"#utility.yul\":12502:12532   */\n      tag_247\n      jump\t// in\n    tag_382:\n        /* \"#utility.yul\":12401:12538   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12544:12889   */\n    tag_122:\n        /* \"#utility.yul\":12611:12617   */\n      0x00\n        /* \"#utility.yul\":12660:12662   */\n      0x20\n        /* \"#utility.yul\":12648:12657   */\n      dup3\n        /* \"#utility.yul\":12639:12646   */\n      dup5\n        /* \"#utility.yul\":12635:12658   */\n      sub\n        /* \"#utility.yul\":12631:12663   */\n      slt\n        /* \"#utility.yul\":12628:12747   */\n      iszero\n      tag_384\n      jumpi\n        /* \"#utility.yul\":12666:12745   */\n      tag_385\n      tag_227\n      jump\t// in\n    tag_385:\n        /* \"#utility.yul\":12628:12747   */\n    tag_384:\n        /* \"#utility.yul\":12786:12787   */\n      0x00\n        /* \"#utility.yul\":12811:12872   */\n      tag_386\n        /* \"#utility.yul\":12864:12871   */\n      dup5\n        /* \"#utility.yul\":12855:12861   */\n      dup3\n        /* \"#utility.yul\":12844:12853   */\n      dup6\n        /* \"#utility.yul\":12840:12862   */\n      add\n        /* \"#utility.yul\":12811:12872   */\n      tag_248\n      jump\t// in\n    tag_386:\n        /* \"#utility.yul\":12801:12872   */\n      swap2\n      pop\n        /* \"#utility.yul\":12757:12882   */\n      pop\n        /* \"#utility.yul\":12544:12889   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12895:13067   */\n    tag_249:\n        /* \"#utility.yul\":13035:13059   */\n      0x50726f7065727479206973206e6f74206c697374656400000000000000000000\n        /* \"#utility.yul\":13031:13032   */\n      0x00\n        /* \"#utility.yul\":13023:13029   */\n      dup3\n        /* \"#utility.yul\":13019:13033   */\n      add\n        /* \"#utility.yul\":13012:13060   */\n      mstore\n        /* \"#utility.yul\":12895:13067   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13073:13439   */\n    tag_250:\n        /* \"#utility.yul\":13215:13218   */\n      0x00\n        /* \"#utility.yul\":13236:13303   */\n      tag_389\n        /* \"#utility.yul\":13300:13302   */\n      0x16\n        /* \"#utility.yul\":13295:13298   */\n      dup4\n        /* \"#utility.yul\":13236:13303   */\n      tag_237\n      jump\t// in\n    tag_389:\n        /* \"#utility.yul\":13229:13303   */\n      swap2\n      pop\n        /* \"#utility.yul\":13312:13405   */\n      tag_390\n        /* \"#utility.yul\":13401:13404   */\n      dup3\n        /* \"#utility.yul\":13312:13405   */\n      tag_249\n      jump\t// in\n    tag_390:\n        /* \"#utility.yul\":13430:13432   */\n      0x20\n        /* \"#utility.yul\":13425:13428   */\n      dup3\n        /* \"#utility.yul\":13421:13433   */\n      add\n        /* \"#utility.yul\":13414:13433   */\n      swap1\n      pop\n        /* \"#utility.yul\":13073:13439   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13445:13864   */\n    tag_128:\n        /* \"#utility.yul\":13611:13615   */\n      0x00\n        /* \"#utility.yul\":13649:13651   */\n      0x20\n        /* \"#utility.yul\":13638:13647   */\n      dup3\n        /* \"#utility.yul\":13634:13652   */\n      add\n        /* \"#utility.yul\":13626:13652   */\n      swap1\n      pop\n        /* \"#utility.yul\":13698:13707   */\n      dup2\n        /* \"#utility.yul\":13692:13696   */\n      dup2\n        /* \"#utility.yul\":13688:13708   */\n      sub\n        /* \"#utility.yul\":13684:13685   */\n      0x00\n        /* \"#utility.yul\":13673:13682   */\n      dup4\n        /* \"#utility.yul\":13669:13686   */\n      add\n        /* \"#utility.yul\":13662:13709   */\n      mstore\n        /* \"#utility.yul\":13726:13857   */\n      tag_392\n        /* \"#utility.yul\":13852:13856   */\n      dup2\n        /* \"#utility.yul\":13726:13857   */\n      tag_250\n      jump\t// in\n    tag_392:\n        /* \"#utility.yul\":13718:13857   */\n      swap1\n      pop\n        /* \"#utility.yul\":13445:13864   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13870:14047   */\n    tag_251:\n        /* \"#utility.yul\":14010:14039   */\n      0x4e6f7420656e6f7567682073686172657320617661696c61626c650000000000\n        /* \"#utility.yul\":14006:14007   */\n      0x00\n        /* \"#utility.yul\":13998:14004   */\n      dup3\n        /* \"#utility.yul\":13994:14008   */\n      add\n        /* \"#utility.yul\":13987:14040   */\n      mstore\n        /* \"#utility.yul\":13870:14047   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14053:14419   */\n    tag_252:\n        /* \"#utility.yul\":14195:14198   */\n      0x00\n        /* \"#utility.yul\":14216:14283   */\n      tag_395\n        /* \"#utility.yul\":14280:14282   */\n      0x1b\n        /* \"#utility.yul\":14275:14278   */\n      dup4\n        /* \"#utility.yul\":14216:14283   */\n      tag_237\n      jump\t// in\n    tag_395:\n        /* \"#utility.yul\":14209:14283   */\n      swap2\n      pop\n        /* \"#utility.yul\":14292:14385   */\n      tag_396\n        /* \"#utility.yul\":14381:14384   */\n      dup3\n        /* \"#utility.yul\":14292:14385   */\n      tag_251\n      jump\t// in\n    tag_396:\n        /* \"#utility.yul\":14410:14412   */\n      0x20\n        /* \"#utility.yul\":14405:14408   */\n      dup3\n        /* \"#utility.yul\":14401:14413   */\n      add\n        /* \"#utility.yul\":14394:14413   */\n      swap1\n      pop\n        /* \"#utility.yul\":14053:14419   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14425:14844   */\n    tag_131:\n        /* \"#utility.yul\":14591:14595   */\n      0x00\n        /* \"#utility.yul\":14629:14631   */\n      0x20\n        /* \"#utility.yul\":14618:14627   */\n      dup3\n        /* \"#utility.yul\":14614:14632   */\n      add\n        /* \"#utility.yul\":14606:14632   */\n      swap1\n      pop\n        /* \"#utility.yul\":14678:14687   */\n      dup2\n        /* \"#utility.yul\":14672:14676   */\n      dup2\n        /* \"#utility.yul\":14668:14688   */\n      sub\n        /* \"#utility.yul\":14664:14665   */\n      0x00\n        /* \"#utility.yul\":14653:14662   */\n      dup4\n        /* \"#utility.yul\":14649:14666   */\n      add\n        /* \"#utility.yul\":14642:14689   */\n      mstore\n        /* \"#utility.yul\":14706:14837   */\n      tag_398\n        /* \"#utility.yul\":14832:14836   */\n      dup2\n        /* \"#utility.yul\":14706:14837   */\n      tag_252\n      jump\t// in\n    tag_398:\n        /* \"#utility.yul\":14698:14837   */\n      swap1\n      pop\n        /* \"#utility.yul\":14425:14844   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14850:15073   */\n    tag_253:\n        /* \"#utility.yul\":14990:15024   */\n      0x53686172657320746f20627579206d7573742062652067726561746572207468\n        /* \"#utility.yul\":14986:14987   */\n      0x00\n        /* \"#utility.yul\":14978:14984   */\n      dup3\n        /* \"#utility.yul\":14974:14988   */\n      add\n        /* \"#utility.yul\":14967:15025   */\n      mstore\n        /* \"#utility.yul\":15059:15065   */\n      0x616e203000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":15054:15056   */\n      0x20\n        /* \"#utility.yul\":15046:15052   */\n      dup3\n        /* \"#utility.yul\":15042:15057   */\n      add\n        /* \"#utility.yul\":15035:15066   */\n      mstore\n        /* \"#utility.yul\":14850:15073   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15079:15445   */\n    tag_254:\n        /* \"#utility.yul\":15221:15224   */\n      0x00\n        /* \"#utility.yul\":15242:15309   */\n      tag_401\n        /* \"#utility.yul\":15306:15308   */\n      0x24\n        /* \"#utility.yul\":15301:15304   */\n      dup4\n        /* \"#utility.yul\":15242:15309   */\n      tag_237\n      jump\t// in\n    tag_401:\n        /* \"#utility.yul\":15235:15309   */\n      swap2\n      pop\n        /* \"#utility.yul\":15318:15411   */\n      tag_402\n        /* \"#utility.yul\":15407:15410   */\n      dup3\n        /* \"#utility.yul\":15318:15411   */\n      tag_253\n      jump\t// in\n    tag_402:\n        /* \"#utility.yul\":15436:15438   */\n      0x40\n        /* \"#utility.yul\":15431:15434   */\n      dup3\n        /* \"#utility.yul\":15427:15439   */\n      add\n        /* \"#utility.yul\":15420:15439   */\n      swap1\n      pop\n        /* \"#utility.yul\":15079:15445   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15451:15870   */\n    tag_134:\n        /* \"#utility.yul\":15617:15621   */\n      0x00\n        /* \"#utility.yul\":15655:15657   */\n      0x20\n        /* \"#utility.yul\":15644:15653   */\n      dup3\n        /* \"#utility.yul\":15640:15658   */\n      add\n        /* \"#utility.yul\":15632:15658   */\n      swap1\n      pop\n        /* \"#utility.yul\":15704:15713   */\n      dup2\n        /* \"#utility.yul\":15698:15702   */\n      dup2\n        /* \"#utility.yul\":15694:15714   */\n      sub\n        /* \"#utility.yul\":15690:15691   */\n      0x00\n        /* \"#utility.yul\":15679:15688   */\n      dup4\n        /* \"#utility.yul\":15675:15692   */\n      add\n        /* \"#utility.yul\":15668:15715   */\n      mstore\n        /* \"#utility.yul\":15732:15863   */\n      tag_404\n        /* \"#utility.yul\":15858:15862   */\n      dup2\n        /* \"#utility.yul\":15732:15863   */\n      tag_254\n      jump\t// in\n    tag_404:\n        /* \"#utility.yul\":15724:15863   */\n      swap1\n      pop\n        /* \"#utility.yul\":15451:15870   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15876:16286   */\n    tag_136:\n        /* \"#utility.yul\":15916:15923   */\n      0x00\n        /* \"#utility.yul\":15939:15959   */\n      tag_406\n        /* \"#utility.yul\":15957:15958   */\n      dup3\n        /* \"#utility.yul\":15939:15959   */\n      tag_222\n      jump\t// in\n    tag_406:\n        /* \"#utility.yul\":15934:15959   */\n      swap2\n      pop\n        /* \"#utility.yul\":15973:15993   */\n      tag_407\n        /* \"#utility.yul\":15991:15992   */\n      dup4\n        /* \"#utility.yul\":15973:15993   */\n      tag_222\n      jump\t// in\n    tag_407:\n        /* \"#utility.yul\":15968:15993   */\n      swap3\n      pop\n        /* \"#utility.yul\":16028:16029   */\n      dup3\n        /* \"#utility.yul\":16025:16026   */\n      dup3\n        /* \"#utility.yul\":16021:16030   */\n      mul\n        /* \"#utility.yul\":16050:16080   */\n      tag_408\n        /* \"#utility.yul\":16068:16079   */\n      dup2\n        /* \"#utility.yul\":16050:16080   */\n      tag_222\n      jump\t// in\n    tag_408:\n        /* \"#utility.yul\":16039:16080   */\n      swap2\n      pop\n        /* \"#utility.yul\":16229:16230   */\n      dup3\n        /* \"#utility.yul\":16220:16227   */\n      dup3\n        /* \"#utility.yul\":16216:16231   */\n      div\n        /* \"#utility.yul\":16213:16214   */\n      dup5\n        /* \"#utility.yul\":16210:16232   */\n      eq\n        /* \"#utility.yul\":16190:16191   */\n      dup4\n        /* \"#utility.yul\":16183:16192   */\n      iszero\n        /* \"#utility.yul\":16163:16246   */\n      or\n        /* \"#utility.yul\":16140:16279   */\n      tag_409\n      jumpi\n        /* \"#utility.yul\":16259:16277   */\n      tag_410\n      tag_242\n      jump\t// in\n    tag_410:\n        /* \"#utility.yul\":16140:16279   */\n    tag_409:\n        /* \"#utility.yul\":15924:16286   */\n      pop\n        /* \"#utility.yul\":15876:16286   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16292:16472   */\n    tag_255:\n        /* \"#utility.yul\":16340:16417   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":16337:16338   */\n      0x00\n        /* \"#utility.yul\":16330:16418   */\n      mstore\n        /* \"#utility.yul\":16437:16441   */\n      0x12\n        /* \"#utility.yul\":16434:16435   */\n      0x04\n        /* \"#utility.yul\":16427:16442   */\n      mstore\n        /* \"#utility.yul\":16461:16465   */\n      0x24\n        /* \"#utility.yul\":16458:16459   */\n      0x00\n        /* \"#utility.yul\":16451:16466   */\n      revert\n        /* \"#utility.yul\":16478:16663   */\n    tag_138:\n        /* \"#utility.yul\":16518:16519   */\n      0x00\n        /* \"#utility.yul\":16535:16555   */\n      tag_413\n        /* \"#utility.yul\":16553:16554   */\n      dup3\n        /* \"#utility.yul\":16535:16555   */\n      tag_222\n      jump\t// in\n    tag_413:\n        /* \"#utility.yul\":16530:16555   */\n      swap2\n      pop\n        /* \"#utility.yul\":16569:16589   */\n      tag_414\n        /* \"#utility.yul\":16587:16588   */\n      dup4\n        /* \"#utility.yul\":16569:16589   */\n      tag_222\n      jump\t// in\n    tag_414:\n        /* \"#utility.yul\":16564:16589   */\n      swap3\n      pop\n        /* \"#utility.yul\":16608:16609   */\n      dup3\n        /* \"#utility.yul\":16598:16633   */\n      tag_415\n      jumpi\n        /* \"#utility.yul\":16613:16631   */\n      tag_416\n      tag_255\n      jump\t// in\n    tag_416:\n        /* \"#utility.yul\":16598:16633   */\n    tag_415:\n        /* \"#utility.yul\":16655:16656   */\n      dup3\n        /* \"#utility.yul\":16652:16653   */\n      dup3\n        /* \"#utility.yul\":16648:16657   */\n      div\n        /* \"#utility.yul\":16643:16657   */\n      swap1\n      pop\n        /* \"#utility.yul\":16478:16663   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16669:16863   */\n    tag_142:\n        /* \"#utility.yul\":16709:16713   */\n      0x00\n        /* \"#utility.yul\":16729:16749   */\n      tag_418\n        /* \"#utility.yul\":16747:16748   */\n      dup3\n        /* \"#utility.yul\":16729:16749   */\n      tag_222\n      jump\t// in\n    tag_418:\n        /* \"#utility.yul\":16724:16749   */\n      swap2\n      pop\n        /* \"#utility.yul\":16763:16783   */\n      tag_419\n        /* \"#utility.yul\":16781:16782   */\n      dup4\n        /* \"#utility.yul\":16763:16783   */\n      tag_222\n      jump\t// in\n    tag_419:\n        /* \"#utility.yul\":16758:16783   */\n      swap3\n      pop\n        /* \"#utility.yul\":16807:16808   */\n      dup3\n        /* \"#utility.yul\":16804:16805   */\n      dup3\n        /* \"#utility.yul\":16800:16809   */\n      sub\n        /* \"#utility.yul\":16792:16809   */\n      swap1\n      pop\n        /* \"#utility.yul\":16831:16832   */\n      dup2\n        /* \"#utility.yul\":16825:16829   */\n      dup2\n        /* \"#utility.yul\":16822:16833   */\n      gt\n        /* \"#utility.yul\":16819:16856   */\n      iszero\n      tag_420\n      jumpi\n        /* \"#utility.yul\":16836:16854   */\n      tag_421\n      tag_242\n      jump\t// in\n    tag_421:\n        /* \"#utility.yul\":16819:16856   */\n    tag_420:\n        /* \"#utility.yul\":16669:16863   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16869:17201   */\n    tag_175:\n        /* \"#utility.yul\":16990:16994   */\n      0x00\n        /* \"#utility.yul\":17028:17030   */\n      0x40\n        /* \"#utility.yul\":17017:17026   */\n      dup3\n        /* \"#utility.yul\":17013:17031   */\n      add\n        /* \"#utility.yul\":17005:17031   */\n      swap1\n      pop\n        /* \"#utility.yul\":17041:17112   */\n      tag_423\n        /* \"#utility.yul\":17109:17110   */\n      0x00\n        /* \"#utility.yul\":17098:17107   */\n      dup4\n        /* \"#utility.yul\":17094:17111   */\n      add\n        /* \"#utility.yul\":17085:17091   */\n      dup6\n        /* \"#utility.yul\":17041:17112   */\n      tag_234\n      jump\t// in\n    tag_423:\n        /* \"#utility.yul\":17122:17194   */\n      tag_424\n        /* \"#utility.yul\":17190:17192   */\n      0x20\n        /* \"#utility.yul\":17179:17188   */\n      dup4\n        /* \"#utility.yul\":17175:17193   */\n      add\n        /* \"#utility.yul\":17166:17172   */\n      dup5\n        /* \"#utility.yul\":17122:17194   */\n      tag_223\n      jump\t// in\n    tag_424:\n        /* \"#utility.yul\":16869:17201   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17207:17649   */\n    tag_180:\n        /* \"#utility.yul\":17356:17360   */\n      0x00\n        /* \"#utility.yul\":17394:17396   */\n      0x60\n        /* \"#utility.yul\":17383:17392   */\n      dup3\n        /* \"#utility.yul\":17379:17397   */\n      add\n        /* \"#utility.yul\":17371:17397   */\n      swap1\n      pop\n        /* \"#utility.yul\":17407:17478   */\n      tag_426\n        /* \"#utility.yul\":17475:17476   */\n      0x00\n        /* \"#utility.yul\":17464:17473   */\n      dup4\n        /* \"#utility.yul\":17460:17477   */\n      add\n        /* \"#utility.yul\":17451:17457   */\n      dup7\n        /* \"#utility.yul\":17407:17478   */\n      tag_234\n      jump\t// in\n    tag_426:\n        /* \"#utility.yul\":17488:17560   */\n      tag_427\n        /* \"#utility.yul\":17556:17558   */\n      0x20\n        /* \"#utility.yul\":17545:17554   */\n      dup4\n        /* \"#utility.yul\":17541:17559   */\n      add\n        /* \"#utility.yul\":17532:17538   */\n      dup6\n        /* \"#utility.yul\":17488:17560   */\n      tag_234\n      jump\t// in\n    tag_427:\n        /* \"#utility.yul\":17570:17642   */\n      tag_428\n        /* \"#utility.yul\":17638:17640   */\n      0x40\n        /* \"#utility.yul\":17627:17636   */\n      dup4\n        /* \"#utility.yul\":17623:17641   */\n      add\n        /* \"#utility.yul\":17614:17620   */\n      dup5\n        /* \"#utility.yul\":17570:17642   */\n      tag_223\n      jump\t// in\n    tag_428:\n        /* \"#utility.yul\":17207:17649   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17655:17753   */\n    tag_256:\n        /* \"#utility.yul\":17706:17712   */\n      0x00\n        /* \"#utility.yul\":17740:17745   */\n      dup2\n        /* \"#utility.yul\":17734:17746   */\n      mload\n        /* \"#utility.yul\":17724:17746   */\n      swap1\n      pop\n        /* \"#utility.yul\":17655:17753   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17759:17906   */\n    tag_257:\n        /* \"#utility.yul\":17860:17871   */\n      0x00\n        /* \"#utility.yul\":17897:17900   */\n      dup2\n        /* \"#utility.yul\":17882:17900   */\n      swap1\n      pop\n        /* \"#utility.yul\":17759:17906   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17912:18051   */\n    tag_258:\n        /* \"#utility.yul\":18001:18007   */\n      dup3\n        /* \"#utility.yul\":17996:17999   */\n      dup2\n        /* \"#utility.yul\":17991:17994   */\n      dup4\n        /* \"#utility.yul\":17985:18008   */\n      mcopy\n        /* \"#utility.yul\":18042:18043   */\n      0x00\n        /* \"#utility.yul\":18033:18039   */\n      dup4\n        /* \"#utility.yul\":18028:18031   */\n      dup4\n        /* \"#utility.yul\":18024:18040   */\n      add\n        /* \"#utility.yul\":18017:18044   */\n      mstore\n        /* \"#utility.yul\":17912:18051   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18057:18443   */\n    tag_259:\n        /* \"#utility.yul\":18161:18164   */\n      0x00\n        /* \"#utility.yul\":18189:18227   */\n      tag_433\n        /* \"#utility.yul\":18221:18226   */\n      dup3\n        /* \"#utility.yul\":18189:18227   */\n      tag_256\n      jump\t// in\n    tag_433:\n        /* \"#utility.yul\":18243:18331   */\n      tag_434\n        /* \"#utility.yul\":18324:18330   */\n      dup2\n        /* \"#utility.yul\":18319:18322   */\n      dup6\n        /* \"#utility.yul\":18243:18331   */\n      tag_257\n      jump\t// in\n    tag_434:\n        /* \"#utility.yul\":18236:18331   */\n      swap4\n      pop\n        /* \"#utility.yul\":18340:18405   */\n      tag_435\n        /* \"#utility.yul\":18398:18404   */\n      dup2\n        /* \"#utility.yul\":18393:18396   */\n      dup6\n        /* \"#utility.yul\":18386:18390   */\n      0x20\n        /* \"#utility.yul\":18379:18384   */\n      dup7\n        /* \"#utility.yul\":18375:18391   */\n      add\n        /* \"#utility.yul\":18340:18405   */\n      tag_258\n      jump\t// in\n    tag_435:\n        /* \"#utility.yul\":18430:18436   */\n      dup1\n        /* \"#utility.yul\":18425:18428   */\n      dup5\n        /* \"#utility.yul\":18421:18437   */\n      add\n        /* \"#utility.yul\":18414:18437   */\n      swap2\n      pop\n        /* \"#utility.yul\":18165:18443   */\n      pop\n        /* \"#utility.yul\":18057:18443   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18449:18720   */\n    tag_199:\n        /* \"#utility.yul\":18579:18582   */\n      0x00\n        /* \"#utility.yul\":18601:18694   */\n      tag_437\n        /* \"#utility.yul\":18690:18693   */\n      dup3\n        /* \"#utility.yul\":18681:18687   */\n      dup5\n        /* \"#utility.yul\":18601:18694   */\n      tag_259\n      jump\t// in\n    tag_437:\n        /* \"#utility.yul\":18594:18694   */\n      swap2\n      pop\n        /* \"#utility.yul\":18711:18714   */\n      dup2\n        /* \"#utility.yul\":18704:18714   */\n      swap1\n      pop\n        /* \"#utility.yul\":18449:18720   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220c5d1ec961e12beead9c1a38d4ef661ec8ca4601b532c67cafbfe4c75f41977d664736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_2102": {
									"entryPoint": null,
									"id": 2102,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_50": {
									"entryPoint": null,
									"id": 50,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_868": {
									"entryPoint": null,
									"id": 868,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 338,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_contract$_IAlvaraProtocol_$2020_fromMemory": {
									"entryPoint": 681,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_contract$_IERC20_$225_fromMemory": {
									"entryPoint": 622,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_contract$_IERC20_$225t_contract$_IAlvaraProtocol_$2020_fromMemory": {
									"entryPoint": 701,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 763,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 778,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 566,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_contract$_IAlvaraProtocol_$2020": {
									"entryPoint": 642,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_contract$_IERC20_$225": {
									"entryPoint": 583,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 535,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 531,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_contract$_IAlvaraProtocol_$2020": {
									"entryPoint": 659,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_contract$_IERC20_$225": {
									"entryPoint": 600,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:2454:9",
										"nodeType": "YulBlock",
										"src": "0:2454:9",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:9",
													"nodeType": "YulBlock",
													"src": "47:35:9",
													"statements": [
														{
															"nativeSrc": "57:19:9",
															"nodeType": "YulAssignment",
															"src": "57:19:9",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:9",
																		"nodeType": "YulLiteral",
																		"src": "73:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:9"
																},
																"nativeSrc": "67:9:9",
																"nodeType": "YulFunctionCall",
																"src": "67:9:9"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:9"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:9",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:9",
														"nodeType": "YulTypedName",
														"src": "40:6:9",
														"type": ""
													}
												],
												"src": "7:75:9"
											},
											{
												"body": {
													"nativeSrc": "177:28:9",
													"nodeType": "YulBlock",
													"src": "177:28:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:9",
																		"nodeType": "YulLiteral",
																		"src": "194:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:9",
																		"nodeType": "YulLiteral",
																		"src": "197:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:9"
																},
																"nativeSrc": "187:12:9",
																"nodeType": "YulFunctionCall",
																"src": "187:12:9"
															},
															"nativeSrc": "187:12:9",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:9"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:9",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:9"
											},
											{
												"body": {
													"nativeSrc": "300:28:9",
													"nodeType": "YulBlock",
													"src": "300:28:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:9",
																		"nodeType": "YulLiteral",
																		"src": "317:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:9",
																		"nodeType": "YulLiteral",
																		"src": "320:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:9"
																},
																"nativeSrc": "310:12:9",
																"nodeType": "YulFunctionCall",
																"src": "310:12:9"
															},
															"nativeSrc": "310:12:9",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:9"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:9",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:9"
											},
											{
												"body": {
													"nativeSrc": "379:81:9",
													"nodeType": "YulBlock",
													"src": "379:81:9",
													"statements": [
														{
															"nativeSrc": "389:65:9",
															"nodeType": "YulAssignment",
															"src": "389:65:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "404:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "411:42:9",
																		"nodeType": "YulLiteral",
																		"src": "411:42:9",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "400:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:9"
																},
																"nativeSrc": "400:54:9",
																"nodeType": "YulFunctionCall",
																"src": "400:54:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:9",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "334:126:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:9",
														"nodeType": "YulTypedName",
														"src": "361:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:9",
														"nodeType": "YulTypedName",
														"src": "371:7:9",
														"type": ""
													}
												],
												"src": "334:126:9"
											},
											{
												"body": {
													"nativeSrc": "511:51:9",
													"nodeType": "YulBlock",
													"src": "511:51:9",
													"statements": [
														{
															"nativeSrc": "521:35:9",
															"nodeType": "YulAssignment",
															"src": "521:35:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "550:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "532:17:9",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:9"
																},
																"nativeSrc": "532:24:9",
																"nodeType": "YulFunctionCall",
																"src": "532:24:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "521:7:9",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "466:96:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "493:5:9",
														"nodeType": "YulTypedName",
														"src": "493:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "503:7:9",
														"nodeType": "YulTypedName",
														"src": "503:7:9",
														"type": ""
													}
												],
												"src": "466:96:9"
											},
											{
												"body": {
													"nativeSrc": "627:51:9",
													"nodeType": "YulBlock",
													"src": "627:51:9",
													"statements": [
														{
															"nativeSrc": "637:35:9",
															"nodeType": "YulAssignment",
															"src": "637:35:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "666:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "666:5:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_address",
																	"nativeSrc": "648:17:9",
																	"nodeType": "YulIdentifier",
																	"src": "648:17:9"
																},
																"nativeSrc": "648:24:9",
																"nodeType": "YulFunctionCall",
																"src": "648:24:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "637:7:9",
																	"nodeType": "YulIdentifier",
																	"src": "637:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_contract$_IERC20_$225",
												"nativeSrc": "568:110:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "609:5:9",
														"nodeType": "YulTypedName",
														"src": "609:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "619:7:9",
														"nodeType": "YulTypedName",
														"src": "619:7:9",
														"type": ""
													}
												],
												"src": "568:110:9"
											},
											{
												"body": {
													"nativeSrc": "741:93:9",
													"nodeType": "YulBlock",
													"src": "741:93:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "812:16:9",
																"nodeType": "YulBlock",
																"src": "812:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "821:1:9",
																					"nodeType": "YulLiteral",
																					"src": "821:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "824:1:9",
																					"nodeType": "YulLiteral",
																					"src": "824:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "814:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "814:6:9"
																			},
																			"nativeSrc": "814:12:9",
																			"nodeType": "YulFunctionCall",
																			"src": "814:12:9"
																		},
																		"nativeSrc": "814:12:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "814:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "764:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "764:5:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "803:5:9",
																						"nodeType": "YulIdentifier",
																						"src": "803:5:9"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_contract$_IERC20_$225",
																					"nativeSrc": "771:31:9",
																					"nodeType": "YulIdentifier",
																					"src": "771:31:9"
																				},
																				"nativeSrc": "771:38:9",
																				"nodeType": "YulFunctionCall",
																				"src": "771:38:9"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "761:2:9",
																			"nodeType": "YulIdentifier",
																			"src": "761:2:9"
																		},
																		"nativeSrc": "761:49:9",
																		"nodeType": "YulFunctionCall",
																		"src": "761:49:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "754:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "754:6:9"
																},
																"nativeSrc": "754:57:9",
																"nodeType": "YulFunctionCall",
																"src": "754:57:9"
															},
															"nativeSrc": "751:77:9",
															"nodeType": "YulIf",
															"src": "751:77:9"
														}
													]
												},
												"name": "validator_revert_t_contract$_IERC20_$225",
												"nativeSrc": "684:150:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "734:5:9",
														"nodeType": "YulTypedName",
														"src": "734:5:9",
														"type": ""
													}
												],
												"src": "684:150:9"
											},
											{
												"body": {
													"nativeSrc": "917:94:9",
													"nodeType": "YulBlock",
													"src": "917:94:9",
													"statements": [
														{
															"nativeSrc": "927:22:9",
															"nodeType": "YulAssignment",
															"src": "927:22:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "942:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "942:6:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "936:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "936:5:9"
																},
																"nativeSrc": "936:13:9",
																"nodeType": "YulFunctionCall",
																"src": "936:13:9"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "927:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "927:5:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "999:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "999:5:9"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_contract$_IERC20_$225",
																	"nativeSrc": "958:40:9",
																	"nodeType": "YulIdentifier",
																	"src": "958:40:9"
																},
																"nativeSrc": "958:47:9",
																"nodeType": "YulFunctionCall",
																"src": "958:47:9"
															},
															"nativeSrc": "958:47:9",
															"nodeType": "YulExpressionStatement",
															"src": "958:47:9"
														}
													]
												},
												"name": "abi_decode_t_contract$_IERC20_$225_fromMemory",
												"nativeSrc": "840:171:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "895:6:9",
														"nodeType": "YulTypedName",
														"src": "895:6:9",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "903:3:9",
														"nodeType": "YulTypedName",
														"src": "903:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "911:5:9",
														"nodeType": "YulTypedName",
														"src": "911:5:9",
														"type": ""
													}
												],
												"src": "840:171:9"
											},
											{
												"body": {
													"nativeSrc": "1086:51:9",
													"nodeType": "YulBlock",
													"src": "1086:51:9",
													"statements": [
														{
															"nativeSrc": "1096:35:9",
															"nodeType": "YulAssignment",
															"src": "1096:35:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1125:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "1125:5:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_address",
																	"nativeSrc": "1107:17:9",
																	"nodeType": "YulIdentifier",
																	"src": "1107:17:9"
																},
																"nativeSrc": "1107:24:9",
																"nodeType": "YulFunctionCall",
																"src": "1107:24:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1096:7:9",
																	"nodeType": "YulIdentifier",
																	"src": "1096:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_contract$_IAlvaraProtocol_$2020",
												"nativeSrc": "1017:120:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1068:5:9",
														"nodeType": "YulTypedName",
														"src": "1068:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1078:7:9",
														"nodeType": "YulTypedName",
														"src": "1078:7:9",
														"type": ""
													}
												],
												"src": "1017:120:9"
											},
											{
												"body": {
													"nativeSrc": "1210:103:9",
													"nodeType": "YulBlock",
													"src": "1210:103:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "1291:16:9",
																"nodeType": "YulBlock",
																"src": "1291:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1300:1:9",
																					"nodeType": "YulLiteral",
																					"src": "1300:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1303:1:9",
																					"nodeType": "YulLiteral",
																					"src": "1303:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1293:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "1293:6:9"
																			},
																			"nativeSrc": "1293:12:9",
																			"nodeType": "YulFunctionCall",
																			"src": "1293:12:9"
																		},
																		"nativeSrc": "1293:12:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "1293:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1233:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "1233:5:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1282:5:9",
																						"nodeType": "YulIdentifier",
																						"src": "1282:5:9"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_contract$_IAlvaraProtocol_$2020",
																					"nativeSrc": "1240:41:9",
																					"nodeType": "YulIdentifier",
																					"src": "1240:41:9"
																				},
																				"nativeSrc": "1240:48:9",
																				"nodeType": "YulFunctionCall",
																				"src": "1240:48:9"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1230:2:9",
																			"nodeType": "YulIdentifier",
																			"src": "1230:2:9"
																		},
																		"nativeSrc": "1230:59:9",
																		"nodeType": "YulFunctionCall",
																		"src": "1230:59:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1223:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "1223:6:9"
																},
																"nativeSrc": "1223:67:9",
																"nodeType": "YulFunctionCall",
																"src": "1223:67:9"
															},
															"nativeSrc": "1220:87:9",
															"nodeType": "YulIf",
															"src": "1220:87:9"
														}
													]
												},
												"name": "validator_revert_t_contract$_IAlvaraProtocol_$2020",
												"nativeSrc": "1143:170:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1203:5:9",
														"nodeType": "YulTypedName",
														"src": "1203:5:9",
														"type": ""
													}
												],
												"src": "1143:170:9"
											},
											{
												"body": {
													"nativeSrc": "1406:104:9",
													"nodeType": "YulBlock",
													"src": "1406:104:9",
													"statements": [
														{
															"nativeSrc": "1416:22:9",
															"nodeType": "YulAssignment",
															"src": "1416:22:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1431:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "1431:6:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1425:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "1425:5:9"
																},
																"nativeSrc": "1425:13:9",
																"nodeType": "YulFunctionCall",
																"src": "1425:13:9"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1416:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "1416:5:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1498:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "1498:5:9"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_contract$_IAlvaraProtocol_$2020",
																	"nativeSrc": "1447:50:9",
																	"nodeType": "YulIdentifier",
																	"src": "1447:50:9"
																},
																"nativeSrc": "1447:57:9",
																"nodeType": "YulFunctionCall",
																"src": "1447:57:9"
															},
															"nativeSrc": "1447:57:9",
															"nodeType": "YulExpressionStatement",
															"src": "1447:57:9"
														}
													]
												},
												"name": "abi_decode_t_contract$_IAlvaraProtocol_$2020_fromMemory",
												"nativeSrc": "1319:191:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1384:6:9",
														"nodeType": "YulTypedName",
														"src": "1384:6:9",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1392:3:9",
														"nodeType": "YulTypedName",
														"src": "1392:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1400:5:9",
														"nodeType": "YulTypedName",
														"src": "1400:5:9",
														"type": ""
													}
												],
												"src": "1319:191:9"
											},
											{
												"body": {
													"nativeSrc": "1648:451:9",
													"nodeType": "YulBlock",
													"src": "1648:451:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "1694:83:9",
																"nodeType": "YulBlock",
																"src": "1694:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "1696:77:9",
																				"nodeType": "YulIdentifier",
																				"src": "1696:77:9"
																			},
																			"nativeSrc": "1696:79:9",
																			"nodeType": "YulFunctionCall",
																			"src": "1696:79:9"
																		},
																		"nativeSrc": "1696:79:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "1696:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1669:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "1669:7:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1678:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "1678:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1665:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "1665:3:9"
																		},
																		"nativeSrc": "1665:23:9",
																		"nodeType": "YulFunctionCall",
																		"src": "1665:23:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1690:2:9",
																		"nodeType": "YulLiteral",
																		"src": "1690:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1661:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "1661:3:9"
																},
																"nativeSrc": "1661:32:9",
																"nodeType": "YulFunctionCall",
																"src": "1661:32:9"
															},
															"nativeSrc": "1658:119:9",
															"nodeType": "YulIf",
															"src": "1658:119:9"
														},
														{
															"nativeSrc": "1787:142:9",
															"nodeType": "YulBlock",
															"src": "1787:142:9",
															"statements": [
																{
																	"nativeSrc": "1802:15:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1802:15:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1816:1:9",
																		"nodeType": "YulLiteral",
																		"src": "1816:1:9",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1806:6:9",
																			"nodeType": "YulTypedName",
																			"src": "1806:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1831:88:9",
																	"nodeType": "YulAssignment",
																	"src": "1831:88:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1891:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "1891:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1902:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "1902:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1887:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "1887:3:9"
																				},
																				"nativeSrc": "1887:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "1887:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1911:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "1911:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_contract$_IERC20_$225_fromMemory",
																			"nativeSrc": "1841:45:9",
																			"nodeType": "YulIdentifier",
																			"src": "1841:45:9"
																		},
																		"nativeSrc": "1841:78:9",
																		"nodeType": "YulFunctionCall",
																		"src": "1841:78:9"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1831:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "1831:6:9"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "1939:153:9",
															"nodeType": "YulBlock",
															"src": "1939:153:9",
															"statements": [
																{
																	"nativeSrc": "1954:16:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1954:16:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1968:2:9",
																		"nodeType": "YulLiteral",
																		"src": "1968:2:9",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1958:6:9",
																			"nodeType": "YulTypedName",
																			"src": "1958:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1984:98:9",
																	"nodeType": "YulAssignment",
																	"src": "1984:98:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2054:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "2054:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2065:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "2065:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2050:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "2050:3:9"
																				},
																				"nativeSrc": "2050:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "2050:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2074:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "2074:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_contract$_IAlvaraProtocol_$2020_fromMemory",
																			"nativeSrc": "1994:55:9",
																			"nodeType": "YulIdentifier",
																			"src": "1994:55:9"
																		},
																		"nativeSrc": "1994:88:9",
																		"nodeType": "YulFunctionCall",
																		"src": "1994:88:9"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "1984:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "1984:6:9"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_contract$_IERC20_$225t_contract$_IAlvaraProtocol_$2020_fromMemory",
												"nativeSrc": "1516:583:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1610:9:9",
														"nodeType": "YulTypedName",
														"src": "1610:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1621:7:9",
														"nodeType": "YulTypedName",
														"src": "1621:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1633:6:9",
														"nodeType": "YulTypedName",
														"src": "1633:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1641:6:9",
														"nodeType": "YulTypedName",
														"src": "1641:6:9",
														"type": ""
													}
												],
												"src": "1516:583:9"
											},
											{
												"body": {
													"nativeSrc": "2170:53:9",
													"nodeType": "YulBlock",
													"src": "2170:53:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2187:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "2187:3:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2210:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "2210:5:9"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "2192:17:9",
																			"nodeType": "YulIdentifier",
																			"src": "2192:17:9"
																		},
																		"nativeSrc": "2192:24:9",
																		"nodeType": "YulFunctionCall",
																		"src": "2192:24:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2180:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "2180:6:9"
																},
																"nativeSrc": "2180:37:9",
																"nodeType": "YulFunctionCall",
																"src": "2180:37:9"
															},
															"nativeSrc": "2180:37:9",
															"nodeType": "YulExpressionStatement",
															"src": "2180:37:9"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "2105:118:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2158:5:9",
														"nodeType": "YulTypedName",
														"src": "2158:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "2165:3:9",
														"nodeType": "YulTypedName",
														"src": "2165:3:9",
														"type": ""
													}
												],
												"src": "2105:118:9"
											},
											{
												"body": {
													"nativeSrc": "2327:124:9",
													"nodeType": "YulBlock",
													"src": "2327:124:9",
													"statements": [
														{
															"nativeSrc": "2337:26:9",
															"nodeType": "YulAssignment",
															"src": "2337:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2349:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "2349:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2360:2:9",
																		"nodeType": "YulLiteral",
																		"src": "2360:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2345:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "2345:3:9"
																},
																"nativeSrc": "2345:18:9",
																"nodeType": "YulFunctionCall",
																"src": "2345:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2337:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "2337:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "2417:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "2417:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2430:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "2430:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2441:1:9",
																				"nodeType": "YulLiteral",
																				"src": "2441:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2426:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "2426:3:9"
																		},
																		"nativeSrc": "2426:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "2426:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "2373:43:9",
																	"nodeType": "YulIdentifier",
																	"src": "2373:43:9"
																},
																"nativeSrc": "2373:71:9",
																"nodeType": "YulFunctionCall",
																"src": "2373:71:9"
															},
															"nativeSrc": "2373:71:9",
															"nodeType": "YulExpressionStatement",
															"src": "2373:71:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "2229:222:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2299:9:9",
														"nodeType": "YulTypedName",
														"src": "2299:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2311:6:9",
														"nodeType": "YulTypedName",
														"src": "2311:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2322:4:9",
														"nodeType": "YulTypedName",
														"src": "2322:4:9",
														"type": ""
													}
												],
												"src": "2229:222:9"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_contract$_IERC20_$225(value) -> cleaned {\n        cleaned := cleanup_t_address(value)\n    }\n\n    function validator_revert_t_contract$_IERC20_$225(value) {\n        if iszero(eq(value, cleanup_t_contract$_IERC20_$225(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_contract$_IERC20_$225_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_contract$_IERC20_$225(value)\n    }\n\n    function cleanup_t_contract$_IAlvaraProtocol_$2020(value) -> cleaned {\n        cleaned := cleanup_t_address(value)\n    }\n\n    function validator_revert_t_contract$_IAlvaraProtocol_$2020(value) {\n        if iszero(eq(value, cleanup_t_contract$_IAlvaraProtocol_$2020(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_contract$_IAlvaraProtocol_$2020_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_contract$_IAlvaraProtocol_$2020(value)\n    }\n\n    function abi_decode_tuple_t_contract$_IERC20_$225t_contract$_IAlvaraProtocol_$2020_fromMemory(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_contract$_IERC20_$225_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_contract$_IAlvaraProtocol_$2020_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n",
									"id": 9,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b50604051611d9f380380611d9f833981810160405281019061003191906102bd565b335f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036100a2575f6040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401610099919061030a565b60405180910390fd5b6100b18161015260201b60201c565b505f8060146101000a81548160ff0219169083151502179055508160035f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508060045f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050610323565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050815f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61024082610217565b9050919050565b5f61025182610236565b9050919050565b61026181610247565b811461026b575f80fd5b50565b5f8151905061027c81610258565b92915050565b5f61028c82610236565b9050919050565b61029c81610282565b81146102a6575f80fd5b50565b5f815190506102b781610293565b92915050565b5f80604083850312156102d3576102d2610213565b5b5f6102e08582860161026e565b92505060206102f1858286016102a9565b9150509250929050565b61030481610236565b82525050565b5f60208201905061031d5f8301846102fb565b92915050565b611a6f806103305f395ff3fe608060405234801561000f575f80fd5b50600436106100e8575f3560e01c80638da5cb5b1161008a578063baf52c7711610064578063baf52c77146101d8578063d2bcdc6014610208578063f2fde38b14610224578063f7b1080814610240576100e8565b80638da5cb5b14610180578063b41b936d1461019e578063b4d346be146101bc576100e8565b80635c975abb116100c65780635c975abb14610132578063715018a6146101505780638456cb591461015a57806386aa217e14610164576100e8565b80633013ce29146100ec57806339500f341461010a5780633f4ba83a14610128575b5f80fd5b6100f4610275565b604051610101919061115d565b60405180910390f35b61011261029a565b60405161011f919061118e565b60405180910390f35b6101306102a0565b005b61013a6102b2565b60405161014791906111c1565b60405180910390f35b6101586102c7565b005b6101626102da565b005b61017e60048036038101906101799190611243565b6102ec565b005b610188610522565b60405161019591906112a2565b60405180910390f35b6101a6610549565b6040516101b391906112db565b60405180910390f35b6101d660048036038101906101d191906112f4565b61056e565b005b6101f260048036038101906101ed9190611332565b61078d565b6040516101ff91906111c1565b60405180910390f35b610222600480360381019061021d919061135d565b61082e565b005b61023e6004803603810190610239919061139b565b610a04565b005b61025a60048036038101906102559190611332565b610a88565b60405161026c969594939291906113c6565b60405180910390f35b60035f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60025481565b6102a8610b0b565b6102b0610b92565b565b5f8060149054906101000a900460ff16905090565b6102cf610b0b565b6102d85f610bf3565b565b6102e2610b0b565b6102ea610cb4565b565b6102f4610d16565b5f8311610336576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161032d9061147f565b60405180910390fd5b5f8211610378576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161036f9061150d565b60405180910390fd5b6040518060c001604052803373ffffffffffffffffffffffffffffffffffffffff1681526020018481526020018381526020018381526020018273ffffffffffffffffffffffffffffffffffffffff1681526020016001151581525060015f60025481526020019081526020015f205f820151815f015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506020820151816001015560408201518160020155606082015181600301556080820151816004015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060a08201518160040160146101000a81548160ff0219169083151502179055509050503373ffffffffffffffffffffffffffffffffffffffff167f2c479e2e638a3a97a6f194336f17f298b4ec7145f37c7d35ff6346f9cd4a003060025485856040516104fe9392919061152b565b60405180910390a260025f8154809291906105189061158d565b9190505550505050565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60045f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b610576610d16565b5f60015f8481526020019081526020015f2090503373ffffffffffffffffffffffffffffffffffffffff16815f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461061a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161061190611644565b60405180910390fd5b5f816003015414610660576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610657906116ac565b60405180910390fd5b5f8160040160146101000a81548160ff02191690831515021790555081815f015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505f81600101549050610733825f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff168260035f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16610d579092919063ffffffff16565b8273ffffffffffffffffffffffffffffffffffffffff167ff17a6666765db393a6218bb324c4de5cc60c9ee3b981bd102ba416effc13b89585846002015460405161077f9291906116ca565b60405180910390a250505050565b5f60045f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16637485cdc2836040518263ffffffff1660e01b81526004016107e8919061118e565b602060405180830381865afa158015610803573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610827919061171b565b9050919050565b610836610d16565b5f60015f8481526020019081526020015f2090508060040160149054906101000a900460ff1661089b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161089290611790565b60405180910390fd5b81816003015410156108e2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108d9906117f8565b60405180910390fd5b5f8211610924576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161091b90611886565b60405180910390fd5b5f816002015483836001015461093a91906118a4565b6109449190611912565b905061099433308360035f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16610dd6909392919063ffffffff16565b82826003015f8282546109a79190611942565b925050819055503373ffffffffffffffffffffffffffffffffffffffff167fd4a7a37d339805413b4085e0f8e0932dfb0a4f84f08f98a6e53673b5ee8eee1585856040516109f69291906116ca565b60405180910390a250505050565b610a0c610b0b565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610a7c575f6040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401610a7391906112a2565b60405180910390fd5b610a8581610bf3565b50565b6001602052805f5260405f205f91509050805f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690806001015490806002015490806003015490806004015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060040160149054906101000a900460ff16905086565b610b13610e58565b73ffffffffffffffffffffffffffffffffffffffff16610b31610522565b73ffffffffffffffffffffffffffffffffffffffff1614610b9057610b54610e58565b6040517f118cdaa7000000000000000000000000000000000000000000000000000000008152600401610b8791906112a2565b60405180910390fd5b565b610b9a610e5f565b5f8060146101000a81548160ff0219169083151502179055507f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa610bdc610e58565b604051610be991906112a2565b60405180910390a1565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050815f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b610cbc610d16565b60015f60146101000a81548160ff0219169083151502179055507f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258610cff610e58565b604051610d0c91906112a2565b60405180910390a1565b610d1e6102b2565b15610d55576040517fd93c066500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b610dd1838473ffffffffffffffffffffffffffffffffffffffff1663a9059cbb8585604051602401610d8a929190611975565b604051602081830303815290604052915060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050610e9f565b505050565b610e52848573ffffffffffffffffffffffffffffffffffffffff166323b872dd868686604051602401610e0b9392919061199c565b604051602081830303815290604052915060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050610e9f565b50505050565b5f33905090565b610e676102b2565b610e9d576040517f8dfc202b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b5f610ec9828473ffffffffffffffffffffffffffffffffffffffff16610f3490919063ffffffff16565b90505f815114158015610eed575080806020019051810190610eeb919061171b565b155b15610f2f57826040517f5274afe7000000000000000000000000000000000000000000000000000000008152600401610f2691906112a2565b60405180910390fd5b505050565b6060610f4183835f610f49565b905092915050565b606081471015610f9057306040517fcd786059000000000000000000000000000000000000000000000000000000008152600401610f8791906112a2565b60405180910390fd5b5f808573ffffffffffffffffffffffffffffffffffffffff168486604051610fb89190611a23565b5f6040518083038185875af1925050503d805f8114610ff2576040519150601f19603f3d011682016040523d82523d5f602084013e610ff7565b606091505b5091509150611007868383611012565b925050509392505050565b606082611027576110228261109f565b611097565b5f825114801561104d57505f8473ffffffffffffffffffffffffffffffffffffffff163b145b1561108f57836040517f9996b31500000000000000000000000000000000000000000000000000000000815260040161108691906112a2565b60405180910390fd5b819050611098565b5b9392505050565b5f815111156110b15780518082602001fd5b6040517f1425ea4200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f819050919050565b5f61112561112061111b846110e3565b611102565b6110e3565b9050919050565b5f6111368261110b565b9050919050565b5f6111478261112c565b9050919050565b6111578161113d565b82525050565b5f6020820190506111705f83018461114e565b92915050565b5f819050919050565b61118881611176565b82525050565b5f6020820190506111a15f83018461117f565b92915050565b5f8115159050919050565b6111bb816111a7565b82525050565b5f6020820190506111d45f8301846111b2565b92915050565b5f80fd5b6111e781611176565b81146111f1575f80fd5b50565b5f81359050611202816111de565b92915050565b5f611212826110e3565b9050919050565b61122281611208565b811461122c575f80fd5b50565b5f8135905061123d81611219565b92915050565b5f805f6060848603121561125a576112596111da565b5b5f611267868287016111f4565b9350506020611278868287016111f4565b92505060406112898682870161122f565b9150509250925092565b61129c81611208565b82525050565b5f6020820190506112b55f830184611293565b92915050565b5f6112c58261112c565b9050919050565b6112d5816112bb565b82525050565b5f6020820190506112ee5f8301846112cc565b92915050565b5f806040838503121561130a576113096111da565b5b5f611317858286016111f4565b92505060206113288582860161122f565b9150509250929050565b5f60208284031215611347576113466111da565b5b5f611354848285016111f4565b91505092915050565b5f8060408385031215611373576113726111da565b5b5f611380858286016111f4565b9250506020611391858286016111f4565b9150509250929050565b5f602082840312156113b0576113af6111da565b5b5f6113bd8482850161122f565b91505092915050565b5f60c0820190506113d95f830189611293565b6113e6602083018861117f565b6113f3604083018761117f565b611400606083018661117f565b61140d6080830185611293565b61141a60a08301846111b2565b979650505050505050565b5f82825260208201905092915050565b7f5072696365206d7573742062652067726561746572207468616e2030000000005f82015250565b5f611469601c83611425565b915061147482611435565b602082019050919050565b5f6020820190508181035f8301526114968161145d565b9050919050565b7f546f74616c20736861726573206d7573742062652067726561746572207468615f8201527f6e20300000000000000000000000000000000000000000000000000000000000602082015250565b5f6114f7602383611425565b91506115028261149d565b604082019050919050565b5f6020820190508181035f830152611524816114eb565b9050919050565b5f60608201905061153e5f83018661117f565b61154b602083018561117f565b611558604083018461117f565b949350505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f61159782611176565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036115c9576115c8611560565b5b600182019050919050565b7f4f6e6c7920746865206f776e65722063616e2066696e616c697a6520746865205f8201527f73616c6500000000000000000000000000000000000000000000000000000000602082015250565b5f61162e602483611425565b9150611639826115d4565b604082019050919050565b5f6020820190508181035f83015261165b81611622565b9050919050565b7f53686172657320617265207374696c6c20617661696c61626c650000000000005f82015250565b5f611696601a83611425565b91506116a182611662565b602082019050919050565b5f6020820190508181035f8301526116c38161168a565b9050919050565b5f6040820190506116dd5f83018561117f565b6116ea602083018461117f565b9392505050565b6116fa816111a7565b8114611704575f80fd5b50565b5f81519050611715816116f1565b92915050565b5f602082840312156117305761172f6111da565b5b5f61173d84828501611707565b91505092915050565b7f50726f7065727479206973206e6f74206c6973746564000000000000000000005f82015250565b5f61177a601683611425565b915061178582611746565b602082019050919050565b5f6020820190508181035f8301526117a78161176e565b9050919050565b7f4e6f7420656e6f7567682073686172657320617661696c61626c6500000000005f82015250565b5f6117e2601b83611425565b91506117ed826117ae565b602082019050919050565b5f6020820190508181035f83015261180f816117d6565b9050919050565b7f53686172657320746f20627579206d75737420626520677265617465722074685f8201527f616e203000000000000000000000000000000000000000000000000000000000602082015250565b5f611870602483611425565b915061187b82611816565b604082019050919050565b5f6020820190508181035f83015261189d81611864565b9050919050565b5f6118ae82611176565b91506118b983611176565b92508282026118c781611176565b915082820484148315176118de576118dd611560565b5b5092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f61191c82611176565b915061192783611176565b925082611937576119366118e5565b5b828204905092915050565b5f61194c82611176565b915061195783611176565b925082820390508181111561196f5761196e611560565b5b92915050565b5f6040820190506119885f830185611293565b611995602083018461117f565b9392505050565b5f6060820190506119af5f830186611293565b6119bc6020830185611293565b6119c9604083018461117f565b949350505050565b5f81519050919050565b5f81905092915050565b8281835e5f83830152505050565b5f6119fd826119d1565b611a0781856119db565b9350611a178185602086016119e5565b80840191505092915050565b5f611a2e82846119f3565b91508190509291505056fea2646970667358221220c5d1ec961e12beead9c1a38d4ef661ec8ca4601b532c67cafbfe4c75f41977d664736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x1D9F CODESIZE SUB DUP1 PUSH2 0x1D9F DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x31 SWAP2 SWAP1 PUSH2 0x2BD JUMP JUMPDEST CALLER PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xA2 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x99 SWAP2 SWAP1 PUSH2 0x30A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xB1 DUP2 PUSH2 0x152 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH0 DUP1 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH1 0x3 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH1 0x4 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP PUSH2 0x323 JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x240 DUP3 PUSH2 0x217 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x251 DUP3 PUSH2 0x236 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x261 DUP2 PUSH2 0x247 JUMP JUMPDEST DUP2 EQ PUSH2 0x26B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x27C DUP2 PUSH2 0x258 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x28C DUP3 PUSH2 0x236 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x29C DUP2 PUSH2 0x282 JUMP JUMPDEST DUP2 EQ PUSH2 0x2A6 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x2B7 DUP2 PUSH2 0x293 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2D3 JUMPI PUSH2 0x2D2 PUSH2 0x213 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2E0 DUP6 DUP3 DUP7 ADD PUSH2 0x26E JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2F1 DUP6 DUP3 DUP7 ADD PUSH2 0x2A9 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x304 DUP2 PUSH2 0x236 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x31D PUSH0 DUP4 ADD DUP5 PUSH2 0x2FB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1A6F DUP1 PUSH2 0x330 PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xE8 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x8A JUMPI DUP1 PUSH4 0xBAF52C77 GT PUSH2 0x64 JUMPI DUP1 PUSH4 0xBAF52C77 EQ PUSH2 0x1D8 JUMPI DUP1 PUSH4 0xD2BCDC60 EQ PUSH2 0x208 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x224 JUMPI DUP1 PUSH4 0xF7B10808 EQ PUSH2 0x240 JUMPI PUSH2 0xE8 JUMP JUMPDEST DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x180 JUMPI DUP1 PUSH4 0xB41B936D EQ PUSH2 0x19E JUMPI DUP1 PUSH4 0xB4D346BE EQ PUSH2 0x1BC JUMPI PUSH2 0xE8 JUMP JUMPDEST DUP1 PUSH4 0x5C975ABB GT PUSH2 0xC6 JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x132 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x150 JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x15A JUMPI DUP1 PUSH4 0x86AA217E EQ PUSH2 0x164 JUMPI PUSH2 0xE8 JUMP JUMPDEST DUP1 PUSH4 0x3013CE29 EQ PUSH2 0xEC JUMPI DUP1 PUSH4 0x39500F34 EQ PUSH2 0x10A JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x128 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xF4 PUSH2 0x275 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x101 SWAP2 SWAP1 PUSH2 0x115D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x112 PUSH2 0x29A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x11F SWAP2 SWAP1 PUSH2 0x118E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x130 PUSH2 0x2A0 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x13A PUSH2 0x2B2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x147 SWAP2 SWAP1 PUSH2 0x11C1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x158 PUSH2 0x2C7 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x162 PUSH2 0x2DA JUMP JUMPDEST STOP JUMPDEST PUSH2 0x17E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x179 SWAP2 SWAP1 PUSH2 0x1243 JUMP JUMPDEST PUSH2 0x2EC JUMP JUMPDEST STOP JUMPDEST PUSH2 0x188 PUSH2 0x522 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x195 SWAP2 SWAP1 PUSH2 0x12A2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1A6 PUSH2 0x549 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1B3 SWAP2 SWAP1 PUSH2 0x12DB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1D6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1D1 SWAP2 SWAP1 PUSH2 0x12F4 JUMP JUMPDEST PUSH2 0x56E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1F2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1ED SWAP2 SWAP1 PUSH2 0x1332 JUMP JUMPDEST PUSH2 0x78D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1FF SWAP2 SWAP1 PUSH2 0x11C1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x222 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x21D SWAP2 SWAP1 PUSH2 0x135D JUMP JUMPDEST PUSH2 0x82E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x23E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x239 SWAP2 SWAP1 PUSH2 0x139B JUMP JUMPDEST PUSH2 0xA04 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x25A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x255 SWAP2 SWAP1 PUSH2 0x1332 JUMP JUMPDEST PUSH2 0xA88 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x26C SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x13C6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x3 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x2A8 PUSH2 0xB0B JUMP JUMPDEST PUSH2 0x2B0 PUSH2 0xB92 JUMP JUMPDEST JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x2CF PUSH2 0xB0B JUMP JUMPDEST PUSH2 0x2D8 PUSH0 PUSH2 0xBF3 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x2E2 PUSH2 0xB0B JUMP JUMPDEST PUSH2 0x2EA PUSH2 0xCB4 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x2F4 PUSH2 0xD16 JUMP JUMPDEST PUSH0 DUP4 GT PUSH2 0x336 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x32D SWAP1 PUSH2 0x147F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP3 GT PUSH2 0x378 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x36F SWAP1 PUSH2 0x150D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0xC0 ADD PUSH1 0x40 MSTORE DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 ISZERO ISZERO DUP2 MSTORE POP PUSH1 0x1 PUSH0 PUSH1 0x2 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 ADD MLOAD DUP2 PUSH0 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SSTORE PUSH1 0x80 DUP3 ADD MLOAD DUP2 PUSH1 0x4 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0xA0 DUP3 ADD MLOAD DUP2 PUSH1 0x4 ADD PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP SWAP1 POP POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x2C479E2E638A3A97A6F194336F17F298B4EC7145F37C7D35FF6346F9CD4A0030 PUSH1 0x2 SLOAD DUP6 DUP6 PUSH1 0x40 MLOAD PUSH2 0x4FE SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x152B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH1 0x2 PUSH0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x518 SWAP1 PUSH2 0x158D JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x4 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x576 PUSH2 0xD16 JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SWAP1 POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x61A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x611 SWAP1 PUSH2 0x1644 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP2 PUSH1 0x3 ADD SLOAD EQ PUSH2 0x660 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x657 SWAP1 PUSH2 0x16AC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP2 PUSH1 0x4 ADD PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 DUP2 PUSH0 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH0 DUP2 PUSH1 0x1 ADD SLOAD SWAP1 POP PUSH2 0x733 DUP3 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH1 0x3 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xD57 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xF17A6666765DB393A6218BB324C4DE5CC60C9EE3B981BD102BA416EFFC13B895 DUP6 DUP5 PUSH1 0x2 ADD SLOAD PUSH1 0x40 MLOAD PUSH2 0x77F SWAP3 SWAP2 SWAP1 PUSH2 0x16CA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x4 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x7485CDC2 DUP4 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7E8 SWAP2 SWAP1 PUSH2 0x118E JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x803 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x827 SWAP2 SWAP1 PUSH2 0x171B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x836 PUSH2 0xD16 JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SWAP1 POP DUP1 PUSH1 0x4 ADD PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x89B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x892 SWAP1 PUSH2 0x1790 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 PUSH1 0x3 ADD SLOAD LT ISZERO PUSH2 0x8E2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8D9 SWAP1 PUSH2 0x17F8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP3 GT PUSH2 0x924 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x91B SWAP1 PUSH2 0x1886 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP2 PUSH1 0x2 ADD SLOAD DUP4 DUP4 PUSH1 0x1 ADD SLOAD PUSH2 0x93A SWAP2 SWAP1 PUSH2 0x18A4 JUMP JUMPDEST PUSH2 0x944 SWAP2 SWAP1 PUSH2 0x1912 JUMP JUMPDEST SWAP1 POP PUSH2 0x994 CALLER ADDRESS DUP4 PUSH1 0x3 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xDD6 SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP3 DUP3 PUSH1 0x3 ADD PUSH0 DUP3 DUP3 SLOAD PUSH2 0x9A7 SWAP2 SWAP1 PUSH2 0x1942 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xD4A7A37D339805413B4085E0F8E0932DFB0A4F84F08F98A6E53673B5EE8EEE15 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH2 0x9F6 SWAP3 SWAP2 SWAP1 PUSH2 0x16CA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP JUMP JUMPDEST PUSH2 0xA0C PUSH2 0xB0B JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xA7C JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA73 SWAP2 SWAP1 PUSH2 0x12A2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xA85 DUP2 PUSH2 0xBF3 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP DUP1 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 DUP1 PUSH1 0x3 ADD SLOAD SWAP1 DUP1 PUSH1 0x4 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x4 ADD PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP DUP7 JUMP JUMPDEST PUSH2 0xB13 PUSH2 0xE58 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xB31 PUSH2 0x522 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xB90 JUMPI PUSH2 0xB54 PUSH2 0xE58 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB87 SWAP2 SWAP1 PUSH2 0x12A2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH2 0xB9A PUSH2 0xE5F JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA PUSH2 0xBDC PUSH2 0xE58 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xBE9 SWAP2 SWAP1 PUSH2 0x12A2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0xCBC PUSH2 0xD16 JUMP JUMPDEST PUSH1 0x1 PUSH0 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 PUSH2 0xCFF PUSH2 0xE58 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xD0C SWAP2 SWAP1 PUSH2 0x12A2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH2 0xD1E PUSH2 0x2B2 JUMP JUMPDEST ISZERO PUSH2 0xD55 JUMPI PUSH1 0x40 MLOAD PUSH32 0xD93C066500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH2 0xDD1 DUP4 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0xD8A SWAP3 SWAP2 SWAP1 PUSH2 0x1975 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0xE9F JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0xE52 DUP5 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0xE0B SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x199C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0xE9F JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xE67 PUSH2 0x2B2 JUMP JUMPDEST PUSH2 0xE9D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8DFC202B00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH2 0xEC9 DUP3 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xF34 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 MLOAD EQ ISZERO DUP1 ISZERO PUSH2 0xEED JUMPI POP DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0xEEB SWAP2 SWAP1 PUSH2 0x171B JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0xF2F JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0x5274AFE700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF26 SWAP2 SWAP1 PUSH2 0x12A2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0xF41 DUP4 DUP4 PUSH0 PUSH2 0xF49 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 SELFBALANCE LT ISZERO PUSH2 0xF90 JUMPI ADDRESS PUSH1 0x40 MLOAD PUSH32 0xCD78605900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF87 SWAP2 SWAP1 PUSH2 0x12A2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 DUP7 PUSH1 0x40 MLOAD PUSH2 0xFB8 SWAP2 SWAP1 PUSH2 0x1A23 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0xFF2 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xFF7 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x1007 DUP7 DUP4 DUP4 PUSH2 0x1012 JUMP JUMPDEST SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 PUSH2 0x1027 JUMPI PUSH2 0x1022 DUP3 PUSH2 0x109F JUMP JUMPDEST PUSH2 0x1097 JUMP JUMPDEST PUSH0 DUP3 MLOAD EQ DUP1 ISZERO PUSH2 0x104D JUMPI POP PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST ISZERO PUSH2 0x108F JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x9996B31500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1086 SWAP2 SWAP1 PUSH2 0x12A2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 SWAP1 POP PUSH2 0x1098 JUMP JUMPDEST JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD GT ISZERO PUSH2 0x10B1 JUMPI DUP1 MLOAD DUP1 DUP3 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x1425EA4200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1125 PUSH2 0x1120 PUSH2 0x111B DUP5 PUSH2 0x10E3 JUMP JUMPDEST PUSH2 0x1102 JUMP JUMPDEST PUSH2 0x10E3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1136 DUP3 PUSH2 0x110B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1147 DUP3 PUSH2 0x112C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1157 DUP2 PUSH2 0x113D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1170 PUSH0 DUP4 ADD DUP5 PUSH2 0x114E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1188 DUP2 PUSH2 0x1176 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x11A1 PUSH0 DUP4 ADD DUP5 PUSH2 0x117F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x11BB DUP2 PUSH2 0x11A7 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x11D4 PUSH0 DUP4 ADD DUP5 PUSH2 0x11B2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x11E7 DUP2 PUSH2 0x1176 JUMP JUMPDEST DUP2 EQ PUSH2 0x11F1 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1202 DUP2 PUSH2 0x11DE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1212 DUP3 PUSH2 0x10E3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1222 DUP2 PUSH2 0x1208 JUMP JUMPDEST DUP2 EQ PUSH2 0x122C JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x123D DUP2 PUSH2 0x1219 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x125A JUMPI PUSH2 0x1259 PUSH2 0x11DA JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1267 DUP7 DUP3 DUP8 ADD PUSH2 0x11F4 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1278 DUP7 DUP3 DUP8 ADD PUSH2 0x11F4 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1289 DUP7 DUP3 DUP8 ADD PUSH2 0x122F JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH2 0x129C DUP2 PUSH2 0x1208 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x12B5 PUSH0 DUP4 ADD DUP5 PUSH2 0x1293 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x12C5 DUP3 PUSH2 0x112C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x12D5 DUP2 PUSH2 0x12BB JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x12EE PUSH0 DUP4 ADD DUP5 PUSH2 0x12CC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x130A JUMPI PUSH2 0x1309 PUSH2 0x11DA JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1317 DUP6 DUP3 DUP7 ADD PUSH2 0x11F4 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1328 DUP6 DUP3 DUP7 ADD PUSH2 0x122F JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1347 JUMPI PUSH2 0x1346 PUSH2 0x11DA JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1354 DUP5 DUP3 DUP6 ADD PUSH2 0x11F4 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1373 JUMPI PUSH2 0x1372 PUSH2 0x11DA JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1380 DUP6 DUP3 DUP7 ADD PUSH2 0x11F4 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1391 DUP6 DUP3 DUP7 ADD PUSH2 0x11F4 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x13B0 JUMPI PUSH2 0x13AF PUSH2 0x11DA JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x13BD DUP5 DUP3 DUP6 ADD PUSH2 0x122F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0xC0 DUP3 ADD SWAP1 POP PUSH2 0x13D9 PUSH0 DUP4 ADD DUP10 PUSH2 0x1293 JUMP JUMPDEST PUSH2 0x13E6 PUSH1 0x20 DUP4 ADD DUP9 PUSH2 0x117F JUMP JUMPDEST PUSH2 0x13F3 PUSH1 0x40 DUP4 ADD DUP8 PUSH2 0x117F JUMP JUMPDEST PUSH2 0x1400 PUSH1 0x60 DUP4 ADD DUP7 PUSH2 0x117F JUMP JUMPDEST PUSH2 0x140D PUSH1 0x80 DUP4 ADD DUP6 PUSH2 0x1293 JUMP JUMPDEST PUSH2 0x141A PUSH1 0xA0 DUP4 ADD DUP5 PUSH2 0x11B2 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5072696365206D7573742062652067726561746572207468616E203000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1469 PUSH1 0x1C DUP4 PUSH2 0x1425 JUMP JUMPDEST SWAP2 POP PUSH2 0x1474 DUP3 PUSH2 0x1435 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1496 DUP2 PUSH2 0x145D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x546F74616C20736861726573206D757374206265206772656174657220746861 PUSH0 DUP3 ADD MSTORE PUSH32 0x6E20300000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x14F7 PUSH1 0x23 DUP4 PUSH2 0x1425 JUMP JUMPDEST SWAP2 POP PUSH2 0x1502 DUP3 PUSH2 0x149D JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1524 DUP2 PUSH2 0x14EB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x153E PUSH0 DUP4 ADD DUP7 PUSH2 0x117F JUMP JUMPDEST PUSH2 0x154B PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x117F JUMP JUMPDEST PUSH2 0x1558 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x117F JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1597 DUP3 PUSH2 0x1176 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x15C9 JUMPI PUSH2 0x15C8 PUSH2 0x1560 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F6E6C7920746865206F776E65722063616E2066696E616C697A652074686520 PUSH0 DUP3 ADD MSTORE PUSH32 0x73616C6500000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x162E PUSH1 0x24 DUP4 PUSH2 0x1425 JUMP JUMPDEST SWAP2 POP PUSH2 0x1639 DUP3 PUSH2 0x15D4 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x165B DUP2 PUSH2 0x1622 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x53686172657320617265207374696C6C20617661696C61626C65000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1696 PUSH1 0x1A DUP4 PUSH2 0x1425 JUMP JUMPDEST SWAP2 POP PUSH2 0x16A1 DUP3 PUSH2 0x1662 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x16C3 DUP2 PUSH2 0x168A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x16DD PUSH0 DUP4 ADD DUP6 PUSH2 0x117F JUMP JUMPDEST PUSH2 0x16EA PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x117F JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x16FA DUP2 PUSH2 0x11A7 JUMP JUMPDEST DUP2 EQ PUSH2 0x1704 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x1715 DUP2 PUSH2 0x16F1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1730 JUMPI PUSH2 0x172F PUSH2 0x11DA JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x173D DUP5 DUP3 DUP6 ADD PUSH2 0x1707 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x50726F7065727479206973206E6F74206C697374656400000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x177A PUSH1 0x16 DUP4 PUSH2 0x1425 JUMP JUMPDEST SWAP2 POP PUSH2 0x1785 DUP3 PUSH2 0x1746 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x17A7 DUP2 PUSH2 0x176E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E6F7420656E6F7567682073686172657320617661696C61626C650000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x17E2 PUSH1 0x1B DUP4 PUSH2 0x1425 JUMP JUMPDEST SWAP2 POP PUSH2 0x17ED DUP3 PUSH2 0x17AE JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x180F DUP2 PUSH2 0x17D6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x53686172657320746F20627579206D7573742062652067726561746572207468 PUSH0 DUP3 ADD MSTORE PUSH32 0x616E203000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1870 PUSH1 0x24 DUP4 PUSH2 0x1425 JUMP JUMPDEST SWAP2 POP PUSH2 0x187B DUP3 PUSH2 0x1816 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x189D DUP2 PUSH2 0x1864 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x18AE DUP3 PUSH2 0x1176 JUMP JUMPDEST SWAP2 POP PUSH2 0x18B9 DUP4 PUSH2 0x1176 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x18C7 DUP2 PUSH2 0x1176 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x18DE JUMPI PUSH2 0x18DD PUSH2 0x1560 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x191C DUP3 PUSH2 0x1176 JUMP JUMPDEST SWAP2 POP PUSH2 0x1927 DUP4 PUSH2 0x1176 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x1937 JUMPI PUSH2 0x1936 PUSH2 0x18E5 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x194C DUP3 PUSH2 0x1176 JUMP JUMPDEST SWAP2 POP PUSH2 0x1957 DUP4 PUSH2 0x1176 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x196F JUMPI PUSH2 0x196E PUSH2 0x1560 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1988 PUSH0 DUP4 ADD DUP6 PUSH2 0x1293 JUMP JUMPDEST PUSH2 0x1995 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x117F JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x19AF PUSH0 DUP4 ADD DUP7 PUSH2 0x1293 JUMP JUMPDEST PUSH2 0x19BC PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1293 JUMP JUMPDEST PUSH2 0x19C9 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x117F JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x19FD DUP3 PUSH2 0x19D1 JUMP JUMPDEST PUSH2 0x1A07 DUP2 DUP6 PUSH2 0x19DB JUMP JUMPDEST SWAP4 POP PUSH2 0x1A17 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x19E5 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1A2E DUP3 DUP5 PUSH2 0x19F3 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC5 0xD1 0xEC SWAP7 0x1E SLT 0xBE 0xEA 0xD9 0xC1 LOG3 DUP14 0x4E 0xF6 PUSH2 0xEC8C LOG4 PUSH1 0x1B MSTORE8 0x2C PUSH8 0xCAFBFE4C75F41977 0xD6 PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "460:3607:8:-:0;;;1363:174;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1438:10;1297:1:0;1273:26;;:12;:26;;;1269:95;;1350:1;1322:31;;;;;;;;;;;:::i;:::-;;;;;;;;1269:95;1373:32;1392:12;1373:18;;;:32;;:::i;:::-;1225:187;1241:5:6;1231:7;;:15;;;;;;;;;;;;;;;;;;1475:13:8::1;1460:12;;:28;;;;;;;;;;;;;;;;;;1515:15;1498:14;;:32;;;;;;;;;;;;;;;;;;1363:174:::0;;460:3607;;2912:187:0;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;88:117:9:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:110::-;619:7;648:24;666:5;648:24;:::i;:::-;637:35;;568:110;;;:::o;684:150::-;771:38;803:5;771:38;:::i;:::-;764:5;761:49;751:77;;824:1;821;814:12;751:77;684:150;:::o;840:171::-;911:5;942:6;936:13;927:22;;958:47;999:5;958:47;:::i;:::-;840:171;;;;:::o;1017:120::-;1078:7;1107:24;1125:5;1107:24;:::i;:::-;1096:35;;1017:120;;;:::o;1143:170::-;1240:48;1282:5;1240:48;:::i;:::-;1233:5;1230:59;1220:87;;1303:1;1300;1293:12;1220:87;1143:170;:::o;1319:191::-;1400:5;1431:6;1425:13;1416:22;;1447:57;1498:5;1447:57;:::i;:::-;1319:191;;;;:::o;1516:583::-;1633:6;1641;1690:2;1678:9;1669:7;1665:23;1661:32;1658:119;;;1696:79;;:::i;:::-;1658:119;1816:1;1841:78;1911:7;1902:6;1891:9;1887:22;1841:78;:::i;:::-;1831:88;;1787:142;1968:2;1994:88;2074:7;2065:6;2054:9;2050:22;1994:88;:::i;:::-;1984:98;;1939:153;1516:583;;;;;:::o;2105:118::-;2192:24;2210:5;2192:24;:::i;:::-;2187:3;2180:37;2105:118;;:::o;2229:222::-;2322:4;2360:2;2349:9;2345:18;2337:26;;2373:71;2441:1;2430:9;2426:17;2417:6;2373:71;:::i;:::-;2229:222;;;;:::o;460:3607:8:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_callOptionalReturn_501": {
									"entryPoint": 3743,
									"id": 501,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_checkOwner_84": {
									"entryPoint": 2827,
									"id": 84,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_816": {
									"entryPoint": 3672,
									"id": 816,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_pause_934": {
									"entryPoint": 3252,
									"id": 934,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_requireNotPaused_905": {
									"entryPoint": 3350,
									"id": 905,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_requirePaused_918": {
									"entryPoint": 3679,
									"id": 918,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_revert_803": {
									"entryPoint": 4255,
									"id": 803,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 3059,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_unpause_950": {
									"entryPoint": 2962,
									"id": 950,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@alvaraProtocol_2080": {
									"entryPoint": 1353,
									"id": 2080,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@finalizeSale_2293": {
									"entryPoint": 1390,
									"id": 2293,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@functionCallWithValue_671": {
									"entryPoint": 3913,
									"id": 671,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@functionCall_625": {
									"entryPoint": 3892,
									"id": 625,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@integrateWithAlvara_2324": {
									"entryPoint": 1933,
									"id": 2324,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@listProperty_2153": {
									"entryPoint": 748,
									"id": 2153,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@nextPropertyId_2074": {
									"entryPoint": 666,
									"id": 2074,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@owner_67": {
									"entryPoint": 1314,
									"id": 67,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@pause_2302": {
									"entryPoint": 730,
									"id": 2302,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@paused_893": {
									"entryPoint": 690,
									"id": 893,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@paymentToken_2077": {
									"entryPoint": 629,
									"id": 2077,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@properties_2072": {
									"entryPoint": 2696,
									"id": 2072,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@purchaseShares_2227": {
									"entryPoint": 2094,
									"id": 2227,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@renounceOwnership_98": {
									"entryPoint": 711,
									"id": 98,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@safeTransferFrom_338": {
									"entryPoint": 3542,
									"id": 338,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@safeTransfer_311": {
									"entryPoint": 3415,
									"id": 311,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@transferOwnership_126": {
									"entryPoint": 2564,
									"id": 126,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@unpause_2311": {
									"entryPoint": 672,
									"id": 2311,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@verifyCallResultFromTarget_763": {
									"entryPoint": 4114,
									"id": 763,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 4655,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool_fromMemory": {
									"entryPoint": 5895,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 4596,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 5019,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 5915,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 4914,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256t_address": {
									"entryPoint": 4852,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_uint256t_uint256": {
									"entryPoint": 4957,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_uint256t_uint256t_address": {
									"entryPoint": 4675,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 4755,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 4530,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 6643,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_contract$_IAlvaraProtocol_$2020_to_t_address_fromStack": {
									"entryPoint": 4812,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_contract$_IERC20_$225_to_t_address_fromStack": {
									"entryPoint": 4430,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_13b23e2daf0d0a1df4943827ff941ed4e12d820426db25dc1af93122c029577d_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5666,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_2b57b42f08fffb4ec4084ecc30661f6abc2751da5a541cc8e00f347dcfafc705_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5355,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_c2664836f08f089a39d927da540bfbfc322ded0e69c3d2ff852ad8874067c6e6_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6102,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_cd3c9b624963ff71668384fe70850a7de10eb909bb47674cc0e83a0ab696e2b4_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5770,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_f496d2a6b8c6dfd2fdeb51133639f7cbcc6985234f7207231dd11f4a16998dde_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5213,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_fc24bcfbd025f2a9f173aad2479d5b4b312d679ab7aa91e42dd3551e03a420b8_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6244,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_fe58975cefc9dea6eec5cc2540c1aea6a97b8ab8cab294e509ea3b5e0121d2aa_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5998,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 4479,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 6691,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 4770,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 6556,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 6517,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256_t_uint256_t_address_t_bool__to_t_address_t_uint256_t_uint256_t_uint256_t_address_t_bool__fromStack_reversed": {
									"entryPoint": 5062,
									"id": null,
									"parameterSlots": 7,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 4545,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IAlvaraProtocol_$2020__to_t_address__fromStack_reversed": {
									"entryPoint": 4827,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IERC20_$225__to_t_address__fromStack_reversed": {
									"entryPoint": 4445,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_13b23e2daf0d0a1df4943827ff941ed4e12d820426db25dc1af93122c029577d__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5700,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_2b57b42f08fffb4ec4084ecc30661f6abc2751da5a541cc8e00f347dcfafc705__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5389,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_c2664836f08f089a39d927da540bfbfc322ded0e69c3d2ff852ad8874067c6e6__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6136,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_cd3c9b624963ff71668384fe70850a7de10eb909bb47674cc0e83a0ab696e2b4__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5804,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_f496d2a6b8c6dfd2fdeb51133639f7cbcc6985234f7207231dd11f4a16998dde__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5247,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_fc24bcfbd025f2a9f173aad2479d5b4b312d679ab7aa91e42dd3551e03a420b8__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6278,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_fe58975cefc9dea6eec5cc2540c1aea6a97b8ab8cab294e509ea3b5e0121d2aa__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6032,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 4494,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 5834,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 5419,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_length_t_bytes_memory_ptr": {
									"entryPoint": 6609,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 6619,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 5157,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 6418,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 6308,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 6466,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 4616,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 4519,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 4323,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 4470,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_contract$_IAlvaraProtocol_$2020_to_t_address": {
									"entryPoint": 4795,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_contract$_IERC20_$225_to_t_address": {
									"entryPoint": 4413,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_address": {
									"entryPoint": 4396,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_uint160": {
									"entryPoint": 4363,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 6629,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"identity": {
									"entryPoint": 4354,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"increment_t_uint256": {
									"entryPoint": 5517,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 5472,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 6373,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 4570,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_13b23e2daf0d0a1df4943827ff941ed4e12d820426db25dc1af93122c029577d": {
									"entryPoint": 5588,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_2b57b42f08fffb4ec4084ecc30661f6abc2751da5a541cc8e00f347dcfafc705": {
									"entryPoint": 5277,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_c2664836f08f089a39d927da540bfbfc322ded0e69c3d2ff852ad8874067c6e6": {
									"entryPoint": 6062,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_cd3c9b624963ff71668384fe70850a7de10eb909bb47674cc0e83a0ab696e2b4": {
									"entryPoint": 5730,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_f496d2a6b8c6dfd2fdeb51133639f7cbcc6985234f7207231dd11f4a16998dde": {
									"entryPoint": 5173,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_fc24bcfbd025f2a9f173aad2479d5b4b312d679ab7aa91e42dd3551e03a420b8": {
									"entryPoint": 6166,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_fe58975cefc9dea6eec5cc2540c1aea6a97b8ab8cab294e509ea3b5e0121d2aa": {
									"entryPoint": 5958,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 4633,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 5873,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 4574,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:18723:9",
										"nodeType": "YulBlock",
										"src": "0:18723:9",
										"statements": [
											{
												"body": {
													"nativeSrc": "52:81:9",
													"nodeType": "YulBlock",
													"src": "52:81:9",
													"statements": [
														{
															"nativeSrc": "62:65:9",
															"nodeType": "YulAssignment",
															"src": "62:65:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "77:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "77:5:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "84:42:9",
																		"nodeType": "YulLiteral",
																		"src": "84:42:9",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "73:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "73:3:9"
																},
																"nativeSrc": "73:54:9",
																"nodeType": "YulFunctionCall",
																"src": "73:54:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "62:7:9",
																	"nodeType": "YulIdentifier",
																	"src": "62:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "7:126:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "34:5:9",
														"nodeType": "YulTypedName",
														"src": "34:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "44:7:9",
														"nodeType": "YulTypedName",
														"src": "44:7:9",
														"type": ""
													}
												],
												"src": "7:126:9"
											},
											{
												"body": {
													"nativeSrc": "171:28:9",
													"nodeType": "YulBlock",
													"src": "171:28:9",
													"statements": [
														{
															"nativeSrc": "181:12:9",
															"nodeType": "YulAssignment",
															"src": "181:12:9",
															"value": {
																"name": "value",
																"nativeSrc": "188:5:9",
																"nodeType": "YulIdentifier",
																"src": "188:5:9"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "181:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "181:3:9"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "139:60:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "157:5:9",
														"nodeType": "YulTypedName",
														"src": "157:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "167:3:9",
														"nodeType": "YulTypedName",
														"src": "167:3:9",
														"type": ""
													}
												],
												"src": "139:60:9"
											},
											{
												"body": {
													"nativeSrc": "265:82:9",
													"nodeType": "YulBlock",
													"src": "265:82:9",
													"statements": [
														{
															"nativeSrc": "275:66:9",
															"nodeType": "YulAssignment",
															"src": "275:66:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "333:5:9",
																						"nodeType": "YulIdentifier",
																						"src": "333:5:9"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint160",
																					"nativeSrc": "315:17:9",
																					"nodeType": "YulIdentifier",
																					"src": "315:17:9"
																				},
																				"nativeSrc": "315:24:9",
																				"nodeType": "YulFunctionCall",
																				"src": "315:24:9"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "306:8:9",
																			"nodeType": "YulIdentifier",
																			"src": "306:8:9"
																		},
																		"nativeSrc": "306:34:9",
																		"nodeType": "YulFunctionCall",
																		"src": "306:34:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "288:17:9",
																	"nodeType": "YulIdentifier",
																	"src": "288:17:9"
																},
																"nativeSrc": "288:53:9",
																"nodeType": "YulFunctionCall",
																"src": "288:53:9"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "275:9:9",
																	"nodeType": "YulIdentifier",
																	"src": "275:9:9"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_uint160",
												"nativeSrc": "205:142:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "245:5:9",
														"nodeType": "YulTypedName",
														"src": "245:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "255:9:9",
														"nodeType": "YulTypedName",
														"src": "255:9:9",
														"type": ""
													}
												],
												"src": "205:142:9"
											},
											{
												"body": {
													"nativeSrc": "413:66:9",
													"nodeType": "YulBlock",
													"src": "413:66:9",
													"statements": [
														{
															"nativeSrc": "423:50:9",
															"nodeType": "YulAssignment",
															"src": "423:50:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "467:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "467:5:9"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_uint160",
																	"nativeSrc": "436:30:9",
																	"nodeType": "YulIdentifier",
																	"src": "436:30:9"
																},
																"nativeSrc": "436:37:9",
																"nodeType": "YulFunctionCall",
																"src": "436:37:9"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "423:9:9",
																	"nodeType": "YulIdentifier",
																	"src": "423:9:9"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_address",
												"nativeSrc": "353:126:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "393:5:9",
														"nodeType": "YulTypedName",
														"src": "393:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "403:9:9",
														"nodeType": "YulTypedName",
														"src": "403:9:9",
														"type": ""
													}
												],
												"src": "353:126:9"
											},
											{
												"body": {
													"nativeSrc": "559:66:9",
													"nodeType": "YulBlock",
													"src": "559:66:9",
													"statements": [
														{
															"nativeSrc": "569:50:9",
															"nodeType": "YulAssignment",
															"src": "569:50:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "613:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "613:5:9"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nativeSrc": "582:30:9",
																	"nodeType": "YulIdentifier",
																	"src": "582:30:9"
																},
																"nativeSrc": "582:37:9",
																"nodeType": "YulFunctionCall",
																"src": "582:37:9"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "569:9:9",
																	"nodeType": "YulIdentifier",
																	"src": "569:9:9"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_IERC20_$225_to_t_address",
												"nativeSrc": "485:140:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "539:5:9",
														"nodeType": "YulTypedName",
														"src": "539:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "549:9:9",
														"nodeType": "YulTypedName",
														"src": "549:9:9",
														"type": ""
													}
												],
												"src": "485:140:9"
											},
											{
												"body": {
													"nativeSrc": "710:80:9",
													"nodeType": "YulBlock",
													"src": "710:80:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "727:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "727:3:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "777:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "777:5:9"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_IERC20_$225_to_t_address",
																			"nativeSrc": "732:44:9",
																			"nodeType": "YulIdentifier",
																			"src": "732:44:9"
																		},
																		"nativeSrc": "732:51:9",
																		"nodeType": "YulFunctionCall",
																		"src": "732:51:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "720:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "720:6:9"
																},
																"nativeSrc": "720:64:9",
																"nodeType": "YulFunctionCall",
																"src": "720:64:9"
															},
															"nativeSrc": "720:64:9",
															"nodeType": "YulExpressionStatement",
															"src": "720:64:9"
														}
													]
												},
												"name": "abi_encode_t_contract$_IERC20_$225_to_t_address_fromStack",
												"nativeSrc": "631:159:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "698:5:9",
														"nodeType": "YulTypedName",
														"src": "698:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "705:3:9",
														"nodeType": "YulTypedName",
														"src": "705:3:9",
														"type": ""
													}
												],
												"src": "631:159:9"
											},
											{
												"body": {
													"nativeSrc": "908:138:9",
													"nodeType": "YulBlock",
													"src": "908:138:9",
													"statements": [
														{
															"nativeSrc": "918:26:9",
															"nodeType": "YulAssignment",
															"src": "918:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "930:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "930:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "941:2:9",
																		"nodeType": "YulLiteral",
																		"src": "941:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "926:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "926:3:9"
																},
																"nativeSrc": "926:18:9",
																"nodeType": "YulFunctionCall",
																"src": "926:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "918:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "918:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1012:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "1012:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1025:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "1025:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1036:1:9",
																				"nodeType": "YulLiteral",
																				"src": "1036:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1021:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "1021:3:9"
																		},
																		"nativeSrc": "1021:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "1021:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_IERC20_$225_to_t_address_fromStack",
																	"nativeSrc": "954:57:9",
																	"nodeType": "YulIdentifier",
																	"src": "954:57:9"
																},
																"nativeSrc": "954:85:9",
																"nodeType": "YulFunctionCall",
																"src": "954:85:9"
															},
															"nativeSrc": "954:85:9",
															"nodeType": "YulExpressionStatement",
															"src": "954:85:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IERC20_$225__to_t_address__fromStack_reversed",
												"nativeSrc": "796:250:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "880:9:9",
														"nodeType": "YulTypedName",
														"src": "880:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "892:6:9",
														"nodeType": "YulTypedName",
														"src": "892:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "903:4:9",
														"nodeType": "YulTypedName",
														"src": "903:4:9",
														"type": ""
													}
												],
												"src": "796:250:9"
											},
											{
												"body": {
													"nativeSrc": "1097:32:9",
													"nodeType": "YulBlock",
													"src": "1097:32:9",
													"statements": [
														{
															"nativeSrc": "1107:16:9",
															"nodeType": "YulAssignment",
															"src": "1107:16:9",
															"value": {
																"name": "value",
																"nativeSrc": "1118:5:9",
																"nodeType": "YulIdentifier",
																"src": "1118:5:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1107:7:9",
																	"nodeType": "YulIdentifier",
																	"src": "1107:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "1052:77:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1079:5:9",
														"nodeType": "YulTypedName",
														"src": "1079:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1089:7:9",
														"nodeType": "YulTypedName",
														"src": "1089:7:9",
														"type": ""
													}
												],
												"src": "1052:77:9"
											},
											{
												"body": {
													"nativeSrc": "1200:53:9",
													"nodeType": "YulBlock",
													"src": "1200:53:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1217:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "1217:3:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1240:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "1240:5:9"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "1222:17:9",
																			"nodeType": "YulIdentifier",
																			"src": "1222:17:9"
																		},
																		"nativeSrc": "1222:24:9",
																		"nodeType": "YulFunctionCall",
																		"src": "1222:24:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1210:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "1210:6:9"
																},
																"nativeSrc": "1210:37:9",
																"nodeType": "YulFunctionCall",
																"src": "1210:37:9"
															},
															"nativeSrc": "1210:37:9",
															"nodeType": "YulExpressionStatement",
															"src": "1210:37:9"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "1135:118:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1188:5:9",
														"nodeType": "YulTypedName",
														"src": "1188:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1195:3:9",
														"nodeType": "YulTypedName",
														"src": "1195:3:9",
														"type": ""
													}
												],
												"src": "1135:118:9"
											},
											{
												"body": {
													"nativeSrc": "1357:124:9",
													"nodeType": "YulBlock",
													"src": "1357:124:9",
													"statements": [
														{
															"nativeSrc": "1367:26:9",
															"nodeType": "YulAssignment",
															"src": "1367:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1379:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "1379:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1390:2:9",
																		"nodeType": "YulLiteral",
																		"src": "1390:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1375:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "1375:3:9"
																},
																"nativeSrc": "1375:18:9",
																"nodeType": "YulFunctionCall",
																"src": "1375:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1367:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "1367:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1447:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "1447:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1460:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "1460:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1471:1:9",
																				"nodeType": "YulLiteral",
																				"src": "1471:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1456:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "1456:3:9"
																		},
																		"nativeSrc": "1456:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "1456:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "1403:43:9",
																	"nodeType": "YulIdentifier",
																	"src": "1403:43:9"
																},
																"nativeSrc": "1403:71:9",
																"nodeType": "YulFunctionCall",
																"src": "1403:71:9"
															},
															"nativeSrc": "1403:71:9",
															"nodeType": "YulExpressionStatement",
															"src": "1403:71:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "1259:222:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1329:9:9",
														"nodeType": "YulTypedName",
														"src": "1329:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1341:6:9",
														"nodeType": "YulTypedName",
														"src": "1341:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1352:4:9",
														"nodeType": "YulTypedName",
														"src": "1352:4:9",
														"type": ""
													}
												],
												"src": "1259:222:9"
											},
											{
												"body": {
													"nativeSrc": "1529:48:9",
													"nodeType": "YulBlock",
													"src": "1529:48:9",
													"statements": [
														{
															"nativeSrc": "1539:32:9",
															"nodeType": "YulAssignment",
															"src": "1539:32:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1564:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "1564:5:9"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "1557:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "1557:6:9"
																		},
																		"nativeSrc": "1557:13:9",
																		"nodeType": "YulFunctionCall",
																		"src": "1557:13:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1550:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "1550:6:9"
																},
																"nativeSrc": "1550:21:9",
																"nodeType": "YulFunctionCall",
																"src": "1550:21:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1539:7:9",
																	"nodeType": "YulIdentifier",
																	"src": "1539:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "1487:90:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1511:5:9",
														"nodeType": "YulTypedName",
														"src": "1511:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1521:7:9",
														"nodeType": "YulTypedName",
														"src": "1521:7:9",
														"type": ""
													}
												],
												"src": "1487:90:9"
											},
											{
												"body": {
													"nativeSrc": "1642:50:9",
													"nodeType": "YulBlock",
													"src": "1642:50:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1659:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "1659:3:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1679:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "1679:5:9"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "1664:14:9",
																			"nodeType": "YulIdentifier",
																			"src": "1664:14:9"
																		},
																		"nativeSrc": "1664:21:9",
																		"nodeType": "YulFunctionCall",
																		"src": "1664:21:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1652:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "1652:6:9"
																},
																"nativeSrc": "1652:34:9",
																"nodeType": "YulFunctionCall",
																"src": "1652:34:9"
															},
															"nativeSrc": "1652:34:9",
															"nodeType": "YulExpressionStatement",
															"src": "1652:34:9"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "1583:109:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1630:5:9",
														"nodeType": "YulTypedName",
														"src": "1630:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1637:3:9",
														"nodeType": "YulTypedName",
														"src": "1637:3:9",
														"type": ""
													}
												],
												"src": "1583:109:9"
											},
											{
												"body": {
													"nativeSrc": "1790:118:9",
													"nodeType": "YulBlock",
													"src": "1790:118:9",
													"statements": [
														{
															"nativeSrc": "1800:26:9",
															"nodeType": "YulAssignment",
															"src": "1800:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1812:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "1812:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1823:2:9",
																		"nodeType": "YulLiteral",
																		"src": "1823:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1808:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "1808:3:9"
																},
																"nativeSrc": "1808:18:9",
																"nodeType": "YulFunctionCall",
																"src": "1808:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1800:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "1800:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1874:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "1874:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1887:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "1887:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1898:1:9",
																				"nodeType": "YulLiteral",
																				"src": "1898:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1883:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "1883:3:9"
																		},
																		"nativeSrc": "1883:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "1883:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "1836:37:9",
																	"nodeType": "YulIdentifier",
																	"src": "1836:37:9"
																},
																"nativeSrc": "1836:65:9",
																"nodeType": "YulFunctionCall",
																"src": "1836:65:9"
															},
															"nativeSrc": "1836:65:9",
															"nodeType": "YulExpressionStatement",
															"src": "1836:65:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "1698:210:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1762:9:9",
														"nodeType": "YulTypedName",
														"src": "1762:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1774:6:9",
														"nodeType": "YulTypedName",
														"src": "1774:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1785:4:9",
														"nodeType": "YulTypedName",
														"src": "1785:4:9",
														"type": ""
													}
												],
												"src": "1698:210:9"
											},
											{
												"body": {
													"nativeSrc": "1954:35:9",
													"nodeType": "YulBlock",
													"src": "1954:35:9",
													"statements": [
														{
															"nativeSrc": "1964:19:9",
															"nodeType": "YulAssignment",
															"src": "1964:19:9",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1980:2:9",
																		"nodeType": "YulLiteral",
																		"src": "1980:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1974:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "1974:5:9"
																},
																"nativeSrc": "1974:9:9",
																"nodeType": "YulFunctionCall",
																"src": "1974:9:9"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "1964:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "1964:6:9"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "1914:75:9",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "1947:6:9",
														"nodeType": "YulTypedName",
														"src": "1947:6:9",
														"type": ""
													}
												],
												"src": "1914:75:9"
											},
											{
												"body": {
													"nativeSrc": "2084:28:9",
													"nodeType": "YulBlock",
													"src": "2084:28:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2101:1:9",
																		"nodeType": "YulLiteral",
																		"src": "2101:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2104:1:9",
																		"nodeType": "YulLiteral",
																		"src": "2104:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "2094:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "2094:6:9"
																},
																"nativeSrc": "2094:12:9",
																"nodeType": "YulFunctionCall",
																"src": "2094:12:9"
															},
															"nativeSrc": "2094:12:9",
															"nodeType": "YulExpressionStatement",
															"src": "2094:12:9"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "1995:117:9",
												"nodeType": "YulFunctionDefinition",
												"src": "1995:117:9"
											},
											{
												"body": {
													"nativeSrc": "2207:28:9",
													"nodeType": "YulBlock",
													"src": "2207:28:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2224:1:9",
																		"nodeType": "YulLiteral",
																		"src": "2224:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2227:1:9",
																		"nodeType": "YulLiteral",
																		"src": "2227:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "2217:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "2217:6:9"
																},
																"nativeSrc": "2217:12:9",
																"nodeType": "YulFunctionCall",
																"src": "2217:12:9"
															},
															"nativeSrc": "2217:12:9",
															"nodeType": "YulExpressionStatement",
															"src": "2217:12:9"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "2118:117:9",
												"nodeType": "YulFunctionDefinition",
												"src": "2118:117:9"
											},
											{
												"body": {
													"nativeSrc": "2284:79:9",
													"nodeType": "YulBlock",
													"src": "2284:79:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "2341:16:9",
																"nodeType": "YulBlock",
																"src": "2341:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2350:1:9",
																					"nodeType": "YulLiteral",
																					"src": "2350:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2353:1:9",
																					"nodeType": "YulLiteral",
																					"src": "2353:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2343:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "2343:6:9"
																			},
																			"nativeSrc": "2343:12:9",
																			"nodeType": "YulFunctionCall",
																			"src": "2343:12:9"
																		},
																		"nativeSrc": "2343:12:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "2343:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2307:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "2307:5:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2332:5:9",
																						"nodeType": "YulIdentifier",
																						"src": "2332:5:9"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "2314:17:9",
																					"nodeType": "YulIdentifier",
																					"src": "2314:17:9"
																				},
																				"nativeSrc": "2314:24:9",
																				"nodeType": "YulFunctionCall",
																				"src": "2314:24:9"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2304:2:9",
																			"nodeType": "YulIdentifier",
																			"src": "2304:2:9"
																		},
																		"nativeSrc": "2304:35:9",
																		"nodeType": "YulFunctionCall",
																		"src": "2304:35:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2297:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "2297:6:9"
																},
																"nativeSrc": "2297:43:9",
																"nodeType": "YulFunctionCall",
																"src": "2297:43:9"
															},
															"nativeSrc": "2294:63:9",
															"nodeType": "YulIf",
															"src": "2294:63:9"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "2241:122:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2277:5:9",
														"nodeType": "YulTypedName",
														"src": "2277:5:9",
														"type": ""
													}
												],
												"src": "2241:122:9"
											},
											{
												"body": {
													"nativeSrc": "2421:87:9",
													"nodeType": "YulBlock",
													"src": "2421:87:9",
													"statements": [
														{
															"nativeSrc": "2431:29:9",
															"nodeType": "YulAssignment",
															"src": "2431:29:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2453:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "2453:6:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2440:12:9",
																	"nodeType": "YulIdentifier",
																	"src": "2440:12:9"
																},
																"nativeSrc": "2440:20:9",
																"nodeType": "YulFunctionCall",
																"src": "2440:20:9"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2431:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "2431:5:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2496:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "2496:5:9"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "2469:26:9",
																	"nodeType": "YulIdentifier",
																	"src": "2469:26:9"
																},
																"nativeSrc": "2469:33:9",
																"nodeType": "YulFunctionCall",
																"src": "2469:33:9"
															},
															"nativeSrc": "2469:33:9",
															"nodeType": "YulExpressionStatement",
															"src": "2469:33:9"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "2369:139:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2399:6:9",
														"nodeType": "YulTypedName",
														"src": "2399:6:9",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2407:3:9",
														"nodeType": "YulTypedName",
														"src": "2407:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "2415:5:9",
														"nodeType": "YulTypedName",
														"src": "2415:5:9",
														"type": ""
													}
												],
												"src": "2369:139:9"
											},
											{
												"body": {
													"nativeSrc": "2559:51:9",
													"nodeType": "YulBlock",
													"src": "2559:51:9",
													"statements": [
														{
															"nativeSrc": "2569:35:9",
															"nodeType": "YulAssignment",
															"src": "2569:35:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2598:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "2598:5:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "2580:17:9",
																	"nodeType": "YulIdentifier",
																	"src": "2580:17:9"
																},
																"nativeSrc": "2580:24:9",
																"nodeType": "YulFunctionCall",
																"src": "2580:24:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2569:7:9",
																	"nodeType": "YulIdentifier",
																	"src": "2569:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "2514:96:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2541:5:9",
														"nodeType": "YulTypedName",
														"src": "2541:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2551:7:9",
														"nodeType": "YulTypedName",
														"src": "2551:7:9",
														"type": ""
													}
												],
												"src": "2514:96:9"
											},
											{
												"body": {
													"nativeSrc": "2659:79:9",
													"nodeType": "YulBlock",
													"src": "2659:79:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "2716:16:9",
																"nodeType": "YulBlock",
																"src": "2716:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2725:1:9",
																					"nodeType": "YulLiteral",
																					"src": "2725:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2728:1:9",
																					"nodeType": "YulLiteral",
																					"src": "2728:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2718:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "2718:6:9"
																			},
																			"nativeSrc": "2718:12:9",
																			"nodeType": "YulFunctionCall",
																			"src": "2718:12:9"
																		},
																		"nativeSrc": "2718:12:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "2718:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2682:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "2682:5:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2707:5:9",
																						"nodeType": "YulIdentifier",
																						"src": "2707:5:9"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "2689:17:9",
																					"nodeType": "YulIdentifier",
																					"src": "2689:17:9"
																				},
																				"nativeSrc": "2689:24:9",
																				"nodeType": "YulFunctionCall",
																				"src": "2689:24:9"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2679:2:9",
																			"nodeType": "YulIdentifier",
																			"src": "2679:2:9"
																		},
																		"nativeSrc": "2679:35:9",
																		"nodeType": "YulFunctionCall",
																		"src": "2679:35:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2672:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "2672:6:9"
																},
																"nativeSrc": "2672:43:9",
																"nodeType": "YulFunctionCall",
																"src": "2672:43:9"
															},
															"nativeSrc": "2669:63:9",
															"nodeType": "YulIf",
															"src": "2669:63:9"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "2616:122:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2652:5:9",
														"nodeType": "YulTypedName",
														"src": "2652:5:9",
														"type": ""
													}
												],
												"src": "2616:122:9"
											},
											{
												"body": {
													"nativeSrc": "2796:87:9",
													"nodeType": "YulBlock",
													"src": "2796:87:9",
													"statements": [
														{
															"nativeSrc": "2806:29:9",
															"nodeType": "YulAssignment",
															"src": "2806:29:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2828:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "2828:6:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2815:12:9",
																	"nodeType": "YulIdentifier",
																	"src": "2815:12:9"
																},
																"nativeSrc": "2815:20:9",
																"nodeType": "YulFunctionCall",
																"src": "2815:20:9"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2806:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "2806:5:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2871:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "2871:5:9"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "2844:26:9",
																	"nodeType": "YulIdentifier",
																	"src": "2844:26:9"
																},
																"nativeSrc": "2844:33:9",
																"nodeType": "YulFunctionCall",
																"src": "2844:33:9"
															},
															"nativeSrc": "2844:33:9",
															"nodeType": "YulExpressionStatement",
															"src": "2844:33:9"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "2744:139:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2774:6:9",
														"nodeType": "YulTypedName",
														"src": "2774:6:9",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2782:3:9",
														"nodeType": "YulTypedName",
														"src": "2782:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "2790:5:9",
														"nodeType": "YulTypedName",
														"src": "2790:5:9",
														"type": ""
													}
												],
												"src": "2744:139:9"
											},
											{
												"body": {
													"nativeSrc": "2989:519:9",
													"nodeType": "YulBlock",
													"src": "2989:519:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "3035:83:9",
																"nodeType": "YulBlock",
																"src": "3035:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3037:77:9",
																				"nodeType": "YulIdentifier",
																				"src": "3037:77:9"
																			},
																			"nativeSrc": "3037:79:9",
																			"nodeType": "YulFunctionCall",
																			"src": "3037:79:9"
																		},
																		"nativeSrc": "3037:79:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "3037:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3010:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "3010:7:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3019:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "3019:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3006:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "3006:3:9"
																		},
																		"nativeSrc": "3006:23:9",
																		"nodeType": "YulFunctionCall",
																		"src": "3006:23:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3031:2:9",
																		"nodeType": "YulLiteral",
																		"src": "3031:2:9",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3002:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "3002:3:9"
																},
																"nativeSrc": "3002:32:9",
																"nodeType": "YulFunctionCall",
																"src": "3002:32:9"
															},
															"nativeSrc": "2999:119:9",
															"nodeType": "YulIf",
															"src": "2999:119:9"
														},
														{
															"nativeSrc": "3128:117:9",
															"nodeType": "YulBlock",
															"src": "3128:117:9",
															"statements": [
																{
																	"nativeSrc": "3143:15:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3143:15:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3157:1:9",
																		"nodeType": "YulLiteral",
																		"src": "3157:1:9",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3147:6:9",
																			"nodeType": "YulTypedName",
																			"src": "3147:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3172:63:9",
																	"nodeType": "YulAssignment",
																	"src": "3172:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3207:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "3207:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3218:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "3218:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3203:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "3203:3:9"
																				},
																				"nativeSrc": "3203:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "3203:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3227:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "3227:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "3182:20:9",
																			"nodeType": "YulIdentifier",
																			"src": "3182:20:9"
																		},
																		"nativeSrc": "3182:53:9",
																		"nodeType": "YulFunctionCall",
																		"src": "3182:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3172:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "3172:6:9"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "3255:118:9",
															"nodeType": "YulBlock",
															"src": "3255:118:9",
															"statements": [
																{
																	"nativeSrc": "3270:16:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3270:16:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3284:2:9",
																		"nodeType": "YulLiteral",
																		"src": "3284:2:9",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3274:6:9",
																			"nodeType": "YulTypedName",
																			"src": "3274:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3300:63:9",
																	"nodeType": "YulAssignment",
																	"src": "3300:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3335:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "3335:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3346:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "3346:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3331:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "3331:3:9"
																				},
																				"nativeSrc": "3331:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "3331:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3355:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "3355:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "3310:20:9",
																			"nodeType": "YulIdentifier",
																			"src": "3310:20:9"
																		},
																		"nativeSrc": "3310:53:9",
																		"nodeType": "YulFunctionCall",
																		"src": "3310:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "3300:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "3300:6:9"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "3383:118:9",
															"nodeType": "YulBlock",
															"src": "3383:118:9",
															"statements": [
																{
																	"nativeSrc": "3398:16:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3398:16:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3412:2:9",
																		"nodeType": "YulLiteral",
																		"src": "3412:2:9",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3402:6:9",
																			"nodeType": "YulTypedName",
																			"src": "3402:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3428:63:9",
																	"nodeType": "YulAssignment",
																	"src": "3428:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3463:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "3463:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3474:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "3474:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3459:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "3459:3:9"
																				},
																				"nativeSrc": "3459:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "3459:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3483:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "3483:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "3438:20:9",
																			"nodeType": "YulIdentifier",
																			"src": "3438:20:9"
																		},
																		"nativeSrc": "3438:53:9",
																		"nodeType": "YulFunctionCall",
																		"src": "3438:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "3428:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "3428:6:9"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256t_address",
												"nativeSrc": "2889:619:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2943:9:9",
														"nodeType": "YulTypedName",
														"src": "2943:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2954:7:9",
														"nodeType": "YulTypedName",
														"src": "2954:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2966:6:9",
														"nodeType": "YulTypedName",
														"src": "2966:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2974:6:9",
														"nodeType": "YulTypedName",
														"src": "2974:6:9",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "2982:6:9",
														"nodeType": "YulTypedName",
														"src": "2982:6:9",
														"type": ""
													}
												],
												"src": "2889:619:9"
											},
											{
												"body": {
													"nativeSrc": "3579:53:9",
													"nodeType": "YulBlock",
													"src": "3579:53:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3596:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "3596:3:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3619:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "3619:5:9"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "3601:17:9",
																			"nodeType": "YulIdentifier",
																			"src": "3601:17:9"
																		},
																		"nativeSrc": "3601:24:9",
																		"nodeType": "YulFunctionCall",
																		"src": "3601:24:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3589:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "3589:6:9"
																},
																"nativeSrc": "3589:37:9",
																"nodeType": "YulFunctionCall",
																"src": "3589:37:9"
															},
															"nativeSrc": "3589:37:9",
															"nodeType": "YulExpressionStatement",
															"src": "3589:37:9"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "3514:118:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3567:5:9",
														"nodeType": "YulTypedName",
														"src": "3567:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3574:3:9",
														"nodeType": "YulTypedName",
														"src": "3574:3:9",
														"type": ""
													}
												],
												"src": "3514:118:9"
											},
											{
												"body": {
													"nativeSrc": "3736:124:9",
													"nodeType": "YulBlock",
													"src": "3736:124:9",
													"statements": [
														{
															"nativeSrc": "3746:26:9",
															"nodeType": "YulAssignment",
															"src": "3746:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3758:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "3758:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3769:2:9",
																		"nodeType": "YulLiteral",
																		"src": "3769:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3754:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "3754:3:9"
																},
																"nativeSrc": "3754:18:9",
																"nodeType": "YulFunctionCall",
																"src": "3754:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3746:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "3746:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3826:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "3826:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3839:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "3839:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3850:1:9",
																				"nodeType": "YulLiteral",
																				"src": "3850:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3835:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "3835:3:9"
																		},
																		"nativeSrc": "3835:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "3835:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "3782:43:9",
																	"nodeType": "YulIdentifier",
																	"src": "3782:43:9"
																},
																"nativeSrc": "3782:71:9",
																"nodeType": "YulFunctionCall",
																"src": "3782:71:9"
															},
															"nativeSrc": "3782:71:9",
															"nodeType": "YulExpressionStatement",
															"src": "3782:71:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "3638:222:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3708:9:9",
														"nodeType": "YulTypedName",
														"src": "3708:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3720:6:9",
														"nodeType": "YulTypedName",
														"src": "3720:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3731:4:9",
														"nodeType": "YulTypedName",
														"src": "3731:4:9",
														"type": ""
													}
												],
												"src": "3638:222:9"
											},
											{
												"body": {
													"nativeSrc": "3950:66:9",
													"nodeType": "YulBlock",
													"src": "3950:66:9",
													"statements": [
														{
															"nativeSrc": "3960:50:9",
															"nodeType": "YulAssignment",
															"src": "3960:50:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4004:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "4004:5:9"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nativeSrc": "3973:30:9",
																	"nodeType": "YulIdentifier",
																	"src": "3973:30:9"
																},
																"nativeSrc": "3973:37:9",
																"nodeType": "YulFunctionCall",
																"src": "3973:37:9"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "3960:9:9",
																	"nodeType": "YulIdentifier",
																	"src": "3960:9:9"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_IAlvaraProtocol_$2020_to_t_address",
												"nativeSrc": "3866:150:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3930:5:9",
														"nodeType": "YulTypedName",
														"src": "3930:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "3940:9:9",
														"nodeType": "YulTypedName",
														"src": "3940:9:9",
														"type": ""
													}
												],
												"src": "3866:150:9"
											},
											{
												"body": {
													"nativeSrc": "4111:90:9",
													"nodeType": "YulBlock",
													"src": "4111:90:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4128:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "4128:3:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4188:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "4188:5:9"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_IAlvaraProtocol_$2020_to_t_address",
																			"nativeSrc": "4133:54:9",
																			"nodeType": "YulIdentifier",
																			"src": "4133:54:9"
																		},
																		"nativeSrc": "4133:61:9",
																		"nodeType": "YulFunctionCall",
																		"src": "4133:61:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4121:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "4121:6:9"
																},
																"nativeSrc": "4121:74:9",
																"nodeType": "YulFunctionCall",
																"src": "4121:74:9"
															},
															"nativeSrc": "4121:74:9",
															"nodeType": "YulExpressionStatement",
															"src": "4121:74:9"
														}
													]
												},
												"name": "abi_encode_t_contract$_IAlvaraProtocol_$2020_to_t_address_fromStack",
												"nativeSrc": "4022:179:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4099:5:9",
														"nodeType": "YulTypedName",
														"src": "4099:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "4106:3:9",
														"nodeType": "YulTypedName",
														"src": "4106:3:9",
														"type": ""
													}
												],
												"src": "4022:179:9"
											},
											{
												"body": {
													"nativeSrc": "4329:148:9",
													"nodeType": "YulBlock",
													"src": "4329:148:9",
													"statements": [
														{
															"nativeSrc": "4339:26:9",
															"nodeType": "YulAssignment",
															"src": "4339:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4351:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "4351:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4362:2:9",
																		"nodeType": "YulLiteral",
																		"src": "4362:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4347:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "4347:3:9"
																},
																"nativeSrc": "4347:18:9",
																"nodeType": "YulFunctionCall",
																"src": "4347:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4339:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "4339:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "4443:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "4443:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4456:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "4456:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4467:1:9",
																				"nodeType": "YulLiteral",
																				"src": "4467:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4452:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "4452:3:9"
																		},
																		"nativeSrc": "4452:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "4452:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_IAlvaraProtocol_$2020_to_t_address_fromStack",
																	"nativeSrc": "4375:67:9",
																	"nodeType": "YulIdentifier",
																	"src": "4375:67:9"
																},
																"nativeSrc": "4375:95:9",
																"nodeType": "YulFunctionCall",
																"src": "4375:95:9"
															},
															"nativeSrc": "4375:95:9",
															"nodeType": "YulExpressionStatement",
															"src": "4375:95:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IAlvaraProtocol_$2020__to_t_address__fromStack_reversed",
												"nativeSrc": "4207:270:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4301:9:9",
														"nodeType": "YulTypedName",
														"src": "4301:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4313:6:9",
														"nodeType": "YulTypedName",
														"src": "4313:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4324:4:9",
														"nodeType": "YulTypedName",
														"src": "4324:4:9",
														"type": ""
													}
												],
												"src": "4207:270:9"
											},
											{
												"body": {
													"nativeSrc": "4566:391:9",
													"nodeType": "YulBlock",
													"src": "4566:391:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "4612:83:9",
																"nodeType": "YulBlock",
																"src": "4612:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "4614:77:9",
																				"nodeType": "YulIdentifier",
																				"src": "4614:77:9"
																			},
																			"nativeSrc": "4614:79:9",
																			"nodeType": "YulFunctionCall",
																			"src": "4614:79:9"
																		},
																		"nativeSrc": "4614:79:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "4614:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4587:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "4587:7:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4596:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "4596:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4583:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "4583:3:9"
																		},
																		"nativeSrc": "4583:23:9",
																		"nodeType": "YulFunctionCall",
																		"src": "4583:23:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4608:2:9",
																		"nodeType": "YulLiteral",
																		"src": "4608:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4579:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "4579:3:9"
																},
																"nativeSrc": "4579:32:9",
																"nodeType": "YulFunctionCall",
																"src": "4579:32:9"
															},
															"nativeSrc": "4576:119:9",
															"nodeType": "YulIf",
															"src": "4576:119:9"
														},
														{
															"nativeSrc": "4705:117:9",
															"nodeType": "YulBlock",
															"src": "4705:117:9",
															"statements": [
																{
																	"nativeSrc": "4720:15:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4720:15:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4734:1:9",
																		"nodeType": "YulLiteral",
																		"src": "4734:1:9",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4724:6:9",
																			"nodeType": "YulTypedName",
																			"src": "4724:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4749:63:9",
																	"nodeType": "YulAssignment",
																	"src": "4749:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4784:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "4784:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4795:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "4795:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4780:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "4780:3:9"
																				},
																				"nativeSrc": "4780:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "4780:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4804:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "4804:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "4759:20:9",
																			"nodeType": "YulIdentifier",
																			"src": "4759:20:9"
																		},
																		"nativeSrc": "4759:53:9",
																		"nodeType": "YulFunctionCall",
																		"src": "4759:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "4749:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "4749:6:9"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4832:118:9",
															"nodeType": "YulBlock",
															"src": "4832:118:9",
															"statements": [
																{
																	"nativeSrc": "4847:16:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4847:16:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4861:2:9",
																		"nodeType": "YulLiteral",
																		"src": "4861:2:9",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4851:6:9",
																			"nodeType": "YulTypedName",
																			"src": "4851:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4877:63:9",
																	"nodeType": "YulAssignment",
																	"src": "4877:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4912:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "4912:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4923:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "4923:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4908:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "4908:3:9"
																				},
																				"nativeSrc": "4908:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "4908:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4932:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "4932:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "4887:20:9",
																			"nodeType": "YulIdentifier",
																			"src": "4887:20:9"
																		},
																		"nativeSrc": "4887:53:9",
																		"nodeType": "YulFunctionCall",
																		"src": "4887:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "4877:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "4877:6:9"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_address",
												"nativeSrc": "4483:474:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4528:9:9",
														"nodeType": "YulTypedName",
														"src": "4528:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4539:7:9",
														"nodeType": "YulTypedName",
														"src": "4539:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4551:6:9",
														"nodeType": "YulTypedName",
														"src": "4551:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "4559:6:9",
														"nodeType": "YulTypedName",
														"src": "4559:6:9",
														"type": ""
													}
												],
												"src": "4483:474:9"
											},
											{
												"body": {
													"nativeSrc": "5029:263:9",
													"nodeType": "YulBlock",
													"src": "5029:263:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "5075:83:9",
																"nodeType": "YulBlock",
																"src": "5075:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "5077:77:9",
																				"nodeType": "YulIdentifier",
																				"src": "5077:77:9"
																			},
																			"nativeSrc": "5077:79:9",
																			"nodeType": "YulFunctionCall",
																			"src": "5077:79:9"
																		},
																		"nativeSrc": "5077:79:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "5077:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5050:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "5050:7:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5059:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "5059:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5046:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "5046:3:9"
																		},
																		"nativeSrc": "5046:23:9",
																		"nodeType": "YulFunctionCall",
																		"src": "5046:23:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5071:2:9",
																		"nodeType": "YulLiteral",
																		"src": "5071:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5042:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "5042:3:9"
																},
																"nativeSrc": "5042:32:9",
																"nodeType": "YulFunctionCall",
																"src": "5042:32:9"
															},
															"nativeSrc": "5039:119:9",
															"nodeType": "YulIf",
															"src": "5039:119:9"
														},
														{
															"nativeSrc": "5168:117:9",
															"nodeType": "YulBlock",
															"src": "5168:117:9",
															"statements": [
																{
																	"nativeSrc": "5183:15:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5183:15:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5197:1:9",
																		"nodeType": "YulLiteral",
																		"src": "5197:1:9",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5187:6:9",
																			"nodeType": "YulTypedName",
																			"src": "5187:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5212:63:9",
																	"nodeType": "YulAssignment",
																	"src": "5212:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5247:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "5247:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5258:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "5258:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5243:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "5243:3:9"
																				},
																				"nativeSrc": "5243:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "5243:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5267:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "5267:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "5222:20:9",
																			"nodeType": "YulIdentifier",
																			"src": "5222:20:9"
																		},
																		"nativeSrc": "5222:53:9",
																		"nodeType": "YulFunctionCall",
																		"src": "5222:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "5212:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "5212:6:9"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "4963:329:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4999:9:9",
														"nodeType": "YulTypedName",
														"src": "4999:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "5010:7:9",
														"nodeType": "YulTypedName",
														"src": "5010:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "5022:6:9",
														"nodeType": "YulTypedName",
														"src": "5022:6:9",
														"type": ""
													}
												],
												"src": "4963:329:9"
											},
											{
												"body": {
													"nativeSrc": "5381:391:9",
													"nodeType": "YulBlock",
													"src": "5381:391:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "5427:83:9",
																"nodeType": "YulBlock",
																"src": "5427:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "5429:77:9",
																				"nodeType": "YulIdentifier",
																				"src": "5429:77:9"
																			},
																			"nativeSrc": "5429:79:9",
																			"nodeType": "YulFunctionCall",
																			"src": "5429:79:9"
																		},
																		"nativeSrc": "5429:79:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "5429:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5402:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "5402:7:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5411:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "5411:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5398:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "5398:3:9"
																		},
																		"nativeSrc": "5398:23:9",
																		"nodeType": "YulFunctionCall",
																		"src": "5398:23:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5423:2:9",
																		"nodeType": "YulLiteral",
																		"src": "5423:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5394:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "5394:3:9"
																},
																"nativeSrc": "5394:32:9",
																"nodeType": "YulFunctionCall",
																"src": "5394:32:9"
															},
															"nativeSrc": "5391:119:9",
															"nodeType": "YulIf",
															"src": "5391:119:9"
														},
														{
															"nativeSrc": "5520:117:9",
															"nodeType": "YulBlock",
															"src": "5520:117:9",
															"statements": [
																{
																	"nativeSrc": "5535:15:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5535:15:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5549:1:9",
																		"nodeType": "YulLiteral",
																		"src": "5549:1:9",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5539:6:9",
																			"nodeType": "YulTypedName",
																			"src": "5539:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5564:63:9",
																	"nodeType": "YulAssignment",
																	"src": "5564:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5599:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "5599:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5610:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "5610:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5595:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "5595:3:9"
																				},
																				"nativeSrc": "5595:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "5595:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5619:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "5619:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "5574:20:9",
																			"nodeType": "YulIdentifier",
																			"src": "5574:20:9"
																		},
																		"nativeSrc": "5574:53:9",
																		"nodeType": "YulFunctionCall",
																		"src": "5574:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "5564:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "5564:6:9"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "5647:118:9",
															"nodeType": "YulBlock",
															"src": "5647:118:9",
															"statements": [
																{
																	"nativeSrc": "5662:16:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5662:16:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5676:2:9",
																		"nodeType": "YulLiteral",
																		"src": "5676:2:9",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5666:6:9",
																			"nodeType": "YulTypedName",
																			"src": "5666:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5692:63:9",
																	"nodeType": "YulAssignment",
																	"src": "5692:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5727:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "5727:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5738:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "5738:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5723:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "5723:3:9"
																				},
																				"nativeSrc": "5723:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "5723:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5747:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "5747:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "5702:20:9",
																			"nodeType": "YulIdentifier",
																			"src": "5702:20:9"
																		},
																		"nativeSrc": "5702:53:9",
																		"nodeType": "YulFunctionCall",
																		"src": "5702:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "5692:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "5692:6:9"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256",
												"nativeSrc": "5298:474:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5343:9:9",
														"nodeType": "YulTypedName",
														"src": "5343:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "5354:7:9",
														"nodeType": "YulTypedName",
														"src": "5354:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "5366:6:9",
														"nodeType": "YulTypedName",
														"src": "5366:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "5374:6:9",
														"nodeType": "YulTypedName",
														"src": "5374:6:9",
														"type": ""
													}
												],
												"src": "5298:474:9"
											},
											{
												"body": {
													"nativeSrc": "5844:263:9",
													"nodeType": "YulBlock",
													"src": "5844:263:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "5890:83:9",
																"nodeType": "YulBlock",
																"src": "5890:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "5892:77:9",
																				"nodeType": "YulIdentifier",
																				"src": "5892:77:9"
																			},
																			"nativeSrc": "5892:79:9",
																			"nodeType": "YulFunctionCall",
																			"src": "5892:79:9"
																		},
																		"nativeSrc": "5892:79:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "5892:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5865:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "5865:7:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5874:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "5874:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5861:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "5861:3:9"
																		},
																		"nativeSrc": "5861:23:9",
																		"nodeType": "YulFunctionCall",
																		"src": "5861:23:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5886:2:9",
																		"nodeType": "YulLiteral",
																		"src": "5886:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5857:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "5857:3:9"
																},
																"nativeSrc": "5857:32:9",
																"nodeType": "YulFunctionCall",
																"src": "5857:32:9"
															},
															"nativeSrc": "5854:119:9",
															"nodeType": "YulIf",
															"src": "5854:119:9"
														},
														{
															"nativeSrc": "5983:117:9",
															"nodeType": "YulBlock",
															"src": "5983:117:9",
															"statements": [
																{
																	"nativeSrc": "5998:15:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5998:15:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6012:1:9",
																		"nodeType": "YulLiteral",
																		"src": "6012:1:9",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6002:6:9",
																			"nodeType": "YulTypedName",
																			"src": "6002:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6027:63:9",
																	"nodeType": "YulAssignment",
																	"src": "6027:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6062:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "6062:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6073:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "6073:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6058:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "6058:3:9"
																				},
																				"nativeSrc": "6058:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "6058:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6082:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "6082:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "6037:20:9",
																			"nodeType": "YulIdentifier",
																			"src": "6037:20:9"
																		},
																		"nativeSrc": "6037:53:9",
																		"nodeType": "YulFunctionCall",
																		"src": "6037:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "6027:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "6027:6:9"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "5778:329:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5814:9:9",
														"nodeType": "YulTypedName",
														"src": "5814:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "5825:7:9",
														"nodeType": "YulTypedName",
														"src": "5825:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "5837:6:9",
														"nodeType": "YulTypedName",
														"src": "5837:6:9",
														"type": ""
													}
												],
												"src": "5778:329:9"
											},
											{
												"body": {
													"nativeSrc": "6345:531:9",
													"nodeType": "YulBlock",
													"src": "6345:531:9",
													"statements": [
														{
															"nativeSrc": "6355:27:9",
															"nodeType": "YulAssignment",
															"src": "6355:27:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6367:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "6367:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6378:3:9",
																		"nodeType": "YulLiteral",
																		"src": "6378:3:9",
																		"type": "",
																		"value": "192"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6363:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "6363:3:9"
																},
																"nativeSrc": "6363:19:9",
																"nodeType": "YulFunctionCall",
																"src": "6363:19:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6355:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "6355:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "6436:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "6436:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6449:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "6449:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6460:1:9",
																				"nodeType": "YulLiteral",
																				"src": "6460:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6445:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "6445:3:9"
																		},
																		"nativeSrc": "6445:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "6445:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "6392:43:9",
																	"nodeType": "YulIdentifier",
																	"src": "6392:43:9"
																},
																"nativeSrc": "6392:71:9",
																"nodeType": "YulFunctionCall",
																"src": "6392:71:9"
															},
															"nativeSrc": "6392:71:9",
															"nodeType": "YulExpressionStatement",
															"src": "6392:71:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "6517:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "6517:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6530:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "6530:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6541:2:9",
																				"nodeType": "YulLiteral",
																				"src": "6541:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6526:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "6526:3:9"
																		},
																		"nativeSrc": "6526:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "6526:18:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "6473:43:9",
																	"nodeType": "YulIdentifier",
																	"src": "6473:43:9"
																},
																"nativeSrc": "6473:72:9",
																"nodeType": "YulFunctionCall",
																"src": "6473:72:9"
															},
															"nativeSrc": "6473:72:9",
															"nodeType": "YulExpressionStatement",
															"src": "6473:72:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "6599:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "6599:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6612:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "6612:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6623:2:9",
																				"nodeType": "YulLiteral",
																				"src": "6623:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6608:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "6608:3:9"
																		},
																		"nativeSrc": "6608:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "6608:18:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "6555:43:9",
																	"nodeType": "YulIdentifier",
																	"src": "6555:43:9"
																},
																"nativeSrc": "6555:72:9",
																"nodeType": "YulFunctionCall",
																"src": "6555:72:9"
															},
															"nativeSrc": "6555:72:9",
															"nodeType": "YulExpressionStatement",
															"src": "6555:72:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value3",
																		"nativeSrc": "6681:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "6681:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6694:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "6694:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6705:2:9",
																				"nodeType": "YulLiteral",
																				"src": "6705:2:9",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6690:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "6690:3:9"
																		},
																		"nativeSrc": "6690:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "6690:18:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "6637:43:9",
																	"nodeType": "YulIdentifier",
																	"src": "6637:43:9"
																},
																"nativeSrc": "6637:72:9",
																"nodeType": "YulFunctionCall",
																"src": "6637:72:9"
															},
															"nativeSrc": "6637:72:9",
															"nodeType": "YulExpressionStatement",
															"src": "6637:72:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value4",
																		"nativeSrc": "6763:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "6763:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6776:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "6776:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6787:3:9",
																				"nodeType": "YulLiteral",
																				"src": "6787:3:9",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6772:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "6772:3:9"
																		},
																		"nativeSrc": "6772:19:9",
																		"nodeType": "YulFunctionCall",
																		"src": "6772:19:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "6719:43:9",
																	"nodeType": "YulIdentifier",
																	"src": "6719:43:9"
																},
																"nativeSrc": "6719:73:9",
																"nodeType": "YulFunctionCall",
																"src": "6719:73:9"
															},
															"nativeSrc": "6719:73:9",
															"nodeType": "YulExpressionStatement",
															"src": "6719:73:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value5",
																		"nativeSrc": "6840:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "6840:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6853:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "6853:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6864:3:9",
																				"nodeType": "YulLiteral",
																				"src": "6864:3:9",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6849:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "6849:3:9"
																		},
																		"nativeSrc": "6849:19:9",
																		"nodeType": "YulFunctionCall",
																		"src": "6849:19:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "6802:37:9",
																	"nodeType": "YulIdentifier",
																	"src": "6802:37:9"
																},
																"nativeSrc": "6802:67:9",
																"nodeType": "YulFunctionCall",
																"src": "6802:67:9"
															},
															"nativeSrc": "6802:67:9",
															"nodeType": "YulExpressionStatement",
															"src": "6802:67:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256_t_uint256_t_address_t_bool__to_t_address_t_uint256_t_uint256_t_uint256_t_address_t_bool__fromStack_reversed",
												"nativeSrc": "6113:763:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6277:9:9",
														"nodeType": "YulTypedName",
														"src": "6277:9:9",
														"type": ""
													},
													{
														"name": "value5",
														"nativeSrc": "6289:6:9",
														"nodeType": "YulTypedName",
														"src": "6289:6:9",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "6297:6:9",
														"nodeType": "YulTypedName",
														"src": "6297:6:9",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "6305:6:9",
														"nodeType": "YulTypedName",
														"src": "6305:6:9",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "6313:6:9",
														"nodeType": "YulTypedName",
														"src": "6313:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "6321:6:9",
														"nodeType": "YulTypedName",
														"src": "6321:6:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "6329:6:9",
														"nodeType": "YulTypedName",
														"src": "6329:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6340:4:9",
														"nodeType": "YulTypedName",
														"src": "6340:4:9",
														"type": ""
													}
												],
												"src": "6113:763:9"
											},
											{
												"body": {
													"nativeSrc": "6978:73:9",
													"nodeType": "YulBlock",
													"src": "6978:73:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6995:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "6995:3:9"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "7000:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "7000:6:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6988:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "6988:6:9"
																},
																"nativeSrc": "6988:19:9",
																"nodeType": "YulFunctionCall",
																"src": "6988:19:9"
															},
															"nativeSrc": "6988:19:9",
															"nodeType": "YulExpressionStatement",
															"src": "6988:19:9"
														},
														{
															"nativeSrc": "7016:29:9",
															"nodeType": "YulAssignment",
															"src": "7016:29:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7035:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "7035:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7040:4:9",
																		"nodeType": "YulLiteral",
																		"src": "7040:4:9",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7031:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "7031:3:9"
																},
																"nativeSrc": "7031:14:9",
																"nodeType": "YulFunctionCall",
																"src": "7031:14:9"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "7016:11:9",
																	"nodeType": "YulIdentifier",
																	"src": "7016:11:9"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "6882:169:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "6950:3:9",
														"nodeType": "YulTypedName",
														"src": "6950:3:9",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "6955:6:9",
														"nodeType": "YulTypedName",
														"src": "6955:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "6966:11:9",
														"nodeType": "YulTypedName",
														"src": "6966:11:9",
														"type": ""
													}
												],
												"src": "6882:169:9"
											},
											{
												"body": {
													"nativeSrc": "7163:72:9",
													"nodeType": "YulBlock",
													"src": "7163:72:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "7185:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "7185:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7193:1:9",
																				"nodeType": "YulLiteral",
																				"src": "7193:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7181:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "7181:3:9"
																		},
																		"nativeSrc": "7181:14:9",
																		"nodeType": "YulFunctionCall",
																		"src": "7181:14:9"
																	},
																	{
																		"hexValue": "5072696365206d7573742062652067726561746572207468616e2030",
																		"kind": "string",
																		"nativeSrc": "7197:30:9",
																		"nodeType": "YulLiteral",
																		"src": "7197:30:9",
																		"type": "",
																		"value": "Price must be greater than 0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7174:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "7174:6:9"
																},
																"nativeSrc": "7174:54:9",
																"nodeType": "YulFunctionCall",
																"src": "7174:54:9"
															},
															"nativeSrc": "7174:54:9",
															"nodeType": "YulExpressionStatement",
															"src": "7174:54:9"
														}
													]
												},
												"name": "store_literal_in_memory_f496d2a6b8c6dfd2fdeb51133639f7cbcc6985234f7207231dd11f4a16998dde",
												"nativeSrc": "7057:178:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "7155:6:9",
														"nodeType": "YulTypedName",
														"src": "7155:6:9",
														"type": ""
													}
												],
												"src": "7057:178:9"
											},
											{
												"body": {
													"nativeSrc": "7387:220:9",
													"nodeType": "YulBlock",
													"src": "7387:220:9",
													"statements": [
														{
															"nativeSrc": "7397:74:9",
															"nodeType": "YulAssignment",
															"src": "7397:74:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7463:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "7463:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7468:2:9",
																		"nodeType": "YulLiteral",
																		"src": "7468:2:9",
																		"type": "",
																		"value": "28"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "7404:58:9",
																	"nodeType": "YulIdentifier",
																	"src": "7404:58:9"
																},
																"nativeSrc": "7404:67:9",
																"nodeType": "YulFunctionCall",
																"src": "7404:67:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "7397:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "7397:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7569:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "7569:3:9"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_f496d2a6b8c6dfd2fdeb51133639f7cbcc6985234f7207231dd11f4a16998dde",
																	"nativeSrc": "7480:88:9",
																	"nodeType": "YulIdentifier",
																	"src": "7480:88:9"
																},
																"nativeSrc": "7480:93:9",
																"nodeType": "YulFunctionCall",
																"src": "7480:93:9"
															},
															"nativeSrc": "7480:93:9",
															"nodeType": "YulExpressionStatement",
															"src": "7480:93:9"
														},
														{
															"nativeSrc": "7582:19:9",
															"nodeType": "YulAssignment",
															"src": "7582:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7593:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "7593:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7598:2:9",
																		"nodeType": "YulLiteral",
																		"src": "7598:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7589:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "7589:3:9"
																},
																"nativeSrc": "7589:12:9",
																"nodeType": "YulFunctionCall",
																"src": "7589:12:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "7582:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "7582:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_f496d2a6b8c6dfd2fdeb51133639f7cbcc6985234f7207231dd11f4a16998dde_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "7241:366:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "7375:3:9",
														"nodeType": "YulTypedName",
														"src": "7375:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "7383:3:9",
														"nodeType": "YulTypedName",
														"src": "7383:3:9",
														"type": ""
													}
												],
												"src": "7241:366:9"
											},
											{
												"body": {
													"nativeSrc": "7784:248:9",
													"nodeType": "YulBlock",
													"src": "7784:248:9",
													"statements": [
														{
															"nativeSrc": "7794:26:9",
															"nodeType": "YulAssignment",
															"src": "7794:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7806:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "7806:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7817:2:9",
																		"nodeType": "YulLiteral",
																		"src": "7817:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7802:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "7802:3:9"
																},
																"nativeSrc": "7802:18:9",
																"nodeType": "YulFunctionCall",
																"src": "7802:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7794:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "7794:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7841:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "7841:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7852:1:9",
																				"nodeType": "YulLiteral",
																				"src": "7852:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7837:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "7837:3:9"
																		},
																		"nativeSrc": "7837:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "7837:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "7860:4:9",
																				"nodeType": "YulIdentifier",
																				"src": "7860:4:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "7866:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "7866:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "7856:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "7856:3:9"
																		},
																		"nativeSrc": "7856:20:9",
																		"nodeType": "YulFunctionCall",
																		"src": "7856:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7830:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "7830:6:9"
																},
																"nativeSrc": "7830:47:9",
																"nodeType": "YulFunctionCall",
																"src": "7830:47:9"
															},
															"nativeSrc": "7830:47:9",
															"nodeType": "YulExpressionStatement",
															"src": "7830:47:9"
														},
														{
															"nativeSrc": "7886:139:9",
															"nodeType": "YulAssignment",
															"src": "7886:139:9",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "8020:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "8020:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_f496d2a6b8c6dfd2fdeb51133639f7cbcc6985234f7207231dd11f4a16998dde_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "7894:124:9",
																	"nodeType": "YulIdentifier",
																	"src": "7894:124:9"
																},
																"nativeSrc": "7894:131:9",
																"nodeType": "YulFunctionCall",
																"src": "7894:131:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7886:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "7886:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_f496d2a6b8c6dfd2fdeb51133639f7cbcc6985234f7207231dd11f4a16998dde__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "7613:419:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7764:9:9",
														"nodeType": "YulTypedName",
														"src": "7764:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7779:4:9",
														"nodeType": "YulTypedName",
														"src": "7779:4:9",
														"type": ""
													}
												],
												"src": "7613:419:9"
											},
											{
												"body": {
													"nativeSrc": "8144:116:9",
													"nodeType": "YulBlock",
													"src": "8144:116:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "8166:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "8166:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8174:1:9",
																				"nodeType": "YulLiteral",
																				"src": "8174:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8162:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "8162:3:9"
																		},
																		"nativeSrc": "8162:14:9",
																		"nodeType": "YulFunctionCall",
																		"src": "8162:14:9"
																	},
																	{
																		"hexValue": "546f74616c20736861726573206d757374206265206772656174657220746861",
																		"kind": "string",
																		"nativeSrc": "8178:34:9",
																		"nodeType": "YulLiteral",
																		"src": "8178:34:9",
																		"type": "",
																		"value": "Total shares must be greater tha"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8155:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "8155:6:9"
																},
																"nativeSrc": "8155:58:9",
																"nodeType": "YulFunctionCall",
																"src": "8155:58:9"
															},
															"nativeSrc": "8155:58:9",
															"nodeType": "YulExpressionStatement",
															"src": "8155:58:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "8234:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "8234:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8242:2:9",
																				"nodeType": "YulLiteral",
																				"src": "8242:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8230:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "8230:3:9"
																		},
																		"nativeSrc": "8230:15:9",
																		"nodeType": "YulFunctionCall",
																		"src": "8230:15:9"
																	},
																	{
																		"hexValue": "6e2030",
																		"kind": "string",
																		"nativeSrc": "8247:5:9",
																		"nodeType": "YulLiteral",
																		"src": "8247:5:9",
																		"type": "",
																		"value": "n 0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8223:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "8223:6:9"
																},
																"nativeSrc": "8223:30:9",
																"nodeType": "YulFunctionCall",
																"src": "8223:30:9"
															},
															"nativeSrc": "8223:30:9",
															"nodeType": "YulExpressionStatement",
															"src": "8223:30:9"
														}
													]
												},
												"name": "store_literal_in_memory_2b57b42f08fffb4ec4084ecc30661f6abc2751da5a541cc8e00f347dcfafc705",
												"nativeSrc": "8038:222:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "8136:6:9",
														"nodeType": "YulTypedName",
														"src": "8136:6:9",
														"type": ""
													}
												],
												"src": "8038:222:9"
											},
											{
												"body": {
													"nativeSrc": "8412:220:9",
													"nodeType": "YulBlock",
													"src": "8412:220:9",
													"statements": [
														{
															"nativeSrc": "8422:74:9",
															"nodeType": "YulAssignment",
															"src": "8422:74:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8488:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "8488:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8493:2:9",
																		"nodeType": "YulLiteral",
																		"src": "8493:2:9",
																		"type": "",
																		"value": "35"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "8429:58:9",
																	"nodeType": "YulIdentifier",
																	"src": "8429:58:9"
																},
																"nativeSrc": "8429:67:9",
																"nodeType": "YulFunctionCall",
																"src": "8429:67:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "8422:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "8422:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8594:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "8594:3:9"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_2b57b42f08fffb4ec4084ecc30661f6abc2751da5a541cc8e00f347dcfafc705",
																	"nativeSrc": "8505:88:9",
																	"nodeType": "YulIdentifier",
																	"src": "8505:88:9"
																},
																"nativeSrc": "8505:93:9",
																"nodeType": "YulFunctionCall",
																"src": "8505:93:9"
															},
															"nativeSrc": "8505:93:9",
															"nodeType": "YulExpressionStatement",
															"src": "8505:93:9"
														},
														{
															"nativeSrc": "8607:19:9",
															"nodeType": "YulAssignment",
															"src": "8607:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8618:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "8618:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8623:2:9",
																		"nodeType": "YulLiteral",
																		"src": "8623:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8614:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "8614:3:9"
																},
																"nativeSrc": "8614:12:9",
																"nodeType": "YulFunctionCall",
																"src": "8614:12:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "8607:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "8607:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_2b57b42f08fffb4ec4084ecc30661f6abc2751da5a541cc8e00f347dcfafc705_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "8266:366:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "8400:3:9",
														"nodeType": "YulTypedName",
														"src": "8400:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "8408:3:9",
														"nodeType": "YulTypedName",
														"src": "8408:3:9",
														"type": ""
													}
												],
												"src": "8266:366:9"
											},
											{
												"body": {
													"nativeSrc": "8809:248:9",
													"nodeType": "YulBlock",
													"src": "8809:248:9",
													"statements": [
														{
															"nativeSrc": "8819:26:9",
															"nodeType": "YulAssignment",
															"src": "8819:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8831:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "8831:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8842:2:9",
																		"nodeType": "YulLiteral",
																		"src": "8842:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8827:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "8827:3:9"
																},
																"nativeSrc": "8827:18:9",
																"nodeType": "YulFunctionCall",
																"src": "8827:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8819:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "8819:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8866:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "8866:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8877:1:9",
																				"nodeType": "YulLiteral",
																				"src": "8877:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8862:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "8862:3:9"
																		},
																		"nativeSrc": "8862:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "8862:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "8885:4:9",
																				"nodeType": "YulIdentifier",
																				"src": "8885:4:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "8891:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "8891:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "8881:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "8881:3:9"
																		},
																		"nativeSrc": "8881:20:9",
																		"nodeType": "YulFunctionCall",
																		"src": "8881:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8855:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "8855:6:9"
																},
																"nativeSrc": "8855:47:9",
																"nodeType": "YulFunctionCall",
																"src": "8855:47:9"
															},
															"nativeSrc": "8855:47:9",
															"nodeType": "YulExpressionStatement",
															"src": "8855:47:9"
														},
														{
															"nativeSrc": "8911:139:9",
															"nodeType": "YulAssignment",
															"src": "8911:139:9",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "9045:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "9045:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_2b57b42f08fffb4ec4084ecc30661f6abc2751da5a541cc8e00f347dcfafc705_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "8919:124:9",
																	"nodeType": "YulIdentifier",
																	"src": "8919:124:9"
																},
																"nativeSrc": "8919:131:9",
																"nodeType": "YulFunctionCall",
																"src": "8919:131:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8911:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "8911:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_2b57b42f08fffb4ec4084ecc30661f6abc2751da5a541cc8e00f347dcfafc705__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "8638:419:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8789:9:9",
														"nodeType": "YulTypedName",
														"src": "8789:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8804:4:9",
														"nodeType": "YulTypedName",
														"src": "8804:4:9",
														"type": ""
													}
												],
												"src": "8638:419:9"
											},
											{
												"body": {
													"nativeSrc": "9217:288:9",
													"nodeType": "YulBlock",
													"src": "9217:288:9",
													"statements": [
														{
															"nativeSrc": "9227:26:9",
															"nodeType": "YulAssignment",
															"src": "9227:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9239:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "9239:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9250:2:9",
																		"nodeType": "YulLiteral",
																		"src": "9250:2:9",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9235:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "9235:3:9"
																},
																"nativeSrc": "9235:18:9",
																"nodeType": "YulFunctionCall",
																"src": "9235:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9227:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "9227:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "9307:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "9307:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9320:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "9320:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9331:1:9",
																				"nodeType": "YulLiteral",
																				"src": "9331:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9316:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "9316:3:9"
																		},
																		"nativeSrc": "9316:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "9316:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "9263:43:9",
																	"nodeType": "YulIdentifier",
																	"src": "9263:43:9"
																},
																"nativeSrc": "9263:71:9",
																"nodeType": "YulFunctionCall",
																"src": "9263:71:9"
															},
															"nativeSrc": "9263:71:9",
															"nodeType": "YulExpressionStatement",
															"src": "9263:71:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "9388:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "9388:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9401:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "9401:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9412:2:9",
																				"nodeType": "YulLiteral",
																				"src": "9412:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9397:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "9397:3:9"
																		},
																		"nativeSrc": "9397:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "9397:18:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "9344:43:9",
																	"nodeType": "YulIdentifier",
																	"src": "9344:43:9"
																},
																"nativeSrc": "9344:72:9",
																"nodeType": "YulFunctionCall",
																"src": "9344:72:9"
															},
															"nativeSrc": "9344:72:9",
															"nodeType": "YulExpressionStatement",
															"src": "9344:72:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "9470:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "9470:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9483:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "9483:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9494:2:9",
																				"nodeType": "YulLiteral",
																				"src": "9494:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9479:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "9479:3:9"
																		},
																		"nativeSrc": "9479:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "9479:18:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "9426:43:9",
																	"nodeType": "YulIdentifier",
																	"src": "9426:43:9"
																},
																"nativeSrc": "9426:72:9",
																"nodeType": "YulFunctionCall",
																"src": "9426:72:9"
															},
															"nativeSrc": "9426:72:9",
															"nodeType": "YulExpressionStatement",
															"src": "9426:72:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "9063:442:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9173:9:9",
														"nodeType": "YulTypedName",
														"src": "9173:9:9",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "9185:6:9",
														"nodeType": "YulTypedName",
														"src": "9185:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "9193:6:9",
														"nodeType": "YulTypedName",
														"src": "9193:6:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "9201:6:9",
														"nodeType": "YulTypedName",
														"src": "9201:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9212:4:9",
														"nodeType": "YulTypedName",
														"src": "9212:4:9",
														"type": ""
													}
												],
												"src": "9063:442:9"
											},
											{
												"body": {
													"nativeSrc": "9539:152:9",
													"nodeType": "YulBlock",
													"src": "9539:152:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9556:1:9",
																		"nodeType": "YulLiteral",
																		"src": "9556:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9559:77:9",
																		"nodeType": "YulLiteral",
																		"src": "9559:77:9",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9549:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "9549:6:9"
																},
																"nativeSrc": "9549:88:9",
																"nodeType": "YulFunctionCall",
																"src": "9549:88:9"
															},
															"nativeSrc": "9549:88:9",
															"nodeType": "YulExpressionStatement",
															"src": "9549:88:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9653:1:9",
																		"nodeType": "YulLiteral",
																		"src": "9653:1:9",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9656:4:9",
																		"nodeType": "YulLiteral",
																		"src": "9656:4:9",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9646:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "9646:6:9"
																},
																"nativeSrc": "9646:15:9",
																"nodeType": "YulFunctionCall",
																"src": "9646:15:9"
															},
															"nativeSrc": "9646:15:9",
															"nodeType": "YulExpressionStatement",
															"src": "9646:15:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9677:1:9",
																		"nodeType": "YulLiteral",
																		"src": "9677:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9680:4:9",
																		"nodeType": "YulLiteral",
																		"src": "9680:4:9",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "9670:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "9670:6:9"
																},
																"nativeSrc": "9670:15:9",
																"nodeType": "YulFunctionCall",
																"src": "9670:15:9"
															},
															"nativeSrc": "9670:15:9",
															"nodeType": "YulExpressionStatement",
															"src": "9670:15:9"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "9511:180:9",
												"nodeType": "YulFunctionDefinition",
												"src": "9511:180:9"
											},
											{
												"body": {
													"nativeSrc": "9740:190:9",
													"nodeType": "YulBlock",
													"src": "9740:190:9",
													"statements": [
														{
															"nativeSrc": "9750:33:9",
															"nodeType": "YulAssignment",
															"src": "9750:33:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "9777:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "9777:5:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "9759:17:9",
																	"nodeType": "YulIdentifier",
																	"src": "9759:17:9"
																},
																"nativeSrc": "9759:24:9",
																"nodeType": "YulFunctionCall",
																"src": "9759:24:9"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "9750:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "9750:5:9"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "9873:22:9",
																"nodeType": "YulBlock",
																"src": "9873:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "9875:16:9",
																				"nodeType": "YulIdentifier",
																				"src": "9875:16:9"
																			},
																			"nativeSrc": "9875:18:9",
																			"nodeType": "YulFunctionCall",
																			"src": "9875:18:9"
																		},
																		"nativeSrc": "9875:18:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "9875:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "9798:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "9798:5:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9805:66:9",
																		"nodeType": "YulLiteral",
																		"src": "9805:66:9",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "9795:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "9795:2:9"
																},
																"nativeSrc": "9795:77:9",
																"nodeType": "YulFunctionCall",
																"src": "9795:77:9"
															},
															"nativeSrc": "9792:103:9",
															"nodeType": "YulIf",
															"src": "9792:103:9"
														},
														{
															"nativeSrc": "9904:20:9",
															"nodeType": "YulAssignment",
															"src": "9904:20:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "9915:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "9915:5:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9922:1:9",
																		"nodeType": "YulLiteral",
																		"src": "9922:1:9",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9911:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "9911:3:9"
																},
																"nativeSrc": "9911:13:9",
																"nodeType": "YulFunctionCall",
																"src": "9911:13:9"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "9904:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "9904:3:9"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nativeSrc": "9697:233:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "9726:5:9",
														"nodeType": "YulTypedName",
														"src": "9726:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "9736:3:9",
														"nodeType": "YulTypedName",
														"src": "9736:3:9",
														"type": ""
													}
												],
												"src": "9697:233:9"
											},
											{
												"body": {
													"nativeSrc": "10042:117:9",
													"nodeType": "YulBlock",
													"src": "10042:117:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "10064:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "10064:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10072:1:9",
																				"nodeType": "YulLiteral",
																				"src": "10072:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10060:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "10060:3:9"
																		},
																		"nativeSrc": "10060:14:9",
																		"nodeType": "YulFunctionCall",
																		"src": "10060:14:9"
																	},
																	{
																		"hexValue": "4f6e6c7920746865206f776e65722063616e2066696e616c697a652074686520",
																		"kind": "string",
																		"nativeSrc": "10076:34:9",
																		"nodeType": "YulLiteral",
																		"src": "10076:34:9",
																		"type": "",
																		"value": "Only the owner can finalize the "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10053:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "10053:6:9"
																},
																"nativeSrc": "10053:58:9",
																"nodeType": "YulFunctionCall",
																"src": "10053:58:9"
															},
															"nativeSrc": "10053:58:9",
															"nodeType": "YulExpressionStatement",
															"src": "10053:58:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "10132:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "10132:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10140:2:9",
																				"nodeType": "YulLiteral",
																				"src": "10140:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10128:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "10128:3:9"
																		},
																		"nativeSrc": "10128:15:9",
																		"nodeType": "YulFunctionCall",
																		"src": "10128:15:9"
																	},
																	{
																		"hexValue": "73616c65",
																		"kind": "string",
																		"nativeSrc": "10145:6:9",
																		"nodeType": "YulLiteral",
																		"src": "10145:6:9",
																		"type": "",
																		"value": "sale"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10121:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "10121:6:9"
																},
																"nativeSrc": "10121:31:9",
																"nodeType": "YulFunctionCall",
																"src": "10121:31:9"
															},
															"nativeSrc": "10121:31:9",
															"nodeType": "YulExpressionStatement",
															"src": "10121:31:9"
														}
													]
												},
												"name": "store_literal_in_memory_13b23e2daf0d0a1df4943827ff941ed4e12d820426db25dc1af93122c029577d",
												"nativeSrc": "9936:223:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "10034:6:9",
														"nodeType": "YulTypedName",
														"src": "10034:6:9",
														"type": ""
													}
												],
												"src": "9936:223:9"
											},
											{
												"body": {
													"nativeSrc": "10311:220:9",
													"nodeType": "YulBlock",
													"src": "10311:220:9",
													"statements": [
														{
															"nativeSrc": "10321:74:9",
															"nodeType": "YulAssignment",
															"src": "10321:74:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10387:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "10387:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10392:2:9",
																		"nodeType": "YulLiteral",
																		"src": "10392:2:9",
																		"type": "",
																		"value": "36"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "10328:58:9",
																	"nodeType": "YulIdentifier",
																	"src": "10328:58:9"
																},
																"nativeSrc": "10328:67:9",
																"nodeType": "YulFunctionCall",
																"src": "10328:67:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "10321:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "10321:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10493:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "10493:3:9"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_13b23e2daf0d0a1df4943827ff941ed4e12d820426db25dc1af93122c029577d",
																	"nativeSrc": "10404:88:9",
																	"nodeType": "YulIdentifier",
																	"src": "10404:88:9"
																},
																"nativeSrc": "10404:93:9",
																"nodeType": "YulFunctionCall",
																"src": "10404:93:9"
															},
															"nativeSrc": "10404:93:9",
															"nodeType": "YulExpressionStatement",
															"src": "10404:93:9"
														},
														{
															"nativeSrc": "10506:19:9",
															"nodeType": "YulAssignment",
															"src": "10506:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10517:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "10517:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10522:2:9",
																		"nodeType": "YulLiteral",
																		"src": "10522:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10513:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "10513:3:9"
																},
																"nativeSrc": "10513:12:9",
																"nodeType": "YulFunctionCall",
																"src": "10513:12:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "10506:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "10506:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_13b23e2daf0d0a1df4943827ff941ed4e12d820426db25dc1af93122c029577d_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "10165:366:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "10299:3:9",
														"nodeType": "YulTypedName",
														"src": "10299:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "10307:3:9",
														"nodeType": "YulTypedName",
														"src": "10307:3:9",
														"type": ""
													}
												],
												"src": "10165:366:9"
											},
											{
												"body": {
													"nativeSrc": "10708:248:9",
													"nodeType": "YulBlock",
													"src": "10708:248:9",
													"statements": [
														{
															"nativeSrc": "10718:26:9",
															"nodeType": "YulAssignment",
															"src": "10718:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10730:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "10730:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10741:2:9",
																		"nodeType": "YulLiteral",
																		"src": "10741:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10726:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "10726:3:9"
																},
																"nativeSrc": "10726:18:9",
																"nodeType": "YulFunctionCall",
																"src": "10726:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10718:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "10718:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10765:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "10765:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10776:1:9",
																				"nodeType": "YulLiteral",
																				"src": "10776:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10761:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "10761:3:9"
																		},
																		"nativeSrc": "10761:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "10761:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "10784:4:9",
																				"nodeType": "YulIdentifier",
																				"src": "10784:4:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "10790:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "10790:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "10780:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "10780:3:9"
																		},
																		"nativeSrc": "10780:20:9",
																		"nodeType": "YulFunctionCall",
																		"src": "10780:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10754:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "10754:6:9"
																},
																"nativeSrc": "10754:47:9",
																"nodeType": "YulFunctionCall",
																"src": "10754:47:9"
															},
															"nativeSrc": "10754:47:9",
															"nodeType": "YulExpressionStatement",
															"src": "10754:47:9"
														},
														{
															"nativeSrc": "10810:139:9",
															"nodeType": "YulAssignment",
															"src": "10810:139:9",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "10944:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "10944:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_13b23e2daf0d0a1df4943827ff941ed4e12d820426db25dc1af93122c029577d_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "10818:124:9",
																	"nodeType": "YulIdentifier",
																	"src": "10818:124:9"
																},
																"nativeSrc": "10818:131:9",
																"nodeType": "YulFunctionCall",
																"src": "10818:131:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10810:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "10810:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_13b23e2daf0d0a1df4943827ff941ed4e12d820426db25dc1af93122c029577d__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "10537:419:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10688:9:9",
														"nodeType": "YulTypedName",
														"src": "10688:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10703:4:9",
														"nodeType": "YulTypedName",
														"src": "10703:4:9",
														"type": ""
													}
												],
												"src": "10537:419:9"
											},
											{
												"body": {
													"nativeSrc": "11068:70:9",
													"nodeType": "YulBlock",
													"src": "11068:70:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "11090:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "11090:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11098:1:9",
																				"nodeType": "YulLiteral",
																				"src": "11098:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11086:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "11086:3:9"
																		},
																		"nativeSrc": "11086:14:9",
																		"nodeType": "YulFunctionCall",
																		"src": "11086:14:9"
																	},
																	{
																		"hexValue": "53686172657320617265207374696c6c20617661696c61626c65",
																		"kind": "string",
																		"nativeSrc": "11102:28:9",
																		"nodeType": "YulLiteral",
																		"src": "11102:28:9",
																		"type": "",
																		"value": "Shares are still available"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11079:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "11079:6:9"
																},
																"nativeSrc": "11079:52:9",
																"nodeType": "YulFunctionCall",
																"src": "11079:52:9"
															},
															"nativeSrc": "11079:52:9",
															"nodeType": "YulExpressionStatement",
															"src": "11079:52:9"
														}
													]
												},
												"name": "store_literal_in_memory_cd3c9b624963ff71668384fe70850a7de10eb909bb47674cc0e83a0ab696e2b4",
												"nativeSrc": "10962:176:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "11060:6:9",
														"nodeType": "YulTypedName",
														"src": "11060:6:9",
														"type": ""
													}
												],
												"src": "10962:176:9"
											},
											{
												"body": {
													"nativeSrc": "11290:220:9",
													"nodeType": "YulBlock",
													"src": "11290:220:9",
													"statements": [
														{
															"nativeSrc": "11300:74:9",
															"nodeType": "YulAssignment",
															"src": "11300:74:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11366:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "11366:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11371:2:9",
																		"nodeType": "YulLiteral",
																		"src": "11371:2:9",
																		"type": "",
																		"value": "26"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "11307:58:9",
																	"nodeType": "YulIdentifier",
																	"src": "11307:58:9"
																},
																"nativeSrc": "11307:67:9",
																"nodeType": "YulFunctionCall",
																"src": "11307:67:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "11300:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "11300:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11472:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "11472:3:9"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_cd3c9b624963ff71668384fe70850a7de10eb909bb47674cc0e83a0ab696e2b4",
																	"nativeSrc": "11383:88:9",
																	"nodeType": "YulIdentifier",
																	"src": "11383:88:9"
																},
																"nativeSrc": "11383:93:9",
																"nodeType": "YulFunctionCall",
																"src": "11383:93:9"
															},
															"nativeSrc": "11383:93:9",
															"nodeType": "YulExpressionStatement",
															"src": "11383:93:9"
														},
														{
															"nativeSrc": "11485:19:9",
															"nodeType": "YulAssignment",
															"src": "11485:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11496:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "11496:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11501:2:9",
																		"nodeType": "YulLiteral",
																		"src": "11501:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11492:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "11492:3:9"
																},
																"nativeSrc": "11492:12:9",
																"nodeType": "YulFunctionCall",
																"src": "11492:12:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "11485:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "11485:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_cd3c9b624963ff71668384fe70850a7de10eb909bb47674cc0e83a0ab696e2b4_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "11144:366:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "11278:3:9",
														"nodeType": "YulTypedName",
														"src": "11278:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "11286:3:9",
														"nodeType": "YulTypedName",
														"src": "11286:3:9",
														"type": ""
													}
												],
												"src": "11144:366:9"
											},
											{
												"body": {
													"nativeSrc": "11687:248:9",
													"nodeType": "YulBlock",
													"src": "11687:248:9",
													"statements": [
														{
															"nativeSrc": "11697:26:9",
															"nodeType": "YulAssignment",
															"src": "11697:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11709:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "11709:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11720:2:9",
																		"nodeType": "YulLiteral",
																		"src": "11720:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11705:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "11705:3:9"
																},
																"nativeSrc": "11705:18:9",
																"nodeType": "YulFunctionCall",
																"src": "11705:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11697:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "11697:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11744:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "11744:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11755:1:9",
																				"nodeType": "YulLiteral",
																				"src": "11755:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11740:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "11740:3:9"
																		},
																		"nativeSrc": "11740:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "11740:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "11763:4:9",
																				"nodeType": "YulIdentifier",
																				"src": "11763:4:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "11769:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "11769:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "11759:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "11759:3:9"
																		},
																		"nativeSrc": "11759:20:9",
																		"nodeType": "YulFunctionCall",
																		"src": "11759:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11733:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "11733:6:9"
																},
																"nativeSrc": "11733:47:9",
																"nodeType": "YulFunctionCall",
																"src": "11733:47:9"
															},
															"nativeSrc": "11733:47:9",
															"nodeType": "YulExpressionStatement",
															"src": "11733:47:9"
														},
														{
															"nativeSrc": "11789:139:9",
															"nodeType": "YulAssignment",
															"src": "11789:139:9",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "11923:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "11923:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_cd3c9b624963ff71668384fe70850a7de10eb909bb47674cc0e83a0ab696e2b4_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "11797:124:9",
																	"nodeType": "YulIdentifier",
																	"src": "11797:124:9"
																},
																"nativeSrc": "11797:131:9",
																"nodeType": "YulFunctionCall",
																"src": "11797:131:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11789:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "11789:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_cd3c9b624963ff71668384fe70850a7de10eb909bb47674cc0e83a0ab696e2b4__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "11516:419:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11667:9:9",
														"nodeType": "YulTypedName",
														"src": "11667:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "11682:4:9",
														"nodeType": "YulTypedName",
														"src": "11682:4:9",
														"type": ""
													}
												],
												"src": "11516:419:9"
											},
											{
												"body": {
													"nativeSrc": "12067:206:9",
													"nodeType": "YulBlock",
													"src": "12067:206:9",
													"statements": [
														{
															"nativeSrc": "12077:26:9",
															"nodeType": "YulAssignment",
															"src": "12077:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12089:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "12089:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12100:2:9",
																		"nodeType": "YulLiteral",
																		"src": "12100:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12085:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "12085:3:9"
																},
																"nativeSrc": "12085:18:9",
																"nodeType": "YulFunctionCall",
																"src": "12085:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12077:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "12077:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "12157:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "12157:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12170:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "12170:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12181:1:9",
																				"nodeType": "YulLiteral",
																				"src": "12181:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12166:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "12166:3:9"
																		},
																		"nativeSrc": "12166:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "12166:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "12113:43:9",
																	"nodeType": "YulIdentifier",
																	"src": "12113:43:9"
																},
																"nativeSrc": "12113:71:9",
																"nodeType": "YulFunctionCall",
																"src": "12113:71:9"
															},
															"nativeSrc": "12113:71:9",
															"nodeType": "YulExpressionStatement",
															"src": "12113:71:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "12238:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "12238:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12251:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "12251:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12262:2:9",
																				"nodeType": "YulLiteral",
																				"src": "12262:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12247:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "12247:3:9"
																		},
																		"nativeSrc": "12247:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "12247:18:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "12194:43:9",
																	"nodeType": "YulIdentifier",
																	"src": "12194:43:9"
																},
																"nativeSrc": "12194:72:9",
																"nodeType": "YulFunctionCall",
																"src": "12194:72:9"
															},
															"nativeSrc": "12194:72:9",
															"nodeType": "YulExpressionStatement",
															"src": "12194:72:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "11941:332:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12031:9:9",
														"nodeType": "YulTypedName",
														"src": "12031:9:9",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "12043:6:9",
														"nodeType": "YulTypedName",
														"src": "12043:6:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "12051:6:9",
														"nodeType": "YulTypedName",
														"src": "12051:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "12062:4:9",
														"nodeType": "YulTypedName",
														"src": "12062:4:9",
														"type": ""
													}
												],
												"src": "11941:332:9"
											},
											{
												"body": {
													"nativeSrc": "12319:76:9",
													"nodeType": "YulBlock",
													"src": "12319:76:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "12373:16:9",
																"nodeType": "YulBlock",
																"src": "12373:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "12382:1:9",
																					"nodeType": "YulLiteral",
																					"src": "12382:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "12385:1:9",
																					"nodeType": "YulLiteral",
																					"src": "12385:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "12375:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "12375:6:9"
																			},
																			"nativeSrc": "12375:12:9",
																			"nodeType": "YulFunctionCall",
																			"src": "12375:12:9"
																		},
																		"nativeSrc": "12375:12:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "12375:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "12342:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "12342:5:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "12364:5:9",
																						"nodeType": "YulIdentifier",
																						"src": "12364:5:9"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nativeSrc": "12349:14:9",
																					"nodeType": "YulIdentifier",
																					"src": "12349:14:9"
																				},
																				"nativeSrc": "12349:21:9",
																				"nodeType": "YulFunctionCall",
																				"src": "12349:21:9"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "12339:2:9",
																			"nodeType": "YulIdentifier",
																			"src": "12339:2:9"
																		},
																		"nativeSrc": "12339:32:9",
																		"nodeType": "YulFunctionCall",
																		"src": "12339:32:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "12332:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "12332:6:9"
																},
																"nativeSrc": "12332:40:9",
																"nodeType": "YulFunctionCall",
																"src": "12332:40:9"
															},
															"nativeSrc": "12329:60:9",
															"nodeType": "YulIf",
															"src": "12329:60:9"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nativeSrc": "12279:116:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "12312:5:9",
														"nodeType": "YulTypedName",
														"src": "12312:5:9",
														"type": ""
													}
												],
												"src": "12279:116:9"
											},
											{
												"body": {
													"nativeSrc": "12461:77:9",
													"nodeType": "YulBlock",
													"src": "12461:77:9",
													"statements": [
														{
															"nativeSrc": "12471:22:9",
															"nodeType": "YulAssignment",
															"src": "12471:22:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "12486:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "12486:6:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "12480:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "12480:5:9"
																},
																"nativeSrc": "12480:13:9",
																"nodeType": "YulFunctionCall",
																"src": "12480:13:9"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "12471:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "12471:5:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "12526:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "12526:5:9"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nativeSrc": "12502:23:9",
																	"nodeType": "YulIdentifier",
																	"src": "12502:23:9"
																},
																"nativeSrc": "12502:30:9",
																"nodeType": "YulFunctionCall",
																"src": "12502:30:9"
															},
															"nativeSrc": "12502:30:9",
															"nodeType": "YulExpressionStatement",
															"src": "12502:30:9"
														}
													]
												},
												"name": "abi_decode_t_bool_fromMemory",
												"nativeSrc": "12401:137:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "12439:6:9",
														"nodeType": "YulTypedName",
														"src": "12439:6:9",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "12447:3:9",
														"nodeType": "YulTypedName",
														"src": "12447:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "12455:5:9",
														"nodeType": "YulTypedName",
														"src": "12455:5:9",
														"type": ""
													}
												],
												"src": "12401:137:9"
											},
											{
												"body": {
													"nativeSrc": "12618:271:9",
													"nodeType": "YulBlock",
													"src": "12618:271:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "12664:83:9",
																"nodeType": "YulBlock",
																"src": "12664:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "12666:77:9",
																				"nodeType": "YulIdentifier",
																				"src": "12666:77:9"
																			},
																			"nativeSrc": "12666:79:9",
																			"nodeType": "YulFunctionCall",
																			"src": "12666:79:9"
																		},
																		"nativeSrc": "12666:79:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "12666:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "12639:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "12639:7:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "12648:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "12648:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "12635:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "12635:3:9"
																		},
																		"nativeSrc": "12635:23:9",
																		"nodeType": "YulFunctionCall",
																		"src": "12635:23:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12660:2:9",
																		"nodeType": "YulLiteral",
																		"src": "12660:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "12631:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "12631:3:9"
																},
																"nativeSrc": "12631:32:9",
																"nodeType": "YulFunctionCall",
																"src": "12631:32:9"
															},
															"nativeSrc": "12628:119:9",
															"nodeType": "YulIf",
															"src": "12628:119:9"
														},
														{
															"nativeSrc": "12757:125:9",
															"nodeType": "YulBlock",
															"src": "12757:125:9",
															"statements": [
																{
																	"nativeSrc": "12772:15:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "12772:15:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "12786:1:9",
																		"nodeType": "YulLiteral",
																		"src": "12786:1:9",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "12776:6:9",
																			"nodeType": "YulTypedName",
																			"src": "12776:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "12801:71:9",
																	"nodeType": "YulAssignment",
																	"src": "12801:71:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "12844:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "12844:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "12855:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "12855:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "12840:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "12840:3:9"
																				},
																				"nativeSrc": "12840:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "12840:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "12864:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "12864:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool_fromMemory",
																			"nativeSrc": "12811:28:9",
																			"nodeType": "YulIdentifier",
																			"src": "12811:28:9"
																		},
																		"nativeSrc": "12811:61:9",
																		"nodeType": "YulFunctionCall",
																		"src": "12811:61:9"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "12801:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "12801:6:9"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nativeSrc": "12544:345:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12588:9:9",
														"nodeType": "YulTypedName",
														"src": "12588:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "12599:7:9",
														"nodeType": "YulTypedName",
														"src": "12599:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "12611:6:9",
														"nodeType": "YulTypedName",
														"src": "12611:6:9",
														"type": ""
													}
												],
												"src": "12544:345:9"
											},
											{
												"body": {
													"nativeSrc": "13001:66:9",
													"nodeType": "YulBlock",
													"src": "13001:66:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "13023:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "13023:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13031:1:9",
																				"nodeType": "YulLiteral",
																				"src": "13031:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13019:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "13019:3:9"
																		},
																		"nativeSrc": "13019:14:9",
																		"nodeType": "YulFunctionCall",
																		"src": "13019:14:9"
																	},
																	{
																		"hexValue": "50726f7065727479206973206e6f74206c6973746564",
																		"kind": "string",
																		"nativeSrc": "13035:24:9",
																		"nodeType": "YulLiteral",
																		"src": "13035:24:9",
																		"type": "",
																		"value": "Property is not listed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13012:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "13012:6:9"
																},
																"nativeSrc": "13012:48:9",
																"nodeType": "YulFunctionCall",
																"src": "13012:48:9"
															},
															"nativeSrc": "13012:48:9",
															"nodeType": "YulExpressionStatement",
															"src": "13012:48:9"
														}
													]
												},
												"name": "store_literal_in_memory_fe58975cefc9dea6eec5cc2540c1aea6a97b8ab8cab294e509ea3b5e0121d2aa",
												"nativeSrc": "12895:172:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "12993:6:9",
														"nodeType": "YulTypedName",
														"src": "12993:6:9",
														"type": ""
													}
												],
												"src": "12895:172:9"
											},
											{
												"body": {
													"nativeSrc": "13219:220:9",
													"nodeType": "YulBlock",
													"src": "13219:220:9",
													"statements": [
														{
															"nativeSrc": "13229:74:9",
															"nodeType": "YulAssignment",
															"src": "13229:74:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13295:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "13295:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13300:2:9",
																		"nodeType": "YulLiteral",
																		"src": "13300:2:9",
																		"type": "",
																		"value": "22"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "13236:58:9",
																	"nodeType": "YulIdentifier",
																	"src": "13236:58:9"
																},
																"nativeSrc": "13236:67:9",
																"nodeType": "YulFunctionCall",
																"src": "13236:67:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "13229:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "13229:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13401:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "13401:3:9"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_fe58975cefc9dea6eec5cc2540c1aea6a97b8ab8cab294e509ea3b5e0121d2aa",
																	"nativeSrc": "13312:88:9",
																	"nodeType": "YulIdentifier",
																	"src": "13312:88:9"
																},
																"nativeSrc": "13312:93:9",
																"nodeType": "YulFunctionCall",
																"src": "13312:93:9"
															},
															"nativeSrc": "13312:93:9",
															"nodeType": "YulExpressionStatement",
															"src": "13312:93:9"
														},
														{
															"nativeSrc": "13414:19:9",
															"nodeType": "YulAssignment",
															"src": "13414:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13425:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "13425:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13430:2:9",
																		"nodeType": "YulLiteral",
																		"src": "13430:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13421:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "13421:3:9"
																},
																"nativeSrc": "13421:12:9",
																"nodeType": "YulFunctionCall",
																"src": "13421:12:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "13414:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "13414:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_fe58975cefc9dea6eec5cc2540c1aea6a97b8ab8cab294e509ea3b5e0121d2aa_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "13073:366:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "13207:3:9",
														"nodeType": "YulTypedName",
														"src": "13207:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "13215:3:9",
														"nodeType": "YulTypedName",
														"src": "13215:3:9",
														"type": ""
													}
												],
												"src": "13073:366:9"
											},
											{
												"body": {
													"nativeSrc": "13616:248:9",
													"nodeType": "YulBlock",
													"src": "13616:248:9",
													"statements": [
														{
															"nativeSrc": "13626:26:9",
															"nodeType": "YulAssignment",
															"src": "13626:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "13638:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "13638:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13649:2:9",
																		"nodeType": "YulLiteral",
																		"src": "13649:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13634:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "13634:3:9"
																},
																"nativeSrc": "13634:18:9",
																"nodeType": "YulFunctionCall",
																"src": "13634:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13626:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "13626:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13673:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "13673:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13684:1:9",
																				"nodeType": "YulLiteral",
																				"src": "13684:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13669:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "13669:3:9"
																		},
																		"nativeSrc": "13669:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "13669:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "13692:4:9",
																				"nodeType": "YulIdentifier",
																				"src": "13692:4:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "13698:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "13698:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "13688:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "13688:3:9"
																		},
																		"nativeSrc": "13688:20:9",
																		"nodeType": "YulFunctionCall",
																		"src": "13688:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13662:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "13662:6:9"
																},
																"nativeSrc": "13662:47:9",
																"nodeType": "YulFunctionCall",
																"src": "13662:47:9"
															},
															"nativeSrc": "13662:47:9",
															"nodeType": "YulExpressionStatement",
															"src": "13662:47:9"
														},
														{
															"nativeSrc": "13718:139:9",
															"nodeType": "YulAssignment",
															"src": "13718:139:9",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "13852:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "13852:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_fe58975cefc9dea6eec5cc2540c1aea6a97b8ab8cab294e509ea3b5e0121d2aa_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "13726:124:9",
																	"nodeType": "YulIdentifier",
																	"src": "13726:124:9"
																},
																"nativeSrc": "13726:131:9",
																"nodeType": "YulFunctionCall",
																"src": "13726:131:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13718:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "13718:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_fe58975cefc9dea6eec5cc2540c1aea6a97b8ab8cab294e509ea3b5e0121d2aa__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "13445:419:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "13596:9:9",
														"nodeType": "YulTypedName",
														"src": "13596:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "13611:4:9",
														"nodeType": "YulTypedName",
														"src": "13611:4:9",
														"type": ""
													}
												],
												"src": "13445:419:9"
											},
											{
												"body": {
													"nativeSrc": "13976:71:9",
													"nodeType": "YulBlock",
													"src": "13976:71:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "13998:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "13998:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14006:1:9",
																				"nodeType": "YulLiteral",
																				"src": "14006:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13994:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "13994:3:9"
																		},
																		"nativeSrc": "13994:14:9",
																		"nodeType": "YulFunctionCall",
																		"src": "13994:14:9"
																	},
																	{
																		"hexValue": "4e6f7420656e6f7567682073686172657320617661696c61626c65",
																		"kind": "string",
																		"nativeSrc": "14010:29:9",
																		"nodeType": "YulLiteral",
																		"src": "14010:29:9",
																		"type": "",
																		"value": "Not enough shares available"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13987:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "13987:6:9"
																},
																"nativeSrc": "13987:53:9",
																"nodeType": "YulFunctionCall",
																"src": "13987:53:9"
															},
															"nativeSrc": "13987:53:9",
															"nodeType": "YulExpressionStatement",
															"src": "13987:53:9"
														}
													]
												},
												"name": "store_literal_in_memory_c2664836f08f089a39d927da540bfbfc322ded0e69c3d2ff852ad8874067c6e6",
												"nativeSrc": "13870:177:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "13968:6:9",
														"nodeType": "YulTypedName",
														"src": "13968:6:9",
														"type": ""
													}
												],
												"src": "13870:177:9"
											},
											{
												"body": {
													"nativeSrc": "14199:220:9",
													"nodeType": "YulBlock",
													"src": "14199:220:9",
													"statements": [
														{
															"nativeSrc": "14209:74:9",
															"nodeType": "YulAssignment",
															"src": "14209:74:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14275:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "14275:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14280:2:9",
																		"nodeType": "YulLiteral",
																		"src": "14280:2:9",
																		"type": "",
																		"value": "27"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "14216:58:9",
																	"nodeType": "YulIdentifier",
																	"src": "14216:58:9"
																},
																"nativeSrc": "14216:67:9",
																"nodeType": "YulFunctionCall",
																"src": "14216:67:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "14209:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "14209:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14381:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "14381:3:9"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_c2664836f08f089a39d927da540bfbfc322ded0e69c3d2ff852ad8874067c6e6",
																	"nativeSrc": "14292:88:9",
																	"nodeType": "YulIdentifier",
																	"src": "14292:88:9"
																},
																"nativeSrc": "14292:93:9",
																"nodeType": "YulFunctionCall",
																"src": "14292:93:9"
															},
															"nativeSrc": "14292:93:9",
															"nodeType": "YulExpressionStatement",
															"src": "14292:93:9"
														},
														{
															"nativeSrc": "14394:19:9",
															"nodeType": "YulAssignment",
															"src": "14394:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14405:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "14405:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14410:2:9",
																		"nodeType": "YulLiteral",
																		"src": "14410:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14401:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "14401:3:9"
																},
																"nativeSrc": "14401:12:9",
																"nodeType": "YulFunctionCall",
																"src": "14401:12:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "14394:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "14394:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_c2664836f08f089a39d927da540bfbfc322ded0e69c3d2ff852ad8874067c6e6_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "14053:366:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "14187:3:9",
														"nodeType": "YulTypedName",
														"src": "14187:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "14195:3:9",
														"nodeType": "YulTypedName",
														"src": "14195:3:9",
														"type": ""
													}
												],
												"src": "14053:366:9"
											},
											{
												"body": {
													"nativeSrc": "14596:248:9",
													"nodeType": "YulBlock",
													"src": "14596:248:9",
													"statements": [
														{
															"nativeSrc": "14606:26:9",
															"nodeType": "YulAssignment",
															"src": "14606:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "14618:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "14618:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14629:2:9",
																		"nodeType": "YulLiteral",
																		"src": "14629:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14614:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "14614:3:9"
																},
																"nativeSrc": "14614:18:9",
																"nodeType": "YulFunctionCall",
																"src": "14614:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14606:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "14606:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14653:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "14653:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14664:1:9",
																				"nodeType": "YulLiteral",
																				"src": "14664:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14649:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "14649:3:9"
																		},
																		"nativeSrc": "14649:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "14649:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "14672:4:9",
																				"nodeType": "YulIdentifier",
																				"src": "14672:4:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "14678:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "14678:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "14668:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "14668:3:9"
																		},
																		"nativeSrc": "14668:20:9",
																		"nodeType": "YulFunctionCall",
																		"src": "14668:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14642:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "14642:6:9"
																},
																"nativeSrc": "14642:47:9",
																"nodeType": "YulFunctionCall",
																"src": "14642:47:9"
															},
															"nativeSrc": "14642:47:9",
															"nodeType": "YulExpressionStatement",
															"src": "14642:47:9"
														},
														{
															"nativeSrc": "14698:139:9",
															"nodeType": "YulAssignment",
															"src": "14698:139:9",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "14832:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "14832:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_c2664836f08f089a39d927da540bfbfc322ded0e69c3d2ff852ad8874067c6e6_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "14706:124:9",
																	"nodeType": "YulIdentifier",
																	"src": "14706:124:9"
																},
																"nativeSrc": "14706:131:9",
																"nodeType": "YulFunctionCall",
																"src": "14706:131:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14698:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "14698:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c2664836f08f089a39d927da540bfbfc322ded0e69c3d2ff852ad8874067c6e6__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "14425:419:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "14576:9:9",
														"nodeType": "YulTypedName",
														"src": "14576:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "14591:4:9",
														"nodeType": "YulTypedName",
														"src": "14591:4:9",
														"type": ""
													}
												],
												"src": "14425:419:9"
											},
											{
												"body": {
													"nativeSrc": "14956:117:9",
													"nodeType": "YulBlock",
													"src": "14956:117:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "14978:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "14978:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14986:1:9",
																				"nodeType": "YulLiteral",
																				"src": "14986:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14974:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "14974:3:9"
																		},
																		"nativeSrc": "14974:14:9",
																		"nodeType": "YulFunctionCall",
																		"src": "14974:14:9"
																	},
																	{
																		"hexValue": "53686172657320746f20627579206d7573742062652067726561746572207468",
																		"kind": "string",
																		"nativeSrc": "14990:34:9",
																		"nodeType": "YulLiteral",
																		"src": "14990:34:9",
																		"type": "",
																		"value": "Shares to buy must be greater th"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14967:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "14967:6:9"
																},
																"nativeSrc": "14967:58:9",
																"nodeType": "YulFunctionCall",
																"src": "14967:58:9"
															},
															"nativeSrc": "14967:58:9",
															"nodeType": "YulExpressionStatement",
															"src": "14967:58:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "15046:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "15046:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15054:2:9",
																				"nodeType": "YulLiteral",
																				"src": "15054:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15042:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "15042:3:9"
																		},
																		"nativeSrc": "15042:15:9",
																		"nodeType": "YulFunctionCall",
																		"src": "15042:15:9"
																	},
																	{
																		"hexValue": "616e2030",
																		"kind": "string",
																		"nativeSrc": "15059:6:9",
																		"nodeType": "YulLiteral",
																		"src": "15059:6:9",
																		"type": "",
																		"value": "an 0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15035:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "15035:6:9"
																},
																"nativeSrc": "15035:31:9",
																"nodeType": "YulFunctionCall",
																"src": "15035:31:9"
															},
															"nativeSrc": "15035:31:9",
															"nodeType": "YulExpressionStatement",
															"src": "15035:31:9"
														}
													]
												},
												"name": "store_literal_in_memory_fc24bcfbd025f2a9f173aad2479d5b4b312d679ab7aa91e42dd3551e03a420b8",
												"nativeSrc": "14850:223:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "14948:6:9",
														"nodeType": "YulTypedName",
														"src": "14948:6:9",
														"type": ""
													}
												],
												"src": "14850:223:9"
											},
											{
												"body": {
													"nativeSrc": "15225:220:9",
													"nodeType": "YulBlock",
													"src": "15225:220:9",
													"statements": [
														{
															"nativeSrc": "15235:74:9",
															"nodeType": "YulAssignment",
															"src": "15235:74:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15301:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "15301:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15306:2:9",
																		"nodeType": "YulLiteral",
																		"src": "15306:2:9",
																		"type": "",
																		"value": "36"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "15242:58:9",
																	"nodeType": "YulIdentifier",
																	"src": "15242:58:9"
																},
																"nativeSrc": "15242:67:9",
																"nodeType": "YulFunctionCall",
																"src": "15242:67:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "15235:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "15235:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15407:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "15407:3:9"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_fc24bcfbd025f2a9f173aad2479d5b4b312d679ab7aa91e42dd3551e03a420b8",
																	"nativeSrc": "15318:88:9",
																	"nodeType": "YulIdentifier",
																	"src": "15318:88:9"
																},
																"nativeSrc": "15318:93:9",
																"nodeType": "YulFunctionCall",
																"src": "15318:93:9"
															},
															"nativeSrc": "15318:93:9",
															"nodeType": "YulExpressionStatement",
															"src": "15318:93:9"
														},
														{
															"nativeSrc": "15420:19:9",
															"nodeType": "YulAssignment",
															"src": "15420:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15431:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "15431:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15436:2:9",
																		"nodeType": "YulLiteral",
																		"src": "15436:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "15427:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "15427:3:9"
																},
																"nativeSrc": "15427:12:9",
																"nodeType": "YulFunctionCall",
																"src": "15427:12:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "15420:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "15420:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_fc24bcfbd025f2a9f173aad2479d5b4b312d679ab7aa91e42dd3551e03a420b8_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "15079:366:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "15213:3:9",
														"nodeType": "YulTypedName",
														"src": "15213:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "15221:3:9",
														"nodeType": "YulTypedName",
														"src": "15221:3:9",
														"type": ""
													}
												],
												"src": "15079:366:9"
											},
											{
												"body": {
													"nativeSrc": "15622:248:9",
													"nodeType": "YulBlock",
													"src": "15622:248:9",
													"statements": [
														{
															"nativeSrc": "15632:26:9",
															"nodeType": "YulAssignment",
															"src": "15632:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "15644:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "15644:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15655:2:9",
																		"nodeType": "YulLiteral",
																		"src": "15655:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "15640:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "15640:3:9"
																},
																"nativeSrc": "15640:18:9",
																"nodeType": "YulFunctionCall",
																"src": "15640:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "15632:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "15632:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "15679:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "15679:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15690:1:9",
																				"nodeType": "YulLiteral",
																				"src": "15690:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15675:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "15675:3:9"
																		},
																		"nativeSrc": "15675:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "15675:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "15698:4:9",
																				"nodeType": "YulIdentifier",
																				"src": "15698:4:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "15704:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "15704:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "15694:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "15694:3:9"
																		},
																		"nativeSrc": "15694:20:9",
																		"nodeType": "YulFunctionCall",
																		"src": "15694:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15668:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "15668:6:9"
																},
																"nativeSrc": "15668:47:9",
																"nodeType": "YulFunctionCall",
																"src": "15668:47:9"
															},
															"nativeSrc": "15668:47:9",
															"nodeType": "YulExpressionStatement",
															"src": "15668:47:9"
														},
														{
															"nativeSrc": "15724:139:9",
															"nodeType": "YulAssignment",
															"src": "15724:139:9",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "15858:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "15858:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_fc24bcfbd025f2a9f173aad2479d5b4b312d679ab7aa91e42dd3551e03a420b8_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "15732:124:9",
																	"nodeType": "YulIdentifier",
																	"src": "15732:124:9"
																},
																"nativeSrc": "15732:131:9",
																"nodeType": "YulFunctionCall",
																"src": "15732:131:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "15724:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "15724:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_fc24bcfbd025f2a9f173aad2479d5b4b312d679ab7aa91e42dd3551e03a420b8__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "15451:419:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "15602:9:9",
														"nodeType": "YulTypedName",
														"src": "15602:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "15617:4:9",
														"nodeType": "YulTypedName",
														"src": "15617:4:9",
														"type": ""
													}
												],
												"src": "15451:419:9"
											},
											{
												"body": {
													"nativeSrc": "15924:362:9",
													"nodeType": "YulBlock",
													"src": "15924:362:9",
													"statements": [
														{
															"nativeSrc": "15934:25:9",
															"nodeType": "YulAssignment",
															"src": "15934:25:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "15957:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "15957:1:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "15939:17:9",
																	"nodeType": "YulIdentifier",
																	"src": "15939:17:9"
																},
																"nativeSrc": "15939:20:9",
																"nodeType": "YulFunctionCall",
																"src": "15939:20:9"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "15934:1:9",
																	"nodeType": "YulIdentifier",
																	"src": "15934:1:9"
																}
															]
														},
														{
															"nativeSrc": "15968:25:9",
															"nodeType": "YulAssignment",
															"src": "15968:25:9",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "15991:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "15991:1:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "15973:17:9",
																	"nodeType": "YulIdentifier",
																	"src": "15973:17:9"
																},
																"nativeSrc": "15973:20:9",
																"nodeType": "YulFunctionCall",
																"src": "15973:20:9"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "15968:1:9",
																	"nodeType": "YulIdentifier",
																	"src": "15968:1:9"
																}
															]
														},
														{
															"nativeSrc": "16002:28:9",
															"nodeType": "YulVariableDeclaration",
															"src": "16002:28:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "16025:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "16025:1:9"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "16028:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "16028:1:9"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "16021:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "16021:3:9"
																},
																"nativeSrc": "16021:9:9",
																"nodeType": "YulFunctionCall",
																"src": "16021:9:9"
															},
															"variables": [
																{
																	"name": "product_raw",
																	"nativeSrc": "16006:11:9",
																	"nodeType": "YulTypedName",
																	"src": "16006:11:9",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "16039:41:9",
															"nodeType": "YulAssignment",
															"src": "16039:41:9",
															"value": {
																"arguments": [
																	{
																		"name": "product_raw",
																		"nativeSrc": "16068:11:9",
																		"nodeType": "YulIdentifier",
																		"src": "16068:11:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "16050:17:9",
																	"nodeType": "YulIdentifier",
																	"src": "16050:17:9"
																},
																"nativeSrc": "16050:30:9",
																"nodeType": "YulFunctionCall",
																"src": "16050:30:9"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "16039:7:9",
																	"nodeType": "YulIdentifier",
																	"src": "16039:7:9"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "16257:22:9",
																"nodeType": "YulBlock",
																"src": "16257:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "16259:16:9",
																				"nodeType": "YulIdentifier",
																				"src": "16259:16:9"
																			},
																			"nativeSrc": "16259:18:9",
																			"nodeType": "YulFunctionCall",
																			"src": "16259:18:9"
																		},
																		"nativeSrc": "16259:18:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "16259:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "16190:1:9",
																						"nodeType": "YulIdentifier",
																						"src": "16190:1:9"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "16183:6:9",
																					"nodeType": "YulIdentifier",
																					"src": "16183:6:9"
																				},
																				"nativeSrc": "16183:9:9",
																				"nodeType": "YulFunctionCall",
																				"src": "16183:9:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "16213:1:9",
																						"nodeType": "YulIdentifier",
																						"src": "16213:1:9"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "16220:7:9",
																								"nodeType": "YulIdentifier",
																								"src": "16220:7:9"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "16229:1:9",
																								"nodeType": "YulIdentifier",
																								"src": "16229:1:9"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "16216:3:9",
																							"nodeType": "YulIdentifier",
																							"src": "16216:3:9"
																						},
																						"nativeSrc": "16216:15:9",
																						"nodeType": "YulFunctionCall",
																						"src": "16216:15:9"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "16210:2:9",
																					"nodeType": "YulIdentifier",
																					"src": "16210:2:9"
																				},
																				"nativeSrc": "16210:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "16210:22:9"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "16163:2:9",
																			"nodeType": "YulIdentifier",
																			"src": "16163:2:9"
																		},
																		"nativeSrc": "16163:83:9",
																		"nodeType": "YulFunctionCall",
																		"src": "16163:83:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "16143:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "16143:6:9"
																},
																"nativeSrc": "16143:113:9",
																"nodeType": "YulFunctionCall",
																"src": "16143:113:9"
															},
															"nativeSrc": "16140:139:9",
															"nodeType": "YulIf",
															"src": "16140:139:9"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "15876:410:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "15907:1:9",
														"nodeType": "YulTypedName",
														"src": "15907:1:9",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "15910:1:9",
														"nodeType": "YulTypedName",
														"src": "15910:1:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "15916:7:9",
														"nodeType": "YulTypedName",
														"src": "15916:7:9",
														"type": ""
													}
												],
												"src": "15876:410:9"
											},
											{
												"body": {
													"nativeSrc": "16320:152:9",
													"nodeType": "YulBlock",
													"src": "16320:152:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "16337:1:9",
																		"nodeType": "YulLiteral",
																		"src": "16337:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16340:77:9",
																		"nodeType": "YulLiteral",
																		"src": "16340:77:9",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16330:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "16330:6:9"
																},
																"nativeSrc": "16330:88:9",
																"nodeType": "YulFunctionCall",
																"src": "16330:88:9"
															},
															"nativeSrc": "16330:88:9",
															"nodeType": "YulExpressionStatement",
															"src": "16330:88:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "16434:1:9",
																		"nodeType": "YulLiteral",
																		"src": "16434:1:9",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16437:4:9",
																		"nodeType": "YulLiteral",
																		"src": "16437:4:9",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16427:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "16427:6:9"
																},
																"nativeSrc": "16427:15:9",
																"nodeType": "YulFunctionCall",
																"src": "16427:15:9"
															},
															"nativeSrc": "16427:15:9",
															"nodeType": "YulExpressionStatement",
															"src": "16427:15:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "16458:1:9",
																		"nodeType": "YulLiteral",
																		"src": "16458:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16461:4:9",
																		"nodeType": "YulLiteral",
																		"src": "16461:4:9",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "16451:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "16451:6:9"
																},
																"nativeSrc": "16451:15:9",
																"nodeType": "YulFunctionCall",
																"src": "16451:15:9"
															},
															"nativeSrc": "16451:15:9",
															"nodeType": "YulExpressionStatement",
															"src": "16451:15:9"
														}
													]
												},
												"name": "panic_error_0x12",
												"nativeSrc": "16292:180:9",
												"nodeType": "YulFunctionDefinition",
												"src": "16292:180:9"
											},
											{
												"body": {
													"nativeSrc": "16520:143:9",
													"nodeType": "YulBlock",
													"src": "16520:143:9",
													"statements": [
														{
															"nativeSrc": "16530:25:9",
															"nodeType": "YulAssignment",
															"src": "16530:25:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "16553:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "16553:1:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "16535:17:9",
																	"nodeType": "YulIdentifier",
																	"src": "16535:17:9"
																},
																"nativeSrc": "16535:20:9",
																"nodeType": "YulFunctionCall",
																"src": "16535:20:9"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "16530:1:9",
																	"nodeType": "YulIdentifier",
																	"src": "16530:1:9"
																}
															]
														},
														{
															"nativeSrc": "16564:25:9",
															"nodeType": "YulAssignment",
															"src": "16564:25:9",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "16587:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "16587:1:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "16569:17:9",
																	"nodeType": "YulIdentifier",
																	"src": "16569:17:9"
																},
																"nativeSrc": "16569:20:9",
																"nodeType": "YulFunctionCall",
																"src": "16569:20:9"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "16564:1:9",
																	"nodeType": "YulIdentifier",
																	"src": "16564:1:9"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "16611:22:9",
																"nodeType": "YulBlock",
																"src": "16611:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nativeSrc": "16613:16:9",
																				"nodeType": "YulIdentifier",
																				"src": "16613:16:9"
																			},
																			"nativeSrc": "16613:18:9",
																			"nodeType": "YulFunctionCall",
																			"src": "16613:18:9"
																		},
																		"nativeSrc": "16613:18:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "16613:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "16608:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "16608:1:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "16601:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "16601:6:9"
																},
																"nativeSrc": "16601:9:9",
																"nodeType": "YulFunctionCall",
																"src": "16601:9:9"
															},
															"nativeSrc": "16598:35:9",
															"nodeType": "YulIf",
															"src": "16598:35:9"
														},
														{
															"nativeSrc": "16643:14:9",
															"nodeType": "YulAssignment",
															"src": "16643:14:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "16652:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "16652:1:9"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "16655:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "16655:1:9"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "16648:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "16648:3:9"
																},
																"nativeSrc": "16648:9:9",
																"nodeType": "YulFunctionCall",
																"src": "16648:9:9"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "16643:1:9",
																	"nodeType": "YulIdentifier",
																	"src": "16643:1:9"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nativeSrc": "16478:185:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "16509:1:9",
														"nodeType": "YulTypedName",
														"src": "16509:1:9",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "16512:1:9",
														"nodeType": "YulTypedName",
														"src": "16512:1:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nativeSrc": "16518:1:9",
														"nodeType": "YulTypedName",
														"src": "16518:1:9",
														"type": ""
													}
												],
												"src": "16478:185:9"
											},
											{
												"body": {
													"nativeSrc": "16714:149:9",
													"nodeType": "YulBlock",
													"src": "16714:149:9",
													"statements": [
														{
															"nativeSrc": "16724:25:9",
															"nodeType": "YulAssignment",
															"src": "16724:25:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "16747:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "16747:1:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "16729:17:9",
																	"nodeType": "YulIdentifier",
																	"src": "16729:17:9"
																},
																"nativeSrc": "16729:20:9",
																"nodeType": "YulFunctionCall",
																"src": "16729:20:9"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "16724:1:9",
																	"nodeType": "YulIdentifier",
																	"src": "16724:1:9"
																}
															]
														},
														{
															"nativeSrc": "16758:25:9",
															"nodeType": "YulAssignment",
															"src": "16758:25:9",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "16781:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "16781:1:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "16763:17:9",
																	"nodeType": "YulIdentifier",
																	"src": "16763:17:9"
																},
																"nativeSrc": "16763:20:9",
																"nodeType": "YulFunctionCall",
																"src": "16763:20:9"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "16758:1:9",
																	"nodeType": "YulIdentifier",
																	"src": "16758:1:9"
																}
															]
														},
														{
															"nativeSrc": "16792:17:9",
															"nodeType": "YulAssignment",
															"src": "16792:17:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "16804:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "16804:1:9"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "16807:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "16807:1:9"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "16800:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "16800:3:9"
																},
																"nativeSrc": "16800:9:9",
																"nodeType": "YulFunctionCall",
																"src": "16800:9:9"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nativeSrc": "16792:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "16792:4:9"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "16834:22:9",
																"nodeType": "YulBlock",
																"src": "16834:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "16836:16:9",
																				"nodeType": "YulIdentifier",
																				"src": "16836:16:9"
																			},
																			"nativeSrc": "16836:18:9",
																			"nodeType": "YulFunctionCall",
																			"src": "16836:18:9"
																		},
																		"nativeSrc": "16836:18:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "16836:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nativeSrc": "16825:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "16825:4:9"
																	},
																	{
																		"name": "x",
																		"nativeSrc": "16831:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "16831:1:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "16822:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "16822:2:9"
																},
																"nativeSrc": "16822:11:9",
																"nodeType": "YulFunctionCall",
																"src": "16822:11:9"
															},
															"nativeSrc": "16819:37:9",
															"nodeType": "YulIf",
															"src": "16819:37:9"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nativeSrc": "16669:194:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "16700:1:9",
														"nodeType": "YulTypedName",
														"src": "16700:1:9",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "16703:1:9",
														"nodeType": "YulTypedName",
														"src": "16703:1:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nativeSrc": "16709:4:9",
														"nodeType": "YulTypedName",
														"src": "16709:4:9",
														"type": ""
													}
												],
												"src": "16669:194:9"
											},
											{
												"body": {
													"nativeSrc": "16995:206:9",
													"nodeType": "YulBlock",
													"src": "16995:206:9",
													"statements": [
														{
															"nativeSrc": "17005:26:9",
															"nodeType": "YulAssignment",
															"src": "17005:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "17017:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "17017:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17028:2:9",
																		"nodeType": "YulLiteral",
																		"src": "17028:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "17013:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "17013:3:9"
																},
																"nativeSrc": "17013:18:9",
																"nodeType": "YulFunctionCall",
																"src": "17013:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "17005:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "17005:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "17085:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "17085:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "17098:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "17098:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17109:1:9",
																				"nodeType": "YulLiteral",
																				"src": "17109:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17094:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "17094:3:9"
																		},
																		"nativeSrc": "17094:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "17094:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "17041:43:9",
																	"nodeType": "YulIdentifier",
																	"src": "17041:43:9"
																},
																"nativeSrc": "17041:71:9",
																"nodeType": "YulFunctionCall",
																"src": "17041:71:9"
															},
															"nativeSrc": "17041:71:9",
															"nodeType": "YulExpressionStatement",
															"src": "17041:71:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "17166:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "17166:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "17179:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "17179:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17190:2:9",
																				"nodeType": "YulLiteral",
																				"src": "17190:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17175:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "17175:3:9"
																		},
																		"nativeSrc": "17175:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "17175:18:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "17122:43:9",
																	"nodeType": "YulIdentifier",
																	"src": "17122:43:9"
																},
																"nativeSrc": "17122:72:9",
																"nodeType": "YulFunctionCall",
																"src": "17122:72:9"
															},
															"nativeSrc": "17122:72:9",
															"nodeType": "YulExpressionStatement",
															"src": "17122:72:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "16869:332:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "16959:9:9",
														"nodeType": "YulTypedName",
														"src": "16959:9:9",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "16971:6:9",
														"nodeType": "YulTypedName",
														"src": "16971:6:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "16979:6:9",
														"nodeType": "YulTypedName",
														"src": "16979:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "16990:4:9",
														"nodeType": "YulTypedName",
														"src": "16990:4:9",
														"type": ""
													}
												],
												"src": "16869:332:9"
											},
											{
												"body": {
													"nativeSrc": "17361:288:9",
													"nodeType": "YulBlock",
													"src": "17361:288:9",
													"statements": [
														{
															"nativeSrc": "17371:26:9",
															"nodeType": "YulAssignment",
															"src": "17371:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "17383:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "17383:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17394:2:9",
																		"nodeType": "YulLiteral",
																		"src": "17394:2:9",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "17379:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "17379:3:9"
																},
																"nativeSrc": "17379:18:9",
																"nodeType": "YulFunctionCall",
																"src": "17379:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "17371:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "17371:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "17451:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "17451:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "17464:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "17464:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17475:1:9",
																				"nodeType": "YulLiteral",
																				"src": "17475:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17460:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "17460:3:9"
																		},
																		"nativeSrc": "17460:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "17460:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "17407:43:9",
																	"nodeType": "YulIdentifier",
																	"src": "17407:43:9"
																},
																"nativeSrc": "17407:71:9",
																"nodeType": "YulFunctionCall",
																"src": "17407:71:9"
															},
															"nativeSrc": "17407:71:9",
															"nodeType": "YulExpressionStatement",
															"src": "17407:71:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "17532:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "17532:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "17545:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "17545:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17556:2:9",
																				"nodeType": "YulLiteral",
																				"src": "17556:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17541:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "17541:3:9"
																		},
																		"nativeSrc": "17541:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "17541:18:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "17488:43:9",
																	"nodeType": "YulIdentifier",
																	"src": "17488:43:9"
																},
																"nativeSrc": "17488:72:9",
																"nodeType": "YulFunctionCall",
																"src": "17488:72:9"
															},
															"nativeSrc": "17488:72:9",
															"nodeType": "YulExpressionStatement",
															"src": "17488:72:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "17614:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "17614:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "17627:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "17627:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17638:2:9",
																				"nodeType": "YulLiteral",
																				"src": "17638:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17623:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "17623:3:9"
																		},
																		"nativeSrc": "17623:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "17623:18:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "17570:43:9",
																	"nodeType": "YulIdentifier",
																	"src": "17570:43:9"
																},
																"nativeSrc": "17570:72:9",
																"nodeType": "YulFunctionCall",
																"src": "17570:72:9"
															},
															"nativeSrc": "17570:72:9",
															"nodeType": "YulExpressionStatement",
															"src": "17570:72:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "17207:442:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "17317:9:9",
														"nodeType": "YulTypedName",
														"src": "17317:9:9",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "17329:6:9",
														"nodeType": "YulTypedName",
														"src": "17329:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "17337:6:9",
														"nodeType": "YulTypedName",
														"src": "17337:6:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "17345:6:9",
														"nodeType": "YulTypedName",
														"src": "17345:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "17356:4:9",
														"nodeType": "YulTypedName",
														"src": "17356:4:9",
														"type": ""
													}
												],
												"src": "17207:442:9"
											},
											{
												"body": {
													"nativeSrc": "17713:40:9",
													"nodeType": "YulBlock",
													"src": "17713:40:9",
													"statements": [
														{
															"nativeSrc": "17724:22:9",
															"nodeType": "YulAssignment",
															"src": "17724:22:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "17740:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "17740:5:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "17734:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "17734:5:9"
																},
																"nativeSrc": "17734:12:9",
																"nodeType": "YulFunctionCall",
																"src": "17734:12:9"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "17724:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "17724:6:9"
																}
															]
														}
													]
												},
												"name": "array_length_t_bytes_memory_ptr",
												"nativeSrc": "17655:98:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "17696:5:9",
														"nodeType": "YulTypedName",
														"src": "17696:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "17706:6:9",
														"nodeType": "YulTypedName",
														"src": "17706:6:9",
														"type": ""
													}
												],
												"src": "17655:98:9"
											},
											{
												"body": {
													"nativeSrc": "17872:34:9",
													"nodeType": "YulBlock",
													"src": "17872:34:9",
													"statements": [
														{
															"nativeSrc": "17882:18:9",
															"nodeType": "YulAssignment",
															"src": "17882:18:9",
															"value": {
																"name": "pos",
																"nativeSrc": "17897:3:9",
																"nodeType": "YulIdentifier",
																"src": "17897:3:9"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "17882:11:9",
																	"nodeType": "YulIdentifier",
																	"src": "17882:11:9"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "17759:147:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "17844:3:9",
														"nodeType": "YulTypedName",
														"src": "17844:3:9",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "17849:6:9",
														"nodeType": "YulTypedName",
														"src": "17849:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "17860:11:9",
														"nodeType": "YulTypedName",
														"src": "17860:11:9",
														"type": ""
													}
												],
												"src": "17759:147:9"
											},
											{
												"body": {
													"nativeSrc": "17974:77:9",
													"nodeType": "YulBlock",
													"src": "17974:77:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "17991:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "17991:3:9"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "17996:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "17996:3:9"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "18001:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "18001:6:9"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "17985:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "17985:5:9"
																},
																"nativeSrc": "17985:23:9",
																"nodeType": "YulFunctionCall",
																"src": "17985:23:9"
															},
															"nativeSrc": "17985:23:9",
															"nodeType": "YulExpressionStatement",
															"src": "17985:23:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "18028:3:9",
																				"nodeType": "YulIdentifier",
																				"src": "18028:3:9"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "18033:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "18033:6:9"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18024:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "18024:3:9"
																		},
																		"nativeSrc": "18024:16:9",
																		"nodeType": "YulFunctionCall",
																		"src": "18024:16:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18042:1:9",
																		"nodeType": "YulLiteral",
																		"src": "18042:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "18017:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "18017:6:9"
																},
																"nativeSrc": "18017:27:9",
																"nodeType": "YulFunctionCall",
																"src": "18017:27:9"
															},
															"nativeSrc": "18017:27:9",
															"nodeType": "YulExpressionStatement",
															"src": "18017:27:9"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "17912:139:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "17956:3:9",
														"nodeType": "YulTypedName",
														"src": "17956:3:9",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "17961:3:9",
														"nodeType": "YulTypedName",
														"src": "17961:3:9",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "17966:6:9",
														"nodeType": "YulTypedName",
														"src": "17966:6:9",
														"type": ""
													}
												],
												"src": "17912:139:9"
											},
											{
												"body": {
													"nativeSrc": "18165:278:9",
													"nodeType": "YulBlock",
													"src": "18165:278:9",
													"statements": [
														{
															"nativeSrc": "18175:52:9",
															"nodeType": "YulVariableDeclaration",
															"src": "18175:52:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "18221:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "18221:5:9"
																	}
																],
																"functionName": {
																	"name": "array_length_t_bytes_memory_ptr",
																	"nativeSrc": "18189:31:9",
																	"nodeType": "YulIdentifier",
																	"src": "18189:31:9"
																},
																"nativeSrc": "18189:38:9",
																"nodeType": "YulFunctionCall",
																"src": "18189:38:9"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "18179:6:9",
																	"nodeType": "YulTypedName",
																	"src": "18179:6:9",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "18236:95:9",
															"nodeType": "YulAssignment",
															"src": "18236:95:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "18319:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "18319:3:9"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "18324:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "18324:6:9"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "18243:75:9",
																	"nodeType": "YulIdentifier",
																	"src": "18243:75:9"
																},
																"nativeSrc": "18243:88:9",
																"nodeType": "YulFunctionCall",
																"src": "18243:88:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "18236:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "18236:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "18379:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "18379:5:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18386:4:9",
																				"nodeType": "YulLiteral",
																				"src": "18386:4:9",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18375:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "18375:3:9"
																		},
																		"nativeSrc": "18375:16:9",
																		"nodeType": "YulFunctionCall",
																		"src": "18375:16:9"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "18393:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "18393:3:9"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "18398:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "18398:6:9"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "18340:34:9",
																	"nodeType": "YulIdentifier",
																	"src": "18340:34:9"
																},
																"nativeSrc": "18340:65:9",
																"nodeType": "YulFunctionCall",
																"src": "18340:65:9"
															},
															"nativeSrc": "18340:65:9",
															"nodeType": "YulExpressionStatement",
															"src": "18340:65:9"
														},
														{
															"nativeSrc": "18414:23:9",
															"nodeType": "YulAssignment",
															"src": "18414:23:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "18425:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "18425:3:9"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "18430:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "18430:6:9"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "18421:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "18421:3:9"
																},
																"nativeSrc": "18421:16:9",
																"nodeType": "YulFunctionCall",
																"src": "18421:16:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "18414:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "18414:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "18057:386:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "18146:5:9",
														"nodeType": "YulTypedName",
														"src": "18146:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "18153:3:9",
														"nodeType": "YulTypedName",
														"src": "18153:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "18161:3:9",
														"nodeType": "YulTypedName",
														"src": "18161:3:9",
														"type": ""
													}
												],
												"src": "18057:386:9"
											},
											{
												"body": {
													"nativeSrc": "18583:137:9",
													"nodeType": "YulBlock",
													"src": "18583:137:9",
													"statements": [
														{
															"nativeSrc": "18594:100:9",
															"nodeType": "YulAssignment",
															"src": "18594:100:9",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "18681:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "18681:6:9"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "18690:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "18690:3:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "18601:79:9",
																	"nodeType": "YulIdentifier",
																	"src": "18601:79:9"
																},
																"nativeSrc": "18601:93:9",
																"nodeType": "YulFunctionCall",
																"src": "18601:93:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "18594:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "18594:3:9"
																}
															]
														},
														{
															"nativeSrc": "18704:10:9",
															"nodeType": "YulAssignment",
															"src": "18704:10:9",
															"value": {
																"name": "pos",
																"nativeSrc": "18711:3:9",
																"nodeType": "YulIdentifier",
																"src": "18711:3:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "18704:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "18704:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nativeSrc": "18449:271:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "18562:3:9",
														"nodeType": "YulTypedName",
														"src": "18562:3:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "18568:6:9",
														"nodeType": "YulTypedName",
														"src": "18568:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "18579:3:9",
														"nodeType": "YulTypedName",
														"src": "18579:3:9",
														"type": ""
													}
												],
												"src": "18449:271:9"
											}
										]
									},
									"contents": "{\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_IERC20_$225_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_IERC20_$225_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IERC20_$225_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_IERC20_$225__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_IERC20_$225_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_uint256t_uint256t_address(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function convert_t_contract$_IAlvaraProtocol_$2020_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_IAlvaraProtocol_$2020_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IAlvaraProtocol_$2020_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_IAlvaraProtocol_$2020__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_IAlvaraProtocol_$2020_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_uint256t_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256t_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256_t_uint256_t_address_t_bool__to_t_address_t_uint256_t_uint256_t_uint256_t_address_t_bool__fromStack_reversed(headStart , value5, value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 192)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_address_to_t_address_fromStack(value4,  add(headStart, 128))\n\n        abi_encode_t_bool_to_t_bool_fromStack(value5,  add(headStart, 160))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_f496d2a6b8c6dfd2fdeb51133639f7cbcc6985234f7207231dd11f4a16998dde(memPtr) {\n\n        mstore(add(memPtr, 0), \"Price must be greater than 0\")\n\n    }\n\n    function abi_encode_t_stringliteral_f496d2a6b8c6dfd2fdeb51133639f7cbcc6985234f7207231dd11f4a16998dde_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 28)\n        store_literal_in_memory_f496d2a6b8c6dfd2fdeb51133639f7cbcc6985234f7207231dd11f4a16998dde(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_f496d2a6b8c6dfd2fdeb51133639f7cbcc6985234f7207231dd11f4a16998dde__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_f496d2a6b8c6dfd2fdeb51133639f7cbcc6985234f7207231dd11f4a16998dde_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_2b57b42f08fffb4ec4084ecc30661f6abc2751da5a541cc8e00f347dcfafc705(memPtr) {\n\n        mstore(add(memPtr, 0), \"Total shares must be greater tha\")\n\n        mstore(add(memPtr, 32), \"n 0\")\n\n    }\n\n    function abi_encode_t_stringliteral_2b57b42f08fffb4ec4084ecc30661f6abc2751da5a541cc8e00f347dcfafc705_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 35)\n        store_literal_in_memory_2b57b42f08fffb4ec4084ecc30661f6abc2751da5a541cc8e00f347dcfafc705(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_2b57b42f08fffb4ec4084ecc30661f6abc2751da5a541cc8e00f347dcfafc705__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_2b57b42f08fffb4ec4084ecc30661f6abc2751da5a541cc8e00f347dcfafc705_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function store_literal_in_memory_13b23e2daf0d0a1df4943827ff941ed4e12d820426db25dc1af93122c029577d(memPtr) {\n\n        mstore(add(memPtr, 0), \"Only the owner can finalize the \")\n\n        mstore(add(memPtr, 32), \"sale\")\n\n    }\n\n    function abi_encode_t_stringliteral_13b23e2daf0d0a1df4943827ff941ed4e12d820426db25dc1af93122c029577d_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 36)\n        store_literal_in_memory_13b23e2daf0d0a1df4943827ff941ed4e12d820426db25dc1af93122c029577d(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_13b23e2daf0d0a1df4943827ff941ed4e12d820426db25dc1af93122c029577d__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_13b23e2daf0d0a1df4943827ff941ed4e12d820426db25dc1af93122c029577d_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_cd3c9b624963ff71668384fe70850a7de10eb909bb47674cc0e83a0ab696e2b4(memPtr) {\n\n        mstore(add(memPtr, 0), \"Shares are still available\")\n\n    }\n\n    function abi_encode_t_stringliteral_cd3c9b624963ff71668384fe70850a7de10eb909bb47674cc0e83a0ab696e2b4_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 26)\n        store_literal_in_memory_cd3c9b624963ff71668384fe70850a7de10eb909bb47674cc0e83a0ab696e2b4(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_cd3c9b624963ff71668384fe70850a7de10eb909bb47674cc0e83a0ab696e2b4__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_cd3c9b624963ff71668384fe70850a7de10eb909bb47674cc0e83a0ab696e2b4_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function store_literal_in_memory_fe58975cefc9dea6eec5cc2540c1aea6a97b8ab8cab294e509ea3b5e0121d2aa(memPtr) {\n\n        mstore(add(memPtr, 0), \"Property is not listed\")\n\n    }\n\n    function abi_encode_t_stringliteral_fe58975cefc9dea6eec5cc2540c1aea6a97b8ab8cab294e509ea3b5e0121d2aa_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 22)\n        store_literal_in_memory_fe58975cefc9dea6eec5cc2540c1aea6a97b8ab8cab294e509ea3b5e0121d2aa(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_fe58975cefc9dea6eec5cc2540c1aea6a97b8ab8cab294e509ea3b5e0121d2aa__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_fe58975cefc9dea6eec5cc2540c1aea6a97b8ab8cab294e509ea3b5e0121d2aa_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_c2664836f08f089a39d927da540bfbfc322ded0e69c3d2ff852ad8874067c6e6(memPtr) {\n\n        mstore(add(memPtr, 0), \"Not enough shares available\")\n\n    }\n\n    function abi_encode_t_stringliteral_c2664836f08f089a39d927da540bfbfc322ded0e69c3d2ff852ad8874067c6e6_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 27)\n        store_literal_in_memory_c2664836f08f089a39d927da540bfbfc322ded0e69c3d2ff852ad8874067c6e6(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_c2664836f08f089a39d927da540bfbfc322ded0e69c3d2ff852ad8874067c6e6__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_c2664836f08f089a39d927da540bfbfc322ded0e69c3d2ff852ad8874067c6e6_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_fc24bcfbd025f2a9f173aad2479d5b4b312d679ab7aa91e42dd3551e03a420b8(memPtr) {\n\n        mstore(add(memPtr, 0), \"Shares to buy must be greater th\")\n\n        mstore(add(memPtr, 32), \"an 0\")\n\n    }\n\n    function abi_encode_t_stringliteral_fc24bcfbd025f2a9f173aad2479d5b4b312d679ab7aa91e42dd3551e03a420b8_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 36)\n        store_literal_in_memory_fc24bcfbd025f2a9f173aad2479d5b4b312d679ab7aa91e42dd3551e03a420b8(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_fc24bcfbd025f2a9f173aad2479d5b4b312d679ab7aa91e42dd3551e03a420b8__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_fc24bcfbd025f2a9f173aad2479d5b4b312d679ab7aa91e42dd3551e03a420b8_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n\n        mcopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value0) -> end {\n\n        pos := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        end := pos\n    }\n\n}\n",
									"id": 9,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b50600436106100e8575f3560e01c80638da5cb5b1161008a578063baf52c7711610064578063baf52c77146101d8578063d2bcdc6014610208578063f2fde38b14610224578063f7b1080814610240576100e8565b80638da5cb5b14610180578063b41b936d1461019e578063b4d346be146101bc576100e8565b80635c975abb116100c65780635c975abb14610132578063715018a6146101505780638456cb591461015a57806386aa217e14610164576100e8565b80633013ce29146100ec57806339500f341461010a5780633f4ba83a14610128575b5f80fd5b6100f4610275565b604051610101919061115d565b60405180910390f35b61011261029a565b60405161011f919061118e565b60405180910390f35b6101306102a0565b005b61013a6102b2565b60405161014791906111c1565b60405180910390f35b6101586102c7565b005b6101626102da565b005b61017e60048036038101906101799190611243565b6102ec565b005b610188610522565b60405161019591906112a2565b60405180910390f35b6101a6610549565b6040516101b391906112db565b60405180910390f35b6101d660048036038101906101d191906112f4565b61056e565b005b6101f260048036038101906101ed9190611332565b61078d565b6040516101ff91906111c1565b60405180910390f35b610222600480360381019061021d919061135d565b61082e565b005b61023e6004803603810190610239919061139b565b610a04565b005b61025a60048036038101906102559190611332565b610a88565b60405161026c969594939291906113c6565b60405180910390f35b60035f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60025481565b6102a8610b0b565b6102b0610b92565b565b5f8060149054906101000a900460ff16905090565b6102cf610b0b565b6102d85f610bf3565b565b6102e2610b0b565b6102ea610cb4565b565b6102f4610d16565b5f8311610336576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161032d9061147f565b60405180910390fd5b5f8211610378576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161036f9061150d565b60405180910390fd5b6040518060c001604052803373ffffffffffffffffffffffffffffffffffffffff1681526020018481526020018381526020018381526020018273ffffffffffffffffffffffffffffffffffffffff1681526020016001151581525060015f60025481526020019081526020015f205f820151815f015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506020820151816001015560408201518160020155606082015181600301556080820151816004015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060a08201518160040160146101000a81548160ff0219169083151502179055509050503373ffffffffffffffffffffffffffffffffffffffff167f2c479e2e638a3a97a6f194336f17f298b4ec7145f37c7d35ff6346f9cd4a003060025485856040516104fe9392919061152b565b60405180910390a260025f8154809291906105189061158d565b9190505550505050565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60045f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b610576610d16565b5f60015f8481526020019081526020015f2090503373ffffffffffffffffffffffffffffffffffffffff16815f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461061a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161061190611644565b60405180910390fd5b5f816003015414610660576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610657906116ac565b60405180910390fd5b5f8160040160146101000a81548160ff02191690831515021790555081815f015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505f81600101549050610733825f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff168260035f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16610d579092919063ffffffff16565b8273ffffffffffffffffffffffffffffffffffffffff167ff17a6666765db393a6218bb324c4de5cc60c9ee3b981bd102ba416effc13b89585846002015460405161077f9291906116ca565b60405180910390a250505050565b5f60045f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16637485cdc2836040518263ffffffff1660e01b81526004016107e8919061118e565b602060405180830381865afa158015610803573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610827919061171b565b9050919050565b610836610d16565b5f60015f8481526020019081526020015f2090508060040160149054906101000a900460ff1661089b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161089290611790565b60405180910390fd5b81816003015410156108e2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108d9906117f8565b60405180910390fd5b5f8211610924576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161091b90611886565b60405180910390fd5b5f816002015483836001015461093a91906118a4565b6109449190611912565b905061099433308360035f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16610dd6909392919063ffffffff16565b82826003015f8282546109a79190611942565b925050819055503373ffffffffffffffffffffffffffffffffffffffff167fd4a7a37d339805413b4085e0f8e0932dfb0a4f84f08f98a6e53673b5ee8eee1585856040516109f69291906116ca565b60405180910390a250505050565b610a0c610b0b565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610a7c575f6040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401610a7391906112a2565b60405180910390fd5b610a8581610bf3565b50565b6001602052805f5260405f205f91509050805f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690806001015490806002015490806003015490806004015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060040160149054906101000a900460ff16905086565b610b13610e58565b73ffffffffffffffffffffffffffffffffffffffff16610b31610522565b73ffffffffffffffffffffffffffffffffffffffff1614610b9057610b54610e58565b6040517f118cdaa7000000000000000000000000000000000000000000000000000000008152600401610b8791906112a2565b60405180910390fd5b565b610b9a610e5f565b5f8060146101000a81548160ff0219169083151502179055507f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa610bdc610e58565b604051610be991906112a2565b60405180910390a1565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050815f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b610cbc610d16565b60015f60146101000a81548160ff0219169083151502179055507f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258610cff610e58565b604051610d0c91906112a2565b60405180910390a1565b610d1e6102b2565b15610d55576040517fd93c066500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b610dd1838473ffffffffffffffffffffffffffffffffffffffff1663a9059cbb8585604051602401610d8a929190611975565b604051602081830303815290604052915060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050610e9f565b505050565b610e52848573ffffffffffffffffffffffffffffffffffffffff166323b872dd868686604051602401610e0b9392919061199c565b604051602081830303815290604052915060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050610e9f565b50505050565b5f33905090565b610e676102b2565b610e9d576040517f8dfc202b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b5f610ec9828473ffffffffffffffffffffffffffffffffffffffff16610f3490919063ffffffff16565b90505f815114158015610eed575080806020019051810190610eeb919061171b565b155b15610f2f57826040517f5274afe7000000000000000000000000000000000000000000000000000000008152600401610f2691906112a2565b60405180910390fd5b505050565b6060610f4183835f610f49565b905092915050565b606081471015610f9057306040517fcd786059000000000000000000000000000000000000000000000000000000008152600401610f8791906112a2565b60405180910390fd5b5f808573ffffffffffffffffffffffffffffffffffffffff168486604051610fb89190611a23565b5f6040518083038185875af1925050503d805f8114610ff2576040519150601f19603f3d011682016040523d82523d5f602084013e610ff7565b606091505b5091509150611007868383611012565b925050509392505050565b606082611027576110228261109f565b611097565b5f825114801561104d57505f8473ffffffffffffffffffffffffffffffffffffffff163b145b1561108f57836040517f9996b31500000000000000000000000000000000000000000000000000000000815260040161108691906112a2565b60405180910390fd5b819050611098565b5b9392505050565b5f815111156110b15780518082602001fd5b6040517f1425ea4200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f819050919050565b5f61112561112061111b846110e3565b611102565b6110e3565b9050919050565b5f6111368261110b565b9050919050565b5f6111478261112c565b9050919050565b6111578161113d565b82525050565b5f6020820190506111705f83018461114e565b92915050565b5f819050919050565b61118881611176565b82525050565b5f6020820190506111a15f83018461117f565b92915050565b5f8115159050919050565b6111bb816111a7565b82525050565b5f6020820190506111d45f8301846111b2565b92915050565b5f80fd5b6111e781611176565b81146111f1575f80fd5b50565b5f81359050611202816111de565b92915050565b5f611212826110e3565b9050919050565b61122281611208565b811461122c575f80fd5b50565b5f8135905061123d81611219565b92915050565b5f805f6060848603121561125a576112596111da565b5b5f611267868287016111f4565b9350506020611278868287016111f4565b92505060406112898682870161122f565b9150509250925092565b61129c81611208565b82525050565b5f6020820190506112b55f830184611293565b92915050565b5f6112c58261112c565b9050919050565b6112d5816112bb565b82525050565b5f6020820190506112ee5f8301846112cc565b92915050565b5f806040838503121561130a576113096111da565b5b5f611317858286016111f4565b92505060206113288582860161122f565b9150509250929050565b5f60208284031215611347576113466111da565b5b5f611354848285016111f4565b91505092915050565b5f8060408385031215611373576113726111da565b5b5f611380858286016111f4565b9250506020611391858286016111f4565b9150509250929050565b5f602082840312156113b0576113af6111da565b5b5f6113bd8482850161122f565b91505092915050565b5f60c0820190506113d95f830189611293565b6113e6602083018861117f565b6113f3604083018761117f565b611400606083018661117f565b61140d6080830185611293565b61141a60a08301846111b2565b979650505050505050565b5f82825260208201905092915050565b7f5072696365206d7573742062652067726561746572207468616e2030000000005f82015250565b5f611469601c83611425565b915061147482611435565b602082019050919050565b5f6020820190508181035f8301526114968161145d565b9050919050565b7f546f74616c20736861726573206d7573742062652067726561746572207468615f8201527f6e20300000000000000000000000000000000000000000000000000000000000602082015250565b5f6114f7602383611425565b91506115028261149d565b604082019050919050565b5f6020820190508181035f830152611524816114eb565b9050919050565b5f60608201905061153e5f83018661117f565b61154b602083018561117f565b611558604083018461117f565b949350505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f61159782611176565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036115c9576115c8611560565b5b600182019050919050565b7f4f6e6c7920746865206f776e65722063616e2066696e616c697a6520746865205f8201527f73616c6500000000000000000000000000000000000000000000000000000000602082015250565b5f61162e602483611425565b9150611639826115d4565b604082019050919050565b5f6020820190508181035f83015261165b81611622565b9050919050565b7f53686172657320617265207374696c6c20617661696c61626c650000000000005f82015250565b5f611696601a83611425565b91506116a182611662565b602082019050919050565b5f6020820190508181035f8301526116c38161168a565b9050919050565b5f6040820190506116dd5f83018561117f565b6116ea602083018461117f565b9392505050565b6116fa816111a7565b8114611704575f80fd5b50565b5f81519050611715816116f1565b92915050565b5f602082840312156117305761172f6111da565b5b5f61173d84828501611707565b91505092915050565b7f50726f7065727479206973206e6f74206c6973746564000000000000000000005f82015250565b5f61177a601683611425565b915061178582611746565b602082019050919050565b5f6020820190508181035f8301526117a78161176e565b9050919050565b7f4e6f7420656e6f7567682073686172657320617661696c61626c6500000000005f82015250565b5f6117e2601b83611425565b91506117ed826117ae565b602082019050919050565b5f6020820190508181035f83015261180f816117d6565b9050919050565b7f53686172657320746f20627579206d75737420626520677265617465722074685f8201527f616e203000000000000000000000000000000000000000000000000000000000602082015250565b5f611870602483611425565b915061187b82611816565b604082019050919050565b5f6020820190508181035f83015261189d81611864565b9050919050565b5f6118ae82611176565b91506118b983611176565b92508282026118c781611176565b915082820484148315176118de576118dd611560565b5b5092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f61191c82611176565b915061192783611176565b925082611937576119366118e5565b5b828204905092915050565b5f61194c82611176565b915061195783611176565b925082820390508181111561196f5761196e611560565b5b92915050565b5f6040820190506119885f830185611293565b611995602083018461117f565b9392505050565b5f6060820190506119af5f830186611293565b6119bc6020830185611293565b6119c9604083018461117f565b949350505050565b5f81519050919050565b5f81905092915050565b8281835e5f83830152505050565b5f6119fd826119d1565b611a0781856119db565b9350611a178185602086016119e5565b80840191505092915050565b5f611a2e82846119f3565b91508190509291505056fea2646970667358221220c5d1ec961e12beead9c1a38d4ef661ec8ca4601b532c67cafbfe4c75f41977d664736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xE8 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x8A JUMPI DUP1 PUSH4 0xBAF52C77 GT PUSH2 0x64 JUMPI DUP1 PUSH4 0xBAF52C77 EQ PUSH2 0x1D8 JUMPI DUP1 PUSH4 0xD2BCDC60 EQ PUSH2 0x208 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x224 JUMPI DUP1 PUSH4 0xF7B10808 EQ PUSH2 0x240 JUMPI PUSH2 0xE8 JUMP JUMPDEST DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x180 JUMPI DUP1 PUSH4 0xB41B936D EQ PUSH2 0x19E JUMPI DUP1 PUSH4 0xB4D346BE EQ PUSH2 0x1BC JUMPI PUSH2 0xE8 JUMP JUMPDEST DUP1 PUSH4 0x5C975ABB GT PUSH2 0xC6 JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x132 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x150 JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x15A JUMPI DUP1 PUSH4 0x86AA217E EQ PUSH2 0x164 JUMPI PUSH2 0xE8 JUMP JUMPDEST DUP1 PUSH4 0x3013CE29 EQ PUSH2 0xEC JUMPI DUP1 PUSH4 0x39500F34 EQ PUSH2 0x10A JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x128 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xF4 PUSH2 0x275 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x101 SWAP2 SWAP1 PUSH2 0x115D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x112 PUSH2 0x29A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x11F SWAP2 SWAP1 PUSH2 0x118E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x130 PUSH2 0x2A0 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x13A PUSH2 0x2B2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x147 SWAP2 SWAP1 PUSH2 0x11C1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x158 PUSH2 0x2C7 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x162 PUSH2 0x2DA JUMP JUMPDEST STOP JUMPDEST PUSH2 0x17E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x179 SWAP2 SWAP1 PUSH2 0x1243 JUMP JUMPDEST PUSH2 0x2EC JUMP JUMPDEST STOP JUMPDEST PUSH2 0x188 PUSH2 0x522 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x195 SWAP2 SWAP1 PUSH2 0x12A2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1A6 PUSH2 0x549 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1B3 SWAP2 SWAP1 PUSH2 0x12DB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1D6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1D1 SWAP2 SWAP1 PUSH2 0x12F4 JUMP JUMPDEST PUSH2 0x56E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1F2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1ED SWAP2 SWAP1 PUSH2 0x1332 JUMP JUMPDEST PUSH2 0x78D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1FF SWAP2 SWAP1 PUSH2 0x11C1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x222 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x21D SWAP2 SWAP1 PUSH2 0x135D JUMP JUMPDEST PUSH2 0x82E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x23E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x239 SWAP2 SWAP1 PUSH2 0x139B JUMP JUMPDEST PUSH2 0xA04 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x25A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x255 SWAP2 SWAP1 PUSH2 0x1332 JUMP JUMPDEST PUSH2 0xA88 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x26C SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x13C6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x3 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x2A8 PUSH2 0xB0B JUMP JUMPDEST PUSH2 0x2B0 PUSH2 0xB92 JUMP JUMPDEST JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x2CF PUSH2 0xB0B JUMP JUMPDEST PUSH2 0x2D8 PUSH0 PUSH2 0xBF3 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x2E2 PUSH2 0xB0B JUMP JUMPDEST PUSH2 0x2EA PUSH2 0xCB4 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x2F4 PUSH2 0xD16 JUMP JUMPDEST PUSH0 DUP4 GT PUSH2 0x336 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x32D SWAP1 PUSH2 0x147F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP3 GT PUSH2 0x378 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x36F SWAP1 PUSH2 0x150D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0xC0 ADD PUSH1 0x40 MSTORE DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 ISZERO ISZERO DUP2 MSTORE POP PUSH1 0x1 PUSH0 PUSH1 0x2 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 ADD MLOAD DUP2 PUSH0 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SSTORE PUSH1 0x80 DUP3 ADD MLOAD DUP2 PUSH1 0x4 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0xA0 DUP3 ADD MLOAD DUP2 PUSH1 0x4 ADD PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP SWAP1 POP POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x2C479E2E638A3A97A6F194336F17F298B4EC7145F37C7D35FF6346F9CD4A0030 PUSH1 0x2 SLOAD DUP6 DUP6 PUSH1 0x40 MLOAD PUSH2 0x4FE SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x152B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH1 0x2 PUSH0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x518 SWAP1 PUSH2 0x158D JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x4 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x576 PUSH2 0xD16 JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SWAP1 POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x61A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x611 SWAP1 PUSH2 0x1644 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP2 PUSH1 0x3 ADD SLOAD EQ PUSH2 0x660 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x657 SWAP1 PUSH2 0x16AC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP2 PUSH1 0x4 ADD PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 DUP2 PUSH0 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH0 DUP2 PUSH1 0x1 ADD SLOAD SWAP1 POP PUSH2 0x733 DUP3 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH1 0x3 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xD57 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xF17A6666765DB393A6218BB324C4DE5CC60C9EE3B981BD102BA416EFFC13B895 DUP6 DUP5 PUSH1 0x2 ADD SLOAD PUSH1 0x40 MLOAD PUSH2 0x77F SWAP3 SWAP2 SWAP1 PUSH2 0x16CA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x4 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x7485CDC2 DUP4 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7E8 SWAP2 SWAP1 PUSH2 0x118E JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x803 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x827 SWAP2 SWAP1 PUSH2 0x171B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x836 PUSH2 0xD16 JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SWAP1 POP DUP1 PUSH1 0x4 ADD PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x89B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x892 SWAP1 PUSH2 0x1790 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 PUSH1 0x3 ADD SLOAD LT ISZERO PUSH2 0x8E2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8D9 SWAP1 PUSH2 0x17F8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP3 GT PUSH2 0x924 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x91B SWAP1 PUSH2 0x1886 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP2 PUSH1 0x2 ADD SLOAD DUP4 DUP4 PUSH1 0x1 ADD SLOAD PUSH2 0x93A SWAP2 SWAP1 PUSH2 0x18A4 JUMP JUMPDEST PUSH2 0x944 SWAP2 SWAP1 PUSH2 0x1912 JUMP JUMPDEST SWAP1 POP PUSH2 0x994 CALLER ADDRESS DUP4 PUSH1 0x3 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xDD6 SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP3 DUP3 PUSH1 0x3 ADD PUSH0 DUP3 DUP3 SLOAD PUSH2 0x9A7 SWAP2 SWAP1 PUSH2 0x1942 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xD4A7A37D339805413B4085E0F8E0932DFB0A4F84F08F98A6E53673B5EE8EEE15 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH2 0x9F6 SWAP3 SWAP2 SWAP1 PUSH2 0x16CA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP JUMP JUMPDEST PUSH2 0xA0C PUSH2 0xB0B JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xA7C JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA73 SWAP2 SWAP1 PUSH2 0x12A2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xA85 DUP2 PUSH2 0xBF3 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP DUP1 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 DUP1 PUSH1 0x3 ADD SLOAD SWAP1 DUP1 PUSH1 0x4 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x4 ADD PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP DUP7 JUMP JUMPDEST PUSH2 0xB13 PUSH2 0xE58 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xB31 PUSH2 0x522 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xB90 JUMPI PUSH2 0xB54 PUSH2 0xE58 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB87 SWAP2 SWAP1 PUSH2 0x12A2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH2 0xB9A PUSH2 0xE5F JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA PUSH2 0xBDC PUSH2 0xE58 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xBE9 SWAP2 SWAP1 PUSH2 0x12A2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0xCBC PUSH2 0xD16 JUMP JUMPDEST PUSH1 0x1 PUSH0 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 PUSH2 0xCFF PUSH2 0xE58 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xD0C SWAP2 SWAP1 PUSH2 0x12A2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH2 0xD1E PUSH2 0x2B2 JUMP JUMPDEST ISZERO PUSH2 0xD55 JUMPI PUSH1 0x40 MLOAD PUSH32 0xD93C066500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH2 0xDD1 DUP4 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0xD8A SWAP3 SWAP2 SWAP1 PUSH2 0x1975 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0xE9F JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0xE52 DUP5 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0xE0B SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x199C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0xE9F JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xE67 PUSH2 0x2B2 JUMP JUMPDEST PUSH2 0xE9D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8DFC202B00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH2 0xEC9 DUP3 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xF34 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 MLOAD EQ ISZERO DUP1 ISZERO PUSH2 0xEED JUMPI POP DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0xEEB SWAP2 SWAP1 PUSH2 0x171B JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0xF2F JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0x5274AFE700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF26 SWAP2 SWAP1 PUSH2 0x12A2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0xF41 DUP4 DUP4 PUSH0 PUSH2 0xF49 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 SELFBALANCE LT ISZERO PUSH2 0xF90 JUMPI ADDRESS PUSH1 0x40 MLOAD PUSH32 0xCD78605900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF87 SWAP2 SWAP1 PUSH2 0x12A2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 DUP7 PUSH1 0x40 MLOAD PUSH2 0xFB8 SWAP2 SWAP1 PUSH2 0x1A23 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0xFF2 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xFF7 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x1007 DUP7 DUP4 DUP4 PUSH2 0x1012 JUMP JUMPDEST SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 PUSH2 0x1027 JUMPI PUSH2 0x1022 DUP3 PUSH2 0x109F JUMP JUMPDEST PUSH2 0x1097 JUMP JUMPDEST PUSH0 DUP3 MLOAD EQ DUP1 ISZERO PUSH2 0x104D JUMPI POP PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST ISZERO PUSH2 0x108F JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x9996B31500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1086 SWAP2 SWAP1 PUSH2 0x12A2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 SWAP1 POP PUSH2 0x1098 JUMP JUMPDEST JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD GT ISZERO PUSH2 0x10B1 JUMPI DUP1 MLOAD DUP1 DUP3 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x1425EA4200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1125 PUSH2 0x1120 PUSH2 0x111B DUP5 PUSH2 0x10E3 JUMP JUMPDEST PUSH2 0x1102 JUMP JUMPDEST PUSH2 0x10E3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1136 DUP3 PUSH2 0x110B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1147 DUP3 PUSH2 0x112C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1157 DUP2 PUSH2 0x113D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1170 PUSH0 DUP4 ADD DUP5 PUSH2 0x114E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1188 DUP2 PUSH2 0x1176 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x11A1 PUSH0 DUP4 ADD DUP5 PUSH2 0x117F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x11BB DUP2 PUSH2 0x11A7 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x11D4 PUSH0 DUP4 ADD DUP5 PUSH2 0x11B2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x11E7 DUP2 PUSH2 0x1176 JUMP JUMPDEST DUP2 EQ PUSH2 0x11F1 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1202 DUP2 PUSH2 0x11DE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1212 DUP3 PUSH2 0x10E3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1222 DUP2 PUSH2 0x1208 JUMP JUMPDEST DUP2 EQ PUSH2 0x122C JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x123D DUP2 PUSH2 0x1219 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x125A JUMPI PUSH2 0x1259 PUSH2 0x11DA JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1267 DUP7 DUP3 DUP8 ADD PUSH2 0x11F4 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1278 DUP7 DUP3 DUP8 ADD PUSH2 0x11F4 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1289 DUP7 DUP3 DUP8 ADD PUSH2 0x122F JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH2 0x129C DUP2 PUSH2 0x1208 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x12B5 PUSH0 DUP4 ADD DUP5 PUSH2 0x1293 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x12C5 DUP3 PUSH2 0x112C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x12D5 DUP2 PUSH2 0x12BB JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x12EE PUSH0 DUP4 ADD DUP5 PUSH2 0x12CC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x130A JUMPI PUSH2 0x1309 PUSH2 0x11DA JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1317 DUP6 DUP3 DUP7 ADD PUSH2 0x11F4 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1328 DUP6 DUP3 DUP7 ADD PUSH2 0x122F JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1347 JUMPI PUSH2 0x1346 PUSH2 0x11DA JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1354 DUP5 DUP3 DUP6 ADD PUSH2 0x11F4 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1373 JUMPI PUSH2 0x1372 PUSH2 0x11DA JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1380 DUP6 DUP3 DUP7 ADD PUSH2 0x11F4 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1391 DUP6 DUP3 DUP7 ADD PUSH2 0x11F4 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x13B0 JUMPI PUSH2 0x13AF PUSH2 0x11DA JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x13BD DUP5 DUP3 DUP6 ADD PUSH2 0x122F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0xC0 DUP3 ADD SWAP1 POP PUSH2 0x13D9 PUSH0 DUP4 ADD DUP10 PUSH2 0x1293 JUMP JUMPDEST PUSH2 0x13E6 PUSH1 0x20 DUP4 ADD DUP9 PUSH2 0x117F JUMP JUMPDEST PUSH2 0x13F3 PUSH1 0x40 DUP4 ADD DUP8 PUSH2 0x117F JUMP JUMPDEST PUSH2 0x1400 PUSH1 0x60 DUP4 ADD DUP7 PUSH2 0x117F JUMP JUMPDEST PUSH2 0x140D PUSH1 0x80 DUP4 ADD DUP6 PUSH2 0x1293 JUMP JUMPDEST PUSH2 0x141A PUSH1 0xA0 DUP4 ADD DUP5 PUSH2 0x11B2 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5072696365206D7573742062652067726561746572207468616E203000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1469 PUSH1 0x1C DUP4 PUSH2 0x1425 JUMP JUMPDEST SWAP2 POP PUSH2 0x1474 DUP3 PUSH2 0x1435 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1496 DUP2 PUSH2 0x145D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x546F74616C20736861726573206D757374206265206772656174657220746861 PUSH0 DUP3 ADD MSTORE PUSH32 0x6E20300000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x14F7 PUSH1 0x23 DUP4 PUSH2 0x1425 JUMP JUMPDEST SWAP2 POP PUSH2 0x1502 DUP3 PUSH2 0x149D JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1524 DUP2 PUSH2 0x14EB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x153E PUSH0 DUP4 ADD DUP7 PUSH2 0x117F JUMP JUMPDEST PUSH2 0x154B PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x117F JUMP JUMPDEST PUSH2 0x1558 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x117F JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1597 DUP3 PUSH2 0x1176 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x15C9 JUMPI PUSH2 0x15C8 PUSH2 0x1560 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F6E6C7920746865206F776E65722063616E2066696E616C697A652074686520 PUSH0 DUP3 ADD MSTORE PUSH32 0x73616C6500000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x162E PUSH1 0x24 DUP4 PUSH2 0x1425 JUMP JUMPDEST SWAP2 POP PUSH2 0x1639 DUP3 PUSH2 0x15D4 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x165B DUP2 PUSH2 0x1622 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x53686172657320617265207374696C6C20617661696C61626C65000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1696 PUSH1 0x1A DUP4 PUSH2 0x1425 JUMP JUMPDEST SWAP2 POP PUSH2 0x16A1 DUP3 PUSH2 0x1662 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x16C3 DUP2 PUSH2 0x168A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x16DD PUSH0 DUP4 ADD DUP6 PUSH2 0x117F JUMP JUMPDEST PUSH2 0x16EA PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x117F JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x16FA DUP2 PUSH2 0x11A7 JUMP JUMPDEST DUP2 EQ PUSH2 0x1704 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x1715 DUP2 PUSH2 0x16F1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1730 JUMPI PUSH2 0x172F PUSH2 0x11DA JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x173D DUP5 DUP3 DUP6 ADD PUSH2 0x1707 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x50726F7065727479206973206E6F74206C697374656400000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x177A PUSH1 0x16 DUP4 PUSH2 0x1425 JUMP JUMPDEST SWAP2 POP PUSH2 0x1785 DUP3 PUSH2 0x1746 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x17A7 DUP2 PUSH2 0x176E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E6F7420656E6F7567682073686172657320617661696C61626C650000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x17E2 PUSH1 0x1B DUP4 PUSH2 0x1425 JUMP JUMPDEST SWAP2 POP PUSH2 0x17ED DUP3 PUSH2 0x17AE JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x180F DUP2 PUSH2 0x17D6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x53686172657320746F20627579206D7573742062652067726561746572207468 PUSH0 DUP3 ADD MSTORE PUSH32 0x616E203000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1870 PUSH1 0x24 DUP4 PUSH2 0x1425 JUMP JUMPDEST SWAP2 POP PUSH2 0x187B DUP3 PUSH2 0x1816 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x189D DUP2 PUSH2 0x1864 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x18AE DUP3 PUSH2 0x1176 JUMP JUMPDEST SWAP2 POP PUSH2 0x18B9 DUP4 PUSH2 0x1176 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x18C7 DUP2 PUSH2 0x1176 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x18DE JUMPI PUSH2 0x18DD PUSH2 0x1560 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x191C DUP3 PUSH2 0x1176 JUMP JUMPDEST SWAP2 POP PUSH2 0x1927 DUP4 PUSH2 0x1176 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x1937 JUMPI PUSH2 0x1936 PUSH2 0x18E5 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x194C DUP3 PUSH2 0x1176 JUMP JUMPDEST SWAP2 POP PUSH2 0x1957 DUP4 PUSH2 0x1176 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x196F JUMPI PUSH2 0x196E PUSH2 0x1560 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1988 PUSH0 DUP4 ADD DUP6 PUSH2 0x1293 JUMP JUMPDEST PUSH2 0x1995 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x117F JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x19AF PUSH0 DUP4 ADD DUP7 PUSH2 0x1293 JUMP JUMPDEST PUSH2 0x19BC PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1293 JUMP JUMPDEST PUSH2 0x19C9 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x117F JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x19FD DUP3 PUSH2 0x19D1 JUMP JUMPDEST PUSH2 0x1A07 DUP2 DUP6 PUSH2 0x19DB JUMP JUMPDEST SWAP4 POP PUSH2 0x1A17 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x19E5 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1A2E DUP3 DUP5 PUSH2 0x19F3 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC5 0xD1 0xEC SWAP7 0x1E SLT 0xBE 0xEA 0xD9 0xC1 LOG3 DUP14 0x4E 0xF6 PUSH2 0xEC8C LOG4 PUSH1 0x1B MSTORE8 0x2C PUSH8 0xCAFBFE4C75F41977 0xD6 PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "460:3607:8:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1190:26;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1150:29;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3787:65;;;:::i;:::-;;1850:84:6;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2293:101:0;;;:::i;:::-;;3670:61:8;;;:::i;:::-;;1582:628;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1638:85:0;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1261:37:8;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3015:586;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3912:153;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2269:685;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2543:215:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1098:46:8;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;;;;;;1190:26;;;;;;;;;;;;;:::o;1150:29::-;;;;:::o;3787:65::-;1531:13:0;:11;:13::i;:::-;3835:10:8::1;:8;:10::i;:::-;3787:65::o:0;1850:84:6:-;1897:4;1920:7;;;;;;;;;;;1913:14;;1850:84;:::o;2293:101:0:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;3670:61:8:-;1531:13:0;:11;:13::i;:::-;3716:8:8::1;:6;:8::i;:::-;3670:61::o:0;1582:628::-;1474:19:6;:17;:19::i;:::-;1711:1:8::1;1703:5;:9;1695:50;;;;;;;;;;;;:::i;:::-;;;;;;;;;1777:1;1763:11;:15;1755:63;;;;;;;;;;;;:::i;:::-;;;;;;;;;1866:225;;;;;;;;1896:10;1866:225;;;;;;1927:5;1866:225;;;;1959:11;1866:225;;;;2001:11;1866:225;;;;2040:12;1866:225;;;;;;2076:4;1866:225;;;;::::0;1837:10:::1;:26;1848:14;;1837:26;;;;;;;;;;;:254;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2146:10;2115:62;;;2130:14;;2158:5;2165:11;2115:62;;;;;;;;:::i;:::-;;;;;;;;2187:14;;:16;;;;;;;;;:::i;:::-;;;;;;1582:628:::0;;;:::o;1638:85:0:-;1684:7;1710:6;;;;;;;;;;;1703:13;;1638:85;:::o;1261:37:8:-;;;;;;;;;;;;;:::o;3015:586::-;1474:19:6;:17;:19::i;:::-;3105:25:8::1;3133:10;:22;3144:10;3133:22;;;;;;;;;;;3105:50;;3191:10;3173:28;;:8;:14;;;;;;;;;;;;:28;;;3165:77;;;;;;;;;;;;:::i;:::-;;;;;;;;;3288:1;3260:8;:24;;;:29;3252:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;3359:5;3339:8;:17;;;:25;;;;;;;;;;;;;;;;;;3391:5;3374:8;:14;;;:22;;;;;;;;;;;;;;;;;;3415:20;3438:8;:14;;;3415:37;;3462:55;3488:8;:14;;;;;;;;;;;;3504:12;3462;;;;;;;;;;;:25;;;;:55;;;;;:::i;:::-;3566:5;3541:53;;;3554:10;3573:8;:20;;;3541:53;;;;;;;:::i;:::-;;;;;;;;3095:506;;3015:586:::0;;:::o;3912:153::-;3984:4;4007:14;;;;;;;;;;;:39;;;4047:10;4007:51;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4000:58;;3912:153;;;:::o;2269:685::-;1474:19:6;:17;:19::i;:::-;2367:25:8::1;2395:10;:22;2406:10;2395:22;;;;;;;;;;;2367:50;;2435:8;:17;;;;;;;;;;;;2427:52;;;;;;;;;;;;:::i;:::-;;;;;;;;;2525:11;2497:8;:24;;;:39;;2489:79;;;;;;;;;;;;:::i;:::-;;;;;;;;;2600:1;2586:11;:15;2578:64;;;;;;;;;;;;:::i;:::-;;;;;;;;;2661:18;2715:8;:20;;;2700:11;2683:8;:14;;;:28;;;;:::i;:::-;2682:53;;;;:::i;:::-;2661:74;;2745:68;2775:10;2795:4;2802:10;2745:12;;;;;;;;;;;:29;;;;:68;;;;;;:::i;:::-;2860:11;2832:8;:24;;;:39;;;;;;;:::i;:::-;;;;;;;;2923:10;2895:52;;;2911:10;2935:11;2895:52;;;;;;;:::i;:::-;;;;;;;;2357:597;;2269:685:::0;;:::o;2543:215:0:-;1531:13;:11;:13::i;:::-;2647:1:::1;2627:22;;:8;:22;;::::0;2623:91:::1;;2700:1;2672:31;;;;;;;;;;;:::i;:::-;;;;;;;;2623:91;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;1098:46:8:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1796:162:0:-;1866:12;:10;:12::i;:::-;1855:23;;:7;:5;:7::i;:::-;:23;;;1851:101;;1928:12;:10;:12::i;:::-;1901:40;;;;;;;;;;;:::i;:::-;;;;;;;;1851:101;1796:162::o;2710:117:6:-;1721:16;:14;:16::i;:::-;2778:5:::1;2768:7:::0;::::1;:15;;;;;;;;;;;;;;;;;;2798:22;2807:12;:10;:12::i;:::-;2798:22;;;;;;:::i;:::-;;;;;;;;2710:117::o:0;2912:187:0:-;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;2463:115:6:-;1474:19;:17;:19::i;:::-;2532:4:::1;2522:7;;:14;;;;;;;;;;;;;;;;;;2551:20;2558:12;:10;:12::i;:::-;2551:20;;;;;;:::i;:::-;;;;;;;;2463:115::o:0;2002:128::-;2067:8;:6;:8::i;:::-;2063:61;;;2098:15;;;;;;;;;;;;;;2063:61;2002:128::o;1303:160:3:-;1385:71;1405:5;1427;:14;;;1444:2;1448:5;1412:43;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1385:19;:71::i;:::-;1303:160;;;:::o;1702:188::-;1802:81;1822:5;1844;:18;;;1865:4;1871:2;1875:5;1829:53;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1802:19;:81::i;:::-;1702:188;;;;:::o;656:96:5:-;709:7;735:10;728:17;;656:96;:::o;2202:126:6:-;2265:8;:6;:8::i;:::-;2260:62;;2296:15;;;;;;;;;;;;;;2260:62;2202:126::o;4059:629:3:-;4478:23;4504:33;4532:4;4512:5;4504:27;;;;:33;;;;:::i;:::-;4478:59;;4572:1;4551:10;:17;:22;;:57;;;;;4589:10;4578:30;;;;;;;;;;;;:::i;:::-;4577:31;4551:57;4547:135;;;4664:5;4631:40;;;;;;;;;;;:::i;:::-;;;;;;;;4547:135;4129:559;4059:629;;:::o;2705:151:4:-;2780:12;2811:38;2833:6;2841:4;2847:1;2811:21;:38::i;:::-;2804:45;;2705:151;;;;:::o;3180:392::-;3279:12;3331:5;3307:21;:29;3303:108;;;3394:4;3359:41;;;;;;;;;;;:::i;:::-;;;;;;;;3303:108;3421:12;3435:23;3462:6;:11;;3481:5;3488:4;3462:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3420:73;;;;3510:55;3537:6;3545:7;3554:10;3510:26;:55::i;:::-;3503:62;;;;3180:392;;;;;:::o;4625:582::-;4769:12;4798:7;4793:408;;4821:19;4829:10;4821:7;:19::i;:::-;4793:408;;;5066:1;5045:10;:17;:22;:49;;;;;5093:1;5071:6;:18;;;:23;5045:49;5041:119;;;5138:6;5121:24;;;;;;;;;;;:::i;:::-;;;;;;;;5041:119;5180:10;5173:17;;;;4793:408;4625:582;;;;;;:::o;5743:516::-;5894:1;5874:10;:17;:21;5870:383;;;6102:10;6096:17;6158:15;6145:10;6141:2;6137:19;6130:44;5870:383;6225:17;;;;;;;;;;;;;;7:126:9;44:7;84:42;77:5;73:54;62:65;;7:126;;;:::o;139:60::-;167:3;188:5;181:12;;139:60;;;:::o;205:142::-;255:9;288:53;306:34;315:24;333:5;315:24;:::i;:::-;306:34;:::i;:::-;288:53;:::i;:::-;275:66;;205:142;;;:::o;353:126::-;403:9;436:37;467:5;436:37;:::i;:::-;423:50;;353:126;;;:::o;485:140::-;549:9;582:37;613:5;582:37;:::i;:::-;569:50;;485:140;;;:::o;631:159::-;732:51;777:5;732:51;:::i;:::-;727:3;720:64;631:159;;:::o;796:250::-;903:4;941:2;930:9;926:18;918:26;;954:85;1036:1;1025:9;1021:17;1012:6;954:85;:::i;:::-;796:250;;;;:::o;1052:77::-;1089:7;1118:5;1107:16;;1052:77;;;:::o;1135:118::-;1222:24;1240:5;1222:24;:::i;:::-;1217:3;1210:37;1135:118;;:::o;1259:222::-;1352:4;1390:2;1379:9;1375:18;1367:26;;1403:71;1471:1;1460:9;1456:17;1447:6;1403:71;:::i;:::-;1259:222;;;;:::o;1487:90::-;1521:7;1564:5;1557:13;1550:21;1539:32;;1487:90;;;:::o;1583:109::-;1664:21;1679:5;1664:21;:::i;:::-;1659:3;1652:34;1583:109;;:::o;1698:210::-;1785:4;1823:2;1812:9;1808:18;1800:26;;1836:65;1898:1;1887:9;1883:17;1874:6;1836:65;:::i;:::-;1698:210;;;;:::o;1995:117::-;2104:1;2101;2094:12;2241:122;2314:24;2332:5;2314:24;:::i;:::-;2307:5;2304:35;2294:63;;2353:1;2350;2343:12;2294:63;2241:122;:::o;2369:139::-;2415:5;2453:6;2440:20;2431:29;;2469:33;2496:5;2469:33;:::i;:::-;2369:139;;;;:::o;2514:96::-;2551:7;2580:24;2598:5;2580:24;:::i;:::-;2569:35;;2514:96;;;:::o;2616:122::-;2689:24;2707:5;2689:24;:::i;:::-;2682:5;2679:35;2669:63;;2728:1;2725;2718:12;2669:63;2616:122;:::o;2744:139::-;2790:5;2828:6;2815:20;2806:29;;2844:33;2871:5;2844:33;:::i;:::-;2744:139;;;;:::o;2889:619::-;2966:6;2974;2982;3031:2;3019:9;3010:7;3006:23;3002:32;2999:119;;;3037:79;;:::i;:::-;2999:119;3157:1;3182:53;3227:7;3218:6;3207:9;3203:22;3182:53;:::i;:::-;3172:63;;3128:117;3284:2;3310:53;3355:7;3346:6;3335:9;3331:22;3310:53;:::i;:::-;3300:63;;3255:118;3412:2;3438:53;3483:7;3474:6;3463:9;3459:22;3438:53;:::i;:::-;3428:63;;3383:118;2889:619;;;;;:::o;3514:118::-;3601:24;3619:5;3601:24;:::i;:::-;3596:3;3589:37;3514:118;;:::o;3638:222::-;3731:4;3769:2;3758:9;3754:18;3746:26;;3782:71;3850:1;3839:9;3835:17;3826:6;3782:71;:::i;:::-;3638:222;;;;:::o;3866:150::-;3940:9;3973:37;4004:5;3973:37;:::i;:::-;3960:50;;3866:150;;;:::o;4022:179::-;4133:61;4188:5;4133:61;:::i;:::-;4128:3;4121:74;4022:179;;:::o;4207:270::-;4324:4;4362:2;4351:9;4347:18;4339:26;;4375:95;4467:1;4456:9;4452:17;4443:6;4375:95;:::i;:::-;4207:270;;;;:::o;4483:474::-;4551:6;4559;4608:2;4596:9;4587:7;4583:23;4579:32;4576:119;;;4614:79;;:::i;:::-;4576:119;4734:1;4759:53;4804:7;4795:6;4784:9;4780:22;4759:53;:::i;:::-;4749:63;;4705:117;4861:2;4887:53;4932:7;4923:6;4912:9;4908:22;4887:53;:::i;:::-;4877:63;;4832:118;4483:474;;;;;:::o;4963:329::-;5022:6;5071:2;5059:9;5050:7;5046:23;5042:32;5039:119;;;5077:79;;:::i;:::-;5039:119;5197:1;5222:53;5267:7;5258:6;5247:9;5243:22;5222:53;:::i;:::-;5212:63;;5168:117;4963:329;;;;:::o;5298:474::-;5366:6;5374;5423:2;5411:9;5402:7;5398:23;5394:32;5391:119;;;5429:79;;:::i;:::-;5391:119;5549:1;5574:53;5619:7;5610:6;5599:9;5595:22;5574:53;:::i;:::-;5564:63;;5520:117;5676:2;5702:53;5747:7;5738:6;5727:9;5723:22;5702:53;:::i;:::-;5692:63;;5647:118;5298:474;;;;;:::o;5778:329::-;5837:6;5886:2;5874:9;5865:7;5861:23;5857:32;5854:119;;;5892:79;;:::i;:::-;5854:119;6012:1;6037:53;6082:7;6073:6;6062:9;6058:22;6037:53;:::i;:::-;6027:63;;5983:117;5778:329;;;;:::o;6113:763::-;6340:4;6378:3;6367:9;6363:19;6355:27;;6392:71;6460:1;6449:9;6445:17;6436:6;6392:71;:::i;:::-;6473:72;6541:2;6530:9;6526:18;6517:6;6473:72;:::i;:::-;6555;6623:2;6612:9;6608:18;6599:6;6555:72;:::i;:::-;6637;6705:2;6694:9;6690:18;6681:6;6637:72;:::i;:::-;6719:73;6787:3;6776:9;6772:19;6763:6;6719:73;:::i;:::-;6802:67;6864:3;6853:9;6849:19;6840:6;6802:67;:::i;:::-;6113:763;;;;;;;;;:::o;6882:169::-;6966:11;7000:6;6995:3;6988:19;7040:4;7035:3;7031:14;7016:29;;6882:169;;;;:::o;7057:178::-;7197:30;7193:1;7185:6;7181:14;7174:54;7057:178;:::o;7241:366::-;7383:3;7404:67;7468:2;7463:3;7404:67;:::i;:::-;7397:74;;7480:93;7569:3;7480:93;:::i;:::-;7598:2;7593:3;7589:12;7582:19;;7241:366;;;:::o;7613:419::-;7779:4;7817:2;7806:9;7802:18;7794:26;;7866:9;7860:4;7856:20;7852:1;7841:9;7837:17;7830:47;7894:131;8020:4;7894:131;:::i;:::-;7886:139;;7613:419;;;:::o;8038:222::-;8178:34;8174:1;8166:6;8162:14;8155:58;8247:5;8242:2;8234:6;8230:15;8223:30;8038:222;:::o;8266:366::-;8408:3;8429:67;8493:2;8488:3;8429:67;:::i;:::-;8422:74;;8505:93;8594:3;8505:93;:::i;:::-;8623:2;8618:3;8614:12;8607:19;;8266:366;;;:::o;8638:419::-;8804:4;8842:2;8831:9;8827:18;8819:26;;8891:9;8885:4;8881:20;8877:1;8866:9;8862:17;8855:47;8919:131;9045:4;8919:131;:::i;:::-;8911:139;;8638:419;;;:::o;9063:442::-;9212:4;9250:2;9239:9;9235:18;9227:26;;9263:71;9331:1;9320:9;9316:17;9307:6;9263:71;:::i;:::-;9344:72;9412:2;9401:9;9397:18;9388:6;9344:72;:::i;:::-;9426;9494:2;9483:9;9479:18;9470:6;9426:72;:::i;:::-;9063:442;;;;;;:::o;9511:180::-;9559:77;9556:1;9549:88;9656:4;9653:1;9646:15;9680:4;9677:1;9670:15;9697:233;9736:3;9759:24;9777:5;9759:24;:::i;:::-;9750:33;;9805:66;9798:5;9795:77;9792:103;;9875:18;;:::i;:::-;9792:103;9922:1;9915:5;9911:13;9904:20;;9697:233;;;:::o;9936:223::-;10076:34;10072:1;10064:6;10060:14;10053:58;10145:6;10140:2;10132:6;10128:15;10121:31;9936:223;:::o;10165:366::-;10307:3;10328:67;10392:2;10387:3;10328:67;:::i;:::-;10321:74;;10404:93;10493:3;10404:93;:::i;:::-;10522:2;10517:3;10513:12;10506:19;;10165:366;;;:::o;10537:419::-;10703:4;10741:2;10730:9;10726:18;10718:26;;10790:9;10784:4;10780:20;10776:1;10765:9;10761:17;10754:47;10818:131;10944:4;10818:131;:::i;:::-;10810:139;;10537:419;;;:::o;10962:176::-;11102:28;11098:1;11090:6;11086:14;11079:52;10962:176;:::o;11144:366::-;11286:3;11307:67;11371:2;11366:3;11307:67;:::i;:::-;11300:74;;11383:93;11472:3;11383:93;:::i;:::-;11501:2;11496:3;11492:12;11485:19;;11144:366;;;:::o;11516:419::-;11682:4;11720:2;11709:9;11705:18;11697:26;;11769:9;11763:4;11759:20;11755:1;11744:9;11740:17;11733:47;11797:131;11923:4;11797:131;:::i;:::-;11789:139;;11516:419;;;:::o;11941:332::-;12062:4;12100:2;12089:9;12085:18;12077:26;;12113:71;12181:1;12170:9;12166:17;12157:6;12113:71;:::i;:::-;12194:72;12262:2;12251:9;12247:18;12238:6;12194:72;:::i;:::-;11941:332;;;;;:::o;12279:116::-;12349:21;12364:5;12349:21;:::i;:::-;12342:5;12339:32;12329:60;;12385:1;12382;12375:12;12329:60;12279:116;:::o;12401:137::-;12455:5;12486:6;12480:13;12471:22;;12502:30;12526:5;12502:30;:::i;:::-;12401:137;;;;:::o;12544:345::-;12611:6;12660:2;12648:9;12639:7;12635:23;12631:32;12628:119;;;12666:79;;:::i;:::-;12628:119;12786:1;12811:61;12864:7;12855:6;12844:9;12840:22;12811:61;:::i;:::-;12801:71;;12757:125;12544:345;;;;:::o;12895:172::-;13035:24;13031:1;13023:6;13019:14;13012:48;12895:172;:::o;13073:366::-;13215:3;13236:67;13300:2;13295:3;13236:67;:::i;:::-;13229:74;;13312:93;13401:3;13312:93;:::i;:::-;13430:2;13425:3;13421:12;13414:19;;13073:366;;;:::o;13445:419::-;13611:4;13649:2;13638:9;13634:18;13626:26;;13698:9;13692:4;13688:20;13684:1;13673:9;13669:17;13662:47;13726:131;13852:4;13726:131;:::i;:::-;13718:139;;13445:419;;;:::o;13870:177::-;14010:29;14006:1;13998:6;13994:14;13987:53;13870:177;:::o;14053:366::-;14195:3;14216:67;14280:2;14275:3;14216:67;:::i;:::-;14209:74;;14292:93;14381:3;14292:93;:::i;:::-;14410:2;14405:3;14401:12;14394:19;;14053:366;;;:::o;14425:419::-;14591:4;14629:2;14618:9;14614:18;14606:26;;14678:9;14672:4;14668:20;14664:1;14653:9;14649:17;14642:47;14706:131;14832:4;14706:131;:::i;:::-;14698:139;;14425:419;;;:::o;14850:223::-;14990:34;14986:1;14978:6;14974:14;14967:58;15059:6;15054:2;15046:6;15042:15;15035:31;14850:223;:::o;15079:366::-;15221:3;15242:67;15306:2;15301:3;15242:67;:::i;:::-;15235:74;;15318:93;15407:3;15318:93;:::i;:::-;15436:2;15431:3;15427:12;15420:19;;15079:366;;;:::o;15451:419::-;15617:4;15655:2;15644:9;15640:18;15632:26;;15704:9;15698:4;15694:20;15690:1;15679:9;15675:17;15668:47;15732:131;15858:4;15732:131;:::i;:::-;15724:139;;15451:419;;;:::o;15876:410::-;15916:7;15939:20;15957:1;15939:20;:::i;:::-;15934:25;;15973:20;15991:1;15973:20;:::i;:::-;15968:25;;16028:1;16025;16021:9;16050:30;16068:11;16050:30;:::i;:::-;16039:41;;16229:1;16220:7;16216:15;16213:1;16210:22;16190:1;16183:9;16163:83;16140:139;;16259:18;;:::i;:::-;16140:139;15924:362;15876:410;;;;:::o;16292:180::-;16340:77;16337:1;16330:88;16437:4;16434:1;16427:15;16461:4;16458:1;16451:15;16478:185;16518:1;16535:20;16553:1;16535:20;:::i;:::-;16530:25;;16569:20;16587:1;16569:20;:::i;:::-;16564:25;;16608:1;16598:35;;16613:18;;:::i;:::-;16598:35;16655:1;16652;16648:9;16643:14;;16478:185;;;;:::o;16669:194::-;16709:4;16729:20;16747:1;16729:20;:::i;:::-;16724:25;;16763:20;16781:1;16763:20;:::i;:::-;16758:25;;16807:1;16804;16800:9;16792:17;;16831:1;16825:4;16822:11;16819:37;;;16836:18;;:::i;:::-;16819:37;16669:194;;;;:::o;16869:332::-;16990:4;17028:2;17017:9;17013:18;17005:26;;17041:71;17109:1;17098:9;17094:17;17085:6;17041:71;:::i;:::-;17122:72;17190:2;17179:9;17175:18;17166:6;17122:72;:::i;:::-;16869:332;;;;;:::o;17207:442::-;17356:4;17394:2;17383:9;17379:18;17371:26;;17407:71;17475:1;17464:9;17460:17;17451:6;17407:71;:::i;:::-;17488:72;17556:2;17545:9;17541:18;17532:6;17488:72;:::i;:::-;17570;17638:2;17627:9;17623:18;17614:6;17570:72;:::i;:::-;17207:442;;;;;;:::o;17655:98::-;17706:6;17740:5;17734:12;17724:22;;17655:98;;;:::o;17759:147::-;17860:11;17897:3;17882:18;;17759:147;;;;:::o;17912:139::-;18001:6;17996:3;17991;17985:23;18042:1;18033:6;18028:3;18024:16;18017:27;17912:139;;;:::o;18057:386::-;18161:3;18189:38;18221:5;18189:38;:::i;:::-;18243:88;18324:6;18319:3;18243:88;:::i;:::-;18236:95;;18340:65;18398:6;18393:3;18386:4;18379:5;18375:16;18340:65;:::i;:::-;18430:6;18425:3;18421:16;18414:23;;18165:278;18057:386;;;;:::o;18449:271::-;18579:3;18601:93;18690:3;18681:6;18601:93;:::i;:::-;18594:100;;18711:3;18704:10;;18449:271;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1353400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"alvaraProtocol()": "infinite",
								"finalizeSale(uint256,address)": "infinite",
								"integrateWithAlvara(uint256)": "infinite",
								"listProperty(uint256,uint256,address)": "infinite",
								"nextPropertyId()": "2471",
								"owner()": "2538",
								"pause()": "infinite",
								"paused()": "2547",
								"paymentToken()": "infinite",
								"properties(uint256)": "infinite",
								"purchaseShares(uint256,uint256)": "infinite",
								"renounceOwnership()": "infinite",
								"transferOwnership(address)": "infinite",
								"unpause()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 460,
									"end": 4067,
									"name": "PUSH",
									"source": 8,
									"value": "80"
								},
								{
									"begin": 460,
									"end": 4067,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 460,
									"end": 4067,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 1363,
									"end": 1537,
									"name": "CALLVALUE",
									"source": 8
								},
								{
									"begin": 1363,
									"end": 1537,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 1363,
									"end": 1537,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 1363,
									"end": 1537,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 1363,
									"end": 1537,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 1363,
									"end": 1537,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1363,
									"end": 1537,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 1363,
									"end": 1537,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 1363,
									"end": 1537,
									"name": "tag",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 1363,
									"end": 1537,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1363,
									"end": 1537,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1363,
									"end": 1537,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 1363,
									"end": 1537,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 1363,
									"end": 1537,
									"name": "PUSHSIZE",
									"source": 8
								},
								{
									"begin": 1363,
									"end": 1537,
									"name": "CODESIZE",
									"source": 8
								},
								{
									"begin": 1363,
									"end": 1537,
									"name": "SUB",
									"source": 8
								},
								{
									"begin": 1363,
									"end": 1537,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 1363,
									"end": 1537,
									"name": "PUSHSIZE",
									"source": 8
								},
								{
									"begin": 1363,
									"end": 1537,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 1363,
									"end": 1537,
									"name": "CODECOPY",
									"source": 8
								},
								{
									"begin": 1363,
									"end": 1537,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1363,
									"end": 1537,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1363,
									"end": 1537,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 1363,
									"end": 1537,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 1363,
									"end": 1537,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 1363,
									"end": 1537,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1363,
									"end": 1537,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 1363,
									"end": 1537,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1363,
									"end": 1537,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "2"
								},
								{
									"begin": 1363,
									"end": 1537,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 1363,
									"end": 1537,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1363,
									"end": 1537,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "3"
								},
								{
									"begin": 1363,
									"end": 1537,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1363,
									"end": 1537,
									"name": "tag",
									"source": 8,
									"value": "2"
								},
								{
									"begin": 1363,
									"end": 1537,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1438,
									"end": 1448,
									"name": "CALLER",
									"source": 8
								},
								{
									"begin": 1297,
									"end": 1298,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1285,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1350,
									"end": 1351,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 1322,
									"end": 1353,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "tag",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "tag",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 1392,
									"end": 1404,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "tag",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1225,
									"end": 1412,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1241,
									"end": 1246,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1231,
									"end": 1238,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1231,
									"end": 1238,
									"name": "PUSH",
									"source": 6,
									"value": "14"
								},
								{
									"begin": 1231,
									"end": 1246,
									"name": "PUSH",
									"source": 6,
									"value": "100"
								},
								{
									"begin": 1231,
									"end": 1246,
									"name": "EXP",
									"source": 6
								},
								{
									"begin": 1231,
									"end": 1246,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1231,
									"end": 1246,
									"name": "SLOAD",
									"source": 6
								},
								{
									"begin": 1231,
									"end": 1246,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1231,
									"end": 1246,
									"name": "PUSH",
									"source": 6,
									"value": "FF"
								},
								{
									"begin": 1231,
									"end": 1246,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 1231,
									"end": 1246,
									"name": "NOT",
									"source": 6
								},
								{
									"begin": 1231,
									"end": 1246,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 1231,
									"end": 1246,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1231,
									"end": 1246,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 1231,
									"end": 1246,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 1231,
									"end": 1246,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 1231,
									"end": 1246,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 1231,
									"end": 1246,
									"name": "OR",
									"source": 6
								},
								{
									"begin": 1231,
									"end": 1246,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1231,
									"end": 1246,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 1231,
									"end": 1246,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1475,
									"end": 1488,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1460,
									"end": 1472,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 8,
									"value": "3"
								},
								{
									"begin": 1460,
									"end": 1472,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1460,
									"end": 1488,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 8,
									"value": "100"
								},
								{
									"begin": 1460,
									"end": 1488,
									"modifierDepth": 1,
									"name": "EXP",
									"source": 8
								},
								{
									"begin": 1460,
									"end": 1488,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1460,
									"end": 1488,
									"modifierDepth": 1,
									"name": "SLOAD",
									"source": 8
								},
								{
									"begin": 1460,
									"end": 1488,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1460,
									"end": 1488,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 8,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1460,
									"end": 1488,
									"modifierDepth": 1,
									"name": "MUL",
									"source": 8
								},
								{
									"begin": 1460,
									"end": 1488,
									"modifierDepth": 1,
									"name": "NOT",
									"source": 8
								},
								{
									"begin": 1460,
									"end": 1488,
									"modifierDepth": 1,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 1460,
									"end": 1488,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1460,
									"end": 1488,
									"modifierDepth": 1,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 1460,
									"end": 1488,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 8,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1460,
									"end": 1488,
									"modifierDepth": 1,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 1460,
									"end": 1488,
									"modifierDepth": 1,
									"name": "MUL",
									"source": 8
								},
								{
									"begin": 1460,
									"end": 1488,
									"modifierDepth": 1,
									"name": "OR",
									"source": 8
								},
								{
									"begin": 1460,
									"end": 1488,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1460,
									"end": 1488,
									"modifierDepth": 1,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 1460,
									"end": 1488,
									"modifierDepth": 1,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1515,
									"end": 1530,
									"modifierDepth": 1,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 1498,
									"end": 1512,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 8,
									"value": "4"
								},
								{
									"begin": 1498,
									"end": 1512,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1498,
									"end": 1530,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 8,
									"value": "100"
								},
								{
									"begin": 1498,
									"end": 1530,
									"modifierDepth": 1,
									"name": "EXP",
									"source": 8
								},
								{
									"begin": 1498,
									"end": 1530,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1498,
									"end": 1530,
									"modifierDepth": 1,
									"name": "SLOAD",
									"source": 8
								},
								{
									"begin": 1498,
									"end": 1530,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1498,
									"end": 1530,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 8,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1498,
									"end": 1530,
									"modifierDepth": 1,
									"name": "MUL",
									"source": 8
								},
								{
									"begin": 1498,
									"end": 1530,
									"modifierDepth": 1,
									"name": "NOT",
									"source": 8
								},
								{
									"begin": 1498,
									"end": 1530,
									"modifierDepth": 1,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 1498,
									"end": 1530,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1498,
									"end": 1530,
									"modifierDepth": 1,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 1498,
									"end": 1530,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 8,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1498,
									"end": 1530,
									"modifierDepth": 1,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 1498,
									"end": 1530,
									"modifierDepth": 1,
									"name": "MUL",
									"source": 8
								},
								{
									"begin": 1498,
									"end": 1530,
									"modifierDepth": 1,
									"name": "OR",
									"source": 8
								},
								{
									"begin": 1498,
									"end": 1530,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1498,
									"end": 1530,
									"modifierDepth": 1,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 1498,
									"end": 1530,
									"modifierDepth": 1,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1363,
									"end": 1537,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1363,
									"end": 1537,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 460,
									"end": 4067,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "15"
								},
								{
									"begin": 460,
									"end": 4067,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "tag",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3001,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3029,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3083,
									"end": 3091,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3073,
									"end": 3081,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2975,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 9,
									"value": "18"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 334,
									"end": 460,
									"name": "tag",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 334,
									"end": 460,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 453,
									"name": "PUSH",
									"source": 9,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 404,
									"end": 409,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 400,
									"end": 454,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 389,
									"end": 454,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 389,
									"end": 454,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 334,
									"end": 460,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 334,
									"end": 460,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 466,
									"end": 562,
									"name": "tag",
									"source": 9,
									"value": "21"
								},
								{
									"begin": 466,
									"end": 562,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 503,
									"end": 510,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "35"
								},
								{
									"begin": 550,
									"end": 555,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 532,
									"end": 556,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 532,
									"end": 556,
									"name": "tag",
									"source": 9,
									"value": "35"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 521,
									"end": 556,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 521,
									"end": 556,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 466,
									"end": 562,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 466,
									"end": 562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 568,
									"end": 678,
									"name": "tag",
									"source": 9,
									"value": "22"
								},
								{
									"begin": 568,
									"end": 678,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 619,
									"end": 626,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 648,
									"end": 672,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "37"
								},
								{
									"begin": 666,
									"end": 671,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 648,
									"end": 672,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "21"
								},
								{
									"begin": 648,
									"end": 672,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 648,
									"end": 672,
									"name": "tag",
									"source": 9,
									"value": "37"
								},
								{
									"begin": 648,
									"end": 672,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 637,
									"end": 672,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 637,
									"end": 672,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 568,
									"end": 678,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 568,
									"end": 678,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 568,
									"end": 678,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 568,
									"end": 678,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 684,
									"end": 834,
									"name": "tag",
									"source": 9,
									"value": "23"
								},
								{
									"begin": 684,
									"end": 834,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 771,
									"end": 809,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "39"
								},
								{
									"begin": 803,
									"end": 808,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 771,
									"end": 809,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "22"
								},
								{
									"begin": 771,
									"end": 809,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 771,
									"end": 809,
									"name": "tag",
									"source": 9,
									"value": "39"
								},
								{
									"begin": 771,
									"end": 809,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 764,
									"end": 769,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 761,
									"end": 810,
									"name": "EQ",
									"source": 9
								},
								{
									"begin": 751,
									"end": 828,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 751,
									"end": 828,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 824,
									"end": 825,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 821,
									"end": 822,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 814,
									"end": 826,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 751,
									"end": 828,
									"name": "tag",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 751,
									"end": 828,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 684,
									"end": 834,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 684,
									"end": 834,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 840,
									"end": 1011,
									"name": "tag",
									"source": 9,
									"value": "24"
								},
								{
									"begin": 840,
									"end": 1011,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 911,
									"end": 916,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 942,
									"end": 948,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 936,
									"end": 949,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 927,
									"end": 949,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 927,
									"end": 949,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 958,
									"end": 1005,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "42"
								},
								{
									"begin": 999,
									"end": 1004,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 958,
									"end": 1005,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "23"
								},
								{
									"begin": 958,
									"end": 1005,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 958,
									"end": 1005,
									"name": "tag",
									"source": 9,
									"value": "42"
								},
								{
									"begin": 958,
									"end": 1005,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 840,
									"end": 1011,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 840,
									"end": 1011,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 840,
									"end": 1011,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 840,
									"end": 1011,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 840,
									"end": 1011,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1017,
									"end": 1137,
									"name": "tag",
									"source": 9,
									"value": "25"
								},
								{
									"begin": 1017,
									"end": 1137,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1078,
									"end": 1085,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1107,
									"end": 1131,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "44"
								},
								{
									"begin": 1125,
									"end": 1130,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1107,
									"end": 1131,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "21"
								},
								{
									"begin": 1107,
									"end": 1131,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1107,
									"end": 1131,
									"name": "tag",
									"source": 9,
									"value": "44"
								},
								{
									"begin": 1107,
									"end": 1131,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1096,
									"end": 1131,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1096,
									"end": 1131,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1017,
									"end": 1137,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 1017,
									"end": 1137,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1017,
									"end": 1137,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1017,
									"end": 1137,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1143,
									"end": 1313,
									"name": "tag",
									"source": 9,
									"value": "26"
								},
								{
									"begin": 1143,
									"end": 1313,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1240,
									"end": 1288,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "46"
								},
								{
									"begin": 1282,
									"end": 1287,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1240,
									"end": 1288,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "25"
								},
								{
									"begin": 1240,
									"end": 1288,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1240,
									"end": 1288,
									"name": "tag",
									"source": 9,
									"value": "46"
								},
								{
									"begin": 1240,
									"end": 1288,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1233,
									"end": 1238,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1230,
									"end": 1289,
									"name": "EQ",
									"source": 9
								},
								{
									"begin": 1220,
									"end": 1307,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "47"
								},
								{
									"begin": 1220,
									"end": 1307,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 1303,
									"end": 1304,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1300,
									"end": 1301,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 1293,
									"end": 1305,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 1220,
									"end": 1307,
									"name": "tag",
									"source": 9,
									"value": "47"
								},
								{
									"begin": 1220,
									"end": 1307,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1143,
									"end": 1313,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1143,
									"end": 1313,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1319,
									"end": 1510,
									"name": "tag",
									"source": 9,
									"value": "27"
								},
								{
									"begin": 1319,
									"end": 1510,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1400,
									"end": 1405,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1431,
									"end": 1437,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1425,
									"end": 1438,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 1416,
									"end": 1438,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1416,
									"end": 1438,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1447,
									"end": 1504,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "49"
								},
								{
									"begin": 1498,
									"end": 1503,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1447,
									"end": 1504,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "26"
								},
								{
									"begin": 1447,
									"end": 1504,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1447,
									"end": 1504,
									"name": "tag",
									"source": 9,
									"value": "49"
								},
								{
									"begin": 1447,
									"end": 1504,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1319,
									"end": 1510,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 1319,
									"end": 1510,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 1319,
									"end": 1510,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1319,
									"end": 1510,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1319,
									"end": 1510,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1516,
									"end": 2099,
									"name": "tag",
									"source": 9,
									"value": "3"
								},
								{
									"begin": 1516,
									"end": 2099,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1633,
									"end": 1639,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1641,
									"end": 1647,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 1690,
									"end": 1692,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 1678,
									"end": 1687,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 1669,
									"end": 1676,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": 1665,
									"end": 1688,
									"name": "SUB",
									"source": 9
								},
								{
									"begin": 1661,
									"end": 1693,
									"name": "SLT",
									"source": 9
								},
								{
									"begin": 1658,
									"end": 1777,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 1658,
									"end": 1777,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "51"
								},
								{
									"begin": 1658,
									"end": 1777,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 1696,
									"end": 1775,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "52"
								},
								{
									"begin": 1696,
									"end": 1775,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "18"
								},
								{
									"begin": 1696,
									"end": 1775,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1696,
									"end": 1775,
									"name": "tag",
									"source": 9,
									"value": "52"
								},
								{
									"begin": 1696,
									"end": 1775,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1658,
									"end": 1777,
									"name": "tag",
									"source": 9,
									"value": "51"
								},
								{
									"begin": 1658,
									"end": 1777,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1816,
									"end": 1817,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1841,
									"end": 1919,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "53"
								},
								{
									"begin": 1911,
									"end": 1918,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": 1902,
									"end": 1908,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1891,
									"end": 1900,
									"name": "DUP7",
									"source": 9
								},
								{
									"begin": 1887,
									"end": 1909,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 1841,
									"end": 1919,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "24"
								},
								{
									"begin": 1841,
									"end": 1919,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1841,
									"end": 1919,
									"name": "tag",
									"source": 9,
									"value": "53"
								},
								{
									"begin": 1841,
									"end": 1919,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1831,
									"end": 1919,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 1831,
									"end": 1919,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1787,
									"end": 1929,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1968,
									"end": 1970,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 1994,
									"end": 2082,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "54"
								},
								{
									"begin": 2074,
									"end": 2081,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": 2065,
									"end": 2071,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 2054,
									"end": 2063,
									"name": "DUP7",
									"source": 9
								},
								{
									"begin": 2050,
									"end": 2072,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 1994,
									"end": 2082,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "27"
								},
								{
									"begin": 1994,
									"end": 2082,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1994,
									"end": 2082,
									"name": "tag",
									"source": 9,
									"value": "54"
								},
								{
									"begin": 1994,
									"end": 2082,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1984,
									"end": 2082,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 1984,
									"end": 2082,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1939,
									"end": 2092,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1516,
									"end": 2099,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 1516,
									"end": 2099,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1516,
									"end": 2099,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 1516,
									"end": 2099,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1516,
									"end": 2099,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1516,
									"end": 2099,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 2105,
									"end": 2223,
									"name": "tag",
									"source": 9,
									"value": "28"
								},
								{
									"begin": 2105,
									"end": 2223,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2192,
									"end": 2216,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "56"
								},
								{
									"begin": 2210,
									"end": 2215,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 2192,
									"end": 2216,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "21"
								},
								{
									"begin": 2192,
									"end": 2216,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 2192,
									"end": 2216,
									"name": "tag",
									"source": 9,
									"value": "56"
								},
								{
									"begin": 2192,
									"end": 2216,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2187,
									"end": 2190,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 2180,
									"end": 2217,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 2105,
									"end": 2223,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2105,
									"end": 2223,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2105,
									"end": 2223,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 2229,
									"end": 2451,
									"name": "tag",
									"source": 9,
									"value": "10"
								},
								{
									"begin": 2229,
									"end": 2451,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2322,
									"end": 2326,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 2360,
									"end": 2362,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 2349,
									"end": 2358,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 2345,
									"end": 2363,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 2337,
									"end": 2363,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 2337,
									"end": 2363,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2373,
									"end": 2444,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "58"
								},
								{
									"begin": 2441,
									"end": 2442,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 2430,
									"end": 2439,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 2426,
									"end": 2443,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 2417,
									"end": 2423,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 2373,
									"end": 2444,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "28"
								},
								{
									"begin": 2373,
									"end": 2444,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 2373,
									"end": 2444,
									"name": "tag",
									"source": 9,
									"value": "58"
								},
								{
									"begin": 2373,
									"end": 2444,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2229,
									"end": 2451,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 2229,
									"end": 2451,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 2229,
									"end": 2451,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2229,
									"end": 2451,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2229,
									"end": 2451,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 460,
									"end": 4067,
									"name": "tag",
									"source": 8,
									"value": "15"
								},
								{
									"begin": 460,
									"end": 4067,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 460,
									"end": 4067,
									"name": "PUSH #[$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 460,
									"end": 4067,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 460,
									"end": 4067,
									"name": "PUSH [$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 460,
									"end": 4067,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 460,
									"end": 4067,
									"name": "CODECOPY",
									"source": 8
								},
								{
									"begin": 460,
									"end": 4067,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 460,
									"end": 4067,
									"name": "RETURN",
									"source": 8
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220c5d1ec961e12beead9c1a38d4ef661ec8ca4601b532c67cafbfe4c75f41977d664736f6c634300081a0033",
									".code": [
										{
											"begin": 460,
											"end": 4067,
											"name": "PUSH",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 460,
											"end": 4067,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 460,
											"end": 4067,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 460,
											"end": 4067,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 460,
											"end": 4067,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 460,
											"end": 4067,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 460,
											"end": 4067,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 460,
											"end": 4067,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 460,
											"end": 4067,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 460,
											"end": 4067,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 460,
											"end": 4067,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 460,
											"end": 4067,
											"name": "tag",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 460,
											"end": 4067,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 460,
											"end": 4067,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 460,
											"end": 4067,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 460,
											"end": 4067,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 460,
											"end": 4067,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 460,
											"end": 4067,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 460,
											"end": 4067,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 460,
											"end": 4067,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 460,
											"end": 4067,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 460,
											"end": 4067,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 460,
											"end": 4067,
											"name": "SHR",
											"source": 8
										},
										{
											"begin": 460,
											"end": 4067,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 460,
											"end": 4067,
											"name": "PUSH",
											"source": 8,
											"value": "8DA5CB5B"
										},
										{
											"begin": 460,
											"end": 4067,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 460,
											"end": 4067,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "17"
										},
										{
											"begin": 460,
											"end": 4067,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 460,
											"end": 4067,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 460,
											"end": 4067,
											"name": "PUSH",
											"source": 8,
											"value": "BAF52C77"
										},
										{
											"begin": 460,
											"end": 4067,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 460,
											"end": 4067,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "18"
										},
										{
											"begin": 460,
											"end": 4067,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 460,
											"end": 4067,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 460,
											"end": 4067,
											"name": "PUSH",
											"source": 8,
											"value": "BAF52C77"
										},
										{
											"begin": 460,
											"end": 4067,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 460,
											"end": 4067,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "13"
										},
										{
											"begin": 460,
											"end": 4067,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 460,
											"end": 4067,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 460,
											"end": 4067,
											"name": "PUSH",
											"source": 8,
											"value": "D2BCDC60"
										},
										{
											"begin": 460,
											"end": 4067,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 460,
											"end": 4067,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "14"
										},
										{
											"begin": 460,
											"end": 4067,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 460,
											"end": 4067,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 460,
											"end": 4067,
											"name": "PUSH",
											"source": 8,
											"value": "F2FDE38B"
										},
										{
											"begin": 460,
											"end": 4067,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 460,
											"end": 4067,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "15"
										},
										{
											"begin": 460,
											"end": 4067,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 460,
											"end": 4067,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 460,
											"end": 4067,
											"name": "PUSH",
											"source": 8,
											"value": "F7B10808"
										},
										{
											"begin": 460,
											"end": 4067,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 460,
											"end": 4067,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "16"
										},
										{
											"begin": 460,
											"end": 4067,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 460,
											"end": 4067,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 460,
											"end": 4067,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 460,
											"end": 4067,
											"name": "tag",
											"source": 8,
											"value": "18"
										},
										{
											"begin": 460,
											"end": 4067,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 460,
											"end": 4067,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 460,
											"end": 4067,
											"name": "PUSH",
											"source": 8,
											"value": "8DA5CB5B"
										},
										{
											"begin": 460,
											"end": 4067,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 460,
											"end": 4067,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "10"
										},
										{
											"begin": 460,
											"end": 4067,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 460,
											"end": 4067,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 460,
											"end": 4067,
											"name": "PUSH",
											"source": 8,
											"value": "B41B936D"
										},
										{
											"begin": 460,
											"end": 4067,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 460,
											"end": 4067,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "11"
										},
										{
											"begin": 460,
											"end": 4067,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 460,
											"end": 4067,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 460,
											"end": 4067,
											"name": "PUSH",
											"source": 8,
											"value": "B4D346BE"
										},
										{
											"begin": 460,
											"end": 4067,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 460,
											"end": 4067,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "12"
										},
										{
											"begin": 460,
											"end": 4067,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 460,
											"end": 4067,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 460,
											"end": 4067,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 460,
											"end": 4067,
											"name": "tag",
											"source": 8,
											"value": "17"
										},
										{
											"begin": 460,
											"end": 4067,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 460,
											"end": 4067,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 460,
											"end": 4067,
											"name": "PUSH",
											"source": 8,
											"value": "5C975ABB"
										},
										{
											"begin": 460,
											"end": 4067,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 460,
											"end": 4067,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "19"
										},
										{
											"begin": 460,
											"end": 4067,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 460,
											"end": 4067,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 460,
											"end": 4067,
											"name": "PUSH",
											"source": 8,
											"value": "5C975ABB"
										},
										{
											"begin": 460,
											"end": 4067,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 460,
											"end": 4067,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "6"
										},
										{
											"begin": 460,
											"end": 4067,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 460,
											"end": 4067,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 460,
											"end": 4067,
											"name": "PUSH",
											"source": 8,
											"value": "715018A6"
										},
										{
											"begin": 460,
											"end": 4067,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 460,
											"end": 4067,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "7"
										},
										{
											"begin": 460,
											"end": 4067,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 460,
											"end": 4067,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 460,
											"end": 4067,
											"name": "PUSH",
											"source": 8,
											"value": "8456CB59"
										},
										{
											"begin": 460,
											"end": 4067,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 460,
											"end": 4067,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "8"
										},
										{
											"begin": 460,
											"end": 4067,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 460,
											"end": 4067,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 460,
											"end": 4067,
											"name": "PUSH",
											"source": 8,
											"value": "86AA217E"
										},
										{
											"begin": 460,
											"end": 4067,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 460,
											"end": 4067,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "9"
										},
										{
											"begin": 460,
											"end": 4067,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 460,
											"end": 4067,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 460,
											"end": 4067,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 460,
											"end": 4067,
											"name": "tag",
											"source": 8,
											"value": "19"
										},
										{
											"begin": 460,
											"end": 4067,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 460,
											"end": 4067,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 460,
											"end": 4067,
											"name": "PUSH",
											"source": 8,
											"value": "3013CE29"
										},
										{
											"begin": 460,
											"end": 4067,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 460,
											"end": 4067,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 460,
											"end": 4067,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 460,
											"end": 4067,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 460,
											"end": 4067,
											"name": "PUSH",
											"source": 8,
											"value": "39500F34"
										},
										{
											"begin": 460,
											"end": 4067,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 460,
											"end": 4067,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 460,
											"end": 4067,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 460,
											"end": 4067,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 460,
											"end": 4067,
											"name": "PUSH",
											"source": 8,
											"value": "3F4BA83A"
										},
										{
											"begin": 460,
											"end": 4067,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 460,
											"end": 4067,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "5"
										},
										{
											"begin": 460,
											"end": 4067,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 460,
											"end": 4067,
											"name": "tag",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 460,
											"end": 4067,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 460,
											"end": 4067,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 460,
											"end": 4067,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 460,
											"end": 4067,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1190,
											"end": 1216,
											"name": "tag",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 1190,
											"end": 1216,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1190,
											"end": 1216,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1190,
											"end": 1216,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "21"
										},
										{
											"begin": 1190,
											"end": 1216,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1190,
											"end": 1216,
											"name": "tag",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1190,
											"end": 1216,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1190,
											"end": 1216,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1190,
											"end": 1216,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1190,
											"end": 1216,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "22"
										},
										{
											"begin": 1190,
											"end": 1216,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1190,
											"end": 1216,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1190,
											"end": 1216,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "23"
										},
										{
											"begin": 1190,
											"end": 1216,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1190,
											"end": 1216,
											"name": "tag",
											"source": 8,
											"value": "22"
										},
										{
											"begin": 1190,
											"end": 1216,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1190,
											"end": 1216,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1190,
											"end": 1216,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1190,
											"end": 1216,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1190,
											"end": 1216,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1190,
											"end": 1216,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1190,
											"end": 1216,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1190,
											"end": 1216,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 1150,
											"end": 1179,
											"name": "tag",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 1150,
											"end": 1179,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1150,
											"end": 1179,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 1150,
											"end": 1179,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "25"
										},
										{
											"begin": 1150,
											"end": 1179,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1150,
											"end": 1179,
											"name": "tag",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 1150,
											"end": 1179,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1150,
											"end": 1179,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1150,
											"end": 1179,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1150,
											"end": 1179,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "26"
										},
										{
											"begin": 1150,
											"end": 1179,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1150,
											"end": 1179,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1150,
											"end": 1179,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "27"
										},
										{
											"begin": 1150,
											"end": 1179,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1150,
											"end": 1179,
											"name": "tag",
											"source": 8,
											"value": "26"
										},
										{
											"begin": 1150,
											"end": 1179,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1150,
											"end": 1179,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1150,
											"end": 1179,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1150,
											"end": 1179,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1150,
											"end": 1179,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1150,
											"end": 1179,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1150,
											"end": 1179,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1150,
											"end": 1179,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 3787,
											"end": 3852,
											"name": "tag",
											"source": 8,
											"value": "5"
										},
										{
											"begin": 3787,
											"end": 3852,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3787,
											"end": 3852,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "28"
										},
										{
											"begin": 3787,
											"end": 3852,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "29"
										},
										{
											"begin": 3787,
											"end": 3852,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3787,
											"end": 3852,
											"name": "tag",
											"source": 8,
											"value": "28"
										},
										{
											"begin": 3787,
											"end": 3852,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3787,
											"end": 3852,
											"name": "STOP",
											"source": 8
										},
										{
											"begin": 1850,
											"end": 1934,
											"name": "tag",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 1850,
											"end": 1934,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1850,
											"end": 1934,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "30"
										},
										{
											"begin": 1850,
											"end": 1934,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "31"
										},
										{
											"begin": 1850,
											"end": 1934,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1850,
											"end": 1934,
											"name": "tag",
											"source": 6,
											"value": "30"
										},
										{
											"begin": 1850,
											"end": 1934,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1850,
											"end": 1934,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1850,
											"end": 1934,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1850,
											"end": 1934,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "32"
										},
										{
											"begin": 1850,
											"end": 1934,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1850,
											"end": 1934,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1850,
											"end": 1934,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "33"
										},
										{
											"begin": 1850,
											"end": 1934,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1850,
											"end": 1934,
											"name": "tag",
											"source": 6,
											"value": "32"
										},
										{
											"begin": 1850,
											"end": 1934,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1850,
											"end": 1934,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1850,
											"end": 1934,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1850,
											"end": 1934,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1850,
											"end": 1934,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1850,
											"end": 1934,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1850,
											"end": 1934,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1850,
											"end": 1934,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 3670,
											"end": 3731,
											"name": "tag",
											"source": 8,
											"value": "8"
										},
										{
											"begin": 3670,
											"end": 3731,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3670,
											"end": 3731,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "36"
										},
										{
											"begin": 3670,
											"end": 3731,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "37"
										},
										{
											"begin": 3670,
											"end": 3731,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3670,
											"end": 3731,
											"name": "tag",
											"source": 8,
											"value": "36"
										},
										{
											"begin": 3670,
											"end": 3731,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3670,
											"end": 3731,
											"name": "STOP",
											"source": 8
										},
										{
											"begin": 1582,
											"end": 2210,
											"name": "tag",
											"source": 8,
											"value": "9"
										},
										{
											"begin": 1582,
											"end": 2210,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1582,
											"end": 2210,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "38"
										},
										{
											"begin": 1582,
											"end": 2210,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 1582,
											"end": 2210,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1582,
											"end": 2210,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 1582,
											"end": 2210,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1582,
											"end": 2210,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1582,
											"end": 2210,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1582,
											"end": 2210,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1582,
											"end": 2210,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "39"
										},
										{
											"begin": 1582,
											"end": 2210,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1582,
											"end": 2210,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1582,
											"end": 2210,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1582,
											"end": 2210,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1582,
											"end": 2210,
											"name": "tag",
											"source": 8,
											"value": "39"
										},
										{
											"begin": 1582,
											"end": 2210,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1582,
											"end": 2210,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "41"
										},
										{
											"begin": 1582,
											"end": 2210,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1582,
											"end": 2210,
											"name": "tag",
											"source": 8,
											"value": "38"
										},
										{
											"begin": 1582,
											"end": 2210,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1582,
											"end": 2210,
											"name": "STOP",
											"source": 8
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1261,
											"end": 1298,
											"name": "tag",
											"source": 8,
											"value": "11"
										},
										{
											"begin": 1261,
											"end": 1298,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1261,
											"end": 1298,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "46"
										},
										{
											"begin": 1261,
											"end": 1298,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "47"
										},
										{
											"begin": 1261,
											"end": 1298,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1261,
											"end": 1298,
											"name": "tag",
											"source": 8,
											"value": "46"
										},
										{
											"begin": 1261,
											"end": 1298,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1261,
											"end": 1298,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1261,
											"end": 1298,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1261,
											"end": 1298,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "48"
										},
										{
											"begin": 1261,
											"end": 1298,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1261,
											"end": 1298,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1261,
											"end": 1298,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "49"
										},
										{
											"begin": 1261,
											"end": 1298,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1261,
											"end": 1298,
											"name": "tag",
											"source": 8,
											"value": "48"
										},
										{
											"begin": 1261,
											"end": 1298,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1261,
											"end": 1298,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1261,
											"end": 1298,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1261,
											"end": 1298,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1261,
											"end": 1298,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1261,
											"end": 1298,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1261,
											"end": 1298,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1261,
											"end": 1298,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 3015,
											"end": 3601,
											"name": "tag",
											"source": 8,
											"value": "12"
										},
										{
											"begin": 3015,
											"end": 3601,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3015,
											"end": 3601,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "50"
										},
										{
											"begin": 3015,
											"end": 3601,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 3015,
											"end": 3601,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3015,
											"end": 3601,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 3015,
											"end": 3601,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 3015,
											"end": 3601,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3015,
											"end": 3601,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3015,
											"end": 3601,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3015,
											"end": 3601,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "51"
										},
										{
											"begin": 3015,
											"end": 3601,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3015,
											"end": 3601,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3015,
											"end": 3601,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "52"
										},
										{
											"begin": 3015,
											"end": 3601,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3015,
											"end": 3601,
											"name": "tag",
											"source": 8,
											"value": "51"
										},
										{
											"begin": 3015,
											"end": 3601,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3015,
											"end": 3601,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "53"
										},
										{
											"begin": 3015,
											"end": 3601,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3015,
											"end": 3601,
											"name": "tag",
											"source": 8,
											"value": "50"
										},
										{
											"begin": 3015,
											"end": 3601,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3015,
											"end": 3601,
											"name": "STOP",
											"source": 8
										},
										{
											"begin": 3912,
											"end": 4065,
											"name": "tag",
											"source": 8,
											"value": "13"
										},
										{
											"begin": 3912,
											"end": 4065,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3912,
											"end": 4065,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "54"
										},
										{
											"begin": 3912,
											"end": 4065,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 3912,
											"end": 4065,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3912,
											"end": 4065,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 3912,
											"end": 4065,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 3912,
											"end": 4065,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3912,
											"end": 4065,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3912,
											"end": 4065,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3912,
											"end": 4065,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "55"
										},
										{
											"begin": 3912,
											"end": 4065,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3912,
											"end": 4065,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3912,
											"end": 4065,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "56"
										},
										{
											"begin": 3912,
											"end": 4065,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3912,
											"end": 4065,
											"name": "tag",
											"source": 8,
											"value": "55"
										},
										{
											"begin": 3912,
											"end": 4065,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3912,
											"end": 4065,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "57"
										},
										{
											"begin": 3912,
											"end": 4065,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3912,
											"end": 4065,
											"name": "tag",
											"source": 8,
											"value": "54"
										},
										{
											"begin": 3912,
											"end": 4065,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3912,
											"end": 4065,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3912,
											"end": 4065,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3912,
											"end": 4065,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "58"
										},
										{
											"begin": 3912,
											"end": 4065,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3912,
											"end": 4065,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3912,
											"end": 4065,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "33"
										},
										{
											"begin": 3912,
											"end": 4065,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3912,
											"end": 4065,
											"name": "tag",
											"source": 8,
											"value": "58"
										},
										{
											"begin": 3912,
											"end": 4065,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3912,
											"end": 4065,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3912,
											"end": 4065,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3912,
											"end": 4065,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3912,
											"end": 4065,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3912,
											"end": 4065,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 3912,
											"end": 4065,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3912,
											"end": 4065,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 2269,
											"end": 2954,
											"name": "tag",
											"source": 8,
											"value": "14"
										},
										{
											"begin": 2269,
											"end": 2954,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2269,
											"end": 2954,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "59"
										},
										{
											"begin": 2269,
											"end": 2954,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 2269,
											"end": 2954,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2269,
											"end": 2954,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 2269,
											"end": 2954,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2269,
											"end": 2954,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2269,
											"end": 2954,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2269,
											"end": 2954,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2269,
											"end": 2954,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 2269,
											"end": 2954,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2269,
											"end": 2954,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2269,
											"end": 2954,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "61"
										},
										{
											"begin": 2269,
											"end": 2954,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2269,
											"end": 2954,
											"name": "tag",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 2269,
											"end": 2954,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2269,
											"end": 2954,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "62"
										},
										{
											"begin": 2269,
											"end": 2954,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2269,
											"end": 2954,
											"name": "tag",
											"source": 8,
											"value": "59"
										},
										{
											"begin": 2269,
											"end": 2954,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2269,
											"end": 2954,
											"name": "STOP",
											"source": 8
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1098,
											"end": 1144,
											"name": "tag",
											"source": 8,
											"value": "16"
										},
										{
											"begin": 1098,
											"end": 1144,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1098,
											"end": 1144,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "67"
										},
										{
											"begin": 1098,
											"end": 1144,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 1098,
											"end": 1144,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1098,
											"end": 1144,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 1098,
											"end": 1144,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1098,
											"end": 1144,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1098,
											"end": 1144,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1098,
											"end": 1144,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1098,
											"end": 1144,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "68"
										},
										{
											"begin": 1098,
											"end": 1144,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1098,
											"end": 1144,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1098,
											"end": 1144,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "56"
										},
										{
											"begin": 1098,
											"end": 1144,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1098,
											"end": 1144,
											"name": "tag",
											"source": 8,
											"value": "68"
										},
										{
											"begin": 1098,
											"end": 1144,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1098,
											"end": 1144,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "69"
										},
										{
											"begin": 1098,
											"end": 1144,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1098,
											"end": 1144,
											"name": "tag",
											"source": 8,
											"value": "67"
										},
										{
											"begin": 1098,
											"end": 1144,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1098,
											"end": 1144,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1098,
											"end": 1144,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1098,
											"end": 1144,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "70"
										},
										{
											"begin": 1098,
											"end": 1144,
											"name": "SWAP7",
											"source": 8
										},
										{
											"begin": 1098,
											"end": 1144,
											"name": "SWAP6",
											"source": 8
										},
										{
											"begin": 1098,
											"end": 1144,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": 1098,
											"end": 1144,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 1098,
											"end": 1144,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 1098,
											"end": 1144,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1098,
											"end": 1144,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1098,
											"end": 1144,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "71"
										},
										{
											"begin": 1098,
											"end": 1144,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1098,
											"end": 1144,
											"name": "tag",
											"source": 8,
											"value": "70"
										},
										{
											"begin": 1098,
											"end": 1144,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1098,
											"end": 1144,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1098,
											"end": 1144,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1098,
											"end": 1144,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1098,
											"end": 1144,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1098,
											"end": 1144,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1098,
											"end": 1144,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1098,
											"end": 1144,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 1190,
											"end": 1216,
											"name": "tag",
											"source": 8,
											"value": "21"
										},
										{
											"begin": 1190,
											"end": 1216,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1190,
											"end": 1216,
											"name": "PUSH",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 1190,
											"end": 1216,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1190,
											"end": 1216,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1190,
											"end": 1216,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 1190,
											"end": 1216,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1190,
											"end": 1216,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 1190,
											"end": 1216,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 1190,
											"end": 1216,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1190,
											"end": 1216,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 1190,
											"end": 1216,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1190,
											"end": 1216,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1190,
											"end": 1216,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1190,
											"end": 1216,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1150,
											"end": 1179,
											"name": "tag",
											"source": 8,
											"value": "25"
										},
										{
											"begin": 1150,
											"end": 1179,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1150,
											"end": 1179,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 1150,
											"end": 1179,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 1150,
											"end": 1179,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1150,
											"end": 1179,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3787,
											"end": 3852,
											"name": "tag",
											"source": 8,
											"value": "29"
										},
										{
											"begin": 3787,
											"end": 3852,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3835,
											"end": 3845,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "76"
										},
										{
											"begin": 3835,
											"end": 3843,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "77"
										},
										{
											"begin": 3835,
											"end": 3845,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3835,
											"end": 3845,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "76"
										},
										{
											"begin": 3835,
											"end": 3845,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3787,
											"end": 3852,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1850,
											"end": 1934,
											"name": "tag",
											"source": 6,
											"value": "31"
										},
										{
											"begin": 1850,
											"end": 1934,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1897,
											"end": 1901,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1920,
											"end": 1927,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1920,
											"end": 1927,
											"name": "PUSH",
											"source": 6,
											"value": "14"
										},
										{
											"begin": 1920,
											"end": 1927,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1920,
											"end": 1927,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1920,
											"end": 1927,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1920,
											"end": 1927,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 1920,
											"end": 1927,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 1920,
											"end": 1927,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1920,
											"end": 1927,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 1920,
											"end": 1927,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 1920,
											"end": 1927,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1913,
											"end": 1927,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1913,
											"end": 1927,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1850,
											"end": 1934,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1850,
											"end": 1934,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 2384,
											"end": 2385,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2357,
											"end": 2375,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 2357,
											"end": 2387,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3670,
											"end": 3731,
											"name": "tag",
											"source": 8,
											"value": "37"
										},
										{
											"begin": 3670,
											"end": 3731,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3716,
											"end": 3724,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "87"
										},
										{
											"begin": 3716,
											"end": 3722,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "88"
										},
										{
											"begin": 3716,
											"end": 3724,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3716,
											"end": 3724,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "87"
										},
										{
											"begin": 3716,
											"end": 3724,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3670,
											"end": 3731,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1582,
											"end": 2210,
											"name": "tag",
											"source": 8,
											"value": "41"
										},
										{
											"begin": 1582,
											"end": 2210,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1474,
											"end": 1493,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "90"
										},
										{
											"begin": 1474,
											"end": 1491,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "91"
										},
										{
											"begin": 1474,
											"end": 1493,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1474,
											"end": 1493,
											"name": "tag",
											"source": 6,
											"value": "90"
										},
										{
											"begin": 1474,
											"end": 1493,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1711,
											"end": 1712,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1703,
											"end": 1708,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1703,
											"end": 1712,
											"modifierDepth": 1,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 1695,
											"end": 1745,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "93"
										},
										{
											"begin": 1695,
											"end": 1745,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1695,
											"end": 1745,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1695,
											"end": 1745,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1695,
											"end": 1745,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1695,
											"end": 1745,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1695,
											"end": 1745,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1695,
											"end": 1745,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 1695,
											"end": 1745,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1695,
											"end": 1745,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "94"
										},
										{
											"begin": 1695,
											"end": 1745,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1695,
											"end": 1745,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "95"
										},
										{
											"begin": 1695,
											"end": 1745,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1695,
											"end": 1745,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "94"
										},
										{
											"begin": 1695,
											"end": 1745,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1695,
											"end": 1745,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1695,
											"end": 1745,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1695,
											"end": 1745,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1695,
											"end": 1745,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1695,
											"end": 1745,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1695,
											"end": 1745,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1695,
											"end": 1745,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1695,
											"end": 1745,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "93"
										},
										{
											"begin": 1695,
											"end": 1745,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1777,
											"end": 1778,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1763,
											"end": 1774,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1763,
											"end": 1778,
											"modifierDepth": 1,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 1755,
											"end": 1818,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "96"
										},
										{
											"begin": 1755,
											"end": 1818,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1755,
											"end": 1818,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1755,
											"end": 1818,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1755,
											"end": 1818,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1755,
											"end": 1818,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1755,
											"end": 1818,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1755,
											"end": 1818,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 1755,
											"end": 1818,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1755,
											"end": 1818,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "97"
										},
										{
											"begin": 1755,
											"end": 1818,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1755,
											"end": 1818,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "98"
										},
										{
											"begin": 1755,
											"end": 1818,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1755,
											"end": 1818,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "97"
										},
										{
											"begin": 1755,
											"end": 1818,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1755,
											"end": 1818,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1755,
											"end": 1818,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1755,
											"end": 1818,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1755,
											"end": 1818,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1755,
											"end": 1818,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1755,
											"end": 1818,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1755,
											"end": 1818,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1755,
											"end": 1818,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "96"
										},
										{
											"begin": 1755,
											"end": 1818,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1866,
											"end": 2091,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1866,
											"end": 2091,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1866,
											"end": 2091,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1866,
											"end": 2091,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "C0"
										},
										{
											"begin": 1866,
											"end": 2091,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1866,
											"end": 2091,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1866,
											"end": 2091,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1866,
											"end": 2091,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1896,
											"end": 1906,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 1866,
											"end": 2091,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1866,
											"end": 2091,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1866,
											"end": 2091,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1866,
											"end": 2091,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1866,
											"end": 2091,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1866,
											"end": 2091,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1927,
											"end": 1932,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 1866,
											"end": 2091,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1866,
											"end": 2091,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1866,
											"end": 2091,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1866,
											"end": 2091,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1959,
											"end": 1970,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1866,
											"end": 2091,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1866,
											"end": 2091,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1866,
											"end": 2091,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1866,
											"end": 2091,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2001,
											"end": 2012,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1866,
											"end": 2091,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1866,
											"end": 2091,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1866,
											"end": 2091,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1866,
											"end": 2091,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2040,
											"end": 2052,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1866,
											"end": 2091,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1866,
											"end": 2091,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1866,
											"end": 2091,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1866,
											"end": 2091,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1866,
											"end": 2091,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1866,
											"end": 2091,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2076,
											"end": 2080,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 1866,
											"end": 2091,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1866,
											"end": 2091,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1866,
											"end": 2091,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1866,
											"end": 2091,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1866,
											"end": 2091,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1837,
											"end": 1847,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 1837,
											"end": 1863,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1848,
											"end": 1862,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 1848,
											"end": 1862,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 1837,
											"end": 1863,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1837,
											"end": 1863,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1837,
											"end": 1863,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1837,
											"end": 1863,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1837,
											"end": 1863,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1837,
											"end": 1863,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1837,
											"end": 1863,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1837,
											"end": 1863,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1837,
											"end": 1863,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1837,
											"end": 1863,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1837,
											"end": 1863,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 1837,
											"end": 2091,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1837,
											"end": 2091,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1837,
											"end": 2091,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1837,
											"end": 2091,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1837,
											"end": 2091,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1837,
											"end": 2091,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1837,
											"end": 2091,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1837,
											"end": 2091,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1837,
											"end": 2091,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 1837,
											"end": 2091,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 1837,
											"end": 2091,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1837,
											"end": 2091,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 1837,
											"end": 2091,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1837,
											"end": 2091,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1837,
											"end": 2091,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 1837,
											"end": 2091,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 1837,
											"end": 2091,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1837,
											"end": 2091,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1837,
											"end": 2091,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1837,
											"end": 2091,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1837,
											"end": 2091,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1837,
											"end": 2091,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 1837,
											"end": 2091,
											"modifierDepth": 1,
											"name": "OR",
											"source": 8
										},
										{
											"begin": 1837,
											"end": 2091,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1837,
											"end": 2091,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 1837,
											"end": 2091,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1837,
											"end": 2091,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1837,
											"end": 2091,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1837,
											"end": 2091,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1837,
											"end": 2091,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1837,
											"end": 2091,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1837,
											"end": 2091,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 1837,
											"end": 2091,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1837,
											"end": 2091,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 1837,
											"end": 2091,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1837,
											"end": 2091,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1837,
											"end": 2091,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1837,
											"end": 2091,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1837,
											"end": 2091,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1837,
											"end": 2091,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 1837,
											"end": 2091,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1837,
											"end": 2091,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 1837,
											"end": 2091,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 1837,
											"end": 2091,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1837,
											"end": 2091,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1837,
											"end": 2091,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1837,
											"end": 2091,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1837,
											"end": 2091,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 1837,
											"end": 2091,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1837,
											"end": 2091,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 1837,
											"end": 2091,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 1837,
											"end": 2091,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1837,
											"end": 2091,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1837,
											"end": 2091,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1837,
											"end": 2091,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1837,
											"end": 2091,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 1837,
											"end": 2091,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1837,
											"end": 2091,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1837,
											"end": 2091,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 1837,
											"end": 2091,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 1837,
											"end": 2091,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1837,
											"end": 2091,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 1837,
											"end": 2091,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1837,
											"end": 2091,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1837,
											"end": 2091,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 1837,
											"end": 2091,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 1837,
											"end": 2091,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1837,
											"end": 2091,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1837,
											"end": 2091,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1837,
											"end": 2091,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1837,
											"end": 2091,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1837,
											"end": 2091,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 1837,
											"end": 2091,
											"modifierDepth": 1,
											"name": "OR",
											"source": 8
										},
										{
											"begin": 1837,
											"end": 2091,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1837,
											"end": 2091,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 1837,
											"end": 2091,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1837,
											"end": 2091,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "A0"
										},
										{
											"begin": 1837,
											"end": 2091,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1837,
											"end": 2091,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1837,
											"end": 2091,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1837,
											"end": 2091,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1837,
											"end": 2091,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 1837,
											"end": 2091,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1837,
											"end": 2091,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "14"
										},
										{
											"begin": 1837,
											"end": 2091,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 1837,
											"end": 2091,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 1837,
											"end": 2091,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1837,
											"end": 2091,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 1837,
											"end": 2091,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1837,
											"end": 2091,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FF"
										},
										{
											"begin": 1837,
											"end": 2091,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 1837,
											"end": 2091,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 1837,
											"end": 2091,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1837,
											"end": 2091,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1837,
											"end": 2091,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1837,
											"end": 2091,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1837,
											"end": 2091,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1837,
											"end": 2091,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 1837,
											"end": 2091,
											"modifierDepth": 1,
											"name": "OR",
											"source": 8
										},
										{
											"begin": 1837,
											"end": 2091,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1837,
											"end": 2091,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 1837,
											"end": 2091,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1837,
											"end": 2091,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1837,
											"end": 2091,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1837,
											"end": 2091,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2146,
											"end": 2156,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 2115,
											"end": 2177,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2115,
											"end": 2177,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2115,
											"end": 2177,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "2C479E2E638A3A97A6F194336F17F298B4EC7145F37C7D35FF6346F9CD4A0030"
										},
										{
											"begin": 2130,
											"end": 2144,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 2130,
											"end": 2144,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 2158,
											"end": 2163,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 2165,
											"end": 2176,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 2115,
											"end": 2177,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2115,
											"end": 2177,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2115,
											"end": 2177,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "99"
										},
										{
											"begin": 2115,
											"end": 2177,
											"modifierDepth": 1,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 2115,
											"end": 2177,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 2115,
											"end": 2177,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2115,
											"end": 2177,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2115,
											"end": 2177,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 2115,
											"end": 2177,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2115,
											"end": 2177,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "99"
										},
										{
											"begin": 2115,
											"end": 2177,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2115,
											"end": 2177,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2115,
											"end": 2177,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2115,
											"end": 2177,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2115,
											"end": 2177,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2115,
											"end": 2177,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2115,
											"end": 2177,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2115,
											"end": 2177,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 8
										},
										{
											"begin": 2187,
											"end": 2201,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 2187,
											"end": 2201,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2187,
											"end": 2203,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2187,
											"end": 2203,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 2187,
											"end": 2203,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2187,
											"end": 2203,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 2187,
											"end": 2203,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2187,
											"end": 2203,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2187,
											"end": 2203,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "101"
										},
										{
											"begin": 2187,
											"end": 2203,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2187,
											"end": 2203,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "102"
										},
										{
											"begin": 2187,
											"end": 2203,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2187,
											"end": 2203,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "101"
										},
										{
											"begin": 2187,
											"end": 2203,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2187,
											"end": 2203,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2187,
											"end": 2203,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2187,
											"end": 2203,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2187,
											"end": 2203,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 2187,
											"end": 2203,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1582,
											"end": 2210,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1582,
											"end": 2210,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1582,
											"end": 2210,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1582,
											"end": 2210,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1684,
											"end": 1691,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1261,
											"end": 1298,
											"name": "tag",
											"source": 8,
											"value": "47"
										},
										{
											"begin": 1261,
											"end": 1298,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1261,
											"end": 1298,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 1261,
											"end": 1298,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1261,
											"end": 1298,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1261,
											"end": 1298,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 1261,
											"end": 1298,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1261,
											"end": 1298,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 1261,
											"end": 1298,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 1261,
											"end": 1298,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1261,
											"end": 1298,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 1261,
											"end": 1298,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1261,
											"end": 1298,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1261,
											"end": 1298,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1261,
											"end": 1298,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3015,
											"end": 3601,
											"name": "tag",
											"source": 8,
											"value": "53"
										},
										{
											"begin": 3015,
											"end": 3601,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1474,
											"end": 1493,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "105"
										},
										{
											"begin": 1474,
											"end": 1491,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "91"
										},
										{
											"begin": 1474,
											"end": 1493,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1474,
											"end": 1493,
											"name": "tag",
											"source": 6,
											"value": "105"
										},
										{
											"begin": 1474,
											"end": 1493,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3105,
											"end": 3130,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3133,
											"end": 3143,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 3133,
											"end": 3155,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3144,
											"end": 3154,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 3133,
											"end": 3155,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3133,
											"end": 3155,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3133,
											"end": 3155,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3133,
											"end": 3155,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3133,
											"end": 3155,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3133,
											"end": 3155,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3133,
											"end": 3155,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3133,
											"end": 3155,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3133,
											"end": 3155,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3133,
											"end": 3155,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3133,
											"end": 3155,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 3105,
											"end": 3155,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3105,
											"end": 3155,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3191,
											"end": 3201,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 3173,
											"end": 3201,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3173,
											"end": 3201,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3173,
											"end": 3181,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3173,
											"end": 3187,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3173,
											"end": 3187,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3173,
											"end": 3187,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3173,
											"end": 3187,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3173,
											"end": 3187,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 3173,
											"end": 3187,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3173,
											"end": 3187,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 3173,
											"end": 3187,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 3173,
											"end": 3187,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3173,
											"end": 3187,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 3173,
											"end": 3187,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3173,
											"end": 3187,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3173,
											"end": 3201,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3173,
											"end": 3201,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3173,
											"end": 3201,
											"modifierDepth": 1,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 3165,
											"end": 3242,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "107"
										},
										{
											"begin": 3165,
											"end": 3242,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 3165,
											"end": 3242,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3165,
											"end": 3242,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3165,
											"end": 3242,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3165,
											"end": 3242,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3165,
											"end": 3242,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3165,
											"end": 3242,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 3165,
											"end": 3242,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3165,
											"end": 3242,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "108"
										},
										{
											"begin": 3165,
											"end": 3242,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3165,
											"end": 3242,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "109"
										},
										{
											"begin": 3165,
											"end": 3242,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3165,
											"end": 3242,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "108"
										},
										{
											"begin": 3165,
											"end": 3242,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3165,
											"end": 3242,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3165,
											"end": 3242,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3165,
											"end": 3242,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3165,
											"end": 3242,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3165,
											"end": 3242,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 3165,
											"end": 3242,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3165,
											"end": 3242,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 3165,
											"end": 3242,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "107"
										},
										{
											"begin": 3165,
											"end": 3242,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3288,
											"end": 3289,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3260,
											"end": 3268,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3260,
											"end": 3284,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 3260,
											"end": 3284,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3260,
											"end": 3284,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 3260,
											"end": 3289,
											"modifierDepth": 1,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 3252,
											"end": 3320,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "110"
										},
										{
											"begin": 3252,
											"end": 3320,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 3252,
											"end": 3320,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3252,
											"end": 3320,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3252,
											"end": 3320,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3252,
											"end": 3320,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3252,
											"end": 3320,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3252,
											"end": 3320,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 3252,
											"end": 3320,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3252,
											"end": 3320,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "111"
										},
										{
											"begin": 3252,
											"end": 3320,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3252,
											"end": 3320,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "112"
										},
										{
											"begin": 3252,
											"end": 3320,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3252,
											"end": 3320,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "111"
										},
										{
											"begin": 3252,
											"end": 3320,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3252,
											"end": 3320,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3252,
											"end": 3320,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3252,
											"end": 3320,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3252,
											"end": 3320,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3252,
											"end": 3320,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 3252,
											"end": 3320,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3252,
											"end": 3320,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 3252,
											"end": 3320,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "110"
										},
										{
											"begin": 3252,
											"end": 3320,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3359,
											"end": 3364,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3339,
											"end": 3347,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3339,
											"end": 3356,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 3339,
											"end": 3356,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3339,
											"end": 3356,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "14"
										},
										{
											"begin": 3339,
											"end": 3364,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 3339,
											"end": 3364,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 3339,
											"end": 3364,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3339,
											"end": 3364,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 3339,
											"end": 3364,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3339,
											"end": 3364,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FF"
										},
										{
											"begin": 3339,
											"end": 3364,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 3339,
											"end": 3364,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 3339,
											"end": 3364,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3339,
											"end": 3364,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3339,
											"end": 3364,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 3339,
											"end": 3364,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 3339,
											"end": 3364,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 3339,
											"end": 3364,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 3339,
											"end": 3364,
											"modifierDepth": 1,
											"name": "OR",
											"source": 8
										},
										{
											"begin": 3339,
											"end": 3364,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3339,
											"end": 3364,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 3339,
											"end": 3364,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3391,
											"end": 3396,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3374,
											"end": 3382,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3374,
											"end": 3388,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3374,
											"end": 3388,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3374,
											"end": 3388,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3374,
											"end": 3396,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 3374,
											"end": 3396,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 3374,
											"end": 3396,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3374,
											"end": 3396,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 3374,
											"end": 3396,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3374,
											"end": 3396,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3374,
											"end": 3396,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 3374,
											"end": 3396,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 3374,
											"end": 3396,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3374,
											"end": 3396,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3374,
											"end": 3396,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 3374,
											"end": 3396,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3374,
											"end": 3396,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3374,
											"end": 3396,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 3374,
											"end": 3396,
											"modifierDepth": 1,
											"name": "OR",
											"source": 8
										},
										{
											"begin": 3374,
											"end": 3396,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3374,
											"end": 3396,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 3374,
											"end": 3396,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3415,
											"end": 3435,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3438,
											"end": 3446,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3438,
											"end": 3452,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 3438,
											"end": 3452,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3438,
											"end": 3452,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 3415,
											"end": 3452,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3415,
											"end": 3452,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3462,
											"end": 3517,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "113"
										},
										{
											"begin": 3488,
											"end": 3496,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3488,
											"end": 3502,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3488,
											"end": 3502,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3488,
											"end": 3502,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3488,
											"end": 3502,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3488,
											"end": 3502,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 3488,
											"end": 3502,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3488,
											"end": 3502,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 3488,
											"end": 3502,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 3488,
											"end": 3502,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3488,
											"end": 3502,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 3488,
											"end": 3502,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3488,
											"end": 3502,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3504,
											"end": 3516,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3462,
											"end": 3474,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 3462,
											"end": 3474,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3462,
											"end": 3474,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3462,
											"end": 3474,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 3462,
											"end": 3474,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3462,
											"end": 3474,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 3462,
											"end": 3474,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 3462,
											"end": 3474,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3462,
											"end": 3474,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 3462,
											"end": 3474,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3462,
											"end": 3474,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3462,
											"end": 3487,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3462,
											"end": 3487,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3462,
											"end": 3487,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "114"
										},
										{
											"begin": 3462,
											"end": 3487,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3462,
											"end": 3517,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 3462,
											"end": 3517,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3462,
											"end": 3517,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3462,
											"end": 3517,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3462,
											"end": 3517,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3462,
											"end": 3517,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3462,
											"end": 3517,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "113"
										},
										{
											"begin": 3462,
											"end": 3517,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3566,
											"end": 3571,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3541,
											"end": 3594,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3541,
											"end": 3594,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3541,
											"end": 3594,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "F17A6666765DB393A6218BB324C4DE5CC60C9EE3B981BD102BA416EFFC13B895"
										},
										{
											"begin": 3554,
											"end": 3564,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 3573,
											"end": 3581,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 3573,
											"end": 3593,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 3573,
											"end": 3593,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3573,
											"end": 3593,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 3541,
											"end": 3594,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3541,
											"end": 3594,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3541,
											"end": 3594,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "115"
										},
										{
											"begin": 3541,
											"end": 3594,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 3541,
											"end": 3594,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3541,
											"end": 3594,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3541,
											"end": 3594,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "116"
										},
										{
											"begin": 3541,
											"end": 3594,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3541,
											"end": 3594,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "115"
										},
										{
											"begin": 3541,
											"end": 3594,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3541,
											"end": 3594,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3541,
											"end": 3594,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3541,
											"end": 3594,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3541,
											"end": 3594,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3541,
											"end": 3594,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 3541,
											"end": 3594,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3541,
											"end": 3594,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 8
										},
										{
											"begin": 3095,
											"end": 3601,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3095,
											"end": 3601,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3015,
											"end": 3601,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3015,
											"end": 3601,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3015,
											"end": 3601,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3912,
											"end": 4065,
											"name": "tag",
											"source": 8,
											"value": "57"
										},
										{
											"begin": 3912,
											"end": 4065,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3984,
											"end": 3988,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4007,
											"end": 4021,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 4007,
											"end": 4021,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4007,
											"end": 4021,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4007,
											"end": 4021,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 4007,
											"end": 4021,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4007,
											"end": 4021,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 4007,
											"end": 4021,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 4007,
											"end": 4021,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4007,
											"end": 4021,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 4007,
											"end": 4021,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4007,
											"end": 4021,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 4007,
											"end": 4046,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4007,
											"end": 4046,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 4007,
											"end": 4046,
											"name": "PUSH",
											"source": 8,
											"value": "7485CDC2"
										},
										{
											"begin": 4047,
											"end": 4057,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 4007,
											"end": 4058,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4007,
											"end": 4058,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 4007,
											"end": 4058,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4007,
											"end": 4058,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4007,
											"end": 4058,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 4007,
											"end": 4058,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 4007,
											"end": 4058,
											"name": "SHL",
											"source": 8
										},
										{
											"begin": 4007,
											"end": 4058,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4007,
											"end": 4058,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4007,
											"end": 4058,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 4007,
											"end": 4058,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4007,
											"end": 4058,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "118"
										},
										{
											"begin": 4007,
											"end": 4058,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4007,
											"end": 4058,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4007,
											"end": 4058,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "27"
										},
										{
											"begin": 4007,
											"end": 4058,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4007,
											"end": 4058,
											"name": "tag",
											"source": 8,
											"value": "118"
										},
										{
											"begin": 4007,
											"end": 4058,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4007,
											"end": 4058,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4007,
											"end": 4058,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4007,
											"end": 4058,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 4007,
											"end": 4058,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4007,
											"end": 4058,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 4007,
											"end": 4058,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 4007,
											"end": 4058,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4007,
											"end": 4058,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 4007,
											"end": 4058,
											"name": "GAS",
											"source": 8
										},
										{
											"begin": 4007,
											"end": 4058,
											"name": "STATICCALL",
											"source": 8
										},
										{
											"begin": 4007,
											"end": 4058,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 4007,
											"end": 4058,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4007,
											"end": 4058,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 4007,
											"end": 4058,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "120"
										},
										{
											"begin": 4007,
											"end": 4058,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 4007,
											"end": 4058,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 4007,
											"end": 4058,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4007,
											"end": 4058,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4007,
											"end": 4058,
											"name": "RETURNDATACOPY",
											"source": 8
										},
										{
											"begin": 4007,
											"end": 4058,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 4007,
											"end": 4058,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4007,
											"end": 4058,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 4007,
											"end": 4058,
											"name": "tag",
											"source": 8,
											"value": "120"
										},
										{
											"begin": 4007,
											"end": 4058,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4007,
											"end": 4058,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4007,
											"end": 4058,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4007,
											"end": 4058,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4007,
											"end": 4058,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4007,
											"end": 4058,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4007,
											"end": 4058,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 4007,
											"end": 4058,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 4007,
											"end": 4058,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 4007,
											"end": 4058,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 4007,
											"end": 4058,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 4007,
											"end": 4058,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4007,
											"end": 4058,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4007,
											"end": 4058,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 4007,
											"end": 4058,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4007,
											"end": 4058,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4007,
											"end": 4058,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4007,
											"end": 4058,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4007,
											"end": 4058,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4007,
											"end": 4058,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4007,
											"end": 4058,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4007,
											"end": 4058,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4007,
											"end": 4058,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4007,
											"end": 4058,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "121"
										},
										{
											"begin": 4007,
											"end": 4058,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4007,
											"end": 4058,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4007,
											"end": 4058,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "122"
										},
										{
											"begin": 4007,
											"end": 4058,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4007,
											"end": 4058,
											"name": "tag",
											"source": 8,
											"value": "121"
										},
										{
											"begin": 4007,
											"end": 4058,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4000,
											"end": 4058,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4000,
											"end": 4058,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3912,
											"end": 4065,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3912,
											"end": 4065,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3912,
											"end": 4065,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3912,
											"end": 4065,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2269,
											"end": 2954,
											"name": "tag",
											"source": 8,
											"value": "62"
										},
										{
											"begin": 2269,
											"end": 2954,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1474,
											"end": 1493,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "124"
										},
										{
											"begin": 1474,
											"end": 1491,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "91"
										},
										{
											"begin": 1474,
											"end": 1493,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1474,
											"end": 1493,
											"name": "tag",
											"source": 6,
											"value": "124"
										},
										{
											"begin": 1474,
											"end": 1493,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2367,
											"end": 2392,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2395,
											"end": 2405,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 2395,
											"end": 2417,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2406,
											"end": 2416,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 2395,
											"end": 2417,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2395,
											"end": 2417,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2395,
											"end": 2417,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2395,
											"end": 2417,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2395,
											"end": 2417,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2395,
											"end": 2417,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2395,
											"end": 2417,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2395,
											"end": 2417,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2395,
											"end": 2417,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2395,
											"end": 2417,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2395,
											"end": 2417,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 2367,
											"end": 2417,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2367,
											"end": 2417,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2435,
											"end": 2443,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2435,
											"end": 2452,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 2435,
											"end": 2452,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2435,
											"end": 2452,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "14"
										},
										{
											"begin": 2435,
											"end": 2452,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2435,
											"end": 2452,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 2435,
											"end": 2452,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2435,
											"end": 2452,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 2435,
											"end": 2452,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 2435,
											"end": 2452,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2435,
											"end": 2452,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 2435,
											"end": 2452,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FF"
										},
										{
											"begin": 2435,
											"end": 2452,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2427,
											"end": 2479,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "126"
										},
										{
											"begin": 2427,
											"end": 2479,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2427,
											"end": 2479,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2427,
											"end": 2479,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2427,
											"end": 2479,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2427,
											"end": 2479,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2427,
											"end": 2479,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2427,
											"end": 2479,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 2427,
											"end": 2479,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2427,
											"end": 2479,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "127"
										},
										{
											"begin": 2427,
											"end": 2479,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2427,
											"end": 2479,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "128"
										},
										{
											"begin": 2427,
											"end": 2479,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2427,
											"end": 2479,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "127"
										},
										{
											"begin": 2427,
											"end": 2479,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2427,
											"end": 2479,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2427,
											"end": 2479,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2427,
											"end": 2479,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2427,
											"end": 2479,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2427,
											"end": 2479,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2427,
											"end": 2479,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2427,
											"end": 2479,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 2427,
											"end": 2479,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "126"
										},
										{
											"begin": 2427,
											"end": 2479,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2525,
											"end": 2536,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2497,
											"end": 2505,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2497,
											"end": 2521,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 2497,
											"end": 2521,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2497,
											"end": 2521,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 2497,
											"end": 2536,
											"modifierDepth": 1,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 2497,
											"end": 2536,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2489,
											"end": 2568,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "129"
										},
										{
											"begin": 2489,
											"end": 2568,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2489,
											"end": 2568,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2489,
											"end": 2568,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2489,
											"end": 2568,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2489,
											"end": 2568,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2489,
											"end": 2568,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2489,
											"end": 2568,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 2489,
											"end": 2568,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2489,
											"end": 2568,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "130"
										},
										{
											"begin": 2489,
											"end": 2568,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2489,
											"end": 2568,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "131"
										},
										{
											"begin": 2489,
											"end": 2568,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2489,
											"end": 2568,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "130"
										},
										{
											"begin": 2489,
											"end": 2568,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2489,
											"end": 2568,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2489,
											"end": 2568,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2489,
											"end": 2568,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2489,
											"end": 2568,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2489,
											"end": 2568,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2489,
											"end": 2568,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2489,
											"end": 2568,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 2489,
											"end": 2568,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "129"
										},
										{
											"begin": 2489,
											"end": 2568,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2600,
											"end": 2601,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2586,
											"end": 2597,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2586,
											"end": 2601,
											"modifierDepth": 1,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 2578,
											"end": 2642,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "132"
										},
										{
											"begin": 2578,
											"end": 2642,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2578,
											"end": 2642,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2578,
											"end": 2642,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2578,
											"end": 2642,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2578,
											"end": 2642,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2578,
											"end": 2642,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2578,
											"end": 2642,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 2578,
											"end": 2642,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2578,
											"end": 2642,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "133"
										},
										{
											"begin": 2578,
											"end": 2642,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2578,
											"end": 2642,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "134"
										},
										{
											"begin": 2578,
											"end": 2642,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2578,
											"end": 2642,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "133"
										},
										{
											"begin": 2578,
											"end": 2642,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2578,
											"end": 2642,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2578,
											"end": 2642,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2578,
											"end": 2642,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2578,
											"end": 2642,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2578,
											"end": 2642,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2578,
											"end": 2642,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2578,
											"end": 2642,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 2578,
											"end": 2642,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "132"
										},
										{
											"begin": 2578,
											"end": 2642,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2661,
											"end": 2679,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2715,
											"end": 2723,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2715,
											"end": 2735,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 2715,
											"end": 2735,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2715,
											"end": 2735,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 2700,
											"end": 2711,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2683,
											"end": 2691,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2683,
											"end": 2697,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 2683,
											"end": 2697,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2683,
											"end": 2697,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 2683,
											"end": 2711,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "135"
										},
										{
											"begin": 2683,
											"end": 2711,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2683,
											"end": 2711,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2683,
											"end": 2711,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "136"
										},
										{
											"begin": 2683,
											"end": 2711,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2683,
											"end": 2711,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "135"
										},
										{
											"begin": 2683,
											"end": 2711,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2682,
											"end": 2735,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "137"
										},
										{
											"begin": 2682,
											"end": 2735,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2682,
											"end": 2735,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2682,
											"end": 2735,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "138"
										},
										{
											"begin": 2682,
											"end": 2735,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2682,
											"end": 2735,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "137"
										},
										{
											"begin": 2682,
											"end": 2735,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2661,
											"end": 2735,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2661,
											"end": 2735,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2745,
											"end": 2813,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "139"
										},
										{
											"begin": 2775,
											"end": 2785,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 2795,
											"end": 2799,
											"modifierDepth": 1,
											"name": "ADDRESS",
											"source": 8
										},
										{
											"begin": 2802,
											"end": 2812,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2745,
											"end": 2757,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 2745,
											"end": 2757,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2745,
											"end": 2757,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2745,
											"end": 2757,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 2745,
											"end": 2757,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2745,
											"end": 2757,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 2745,
											"end": 2757,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 2745,
											"end": 2757,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2745,
											"end": 2757,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 2745,
											"end": 2757,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2745,
											"end": 2757,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2745,
											"end": 2774,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2745,
											"end": 2774,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2745,
											"end": 2774,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "140"
										},
										{
											"begin": 2745,
											"end": 2774,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2745,
											"end": 2813,
											"modifierDepth": 1,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 2745,
											"end": 2813,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 2745,
											"end": 2813,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2745,
											"end": 2813,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2745,
											"end": 2813,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2745,
											"end": 2813,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2745,
											"end": 2813,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2745,
											"end": 2813,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "139"
										},
										{
											"begin": 2745,
											"end": 2813,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2860,
											"end": 2871,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2832,
											"end": 2840,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2832,
											"end": 2856,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 2832,
											"end": 2856,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2832,
											"end": 2856,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2832,
											"end": 2871,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2832,
											"end": 2871,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2832,
											"end": 2871,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 2832,
											"end": 2871,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "141"
										},
										{
											"begin": 2832,
											"end": 2871,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2832,
											"end": 2871,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2832,
											"end": 2871,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "142"
										},
										{
											"begin": 2832,
											"end": 2871,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2832,
											"end": 2871,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "141"
										},
										{
											"begin": 2832,
											"end": 2871,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2832,
											"end": 2871,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 2832,
											"end": 2871,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2832,
											"end": 2871,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2832,
											"end": 2871,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2832,
											"end": 2871,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2832,
											"end": 2871,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 2832,
											"end": 2871,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2923,
											"end": 2933,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 2895,
											"end": 2947,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2895,
											"end": 2947,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2895,
											"end": 2947,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "D4A7A37D339805413B4085E0F8E0932DFB0A4F84F08F98A6E53673B5EE8EEE15"
										},
										{
											"begin": 2911,
											"end": 2921,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 2935,
											"end": 2946,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 2895,
											"end": 2947,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2895,
											"end": 2947,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2895,
											"end": 2947,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "143"
										},
										{
											"begin": 2895,
											"end": 2947,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 2895,
											"end": 2947,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2895,
											"end": 2947,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2895,
											"end": 2947,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "116"
										},
										{
											"begin": 2895,
											"end": 2947,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2895,
											"end": 2947,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "143"
										},
										{
											"begin": 2895,
											"end": 2947,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2895,
											"end": 2947,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2895,
											"end": 2947,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2895,
											"end": 2947,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2895,
											"end": 2947,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2895,
											"end": 2947,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2895,
											"end": 2947,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2895,
											"end": 2947,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 8
										},
										{
											"begin": 2357,
											"end": 2954,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2357,
											"end": 2954,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2269,
											"end": 2954,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2269,
											"end": 2954,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2269,
											"end": 2954,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2647,
											"end": 2648,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2635,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2700,
											"end": 2701,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 2672,
											"end": 2703,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 2742,
											"end": 2750,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2741,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 2723,
											"end": 2751,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1098,
											"end": 1144,
											"name": "tag",
											"source": 8,
											"value": "69"
										},
										{
											"begin": 1098,
											"end": 1144,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1098,
											"end": 1144,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 1098,
											"end": 1144,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1098,
											"end": 1144,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1098,
											"end": 1144,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1098,
											"end": 1144,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1098,
											"end": 1144,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1098,
											"end": 1144,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1098,
											"end": 1144,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1098,
											"end": 1144,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 1098,
											"end": 1144,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1098,
											"end": 1144,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1098,
											"end": 1144,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1098,
											"end": 1144,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1098,
											"end": 1144,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1098,
											"end": 1144,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1098,
											"end": 1144,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1098,
											"end": 1144,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1098,
											"end": 1144,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1098,
											"end": 1144,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1098,
											"end": 1144,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 1098,
											"end": 1144,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1098,
											"end": 1144,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 1098,
											"end": 1144,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 1098,
											"end": 1144,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1098,
											"end": 1144,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 1098,
											"end": 1144,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1098,
											"end": 1144,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1098,
											"end": 1144,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1098,
											"end": 1144,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1098,
											"end": 1144,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 1098,
											"end": 1144,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1098,
											"end": 1144,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 1098,
											"end": 1144,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1098,
											"end": 1144,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1098,
											"end": 1144,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 1098,
											"end": 1144,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1098,
											"end": 1144,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 1098,
											"end": 1144,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1098,
											"end": 1144,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1098,
											"end": 1144,
											"name": "PUSH",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 1098,
											"end": 1144,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1098,
											"end": 1144,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 1098,
											"end": 1144,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1098,
											"end": 1144,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1098,
											"end": 1144,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 1098,
											"end": 1144,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1098,
											"end": 1144,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1098,
											"end": 1144,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1098,
											"end": 1144,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 1098,
											"end": 1144,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1098,
											"end": 1144,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 1098,
											"end": 1144,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 1098,
											"end": 1144,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1098,
											"end": 1144,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 1098,
											"end": 1144,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1098,
											"end": 1144,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1098,
											"end": 1144,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1098,
											"end": 1144,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1098,
											"end": 1144,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 1098,
											"end": 1144,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1098,
											"end": 1144,
											"name": "PUSH",
											"source": 8,
											"value": "14"
										},
										{
											"begin": 1098,
											"end": 1144,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1098,
											"end": 1144,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 1098,
											"end": 1144,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1098,
											"end": 1144,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 1098,
											"end": 1144,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 1098,
											"end": 1144,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1098,
											"end": 1144,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 1098,
											"end": 1144,
											"name": "PUSH",
											"source": 8,
											"value": "FF"
										},
										{
											"begin": 1098,
											"end": 1144,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1098,
											"end": 1144,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1098,
											"end": 1144,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1098,
											"end": 1144,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 1098,
											"end": 1144,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "tag",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 1866,
											"end": 1876,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 1866,
											"end": 1878,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "tag",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 1855,
											"end": 1860,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 1855,
											"end": 1862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "tag",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 1928,
											"end": 1938,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 1928,
											"end": 1940,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "tag",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "118CDAA700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 1901,
											"end": 1941,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "tag",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "tag",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1958,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2710,
											"end": 2827,
											"name": "tag",
											"source": 6,
											"value": "77"
										},
										{
											"begin": 2710,
											"end": 2827,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1721,
											"end": 1737,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "158"
										},
										{
											"begin": 1721,
											"end": 1735,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "159"
										},
										{
											"begin": 1721,
											"end": 1737,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1721,
											"end": 1737,
											"name": "tag",
											"source": 6,
											"value": "158"
										},
										{
											"begin": 1721,
											"end": 1737,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2778,
											"end": 2783,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2768,
											"end": 2775,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2768,
											"end": 2775,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "14"
										},
										{
											"begin": 2768,
											"end": 2783,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 2768,
											"end": 2783,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 2768,
											"end": 2783,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2768,
											"end": 2783,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2768,
											"end": 2783,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2768,
											"end": 2783,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 2768,
											"end": 2783,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 2768,
											"end": 2783,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 2768,
											"end": 2783,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2768,
											"end": 2783,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2768,
											"end": 2783,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2768,
											"end": 2783,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2768,
											"end": 2783,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2768,
											"end": 2783,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 2768,
											"end": 2783,
											"modifierDepth": 1,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 2768,
											"end": 2783,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2768,
											"end": 2783,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 2768,
											"end": 2783,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2798,
											"end": 2820,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA"
										},
										{
											"begin": 2807,
											"end": 2819,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "161"
										},
										{
											"begin": 2807,
											"end": 2817,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "152"
										},
										{
											"begin": 2807,
											"end": 2819,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2807,
											"end": 2819,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "161"
										},
										{
											"begin": 2807,
											"end": 2819,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2798,
											"end": 2820,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2798,
											"end": 2820,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2798,
											"end": 2820,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "162"
										},
										{
											"begin": 2798,
											"end": 2820,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2798,
											"end": 2820,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2798,
											"end": 2820,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "45"
										},
										{
											"begin": 2798,
											"end": 2820,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2798,
											"end": 2820,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "162"
										},
										{
											"begin": 2798,
											"end": 2820,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2798,
											"end": 2820,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2798,
											"end": 2820,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2798,
											"end": 2820,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2798,
											"end": 2820,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2798,
											"end": 2820,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2798,
											"end": 2820,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2798,
											"end": 2820,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 6
										},
										{
											"begin": 2710,
											"end": 2827,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "tag",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3001,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3029,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3083,
											"end": 3091,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3073,
											"end": 3081,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2975,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2463,
											"end": 2578,
											"name": "tag",
											"source": 6,
											"value": "88"
										},
										{
											"begin": 2463,
											"end": 2578,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1474,
											"end": 1493,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "165"
										},
										{
											"begin": 1474,
											"end": 1491,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "91"
										},
										{
											"begin": 1474,
											"end": 1493,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1474,
											"end": 1493,
											"name": "tag",
											"source": 6,
											"value": "165"
										},
										{
											"begin": 1474,
											"end": 1493,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2532,
											"end": 2536,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 2522,
											"end": 2529,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2522,
											"end": 2529,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "14"
										},
										{
											"begin": 2522,
											"end": 2536,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 2522,
											"end": 2536,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 2522,
											"end": 2536,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2522,
											"end": 2536,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2522,
											"end": 2536,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2522,
											"end": 2536,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 2522,
											"end": 2536,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 2522,
											"end": 2536,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 2522,
											"end": 2536,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2522,
											"end": 2536,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2522,
											"end": 2536,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2522,
											"end": 2536,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2522,
											"end": 2536,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2522,
											"end": 2536,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 2522,
											"end": 2536,
											"modifierDepth": 1,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 2522,
											"end": 2536,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2522,
											"end": 2536,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 2522,
											"end": 2536,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2551,
											"end": 2571,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258"
										},
										{
											"begin": 2558,
											"end": 2570,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "167"
										},
										{
											"begin": 2558,
											"end": 2568,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "152"
										},
										{
											"begin": 2558,
											"end": 2570,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2558,
											"end": 2570,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "167"
										},
										{
											"begin": 2558,
											"end": 2570,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2551,
											"end": 2571,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2551,
											"end": 2571,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2551,
											"end": 2571,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "168"
										},
										{
											"begin": 2551,
											"end": 2571,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2551,
											"end": 2571,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2551,
											"end": 2571,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "45"
										},
										{
											"begin": 2551,
											"end": 2571,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2551,
											"end": 2571,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "168"
										},
										{
											"begin": 2551,
											"end": 2571,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2551,
											"end": 2571,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2551,
											"end": 2571,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2551,
											"end": 2571,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2551,
											"end": 2571,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2551,
											"end": 2571,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2551,
											"end": 2571,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2551,
											"end": 2571,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 6
										},
										{
											"begin": 2463,
											"end": 2578,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2002,
											"end": 2130,
											"name": "tag",
											"source": 6,
											"value": "91"
										},
										{
											"begin": 2002,
											"end": 2130,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2067,
											"end": 2075,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "170"
										},
										{
											"begin": 2067,
											"end": 2073,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "31"
										},
										{
											"begin": 2067,
											"end": 2075,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2067,
											"end": 2075,
											"name": "tag",
											"source": 6,
											"value": "170"
										},
										{
											"begin": 2067,
											"end": 2075,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2063,
											"end": 2124,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2063,
											"end": 2124,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "171"
										},
										{
											"begin": 2063,
											"end": 2124,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2098,
											"end": 2113,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2098,
											"end": 2113,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2098,
											"end": 2113,
											"name": "PUSH",
											"source": 6,
											"value": "D93C066500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2098,
											"end": 2113,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2098,
											"end": 2113,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2098,
											"end": 2113,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2098,
											"end": 2113,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2098,
											"end": 2113,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2098,
											"end": 2113,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2098,
											"end": 2113,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2098,
											"end": 2113,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2098,
											"end": 2113,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2098,
											"end": 2113,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2098,
											"end": 2113,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2063,
											"end": 2124,
											"name": "tag",
											"source": 6,
											"value": "171"
										},
										{
											"begin": 2063,
											"end": 2124,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2002,
											"end": 2130,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1303,
											"end": 1463,
											"name": "tag",
											"source": 3,
											"value": "114"
										},
										{
											"begin": 1303,
											"end": 1463,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1385,
											"end": 1456,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "173"
										},
										{
											"begin": 1405,
											"end": 1410,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1427,
											"end": 1432,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1427,
											"end": 1441,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1427,
											"end": 1441,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1427,
											"end": 1441,
											"name": "PUSH",
											"source": 3,
											"value": "A9059CBB"
										},
										{
											"begin": 1444,
											"end": 1446,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 1448,
											"end": 1453,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "174"
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "175"
										},
										{
											"begin": 1412,
											"end": 1455,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "tag",
											"source": 3,
											"value": "174"
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "SHL",
											"source": 3
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1385,
											"end": 1404,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "176"
										},
										{
											"begin": 1385,
											"end": 1456,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1385,
											"end": 1456,
											"name": "tag",
											"source": 3,
											"value": "173"
										},
										{
											"begin": 1385,
											"end": 1456,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1303,
											"end": 1463,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1303,
											"end": 1463,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1303,
											"end": 1463,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1303,
											"end": 1463,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1702,
											"end": 1890,
											"name": "tag",
											"source": 3,
											"value": "140"
										},
										{
											"begin": 1702,
											"end": 1890,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1802,
											"end": 1883,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "178"
										},
										{
											"begin": 1822,
											"end": 1827,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1844,
											"end": 1849,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 1844,
											"end": 1862,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1844,
											"end": 1862,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1844,
											"end": 1862,
											"name": "PUSH",
											"source": 3,
											"value": "23B872DD"
										},
										{
											"begin": 1865,
											"end": 1869,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 1871,
											"end": 1873,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 1875,
											"end": 1880,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "179"
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "180"
										},
										{
											"begin": 1829,
											"end": 1882,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "tag",
											"source": 3,
											"value": "179"
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "SHL",
											"source": 3
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1802,
											"end": 1821,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "176"
										},
										{
											"begin": 1802,
											"end": 1883,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1802,
											"end": 1883,
											"name": "tag",
											"source": 3,
											"value": "178"
										},
										{
											"begin": 1802,
											"end": 1883,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1702,
											"end": 1890,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1702,
											"end": 1890,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1702,
											"end": 1890,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1702,
											"end": 1890,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1702,
											"end": 1890,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 656,
											"end": 752,
											"name": "tag",
											"source": 5,
											"value": "152"
										},
										{
											"begin": 656,
											"end": 752,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 709,
											"end": 716,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 728,
											"end": 745,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 728,
											"end": 745,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 656,
											"end": 752,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 656,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2202,
											"end": 2328,
											"name": "tag",
											"source": 6,
											"value": "159"
										},
										{
											"begin": 2202,
											"end": 2328,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2265,
											"end": 2273,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "183"
										},
										{
											"begin": 2265,
											"end": 2271,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "31"
										},
										{
											"begin": 2265,
											"end": 2273,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2265,
											"end": 2273,
											"name": "tag",
											"source": 6,
											"value": "183"
										},
										{
											"begin": 2265,
											"end": 2273,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2260,
											"end": 2322,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "184"
										},
										{
											"begin": 2260,
											"end": 2322,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2296,
											"end": 2311,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2296,
											"end": 2311,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2296,
											"end": 2311,
											"name": "PUSH",
											"source": 6,
											"value": "8DFC202B00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2296,
											"end": 2311,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2296,
											"end": 2311,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2296,
											"end": 2311,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2296,
											"end": 2311,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2296,
											"end": 2311,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2296,
											"end": 2311,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2296,
											"end": 2311,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2296,
											"end": 2311,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2296,
											"end": 2311,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2296,
											"end": 2311,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2296,
											"end": 2311,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2260,
											"end": 2322,
											"name": "tag",
											"source": 6,
											"value": "184"
										},
										{
											"begin": 2260,
											"end": 2322,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2202,
											"end": 2328,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4059,
											"end": 4688,
											"name": "tag",
											"source": 3,
											"value": "176"
										},
										{
											"begin": 4059,
											"end": 4688,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4478,
											"end": 4501,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4504,
											"end": 4537,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "186"
										},
										{
											"begin": 4532,
											"end": 4536,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4512,
											"end": 4517,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 4504,
											"end": 4531,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4504,
											"end": 4531,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4504,
											"end": 4531,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "187"
										},
										{
											"begin": 4504,
											"end": 4531,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4504,
											"end": 4537,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4504,
											"end": 4537,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4504,
											"end": 4537,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4504,
											"end": 4537,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4504,
											"end": 4537,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4504,
											"end": 4537,
											"name": "tag",
											"source": 3,
											"value": "186"
										},
										{
											"begin": 4504,
											"end": 4537,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4478,
											"end": 4537,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4478,
											"end": 4537,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4572,
											"end": 4573,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4551,
											"end": 4561,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4551,
											"end": 4568,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4551,
											"end": 4573,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 4551,
											"end": 4573,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 4551,
											"end": 4608,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4551,
											"end": 4608,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 4551,
											"end": 4608,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "188"
										},
										{
											"begin": 4551,
											"end": 4608,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 4551,
											"end": 4608,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4589,
											"end": 4599,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "189"
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "122"
										},
										{
											"begin": 4578,
											"end": 4608,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "tag",
											"source": 3,
											"value": "189"
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4577,
											"end": 4608,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 4551,
											"end": 4608,
											"name": "tag",
											"source": 3,
											"value": "188"
										},
										{
											"begin": 4551,
											"end": 4608,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4547,
											"end": 4682,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 4547,
											"end": 4682,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "190"
										},
										{
											"begin": 4547,
											"end": 4682,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 4664,
											"end": 4669,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "PUSH",
											"source": 3,
											"value": "5274AFE700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "191"
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "45"
										},
										{
											"begin": 4631,
											"end": 4671,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "tag",
											"source": 3,
											"value": "191"
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 4547,
											"end": 4682,
											"name": "tag",
											"source": 3,
											"value": "190"
										},
										{
											"begin": 4547,
											"end": 4682,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4129,
											"end": 4688,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4059,
											"end": 4688,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4059,
											"end": 4688,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4059,
											"end": 4688,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2705,
											"end": 2856,
											"name": "tag",
											"source": 4,
											"value": "187"
										},
										{
											"begin": 2705,
											"end": 2856,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2780,
											"end": 2792,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 2811,
											"end": 2849,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "193"
										},
										{
											"begin": 2833,
											"end": 2839,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2841,
											"end": 2845,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2847,
											"end": 2848,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2811,
											"end": 2832,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "194"
										},
										{
											"begin": 2811,
											"end": 2849,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2811,
											"end": 2849,
											"name": "tag",
											"source": 4,
											"value": "193"
										},
										{
											"begin": 2811,
											"end": 2849,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2804,
											"end": 2849,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2804,
											"end": 2849,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2705,
											"end": 2856,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2705,
											"end": 2856,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2705,
											"end": 2856,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2705,
											"end": 2856,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2705,
											"end": 2856,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3180,
											"end": 3572,
											"name": "tag",
											"source": 4,
											"value": "194"
										},
										{
											"begin": 3180,
											"end": 3572,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3279,
											"end": 3291,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 3331,
											"end": 3336,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3307,
											"end": 3328,
											"name": "SELFBALANCE",
											"source": 4
										},
										{
											"begin": 3307,
											"end": 3336,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 3303,
											"end": 3411,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3303,
											"end": 3411,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "196"
										},
										{
											"begin": 3303,
											"end": 3411,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3394,
											"end": 3398,
											"name": "ADDRESS",
											"source": 4
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "PUSH",
											"source": 4,
											"value": "CD78605900000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "197"
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "45"
										},
										{
											"begin": 3359,
											"end": 3400,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "tag",
											"source": 4,
											"value": "197"
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 3303,
											"end": 3411,
											"name": "tag",
											"source": 4,
											"value": "196"
										},
										{
											"begin": 3303,
											"end": 3411,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3421,
											"end": 3433,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3435,
											"end": 3458,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3462,
											"end": 3468,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 3462,
											"end": 3473,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3462,
											"end": 3473,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3481,
											"end": 3486,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 3488,
											"end": 3492,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "198"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "199"
										},
										{
											"begin": 3462,
											"end": 3493,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "tag",
											"source": 4,
											"value": "198"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "CALL",
											"source": 4
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "202"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH",
											"source": 4,
											"value": "3F"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "201"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "tag",
											"source": 4,
											"value": "202"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "tag",
											"source": 4,
											"value": "201"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3420,
											"end": 3493,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3420,
											"end": 3493,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3420,
											"end": 3493,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3420,
											"end": 3493,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3510,
											"end": 3565,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "203"
										},
										{
											"begin": 3537,
											"end": 3543,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 3545,
											"end": 3552,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3554,
											"end": 3564,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3510,
											"end": 3536,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "204"
										},
										{
											"begin": 3510,
											"end": 3565,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3510,
											"end": 3565,
											"name": "tag",
											"source": 4,
											"value": "203"
										},
										{
											"begin": 3510,
											"end": 3565,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3503,
											"end": 3565,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3503,
											"end": 3565,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3503,
											"end": 3565,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3503,
											"end": 3565,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3180,
											"end": 3572,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 3180,
											"end": 3572,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3180,
											"end": 3572,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3180,
											"end": 3572,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3180,
											"end": 3572,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3180,
											"end": 3572,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4625,
											"end": 5207,
											"name": "tag",
											"source": 4,
											"value": "204"
										},
										{
											"begin": 4625,
											"end": 5207,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4769,
											"end": 4781,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 4798,
											"end": 4805,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4793,
											"end": 5201,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "206"
										},
										{
											"begin": 4793,
											"end": 5201,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 4821,
											"end": 4840,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "207"
										},
										{
											"begin": 4829,
											"end": 4839,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4821,
											"end": 4828,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "208"
										},
										{
											"begin": 4821,
											"end": 4840,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4821,
											"end": 4840,
											"name": "tag",
											"source": 4,
											"value": "207"
										},
										{
											"begin": 4821,
											"end": 4840,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4793,
											"end": 5201,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "209"
										},
										{
											"begin": 4793,
											"end": 5201,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4793,
											"end": 5201,
											"name": "tag",
											"source": 4,
											"value": "206"
										},
										{
											"begin": 4793,
											"end": 5201,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5066,
											"end": 5067,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5045,
											"end": 5055,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5045,
											"end": 5062,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5045,
											"end": 5067,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 5045,
											"end": 5094,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5045,
											"end": 5094,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 5045,
											"end": 5094,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "210"
										},
										{
											"begin": 5045,
											"end": 5094,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 5045,
											"end": 5094,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5093,
											"end": 5094,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5071,
											"end": 5077,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 5071,
											"end": 5089,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5071,
											"end": 5089,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5071,
											"end": 5089,
											"name": "EXTCODESIZE",
											"source": 4
										},
										{
											"begin": 5071,
											"end": 5094,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 5045,
											"end": 5094,
											"name": "tag",
											"source": 4,
											"value": "210"
										},
										{
											"begin": 5045,
											"end": 5094,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5041,
											"end": 5160,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 5041,
											"end": 5160,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "211"
										},
										{
											"begin": 5041,
											"end": 5160,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 5138,
											"end": 5144,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "PUSH",
											"source": 4,
											"value": "9996B31500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "212"
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "45"
										},
										{
											"begin": 5121,
											"end": 5145,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "tag",
											"source": 4,
											"value": "212"
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 5041,
											"end": 5160,
											"name": "tag",
											"source": 4,
											"value": "211"
										},
										{
											"begin": 5041,
											"end": 5160,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5180,
											"end": 5190,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5173,
											"end": 5190,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5173,
											"end": 5190,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5173,
											"end": 5190,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "205"
										},
										{
											"begin": 5173,
											"end": 5190,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4793,
											"end": 5201,
											"name": "tag",
											"source": 4,
											"value": "209"
										},
										{
											"begin": 4793,
											"end": 5201,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4625,
											"end": 5207,
											"name": "tag",
											"source": 4,
											"value": "205"
										},
										{
											"begin": 4625,
											"end": 5207,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4625,
											"end": 5207,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 4625,
											"end": 5207,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 4625,
											"end": 5207,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4625,
											"end": 5207,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4625,
											"end": 5207,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4625,
											"end": 5207,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5743,
											"end": 6259,
											"name": "tag",
											"source": 4,
											"value": "208"
										},
										{
											"begin": 5743,
											"end": 6259,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5894,
											"end": 5895,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5874,
											"end": 5884,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5874,
											"end": 5891,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5874,
											"end": 5895,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 5870,
											"end": 6253,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 5870,
											"end": 6253,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "214"
										},
										{
											"begin": 5870,
											"end": 6253,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 6102,
											"end": 6112,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6096,
											"end": 6113,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 6158,
											"end": 6173,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6145,
											"end": 6155,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6141,
											"end": 6143,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 6137,
											"end": 6156,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6130,
											"end": 6174,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 5870,
											"end": 6253,
											"name": "tag",
											"source": 4,
											"value": "214"
										},
										{
											"begin": 5870,
											"end": 6253,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "PUSH",
											"source": 4,
											"value": "1425EA4200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 7,
											"end": 133,
											"name": "tag",
											"source": 9,
											"value": "216"
										},
										{
											"begin": 7,
											"end": 133,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 44,
											"end": 51,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 84,
											"end": 126,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 77,
											"end": 82,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 73,
											"end": 127,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 62,
											"end": 127,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 62,
											"end": 127,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7,
											"end": 133,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7,
											"end": 133,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7,
											"end": 133,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7,
											"end": 133,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 139,
											"end": 199,
											"name": "tag",
											"source": 9,
											"value": "217"
										},
										{
											"begin": 139,
											"end": 199,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 167,
											"end": 170,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 188,
											"end": 193,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 181,
											"end": 193,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 181,
											"end": 193,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 139,
											"end": 199,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 139,
											"end": 199,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 139,
											"end": 199,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 139,
											"end": 199,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 205,
											"end": 347,
											"name": "tag",
											"source": 9,
											"value": "218"
										},
										{
											"begin": 205,
											"end": 347,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 255,
											"end": 264,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 288,
											"end": 341,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "264"
										},
										{
											"begin": 306,
											"end": 340,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "265"
										},
										{
											"begin": 315,
											"end": 339,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "266"
										},
										{
											"begin": 333,
											"end": 338,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 315,
											"end": 339,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "216"
										},
										{
											"begin": 315,
											"end": 339,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 315,
											"end": 339,
											"name": "tag",
											"source": 9,
											"value": "266"
										},
										{
											"begin": 315,
											"end": 339,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 306,
											"end": 340,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "217"
										},
										{
											"begin": 306,
											"end": 340,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 306,
											"end": 340,
											"name": "tag",
											"source": 9,
											"value": "265"
										},
										{
											"begin": 306,
											"end": 340,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 288,
											"end": 341,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "216"
										},
										{
											"begin": 288,
											"end": 341,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 288,
											"end": 341,
											"name": "tag",
											"source": 9,
											"value": "264"
										},
										{
											"begin": 288,
											"end": 341,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 275,
											"end": 341,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 275,
											"end": 341,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 205,
											"end": 347,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 205,
											"end": 347,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 205,
											"end": 347,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 205,
											"end": 347,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 353,
											"end": 479,
											"name": "tag",
											"source": 9,
											"value": "219"
										},
										{
											"begin": 353,
											"end": 479,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 403,
											"end": 412,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 436,
											"end": 473,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "268"
										},
										{
											"begin": 467,
											"end": 472,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 436,
											"end": 473,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "218"
										},
										{
											"begin": 436,
											"end": 473,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 436,
											"end": 473,
											"name": "tag",
											"source": 9,
											"value": "268"
										},
										{
											"begin": 436,
											"end": 473,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 423,
											"end": 473,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 423,
											"end": 473,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 353,
											"end": 479,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 353,
											"end": 479,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 353,
											"end": 479,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 353,
											"end": 479,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 485,
											"end": 625,
											"name": "tag",
											"source": 9,
											"value": "220"
										},
										{
											"begin": 485,
											"end": 625,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 549,
											"end": 558,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 582,
											"end": 619,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "270"
										},
										{
											"begin": 613,
											"end": 618,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 582,
											"end": 619,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "219"
										},
										{
											"begin": 582,
											"end": 619,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 582,
											"end": 619,
											"name": "tag",
											"source": 9,
											"value": "270"
										},
										{
											"begin": 582,
											"end": 619,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 569,
											"end": 619,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 569,
											"end": 619,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 485,
											"end": 625,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 485,
											"end": 625,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 485,
											"end": 625,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 485,
											"end": 625,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 631,
											"end": 790,
											"name": "tag",
											"source": 9,
											"value": "221"
										},
										{
											"begin": 631,
											"end": 790,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 732,
											"end": 783,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "272"
										},
										{
											"begin": 777,
											"end": 782,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 732,
											"end": 783,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "220"
										},
										{
											"begin": 732,
											"end": 783,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 732,
											"end": 783,
											"name": "tag",
											"source": 9,
											"value": "272"
										},
										{
											"begin": 732,
											"end": 783,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 727,
											"end": 730,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 720,
											"end": 784,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 631,
											"end": 790,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 631,
											"end": 790,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 631,
											"end": 790,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 796,
											"end": 1046,
											"name": "tag",
											"source": 9,
											"value": "23"
										},
										{
											"begin": 796,
											"end": 1046,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 903,
											"end": 907,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 941,
											"end": 943,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 930,
											"end": 939,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 926,
											"end": 944,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 918,
											"end": 944,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 918,
											"end": 944,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 954,
											"end": 1039,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "274"
										},
										{
											"begin": 1036,
											"end": 1037,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1025,
											"end": 1034,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1021,
											"end": 1038,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1012,
											"end": 1018,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 954,
											"end": 1039,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "221"
										},
										{
											"begin": 954,
											"end": 1039,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 954,
											"end": 1039,
											"name": "tag",
											"source": 9,
											"value": "274"
										},
										{
											"begin": 954,
											"end": 1039,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 796,
											"end": 1046,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 796,
											"end": 1046,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 796,
											"end": 1046,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 796,
											"end": 1046,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 796,
											"end": 1046,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1052,
											"end": 1129,
											"name": "tag",
											"source": 9,
											"value": "222"
										},
										{
											"begin": 1052,
											"end": 1129,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1089,
											"end": 1096,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1118,
											"end": 1123,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1107,
											"end": 1123,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1107,
											"end": 1123,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1052,
											"end": 1129,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1052,
											"end": 1129,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1052,
											"end": 1129,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1052,
											"end": 1129,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1135,
											"end": 1253,
											"name": "tag",
											"source": 9,
											"value": "223"
										},
										{
											"begin": 1135,
											"end": 1253,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1222,
											"end": 1246,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "277"
										},
										{
											"begin": 1240,
											"end": 1245,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1222,
											"end": 1246,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "222"
										},
										{
											"begin": 1222,
											"end": 1246,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1222,
											"end": 1246,
											"name": "tag",
											"source": 9,
											"value": "277"
										},
										{
											"begin": 1222,
											"end": 1246,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1217,
											"end": 1220,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1210,
											"end": 1247,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1135,
											"end": 1253,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1135,
											"end": 1253,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1135,
											"end": 1253,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1259,
											"end": 1481,
											"name": "tag",
											"source": 9,
											"value": "27"
										},
										{
											"begin": 1259,
											"end": 1481,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1352,
											"end": 1356,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1390,
											"end": 1392,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1379,
											"end": 1388,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1375,
											"end": 1393,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1367,
											"end": 1393,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1367,
											"end": 1393,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1403,
											"end": 1474,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "279"
										},
										{
											"begin": 1471,
											"end": 1472,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1460,
											"end": 1469,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1456,
											"end": 1473,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1447,
											"end": 1453,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 1403,
											"end": 1474,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "223"
										},
										{
											"begin": 1403,
											"end": 1474,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1403,
											"end": 1474,
											"name": "tag",
											"source": 9,
											"value": "279"
										},
										{
											"begin": 1403,
											"end": 1474,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1259,
											"end": 1481,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 1259,
											"end": 1481,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1259,
											"end": 1481,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1259,
											"end": 1481,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1259,
											"end": 1481,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1487,
											"end": 1577,
											"name": "tag",
											"source": 9,
											"value": "224"
										},
										{
											"begin": 1487,
											"end": 1577,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1521,
											"end": 1528,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1564,
											"end": 1569,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1557,
											"end": 1570,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1550,
											"end": 1571,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1539,
											"end": 1571,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1539,
											"end": 1571,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1487,
											"end": 1577,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1487,
											"end": 1577,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1487,
											"end": 1577,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1487,
											"end": 1577,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1583,
											"end": 1692,
											"name": "tag",
											"source": 9,
											"value": "225"
										},
										{
											"begin": 1583,
											"end": 1692,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1664,
											"end": 1685,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "282"
										},
										{
											"begin": 1679,
											"end": 1684,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1664,
											"end": 1685,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "224"
										},
										{
											"begin": 1664,
											"end": 1685,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1664,
											"end": 1685,
											"name": "tag",
											"source": 9,
											"value": "282"
										},
										{
											"begin": 1664,
											"end": 1685,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1659,
											"end": 1662,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1652,
											"end": 1686,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1583,
											"end": 1692,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1583,
											"end": 1692,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1583,
											"end": 1692,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1698,
											"end": 1908,
											"name": "tag",
											"source": 9,
											"value": "33"
										},
										{
											"begin": 1698,
											"end": 1908,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1785,
											"end": 1789,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1823,
											"end": 1825,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1812,
											"end": 1821,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1808,
											"end": 1826,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1800,
											"end": 1826,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1800,
											"end": 1826,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1836,
											"end": 1901,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "284"
										},
										{
											"begin": 1898,
											"end": 1899,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1887,
											"end": 1896,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1883,
											"end": 1900,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1874,
											"end": 1880,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 1836,
											"end": 1901,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "225"
										},
										{
											"begin": 1836,
											"end": 1901,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1836,
											"end": 1901,
											"name": "tag",
											"source": 9,
											"value": "284"
										},
										{
											"begin": 1836,
											"end": 1901,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1698,
											"end": 1908,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 1698,
											"end": 1908,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1698,
											"end": 1908,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1698,
											"end": 1908,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1698,
											"end": 1908,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1995,
											"end": 2112,
											"name": "tag",
											"source": 9,
											"value": "227"
										},
										{
											"begin": 1995,
											"end": 2112,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2104,
											"end": 2105,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2101,
											"end": 2102,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2094,
											"end": 2106,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 2241,
											"end": 2363,
											"name": "tag",
											"source": 9,
											"value": "229"
										},
										{
											"begin": 2241,
											"end": 2363,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2314,
											"end": 2338,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "289"
										},
										{
											"begin": 2332,
											"end": 2337,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2314,
											"end": 2338,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "222"
										},
										{
											"begin": 2314,
											"end": 2338,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2314,
											"end": 2338,
											"name": "tag",
											"source": 9,
											"value": "289"
										},
										{
											"begin": 2314,
											"end": 2338,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2307,
											"end": 2312,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2304,
											"end": 2339,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 2294,
											"end": 2357,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "290"
										},
										{
											"begin": 2294,
											"end": 2357,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2353,
											"end": 2354,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2350,
											"end": 2351,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2343,
											"end": 2355,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 2294,
											"end": 2357,
											"name": "tag",
											"source": 9,
											"value": "290"
										},
										{
											"begin": 2294,
											"end": 2357,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2241,
											"end": 2363,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2241,
											"end": 2363,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2369,
											"end": 2508,
											"name": "tag",
											"source": 9,
											"value": "230"
										},
										{
											"begin": 2369,
											"end": 2508,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2415,
											"end": 2420,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2453,
											"end": 2459,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2440,
											"end": 2460,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 2431,
											"end": 2460,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2431,
											"end": 2460,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2469,
											"end": 2502,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "292"
										},
										{
											"begin": 2496,
											"end": 2501,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2469,
											"end": 2502,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "229"
										},
										{
											"begin": 2469,
											"end": 2502,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2469,
											"end": 2502,
											"name": "tag",
											"source": 9,
											"value": "292"
										},
										{
											"begin": 2469,
											"end": 2502,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2369,
											"end": 2508,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 2369,
											"end": 2508,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2369,
											"end": 2508,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2369,
											"end": 2508,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2369,
											"end": 2508,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2514,
											"end": 2610,
											"name": "tag",
											"source": 9,
											"value": "231"
										},
										{
											"begin": 2514,
											"end": 2610,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2551,
											"end": 2558,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2580,
											"end": 2604,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "294"
										},
										{
											"begin": 2598,
											"end": 2603,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2580,
											"end": 2604,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "216"
										},
										{
											"begin": 2580,
											"end": 2604,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2580,
											"end": 2604,
											"name": "tag",
											"source": 9,
											"value": "294"
										},
										{
											"begin": 2580,
											"end": 2604,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2569,
											"end": 2604,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2569,
											"end": 2604,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2514,
											"end": 2610,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2514,
											"end": 2610,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2514,
											"end": 2610,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2514,
											"end": 2610,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2616,
											"end": 2738,
											"name": "tag",
											"source": 9,
											"value": "232"
										},
										{
											"begin": 2616,
											"end": 2738,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2689,
											"end": 2713,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "296"
										},
										{
											"begin": 2707,
											"end": 2712,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2689,
											"end": 2713,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "231"
										},
										{
											"begin": 2689,
											"end": 2713,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2689,
											"end": 2713,
											"name": "tag",
											"source": 9,
											"value": "296"
										},
										{
											"begin": 2689,
											"end": 2713,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2682,
											"end": 2687,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2679,
											"end": 2714,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 2669,
											"end": 2732,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "297"
										},
										{
											"begin": 2669,
											"end": 2732,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2728,
											"end": 2729,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2725,
											"end": 2726,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2718,
											"end": 2730,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 2669,
											"end": 2732,
											"name": "tag",
											"source": 9,
											"value": "297"
										},
										{
											"begin": 2669,
											"end": 2732,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2616,
											"end": 2738,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2616,
											"end": 2738,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2744,
											"end": 2883,
											"name": "tag",
											"source": 9,
											"value": "233"
										},
										{
											"begin": 2744,
											"end": 2883,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2790,
											"end": 2795,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2828,
											"end": 2834,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2815,
											"end": 2835,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 2806,
											"end": 2835,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2806,
											"end": 2835,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2844,
											"end": 2877,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "299"
										},
										{
											"begin": 2871,
											"end": 2876,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2844,
											"end": 2877,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "232"
										},
										{
											"begin": 2844,
											"end": 2877,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2844,
											"end": 2877,
											"name": "tag",
											"source": 9,
											"value": "299"
										},
										{
											"begin": 2844,
											"end": 2877,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2744,
											"end": 2883,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 2744,
											"end": 2883,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2744,
											"end": 2883,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2744,
											"end": 2883,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2744,
											"end": 2883,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2889,
											"end": 3508,
											"name": "tag",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2889,
											"end": 3508,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2966,
											"end": 2972,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2974,
											"end": 2980,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2982,
											"end": 2988,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3031,
											"end": 3033,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 3019,
											"end": 3028,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 3010,
											"end": 3017,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 3006,
											"end": 3029,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 3002,
											"end": 3034,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 2999,
											"end": 3118,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2999,
											"end": 3118,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "301"
										},
										{
											"begin": 2999,
											"end": 3118,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3037,
											"end": 3116,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "302"
										},
										{
											"begin": 3037,
											"end": 3116,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "227"
										},
										{
											"begin": 3037,
											"end": 3116,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3037,
											"end": 3116,
											"name": "tag",
											"source": 9,
											"value": "302"
										},
										{
											"begin": 3037,
											"end": 3116,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2999,
											"end": 3118,
											"name": "tag",
											"source": 9,
											"value": "301"
										},
										{
											"begin": 2999,
											"end": 3118,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3157,
											"end": 3158,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3182,
											"end": 3235,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "303"
										},
										{
											"begin": 3227,
											"end": 3234,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 3218,
											"end": 3224,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3207,
											"end": 3216,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 3203,
											"end": 3225,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3182,
											"end": 3235,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "230"
										},
										{
											"begin": 3182,
											"end": 3235,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3182,
											"end": 3235,
											"name": "tag",
											"source": 9,
											"value": "303"
										},
										{
											"begin": 3182,
											"end": 3235,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3172,
											"end": 3235,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 3172,
											"end": 3235,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3128,
											"end": 3245,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3284,
											"end": 3286,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3310,
											"end": 3363,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "304"
										},
										{
											"begin": 3355,
											"end": 3362,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 3346,
											"end": 3352,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3335,
											"end": 3344,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 3331,
											"end": 3353,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3310,
											"end": 3363,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "230"
										},
										{
											"begin": 3310,
											"end": 3363,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3310,
											"end": 3363,
											"name": "tag",
											"source": 9,
											"value": "304"
										},
										{
											"begin": 3310,
											"end": 3363,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3300,
											"end": 3363,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 3300,
											"end": 3363,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3255,
											"end": 3373,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3412,
											"end": 3414,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3438,
											"end": 3491,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "305"
										},
										{
											"begin": 3483,
											"end": 3490,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 3474,
											"end": 3480,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3463,
											"end": 3472,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 3459,
											"end": 3481,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3438,
											"end": 3491,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "233"
										},
										{
											"begin": 3438,
											"end": 3491,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3438,
											"end": 3491,
											"name": "tag",
											"source": 9,
											"value": "305"
										},
										{
											"begin": 3438,
											"end": 3491,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3428,
											"end": 3491,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3428,
											"end": 3491,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3383,
											"end": 3501,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2889,
											"end": 3508,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 2889,
											"end": 3508,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2889,
											"end": 3508,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 2889,
											"end": 3508,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2889,
											"end": 3508,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 2889,
											"end": 3508,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3514,
											"end": 3632,
											"name": "tag",
											"source": 9,
											"value": "234"
										},
										{
											"begin": 3514,
											"end": 3632,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3601,
											"end": 3625,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "307"
										},
										{
											"begin": 3619,
											"end": 3624,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3601,
											"end": 3625,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "231"
										},
										{
											"begin": 3601,
											"end": 3625,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3601,
											"end": 3625,
											"name": "tag",
											"source": 9,
											"value": "307"
										},
										{
											"begin": 3601,
											"end": 3625,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3596,
											"end": 3599,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3589,
											"end": 3626,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3514,
											"end": 3632,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3514,
											"end": 3632,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3514,
											"end": 3632,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3638,
											"end": 3860,
											"name": "tag",
											"source": 9,
											"value": "45"
										},
										{
											"begin": 3638,
											"end": 3860,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3731,
											"end": 3735,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3769,
											"end": 3771,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3758,
											"end": 3767,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3754,
											"end": 3772,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3746,
											"end": 3772,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3746,
											"end": 3772,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3782,
											"end": 3853,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "309"
										},
										{
											"begin": 3850,
											"end": 3851,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3839,
											"end": 3848,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 3835,
											"end": 3852,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3826,
											"end": 3832,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 3782,
											"end": 3853,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "234"
										},
										{
											"begin": 3782,
											"end": 3853,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3782,
											"end": 3853,
											"name": "tag",
											"source": 9,
											"value": "309"
										},
										{
											"begin": 3782,
											"end": 3853,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3638,
											"end": 3860,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 3638,
											"end": 3860,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3638,
											"end": 3860,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3638,
											"end": 3860,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3638,
											"end": 3860,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3866,
											"end": 4016,
											"name": "tag",
											"source": 9,
											"value": "235"
										},
										{
											"begin": 3866,
											"end": 4016,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3940,
											"end": 3949,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3973,
											"end": 4010,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "311"
										},
										{
											"begin": 4004,
											"end": 4009,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3973,
											"end": 4010,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "219"
										},
										{
											"begin": 3973,
											"end": 4010,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3973,
											"end": 4010,
											"name": "tag",
											"source": 9,
											"value": "311"
										},
										{
											"begin": 3973,
											"end": 4010,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3960,
											"end": 4010,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3960,
											"end": 4010,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3866,
											"end": 4016,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3866,
											"end": 4016,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3866,
											"end": 4016,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3866,
											"end": 4016,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4022,
											"end": 4201,
											"name": "tag",
											"source": 9,
											"value": "236"
										},
										{
											"begin": 4022,
											"end": 4201,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4133,
											"end": 4194,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "313"
										},
										{
											"begin": 4188,
											"end": 4193,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4133,
											"end": 4194,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "235"
										},
										{
											"begin": 4133,
											"end": 4194,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4133,
											"end": 4194,
											"name": "tag",
											"source": 9,
											"value": "313"
										},
										{
											"begin": 4133,
											"end": 4194,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4128,
											"end": 4131,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4121,
											"end": 4195,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4022,
											"end": 4201,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4022,
											"end": 4201,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4022,
											"end": 4201,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4207,
											"end": 4477,
											"name": "tag",
											"source": 9,
											"value": "49"
										},
										{
											"begin": 4207,
											"end": 4477,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4324,
											"end": 4328,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4362,
											"end": 4364,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4351,
											"end": 4360,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4347,
											"end": 4365,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4339,
											"end": 4365,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4339,
											"end": 4365,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4375,
											"end": 4470,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "315"
										},
										{
											"begin": 4467,
											"end": 4468,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4456,
											"end": 4465,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 4452,
											"end": 4469,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4443,
											"end": 4449,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 4375,
											"end": 4470,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "236"
										},
										{
											"begin": 4375,
											"end": 4470,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4375,
											"end": 4470,
											"name": "tag",
											"source": 9,
											"value": "315"
										},
										{
											"begin": 4375,
											"end": 4470,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4207,
											"end": 4477,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 4207,
											"end": 4477,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4207,
											"end": 4477,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4207,
											"end": 4477,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4207,
											"end": 4477,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4483,
											"end": 4957,
											"name": "tag",
											"source": 9,
											"value": "52"
										},
										{
											"begin": 4483,
											"end": 4957,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4551,
											"end": 4557,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4559,
											"end": 4565,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4608,
											"end": 4610,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4596,
											"end": 4605,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 4587,
											"end": 4594,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 4583,
											"end": 4606,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 4579,
											"end": 4611,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 4576,
											"end": 4695,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 4576,
											"end": 4695,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "317"
										},
										{
											"begin": 4576,
											"end": 4695,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 4614,
											"end": 4693,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "318"
										},
										{
											"begin": 4614,
											"end": 4693,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "227"
										},
										{
											"begin": 4614,
											"end": 4693,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4614,
											"end": 4693,
											"name": "tag",
											"source": 9,
											"value": "318"
										},
										{
											"begin": 4614,
											"end": 4693,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4576,
											"end": 4695,
											"name": "tag",
											"source": 9,
											"value": "317"
										},
										{
											"begin": 4576,
											"end": 4695,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4734,
											"end": 4735,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4759,
											"end": 4812,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "319"
										},
										{
											"begin": 4804,
											"end": 4811,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 4795,
											"end": 4801,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4784,
											"end": 4793,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 4780,
											"end": 4802,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4759,
											"end": 4812,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "230"
										},
										{
											"begin": 4759,
											"end": 4812,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4759,
											"end": 4812,
											"name": "tag",
											"source": 9,
											"value": "319"
										},
										{
											"begin": 4759,
											"end": 4812,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4749,
											"end": 4812,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 4749,
											"end": 4812,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4705,
											"end": 4822,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4861,
											"end": 4863,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4887,
											"end": 4940,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "320"
										},
										{
											"begin": 4932,
											"end": 4939,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 4923,
											"end": 4929,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4912,
											"end": 4921,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 4908,
											"end": 4930,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4887,
											"end": 4940,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "233"
										},
										{
											"begin": 4887,
											"end": 4940,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4887,
											"end": 4940,
											"name": "tag",
											"source": 9,
											"value": "320"
										},
										{
											"begin": 4887,
											"end": 4940,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4877,
											"end": 4940,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4877,
											"end": 4940,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4832,
											"end": 4950,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4483,
											"end": 4957,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 4483,
											"end": 4957,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4483,
											"end": 4957,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 4483,
											"end": 4957,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4483,
											"end": 4957,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4483,
											"end": 4957,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4963,
											"end": 5292,
											"name": "tag",
											"source": 9,
											"value": "56"
										},
										{
											"begin": 4963,
											"end": 5292,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5022,
											"end": 5028,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5071,
											"end": 5073,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5059,
											"end": 5068,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5050,
											"end": 5057,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 5046,
											"end": 5069,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 5042,
											"end": 5074,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 5039,
											"end": 5158,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 5039,
											"end": 5158,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "322"
										},
										{
											"begin": 5039,
											"end": 5158,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 5077,
											"end": 5156,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "323"
										},
										{
											"begin": 5077,
											"end": 5156,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "227"
										},
										{
											"begin": 5077,
											"end": 5156,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5077,
											"end": 5156,
											"name": "tag",
											"source": 9,
											"value": "323"
										},
										{
											"begin": 5077,
											"end": 5156,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5039,
											"end": 5158,
											"name": "tag",
											"source": 9,
											"value": "322"
										},
										{
											"begin": 5039,
											"end": 5158,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5197,
											"end": 5198,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5222,
											"end": 5275,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "324"
										},
										{
											"begin": 5267,
											"end": 5274,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 5258,
											"end": 5264,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5247,
											"end": 5256,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 5243,
											"end": 5265,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5222,
											"end": 5275,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "230"
										},
										{
											"begin": 5222,
											"end": 5275,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5222,
											"end": 5275,
											"name": "tag",
											"source": 9,
											"value": "324"
										},
										{
											"begin": 5222,
											"end": 5275,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5212,
											"end": 5275,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5212,
											"end": 5275,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5168,
											"end": 5285,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4963,
											"end": 5292,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 4963,
											"end": 5292,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4963,
											"end": 5292,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4963,
											"end": 5292,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4963,
											"end": 5292,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5298,
											"end": 5772,
											"name": "tag",
											"source": 9,
											"value": "61"
										},
										{
											"begin": 5298,
											"end": 5772,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5366,
											"end": 5372,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5374,
											"end": 5380,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5423,
											"end": 5425,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 5411,
											"end": 5420,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 5402,
											"end": 5409,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 5398,
											"end": 5421,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 5394,
											"end": 5426,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 5391,
											"end": 5510,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 5391,
											"end": 5510,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "326"
										},
										{
											"begin": 5391,
											"end": 5510,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 5429,
											"end": 5508,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "327"
										},
										{
											"begin": 5429,
											"end": 5508,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "227"
										},
										{
											"begin": 5429,
											"end": 5508,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5429,
											"end": 5508,
											"name": "tag",
											"source": 9,
											"value": "327"
										},
										{
											"begin": 5429,
											"end": 5508,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5391,
											"end": 5510,
											"name": "tag",
											"source": 9,
											"value": "326"
										},
										{
											"begin": 5391,
											"end": 5510,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5549,
											"end": 5550,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5574,
											"end": 5627,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "328"
										},
										{
											"begin": 5619,
											"end": 5626,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 5610,
											"end": 5616,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5599,
											"end": 5608,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 5595,
											"end": 5617,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5574,
											"end": 5627,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "230"
										},
										{
											"begin": 5574,
											"end": 5627,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5574,
											"end": 5627,
											"name": "tag",
											"source": 9,
											"value": "328"
										},
										{
											"begin": 5574,
											"end": 5627,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5564,
											"end": 5627,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 5564,
											"end": 5627,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5520,
											"end": 5637,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5676,
											"end": 5678,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5702,
											"end": 5755,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "329"
										},
										{
											"begin": 5747,
											"end": 5754,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 5738,
											"end": 5744,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5727,
											"end": 5736,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 5723,
											"end": 5745,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5702,
											"end": 5755,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "230"
										},
										{
											"begin": 5702,
											"end": 5755,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5702,
											"end": 5755,
											"name": "tag",
											"source": 9,
											"value": "329"
										},
										{
											"begin": 5702,
											"end": 5755,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5692,
											"end": 5755,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5692,
											"end": 5755,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5647,
											"end": 5765,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5298,
											"end": 5772,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 5298,
											"end": 5772,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5298,
											"end": 5772,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 5298,
											"end": 5772,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5298,
											"end": 5772,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5298,
											"end": 5772,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5778,
											"end": 6107,
											"name": "tag",
											"source": 9,
											"value": "65"
										},
										{
											"begin": 5778,
											"end": 6107,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5837,
											"end": 5843,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5886,
											"end": 5888,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5874,
											"end": 5883,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5865,
											"end": 5872,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 5861,
											"end": 5884,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 5857,
											"end": 5889,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 5854,
											"end": 5973,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 5854,
											"end": 5973,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "331"
										},
										{
											"begin": 5854,
											"end": 5973,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 5892,
											"end": 5971,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "332"
										},
										{
											"begin": 5892,
											"end": 5971,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "227"
										},
										{
											"begin": 5892,
											"end": 5971,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5892,
											"end": 5971,
											"name": "tag",
											"source": 9,
											"value": "332"
										},
										{
											"begin": 5892,
											"end": 5971,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5854,
											"end": 5973,
											"name": "tag",
											"source": 9,
											"value": "331"
										},
										{
											"begin": 5854,
											"end": 5973,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6012,
											"end": 6013,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6037,
											"end": 6090,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "333"
										},
										{
											"begin": 6082,
											"end": 6089,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 6073,
											"end": 6079,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6062,
											"end": 6071,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 6058,
											"end": 6080,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6037,
											"end": 6090,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "233"
										},
										{
											"begin": 6037,
											"end": 6090,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6037,
											"end": 6090,
											"name": "tag",
											"source": 9,
											"value": "333"
										},
										{
											"begin": 6037,
											"end": 6090,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6027,
											"end": 6090,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6027,
											"end": 6090,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5983,
											"end": 6100,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5778,
											"end": 6107,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 5778,
											"end": 6107,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5778,
											"end": 6107,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5778,
											"end": 6107,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5778,
											"end": 6107,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6113,
											"end": 6876,
											"name": "tag",
											"source": 9,
											"value": "71"
										},
										{
											"begin": 6113,
											"end": 6876,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6340,
											"end": 6344,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6378,
											"end": 6381,
											"name": "PUSH",
											"source": 9,
											"value": "C0"
										},
										{
											"begin": 6367,
											"end": 6376,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6363,
											"end": 6382,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6355,
											"end": 6382,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6355,
											"end": 6382,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6392,
											"end": 6463,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "335"
										},
										{
											"begin": 6460,
											"end": 6461,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6449,
											"end": 6458,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 6445,
											"end": 6462,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6436,
											"end": 6442,
											"name": "DUP10",
											"source": 9
										},
										{
											"begin": 6392,
											"end": 6463,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "234"
										},
										{
											"begin": 6392,
											"end": 6463,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6392,
											"end": 6463,
											"name": "tag",
											"source": 9,
											"value": "335"
										},
										{
											"begin": 6392,
											"end": 6463,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6473,
											"end": 6545,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "336"
										},
										{
											"begin": 6541,
											"end": 6543,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 6530,
											"end": 6539,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 6526,
											"end": 6544,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6517,
											"end": 6523,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 6473,
											"end": 6545,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "223"
										},
										{
											"begin": 6473,
											"end": 6545,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6473,
											"end": 6545,
											"name": "tag",
											"source": 9,
											"value": "336"
										},
										{
											"begin": 6473,
											"end": 6545,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6555,
											"end": 6627,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "337"
										},
										{
											"begin": 6623,
											"end": 6625,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 6612,
											"end": 6621,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 6608,
											"end": 6626,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6599,
											"end": 6605,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 6555,
											"end": 6627,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "223"
										},
										{
											"begin": 6555,
											"end": 6627,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6555,
											"end": 6627,
											"name": "tag",
											"source": 9,
											"value": "337"
										},
										{
											"begin": 6555,
											"end": 6627,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6637,
											"end": 6709,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "338"
										},
										{
											"begin": 6705,
											"end": 6707,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 6694,
											"end": 6703,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 6690,
											"end": 6708,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6681,
											"end": 6687,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 6637,
											"end": 6709,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "223"
										},
										{
											"begin": 6637,
											"end": 6709,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6637,
											"end": 6709,
											"name": "tag",
											"source": 9,
											"value": "338"
										},
										{
											"begin": 6637,
											"end": 6709,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6719,
											"end": 6792,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "339"
										},
										{
											"begin": 6787,
											"end": 6790,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 6776,
											"end": 6785,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 6772,
											"end": 6791,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6763,
											"end": 6769,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 6719,
											"end": 6792,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "234"
										},
										{
											"begin": 6719,
											"end": 6792,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6719,
											"end": 6792,
											"name": "tag",
											"source": 9,
											"value": "339"
										},
										{
											"begin": 6719,
											"end": 6792,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6802,
											"end": 6869,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "340"
										},
										{
											"begin": 6864,
											"end": 6867,
											"name": "PUSH",
											"source": 9,
											"value": "A0"
										},
										{
											"begin": 6853,
											"end": 6862,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 6849,
											"end": 6868,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6840,
											"end": 6846,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 6802,
											"end": 6869,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "225"
										},
										{
											"begin": 6802,
											"end": 6869,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6802,
											"end": 6869,
											"name": "tag",
											"source": 9,
											"value": "340"
										},
										{
											"begin": 6802,
											"end": 6869,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6113,
											"end": 6876,
											"name": "SWAP8",
											"source": 9
										},
										{
											"begin": 6113,
											"end": 6876,
											"name": "SWAP7",
											"source": 9
										},
										{
											"begin": 6113,
											"end": 6876,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6113,
											"end": 6876,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6113,
											"end": 6876,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6113,
											"end": 6876,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6113,
											"end": 6876,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6113,
											"end": 6876,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6113,
											"end": 6876,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6113,
											"end": 6876,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6882,
											"end": 7051,
											"name": "tag",
											"source": 9,
											"value": "237"
										},
										{
											"begin": 6882,
											"end": 7051,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6966,
											"end": 6977,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7000,
											"end": 7006,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6995,
											"end": 6998,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6988,
											"end": 7007,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7040,
											"end": 7044,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 7035,
											"end": 7038,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7031,
											"end": 7045,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7016,
											"end": 7045,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7016,
											"end": 7045,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6882,
											"end": 7051,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 6882,
											"end": 7051,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6882,
											"end": 7051,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6882,
											"end": 7051,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6882,
											"end": 7051,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7057,
											"end": 7235,
											"name": "tag",
											"source": 9,
											"value": "238"
										},
										{
											"begin": 7057,
											"end": 7235,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7197,
											"end": 7227,
											"name": "PUSH",
											"source": 9,
											"value": "5072696365206D7573742062652067726561746572207468616E203000000000"
										},
										{
											"begin": 7193,
											"end": 7194,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7185,
											"end": 7191,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7181,
											"end": 7195,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7174,
											"end": 7228,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7057,
											"end": 7235,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7057,
											"end": 7235,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7241,
											"end": 7607,
											"name": "tag",
											"source": 9,
											"value": "239"
										},
										{
											"begin": 7241,
											"end": 7607,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7383,
											"end": 7386,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7404,
											"end": 7471,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "344"
										},
										{
											"begin": 7468,
											"end": 7470,
											"name": "PUSH",
											"source": 9,
											"value": "1C"
										},
										{
											"begin": 7463,
											"end": 7466,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 7404,
											"end": 7471,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "237"
										},
										{
											"begin": 7404,
											"end": 7471,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7404,
											"end": 7471,
											"name": "tag",
											"source": 9,
											"value": "344"
										},
										{
											"begin": 7404,
											"end": 7471,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7397,
											"end": 7471,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7397,
											"end": 7471,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7480,
											"end": 7573,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "345"
										},
										{
											"begin": 7569,
											"end": 7572,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7480,
											"end": 7573,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "238"
										},
										{
											"begin": 7480,
											"end": 7573,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7480,
											"end": 7573,
											"name": "tag",
											"source": 9,
											"value": "345"
										},
										{
											"begin": 7480,
											"end": 7573,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7598,
											"end": 7600,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 7593,
											"end": 7596,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7589,
											"end": 7601,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7582,
											"end": 7601,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7582,
											"end": 7601,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7241,
											"end": 7607,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7241,
											"end": 7607,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7241,
											"end": 7607,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7241,
											"end": 7607,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7613,
											"end": 8032,
											"name": "tag",
											"source": 9,
											"value": "95"
										},
										{
											"begin": 7613,
											"end": 8032,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7779,
											"end": 7783,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7817,
											"end": 7819,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 7806,
											"end": 7815,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7802,
											"end": 7820,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7794,
											"end": 7820,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7794,
											"end": 7820,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7866,
											"end": 7875,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7860,
											"end": 7864,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7856,
											"end": 7876,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 7852,
											"end": 7853,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7841,
											"end": 7850,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 7837,
											"end": 7854,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7830,
											"end": 7877,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7894,
											"end": 8025,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "347"
										},
										{
											"begin": 8020,
											"end": 8024,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7894,
											"end": 8025,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "239"
										},
										{
											"begin": 7894,
											"end": 8025,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7894,
											"end": 8025,
											"name": "tag",
											"source": 9,
											"value": "347"
										},
										{
											"begin": 7894,
											"end": 8025,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7886,
											"end": 8025,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7886,
											"end": 8025,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7613,
											"end": 8032,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7613,
											"end": 8032,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7613,
											"end": 8032,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7613,
											"end": 8032,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8038,
											"end": 8260,
											"name": "tag",
											"source": 9,
											"value": "240"
										},
										{
											"begin": 8038,
											"end": 8260,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8178,
											"end": 8212,
											"name": "PUSH",
											"source": 9,
											"value": "546F74616C20736861726573206D757374206265206772656174657220746861"
										},
										{
											"begin": 8174,
											"end": 8175,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8166,
											"end": 8172,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8162,
											"end": 8176,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8155,
											"end": 8213,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8247,
											"end": 8252,
											"name": "PUSH",
											"source": 9,
											"value": "6E20300000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8242,
											"end": 8244,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 8234,
											"end": 8240,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8230,
											"end": 8245,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8223,
											"end": 8253,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8038,
											"end": 8260,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8038,
											"end": 8260,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8266,
											"end": 8632,
											"name": "tag",
											"source": 9,
											"value": "241"
										},
										{
											"begin": 8266,
											"end": 8632,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8408,
											"end": 8411,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8429,
											"end": 8496,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "350"
										},
										{
											"begin": 8493,
											"end": 8495,
											"name": "PUSH",
											"source": 9,
											"value": "23"
										},
										{
											"begin": 8488,
											"end": 8491,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 8429,
											"end": 8496,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "237"
										},
										{
											"begin": 8429,
											"end": 8496,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8429,
											"end": 8496,
											"name": "tag",
											"source": 9,
											"value": "350"
										},
										{
											"begin": 8429,
											"end": 8496,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8422,
											"end": 8496,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 8422,
											"end": 8496,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8505,
											"end": 8598,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "351"
										},
										{
											"begin": 8594,
											"end": 8597,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8505,
											"end": 8598,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "240"
										},
										{
											"begin": 8505,
											"end": 8598,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8505,
											"end": 8598,
											"name": "tag",
											"source": 9,
											"value": "351"
										},
										{
											"begin": 8505,
											"end": 8598,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8623,
											"end": 8625,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 8618,
											"end": 8621,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8614,
											"end": 8626,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8607,
											"end": 8626,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8607,
											"end": 8626,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8266,
											"end": 8632,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 8266,
											"end": 8632,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8266,
											"end": 8632,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8266,
											"end": 8632,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8638,
											"end": 9057,
											"name": "tag",
											"source": 9,
											"value": "98"
										},
										{
											"begin": 8638,
											"end": 9057,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8804,
											"end": 8808,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8842,
											"end": 8844,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 8831,
											"end": 8840,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8827,
											"end": 8845,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8819,
											"end": 8845,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8819,
											"end": 8845,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8891,
											"end": 8900,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8885,
											"end": 8889,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8881,
											"end": 8901,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 8877,
											"end": 8878,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8866,
											"end": 8875,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 8862,
											"end": 8879,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8855,
											"end": 8902,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8919,
											"end": 9050,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "353"
										},
										{
											"begin": 9045,
											"end": 9049,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8919,
											"end": 9050,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "241"
										},
										{
											"begin": 8919,
											"end": 9050,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8919,
											"end": 9050,
											"name": "tag",
											"source": 9,
											"value": "353"
										},
										{
											"begin": 8919,
											"end": 9050,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8911,
											"end": 9050,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8911,
											"end": 9050,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8638,
											"end": 9057,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 8638,
											"end": 9057,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8638,
											"end": 9057,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8638,
											"end": 9057,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9063,
											"end": 9505,
											"name": "tag",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 9063,
											"end": 9505,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9212,
											"end": 9216,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9250,
											"end": 9252,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 9239,
											"end": 9248,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9235,
											"end": 9253,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9227,
											"end": 9253,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9227,
											"end": 9253,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9263,
											"end": 9334,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "355"
										},
										{
											"begin": 9331,
											"end": 9332,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9320,
											"end": 9329,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 9316,
											"end": 9333,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9307,
											"end": 9313,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 9263,
											"end": 9334,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "223"
										},
										{
											"begin": 9263,
											"end": 9334,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9263,
											"end": 9334,
											"name": "tag",
											"source": 9,
											"value": "355"
										},
										{
											"begin": 9263,
											"end": 9334,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9344,
											"end": 9416,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "356"
										},
										{
											"begin": 9412,
											"end": 9414,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 9401,
											"end": 9410,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 9397,
											"end": 9415,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9388,
											"end": 9394,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 9344,
											"end": 9416,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "223"
										},
										{
											"begin": 9344,
											"end": 9416,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9344,
											"end": 9416,
											"name": "tag",
											"source": 9,
											"value": "356"
										},
										{
											"begin": 9344,
											"end": 9416,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9426,
											"end": 9498,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "357"
										},
										{
											"begin": 9494,
											"end": 9496,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 9483,
											"end": 9492,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 9479,
											"end": 9497,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9470,
											"end": 9476,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 9426,
											"end": 9498,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "223"
										},
										{
											"begin": 9426,
											"end": 9498,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9426,
											"end": 9498,
											"name": "tag",
											"source": 9,
											"value": "357"
										},
										{
											"begin": 9426,
											"end": 9498,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9063,
											"end": 9505,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 9063,
											"end": 9505,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 9063,
											"end": 9505,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9063,
											"end": 9505,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9063,
											"end": 9505,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9063,
											"end": 9505,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9063,
											"end": 9505,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9511,
											"end": 9691,
											"name": "tag",
											"source": 9,
											"value": "242"
										},
										{
											"begin": 9511,
											"end": 9691,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9559,
											"end": 9636,
											"name": "PUSH",
											"source": 9,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9556,
											"end": 9557,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9549,
											"end": 9637,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9656,
											"end": 9660,
											"name": "PUSH",
											"source": 9,
											"value": "11"
										},
										{
											"begin": 9653,
											"end": 9654,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 9646,
											"end": 9661,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9680,
											"end": 9684,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 9677,
											"end": 9678,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9670,
											"end": 9685,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 9697,
											"end": 9930,
											"name": "tag",
											"source": 9,
											"value": "102"
										},
										{
											"begin": 9697,
											"end": 9930,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9736,
											"end": 9739,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9759,
											"end": 9783,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "360"
										},
										{
											"begin": 9777,
											"end": 9782,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9759,
											"end": 9783,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "222"
										},
										{
											"begin": 9759,
											"end": 9783,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9759,
											"end": 9783,
											"name": "tag",
											"source": 9,
											"value": "360"
										},
										{
											"begin": 9759,
											"end": 9783,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9750,
											"end": 9783,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 9750,
											"end": 9783,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9805,
											"end": 9871,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9798,
											"end": 9803,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9795,
											"end": 9872,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 9792,
											"end": 9895,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "361"
										},
										{
											"begin": 9792,
											"end": 9895,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 9875,
											"end": 9893,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "362"
										},
										{
											"begin": 9875,
											"end": 9893,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "242"
										},
										{
											"begin": 9875,
											"end": 9893,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9875,
											"end": 9893,
											"name": "tag",
											"source": 9,
											"value": "362"
										},
										{
											"begin": 9875,
											"end": 9893,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9792,
											"end": 9895,
											"name": "tag",
											"source": 9,
											"value": "361"
										},
										{
											"begin": 9792,
											"end": 9895,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9922,
											"end": 9923,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 9915,
											"end": 9920,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9911,
											"end": 9924,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9904,
											"end": 9924,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9904,
											"end": 9924,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9697,
											"end": 9930,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 9697,
											"end": 9930,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9697,
											"end": 9930,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9697,
											"end": 9930,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9936,
											"end": 10159,
											"name": "tag",
											"source": 9,
											"value": "243"
										},
										{
											"begin": 9936,
											"end": 10159,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10076,
											"end": 10110,
											"name": "PUSH",
											"source": 9,
											"value": "4F6E6C7920746865206F776E65722063616E2066696E616C697A652074686520"
										},
										{
											"begin": 10072,
											"end": 10073,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10064,
											"end": 10070,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10060,
											"end": 10074,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10053,
											"end": 10111,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 10145,
											"end": 10151,
											"name": "PUSH",
											"source": 9,
											"value": "73616C6500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10140,
											"end": 10142,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 10132,
											"end": 10138,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10128,
											"end": 10143,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10121,
											"end": 10152,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9936,
											"end": 10159,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9936,
											"end": 10159,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10165,
											"end": 10531,
											"name": "tag",
											"source": 9,
											"value": "244"
										},
										{
											"begin": 10165,
											"end": 10531,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10307,
											"end": 10310,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10328,
											"end": 10395,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "365"
										},
										{
											"begin": 10392,
											"end": 10394,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 10387,
											"end": 10390,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 10328,
											"end": 10395,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "237"
										},
										{
											"begin": 10328,
											"end": 10395,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10328,
											"end": 10395,
											"name": "tag",
											"source": 9,
											"value": "365"
										},
										{
											"begin": 10328,
											"end": 10395,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10321,
											"end": 10395,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 10321,
											"end": 10395,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10404,
											"end": 10497,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "366"
										},
										{
											"begin": 10493,
											"end": 10496,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10404,
											"end": 10497,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "243"
										},
										{
											"begin": 10404,
											"end": 10497,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10404,
											"end": 10497,
											"name": "tag",
											"source": 9,
											"value": "366"
										},
										{
											"begin": 10404,
											"end": 10497,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10522,
											"end": 10524,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 10517,
											"end": 10520,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10513,
											"end": 10525,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10506,
											"end": 10525,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10506,
											"end": 10525,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10165,
											"end": 10531,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 10165,
											"end": 10531,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10165,
											"end": 10531,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10165,
											"end": 10531,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10537,
											"end": 10956,
											"name": "tag",
											"source": 9,
											"value": "109"
										},
										{
											"begin": 10537,
											"end": 10956,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10703,
											"end": 10707,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10741,
											"end": 10743,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 10730,
											"end": 10739,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10726,
											"end": 10744,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10718,
											"end": 10744,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10718,
											"end": 10744,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10790,
											"end": 10799,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 10784,
											"end": 10788,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 10780,
											"end": 10800,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 10776,
											"end": 10777,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10765,
											"end": 10774,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 10761,
											"end": 10778,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10754,
											"end": 10801,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 10818,
											"end": 10949,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "368"
										},
										{
											"begin": 10944,
											"end": 10948,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 10818,
											"end": 10949,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "244"
										},
										{
											"begin": 10818,
											"end": 10949,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10818,
											"end": 10949,
											"name": "tag",
											"source": 9,
											"value": "368"
										},
										{
											"begin": 10818,
											"end": 10949,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10810,
											"end": 10949,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10810,
											"end": 10949,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10537,
											"end": 10956,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 10537,
											"end": 10956,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10537,
											"end": 10956,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10537,
											"end": 10956,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10962,
											"end": 11138,
											"name": "tag",
											"source": 9,
											"value": "245"
										},
										{
											"begin": 10962,
											"end": 11138,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11102,
											"end": 11130,
											"name": "PUSH",
											"source": 9,
											"value": "53686172657320617265207374696C6C20617661696C61626C65000000000000"
										},
										{
											"begin": 11098,
											"end": 11099,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11090,
											"end": 11096,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11086,
											"end": 11100,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11079,
											"end": 11131,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 10962,
											"end": 11138,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10962,
											"end": 11138,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 11144,
											"end": 11510,
											"name": "tag",
											"source": 9,
											"value": "246"
										},
										{
											"begin": 11144,
											"end": 11510,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11286,
											"end": 11289,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11307,
											"end": 11374,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "371"
										},
										{
											"begin": 11371,
											"end": 11373,
											"name": "PUSH",
											"source": 9,
											"value": "1A"
										},
										{
											"begin": 11366,
											"end": 11369,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 11307,
											"end": 11374,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "237"
										},
										{
											"begin": 11307,
											"end": 11374,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 11307,
											"end": 11374,
											"name": "tag",
											"source": 9,
											"value": "371"
										},
										{
											"begin": 11307,
											"end": 11374,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11300,
											"end": 11374,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 11300,
											"end": 11374,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11383,
											"end": 11476,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "372"
										},
										{
											"begin": 11472,
											"end": 11475,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11383,
											"end": 11476,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "245"
										},
										{
											"begin": 11383,
											"end": 11476,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 11383,
											"end": 11476,
											"name": "tag",
											"source": 9,
											"value": "372"
										},
										{
											"begin": 11383,
											"end": 11476,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11501,
											"end": 11503,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 11496,
											"end": 11499,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11492,
											"end": 11504,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11485,
											"end": 11504,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11485,
											"end": 11504,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11144,
											"end": 11510,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 11144,
											"end": 11510,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11144,
											"end": 11510,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11144,
											"end": 11510,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 11516,
											"end": 11935,
											"name": "tag",
											"source": 9,
											"value": "112"
										},
										{
											"begin": 11516,
											"end": 11935,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11682,
											"end": 11686,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11720,
											"end": 11722,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 11709,
											"end": 11718,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11705,
											"end": 11723,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11697,
											"end": 11723,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11697,
											"end": 11723,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11769,
											"end": 11778,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 11763,
											"end": 11767,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 11759,
											"end": 11779,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 11755,
											"end": 11756,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11744,
											"end": 11753,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 11740,
											"end": 11757,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11733,
											"end": 11780,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 11797,
											"end": 11928,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "374"
										},
										{
											"begin": 11923,
											"end": 11927,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 11797,
											"end": 11928,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "246"
										},
										{
											"begin": 11797,
											"end": 11928,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 11797,
											"end": 11928,
											"name": "tag",
											"source": 9,
											"value": "374"
										},
										{
											"begin": 11797,
											"end": 11928,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11789,
											"end": 11928,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11789,
											"end": 11928,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11516,
											"end": 11935,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 11516,
											"end": 11935,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11516,
											"end": 11935,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11516,
											"end": 11935,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 11941,
											"end": 12273,
											"name": "tag",
											"source": 9,
											"value": "116"
										},
										{
											"begin": 11941,
											"end": 12273,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12062,
											"end": 12066,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 12100,
											"end": 12102,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 12089,
											"end": 12098,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 12085,
											"end": 12103,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12077,
											"end": 12103,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12077,
											"end": 12103,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12113,
											"end": 12184,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "376"
										},
										{
											"begin": 12181,
											"end": 12182,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 12170,
											"end": 12179,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 12166,
											"end": 12183,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12157,
											"end": 12163,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 12113,
											"end": 12184,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "223"
										},
										{
											"begin": 12113,
											"end": 12184,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 12113,
											"end": 12184,
											"name": "tag",
											"source": 9,
											"value": "376"
										},
										{
											"begin": 12113,
											"end": 12184,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12194,
											"end": 12266,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "377"
										},
										{
											"begin": 12262,
											"end": 12264,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 12251,
											"end": 12260,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 12247,
											"end": 12265,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12238,
											"end": 12244,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 12194,
											"end": 12266,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "223"
										},
										{
											"begin": 12194,
											"end": 12266,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 12194,
											"end": 12266,
											"name": "tag",
											"source": 9,
											"value": "377"
										},
										{
											"begin": 12194,
											"end": 12266,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11941,
											"end": 12273,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 11941,
											"end": 12273,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 11941,
											"end": 12273,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11941,
											"end": 12273,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11941,
											"end": 12273,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11941,
											"end": 12273,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 12279,
											"end": 12395,
											"name": "tag",
											"source": 9,
											"value": "247"
										},
										{
											"begin": 12279,
											"end": 12395,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12349,
											"end": 12370,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "379"
										},
										{
											"begin": 12364,
											"end": 12369,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 12349,
											"end": 12370,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "224"
										},
										{
											"begin": 12349,
											"end": 12370,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 12349,
											"end": 12370,
											"name": "tag",
											"source": 9,
											"value": "379"
										},
										{
											"begin": 12349,
											"end": 12370,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12342,
											"end": 12347,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 12339,
											"end": 12371,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 12329,
											"end": 12389,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "380"
										},
										{
											"begin": 12329,
											"end": 12389,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 12385,
											"end": 12386,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 12382,
											"end": 12383,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 12375,
											"end": 12387,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 12329,
											"end": 12389,
											"name": "tag",
											"source": 9,
											"value": "380"
										},
										{
											"begin": 12329,
											"end": 12389,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12279,
											"end": 12395,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12279,
											"end": 12395,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 12401,
											"end": 12538,
											"name": "tag",
											"source": 9,
											"value": "248"
										},
										{
											"begin": 12401,
											"end": 12538,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12455,
											"end": 12460,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 12486,
											"end": 12492,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 12480,
											"end": 12493,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 12471,
											"end": 12493,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12471,
											"end": 12493,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12502,
											"end": 12532,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "382"
										},
										{
											"begin": 12526,
											"end": 12531,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 12502,
											"end": 12532,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "247"
										},
										{
											"begin": 12502,
											"end": 12532,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 12502,
											"end": 12532,
											"name": "tag",
											"source": 9,
											"value": "382"
										},
										{
											"begin": 12502,
											"end": 12532,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12401,
											"end": 12538,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 12401,
											"end": 12538,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 12401,
											"end": 12538,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12401,
											"end": 12538,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12401,
											"end": 12538,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 12544,
											"end": 12889,
											"name": "tag",
											"source": 9,
											"value": "122"
										},
										{
											"begin": 12544,
											"end": 12889,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12611,
											"end": 12617,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 12660,
											"end": 12662,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 12648,
											"end": 12657,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 12639,
											"end": 12646,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 12635,
											"end": 12658,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 12631,
											"end": 12663,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 12628,
											"end": 12747,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 12628,
											"end": 12747,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "384"
										},
										{
											"begin": 12628,
											"end": 12747,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 12666,
											"end": 12745,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "385"
										},
										{
											"begin": 12666,
											"end": 12745,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "227"
										},
										{
											"begin": 12666,
											"end": 12745,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 12666,
											"end": 12745,
											"name": "tag",
											"source": 9,
											"value": "385"
										},
										{
											"begin": 12666,
											"end": 12745,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12628,
											"end": 12747,
											"name": "tag",
											"source": 9,
											"value": "384"
										},
										{
											"begin": 12628,
											"end": 12747,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12786,
											"end": 12787,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 12811,
											"end": 12872,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "386"
										},
										{
											"begin": 12864,
											"end": 12871,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 12855,
											"end": 12861,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 12844,
											"end": 12853,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 12840,
											"end": 12862,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12811,
											"end": 12872,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "248"
										},
										{
											"begin": 12811,
											"end": 12872,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 12811,
											"end": 12872,
											"name": "tag",
											"source": 9,
											"value": "386"
										},
										{
											"begin": 12811,
											"end": 12872,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12801,
											"end": 12872,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 12801,
											"end": 12872,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12757,
											"end": 12882,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12544,
											"end": 12889,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 12544,
											"end": 12889,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 12544,
											"end": 12889,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12544,
											"end": 12889,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12544,
											"end": 12889,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 12895,
											"end": 13067,
											"name": "tag",
											"source": 9,
											"value": "249"
										},
										{
											"begin": 12895,
											"end": 13067,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13035,
											"end": 13059,
											"name": "PUSH",
											"source": 9,
											"value": "50726F7065727479206973206E6F74206C697374656400000000000000000000"
										},
										{
											"begin": 13031,
											"end": 13032,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 13023,
											"end": 13029,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 13019,
											"end": 13033,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 13012,
											"end": 13060,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 12895,
											"end": 13067,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12895,
											"end": 13067,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 13073,
											"end": 13439,
											"name": "tag",
											"source": 9,
											"value": "250"
										},
										{
											"begin": 13073,
											"end": 13439,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13215,
											"end": 13218,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 13236,
											"end": 13303,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "389"
										},
										{
											"begin": 13300,
											"end": 13302,
											"name": "PUSH",
											"source": 9,
											"value": "16"
										},
										{
											"begin": 13295,
											"end": 13298,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 13236,
											"end": 13303,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "237"
										},
										{
											"begin": 13236,
											"end": 13303,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 13236,
											"end": 13303,
											"name": "tag",
											"source": 9,
											"value": "389"
										},
										{
											"begin": 13236,
											"end": 13303,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13229,
											"end": 13303,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 13229,
											"end": 13303,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13312,
											"end": 13405,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "390"
										},
										{
											"begin": 13401,
											"end": 13404,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 13312,
											"end": 13405,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "249"
										},
										{
											"begin": 13312,
											"end": 13405,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 13312,
											"end": 13405,
											"name": "tag",
											"source": 9,
											"value": "390"
										},
										{
											"begin": 13312,
											"end": 13405,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13430,
											"end": 13432,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 13425,
											"end": 13428,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 13421,
											"end": 13433,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 13414,
											"end": 13433,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 13414,
											"end": 13433,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13073,
											"end": 13439,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 13073,
											"end": 13439,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 13073,
											"end": 13439,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13073,
											"end": 13439,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 13445,
											"end": 13864,
											"name": "tag",
											"source": 9,
											"value": "128"
										},
										{
											"begin": 13445,
											"end": 13864,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13611,
											"end": 13615,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 13649,
											"end": 13651,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 13638,
											"end": 13647,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 13634,
											"end": 13652,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 13626,
											"end": 13652,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 13626,
											"end": 13652,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13698,
											"end": 13707,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 13692,
											"end": 13696,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 13688,
											"end": 13708,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 13684,
											"end": 13685,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 13673,
											"end": 13682,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 13669,
											"end": 13686,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 13662,
											"end": 13709,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 13726,
											"end": 13857,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "392"
										},
										{
											"begin": 13852,
											"end": 13856,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 13726,
											"end": 13857,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "250"
										},
										{
											"begin": 13726,
											"end": 13857,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 13726,
											"end": 13857,
											"name": "tag",
											"source": 9,
											"value": "392"
										},
										{
											"begin": 13726,
											"end": 13857,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13718,
											"end": 13857,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 13718,
											"end": 13857,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13445,
											"end": 13864,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 13445,
											"end": 13864,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 13445,
											"end": 13864,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13445,
											"end": 13864,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 13870,
											"end": 14047,
											"name": "tag",
											"source": 9,
											"value": "251"
										},
										{
											"begin": 13870,
											"end": 14047,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14010,
											"end": 14039,
											"name": "PUSH",
											"source": 9,
											"value": "4E6F7420656E6F7567682073686172657320617661696C61626C650000000000"
										},
										{
											"begin": 14006,
											"end": 14007,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 13998,
											"end": 14004,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 13994,
											"end": 14008,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 13987,
											"end": 14040,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 13870,
											"end": 14047,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13870,
											"end": 14047,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 14053,
											"end": 14419,
											"name": "tag",
											"source": 9,
											"value": "252"
										},
										{
											"begin": 14053,
											"end": 14419,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14195,
											"end": 14198,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 14216,
											"end": 14283,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "395"
										},
										{
											"begin": 14280,
											"end": 14282,
											"name": "PUSH",
											"source": 9,
											"value": "1B"
										},
										{
											"begin": 14275,
											"end": 14278,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 14216,
											"end": 14283,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "237"
										},
										{
											"begin": 14216,
											"end": 14283,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 14216,
											"end": 14283,
											"name": "tag",
											"source": 9,
											"value": "395"
										},
										{
											"begin": 14216,
											"end": 14283,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14209,
											"end": 14283,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 14209,
											"end": 14283,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14292,
											"end": 14385,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "396"
										},
										{
											"begin": 14381,
											"end": 14384,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 14292,
											"end": 14385,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "251"
										},
										{
											"begin": 14292,
											"end": 14385,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 14292,
											"end": 14385,
											"name": "tag",
											"source": 9,
											"value": "396"
										},
										{
											"begin": 14292,
											"end": 14385,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14410,
											"end": 14412,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 14405,
											"end": 14408,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 14401,
											"end": 14413,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 14394,
											"end": 14413,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 14394,
											"end": 14413,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14053,
											"end": 14419,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 14053,
											"end": 14419,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 14053,
											"end": 14419,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14053,
											"end": 14419,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 14425,
											"end": 14844,
											"name": "tag",
											"source": 9,
											"value": "131"
										},
										{
											"begin": 14425,
											"end": 14844,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14591,
											"end": 14595,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 14629,
											"end": 14631,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 14618,
											"end": 14627,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 14614,
											"end": 14632,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 14606,
											"end": 14632,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 14606,
											"end": 14632,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14678,
											"end": 14687,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 14672,
											"end": 14676,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 14668,
											"end": 14688,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 14664,
											"end": 14665,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 14653,
											"end": 14662,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 14649,
											"end": 14666,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 14642,
											"end": 14689,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 14706,
											"end": 14837,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "398"
										},
										{
											"begin": 14832,
											"end": 14836,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 14706,
											"end": 14837,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "252"
										},
										{
											"begin": 14706,
											"end": 14837,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 14706,
											"end": 14837,
											"name": "tag",
											"source": 9,
											"value": "398"
										},
										{
											"begin": 14706,
											"end": 14837,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14698,
											"end": 14837,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 14698,
											"end": 14837,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14425,
											"end": 14844,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 14425,
											"end": 14844,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 14425,
											"end": 14844,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14425,
											"end": 14844,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 14850,
											"end": 15073,
											"name": "tag",
											"source": 9,
											"value": "253"
										},
										{
											"begin": 14850,
											"end": 15073,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14990,
											"end": 15024,
											"name": "PUSH",
											"source": 9,
											"value": "53686172657320746F20627579206D7573742062652067726561746572207468"
										},
										{
											"begin": 14986,
											"end": 14987,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 14978,
											"end": 14984,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 14974,
											"end": 14988,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 14967,
											"end": 15025,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 15059,
											"end": 15065,
											"name": "PUSH",
											"source": 9,
											"value": "616E203000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 15054,
											"end": 15056,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 15046,
											"end": 15052,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 15042,
											"end": 15057,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 15035,
											"end": 15066,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 14850,
											"end": 15073,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14850,
											"end": 15073,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 15079,
											"end": 15445,
											"name": "tag",
											"source": 9,
											"value": "254"
										},
										{
											"begin": 15079,
											"end": 15445,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 15221,
											"end": 15224,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 15242,
											"end": 15309,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "401"
										},
										{
											"begin": 15306,
											"end": 15308,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 15301,
											"end": 15304,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 15242,
											"end": 15309,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "237"
										},
										{
											"begin": 15242,
											"end": 15309,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 15242,
											"end": 15309,
											"name": "tag",
											"source": 9,
											"value": "401"
										},
										{
											"begin": 15242,
											"end": 15309,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 15235,
											"end": 15309,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 15235,
											"end": 15309,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 15318,
											"end": 15411,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "402"
										},
										{
											"begin": 15407,
											"end": 15410,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 15318,
											"end": 15411,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "253"
										},
										{
											"begin": 15318,
											"end": 15411,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 15318,
											"end": 15411,
											"name": "tag",
											"source": 9,
											"value": "402"
										},
										{
											"begin": 15318,
											"end": 15411,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 15436,
											"end": 15438,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 15431,
											"end": 15434,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 15427,
											"end": 15439,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 15420,
											"end": 15439,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 15420,
											"end": 15439,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 15079,
											"end": 15445,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 15079,
											"end": 15445,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 15079,
											"end": 15445,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 15079,
											"end": 15445,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 15451,
											"end": 15870,
											"name": "tag",
											"source": 9,
											"value": "134"
										},
										{
											"begin": 15451,
											"end": 15870,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 15617,
											"end": 15621,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 15655,
											"end": 15657,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 15644,
											"end": 15653,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 15640,
											"end": 15658,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 15632,
											"end": 15658,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 15632,
											"end": 15658,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 15704,
											"end": 15713,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 15698,
											"end": 15702,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 15694,
											"end": 15714,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 15690,
											"end": 15691,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 15679,
											"end": 15688,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 15675,
											"end": 15692,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 15668,
											"end": 15715,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 15732,
											"end": 15863,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "404"
										},
										{
											"begin": 15858,
											"end": 15862,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 15732,
											"end": 15863,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "254"
										},
										{
											"begin": 15732,
											"end": 15863,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 15732,
											"end": 15863,
											"name": "tag",
											"source": 9,
											"value": "404"
										},
										{
											"begin": 15732,
											"end": 15863,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 15724,
											"end": 15863,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 15724,
											"end": 15863,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 15451,
											"end": 15870,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 15451,
											"end": 15870,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 15451,
											"end": 15870,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 15451,
											"end": 15870,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 15876,
											"end": 16286,
											"name": "tag",
											"source": 9,
											"value": "136"
										},
										{
											"begin": 15876,
											"end": 16286,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 15916,
											"end": 15923,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 15939,
											"end": 15959,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "406"
										},
										{
											"begin": 15957,
											"end": 15958,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 15939,
											"end": 15959,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "222"
										},
										{
											"begin": 15939,
											"end": 15959,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 15939,
											"end": 15959,
											"name": "tag",
											"source": 9,
											"value": "406"
										},
										{
											"begin": 15939,
											"end": 15959,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 15934,
											"end": 15959,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 15934,
											"end": 15959,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 15973,
											"end": 15993,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "407"
										},
										{
											"begin": 15991,
											"end": 15992,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 15973,
											"end": 15993,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "222"
										},
										{
											"begin": 15973,
											"end": 15993,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 15973,
											"end": 15993,
											"name": "tag",
											"source": 9,
											"value": "407"
										},
										{
											"begin": 15973,
											"end": 15993,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 15968,
											"end": 15993,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 15968,
											"end": 15993,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 16028,
											"end": 16029,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 16025,
											"end": 16026,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 16021,
											"end": 16030,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 16050,
											"end": 16080,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "408"
										},
										{
											"begin": 16068,
											"end": 16079,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 16050,
											"end": 16080,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "222"
										},
										{
											"begin": 16050,
											"end": 16080,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 16050,
											"end": 16080,
											"name": "tag",
											"source": 9,
											"value": "408"
										},
										{
											"begin": 16050,
											"end": 16080,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 16039,
											"end": 16080,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 16039,
											"end": 16080,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 16229,
											"end": 16230,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 16220,
											"end": 16227,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 16216,
											"end": 16231,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 16213,
											"end": 16214,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 16210,
											"end": 16232,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 16190,
											"end": 16191,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 16183,
											"end": 16192,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 16163,
											"end": 16246,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 16140,
											"end": 16279,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "409"
										},
										{
											"begin": 16140,
											"end": 16279,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 16259,
											"end": 16277,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "410"
										},
										{
											"begin": 16259,
											"end": 16277,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "242"
										},
										{
											"begin": 16259,
											"end": 16277,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 16259,
											"end": 16277,
											"name": "tag",
											"source": 9,
											"value": "410"
										},
										{
											"begin": 16259,
											"end": 16277,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 16140,
											"end": 16279,
											"name": "tag",
											"source": 9,
											"value": "409"
										},
										{
											"begin": 16140,
											"end": 16279,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 15924,
											"end": 16286,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 15876,
											"end": 16286,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 15876,
											"end": 16286,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 15876,
											"end": 16286,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 15876,
											"end": 16286,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 15876,
											"end": 16286,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 16292,
											"end": 16472,
											"name": "tag",
											"source": 9,
											"value": "255"
										},
										{
											"begin": 16292,
											"end": 16472,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 16340,
											"end": 16417,
											"name": "PUSH",
											"source": 9,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 16337,
											"end": 16338,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 16330,
											"end": 16418,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 16437,
											"end": 16441,
											"name": "PUSH",
											"source": 9,
											"value": "12"
										},
										{
											"begin": 16434,
											"end": 16435,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 16427,
											"end": 16442,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 16461,
											"end": 16465,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 16458,
											"end": 16459,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 16451,
											"end": 16466,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 16478,
											"end": 16663,
											"name": "tag",
											"source": 9,
											"value": "138"
										},
										{
											"begin": 16478,
											"end": 16663,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 16518,
											"end": 16519,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 16535,
											"end": 16555,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "413"
										},
										{
											"begin": 16553,
											"end": 16554,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 16535,
											"end": 16555,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "222"
										},
										{
											"begin": 16535,
											"end": 16555,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 16535,
											"end": 16555,
											"name": "tag",
											"source": 9,
											"value": "413"
										},
										{
											"begin": 16535,
											"end": 16555,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 16530,
											"end": 16555,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 16530,
											"end": 16555,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 16569,
											"end": 16589,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "414"
										},
										{
											"begin": 16587,
											"end": 16588,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 16569,
											"end": 16589,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "222"
										},
										{
											"begin": 16569,
											"end": 16589,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 16569,
											"end": 16589,
											"name": "tag",
											"source": 9,
											"value": "414"
										},
										{
											"begin": 16569,
											"end": 16589,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 16564,
											"end": 16589,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 16564,
											"end": 16589,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 16608,
											"end": 16609,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 16598,
											"end": 16633,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "415"
										},
										{
											"begin": 16598,
											"end": 16633,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 16613,
											"end": 16631,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "416"
										},
										{
											"begin": 16613,
											"end": 16631,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "255"
										},
										{
											"begin": 16613,
											"end": 16631,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 16613,
											"end": 16631,
											"name": "tag",
											"source": 9,
											"value": "416"
										},
										{
											"begin": 16613,
											"end": 16631,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 16598,
											"end": 16633,
											"name": "tag",
											"source": 9,
											"value": "415"
										},
										{
											"begin": 16598,
											"end": 16633,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 16655,
											"end": 16656,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 16652,
											"end": 16653,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 16648,
											"end": 16657,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 16643,
											"end": 16657,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 16643,
											"end": 16657,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 16478,
											"end": 16663,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 16478,
											"end": 16663,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 16478,
											"end": 16663,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 16478,
											"end": 16663,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 16478,
											"end": 16663,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 16669,
											"end": 16863,
											"name": "tag",
											"source": 9,
											"value": "142"
										},
										{
											"begin": 16669,
											"end": 16863,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 16709,
											"end": 16713,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 16729,
											"end": 16749,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "418"
										},
										{
											"begin": 16747,
											"end": 16748,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 16729,
											"end": 16749,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "222"
										},
										{
											"begin": 16729,
											"end": 16749,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 16729,
											"end": 16749,
											"name": "tag",
											"source": 9,
											"value": "418"
										},
										{
											"begin": 16729,
											"end": 16749,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 16724,
											"end": 16749,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 16724,
											"end": 16749,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 16763,
											"end": 16783,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "419"
										},
										{
											"begin": 16781,
											"end": 16782,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 16763,
											"end": 16783,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "222"
										},
										{
											"begin": 16763,
											"end": 16783,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 16763,
											"end": 16783,
											"name": "tag",
											"source": 9,
											"value": "419"
										},
										{
											"begin": 16763,
											"end": 16783,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 16758,
											"end": 16783,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 16758,
											"end": 16783,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 16807,
											"end": 16808,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 16804,
											"end": 16805,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 16800,
											"end": 16809,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 16792,
											"end": 16809,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 16792,
											"end": 16809,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 16831,
											"end": 16832,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 16825,
											"end": 16829,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 16822,
											"end": 16833,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 16819,
											"end": 16856,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 16819,
											"end": 16856,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "420"
										},
										{
											"begin": 16819,
											"end": 16856,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 16836,
											"end": 16854,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "421"
										},
										{
											"begin": 16836,
											"end": 16854,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "242"
										},
										{
											"begin": 16836,
											"end": 16854,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 16836,
											"end": 16854,
											"name": "tag",
											"source": 9,
											"value": "421"
										},
										{
											"begin": 16836,
											"end": 16854,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 16819,
											"end": 16856,
											"name": "tag",
											"source": 9,
											"value": "420"
										},
										{
											"begin": 16819,
											"end": 16856,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 16669,
											"end": 16863,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 16669,
											"end": 16863,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 16669,
											"end": 16863,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 16669,
											"end": 16863,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 16669,
											"end": 16863,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 16869,
											"end": 17201,
											"name": "tag",
											"source": 9,
											"value": "175"
										},
										{
											"begin": 16869,
											"end": 17201,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 16990,
											"end": 16994,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 17028,
											"end": 17030,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 17017,
											"end": 17026,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 17013,
											"end": 17031,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 17005,
											"end": 17031,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 17005,
											"end": 17031,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 17041,
											"end": 17112,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "423"
										},
										{
											"begin": 17109,
											"end": 17110,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 17098,
											"end": 17107,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 17094,
											"end": 17111,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 17085,
											"end": 17091,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 17041,
											"end": 17112,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "234"
										},
										{
											"begin": 17041,
											"end": 17112,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 17041,
											"end": 17112,
											"name": "tag",
											"source": 9,
											"value": "423"
										},
										{
											"begin": 17041,
											"end": 17112,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 17122,
											"end": 17194,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "424"
										},
										{
											"begin": 17190,
											"end": 17192,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 17179,
											"end": 17188,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 17175,
											"end": 17193,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 17166,
											"end": 17172,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 17122,
											"end": 17194,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "223"
										},
										{
											"begin": 17122,
											"end": 17194,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 17122,
											"end": 17194,
											"name": "tag",
											"source": 9,
											"value": "424"
										},
										{
											"begin": 17122,
											"end": 17194,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 16869,
											"end": 17201,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 16869,
											"end": 17201,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 16869,
											"end": 17201,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 16869,
											"end": 17201,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 16869,
											"end": 17201,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 16869,
											"end": 17201,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 17207,
											"end": 17649,
											"name": "tag",
											"source": 9,
											"value": "180"
										},
										{
											"begin": 17207,
											"end": 17649,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 17356,
											"end": 17360,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 17394,
											"end": 17396,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 17383,
											"end": 17392,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 17379,
											"end": 17397,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 17371,
											"end": 17397,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 17371,
											"end": 17397,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 17407,
											"end": 17478,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "426"
										},
										{
											"begin": 17475,
											"end": 17476,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 17464,
											"end": 17473,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 17460,
											"end": 17477,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 17451,
											"end": 17457,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 17407,
											"end": 17478,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "234"
										},
										{
											"begin": 17407,
											"end": 17478,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 17407,
											"end": 17478,
											"name": "tag",
											"source": 9,
											"value": "426"
										},
										{
											"begin": 17407,
											"end": 17478,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 17488,
											"end": 17560,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "427"
										},
										{
											"begin": 17556,
											"end": 17558,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 17545,
											"end": 17554,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 17541,
											"end": 17559,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 17532,
											"end": 17538,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 17488,
											"end": 17560,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "234"
										},
										{
											"begin": 17488,
											"end": 17560,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 17488,
											"end": 17560,
											"name": "tag",
											"source": 9,
											"value": "427"
										},
										{
											"begin": 17488,
											"end": 17560,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 17570,
											"end": 17642,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "428"
										},
										{
											"begin": 17638,
											"end": 17640,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 17627,
											"end": 17636,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 17623,
											"end": 17641,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 17614,
											"end": 17620,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 17570,
											"end": 17642,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "223"
										},
										{
											"begin": 17570,
											"end": 17642,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 17570,
											"end": 17642,
											"name": "tag",
											"source": 9,
											"value": "428"
										},
										{
											"begin": 17570,
											"end": 17642,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 17207,
											"end": 17649,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 17207,
											"end": 17649,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 17207,
											"end": 17649,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 17207,
											"end": 17649,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 17207,
											"end": 17649,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 17207,
											"end": 17649,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 17207,
											"end": 17649,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 17655,
											"end": 17753,
											"name": "tag",
											"source": 9,
											"value": "256"
										},
										{
											"begin": 17655,
											"end": 17753,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 17706,
											"end": 17712,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 17740,
											"end": 17745,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 17734,
											"end": 17746,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 17724,
											"end": 17746,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 17724,
											"end": 17746,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 17655,
											"end": 17753,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 17655,
											"end": 17753,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 17655,
											"end": 17753,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 17655,
											"end": 17753,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 17759,
											"end": 17906,
											"name": "tag",
											"source": 9,
											"value": "257"
										},
										{
											"begin": 17759,
											"end": 17906,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 17860,
											"end": 17871,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 17897,
											"end": 17900,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 17882,
											"end": 17900,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 17882,
											"end": 17900,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 17759,
											"end": 17906,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 17759,
											"end": 17906,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 17759,
											"end": 17906,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 17759,
											"end": 17906,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 17759,
											"end": 17906,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 17912,
											"end": 18051,
											"name": "tag",
											"source": 9,
											"value": "258"
										},
										{
											"begin": 17912,
											"end": 18051,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 18001,
											"end": 18007,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 17996,
											"end": 17999,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 17991,
											"end": 17994,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 17985,
											"end": 18008,
											"name": "MCOPY",
											"source": 9
										},
										{
											"begin": 18042,
											"end": 18043,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 18033,
											"end": 18039,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 18028,
											"end": 18031,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 18024,
											"end": 18040,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 18017,
											"end": 18044,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 17912,
											"end": 18051,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 17912,
											"end": 18051,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 17912,
											"end": 18051,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 17912,
											"end": 18051,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 18057,
											"end": 18443,
											"name": "tag",
											"source": 9,
											"value": "259"
										},
										{
											"begin": 18057,
											"end": 18443,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 18161,
											"end": 18164,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 18189,
											"end": 18227,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "433"
										},
										{
											"begin": 18221,
											"end": 18226,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 18189,
											"end": 18227,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "256"
										},
										{
											"begin": 18189,
											"end": 18227,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 18189,
											"end": 18227,
											"name": "tag",
											"source": 9,
											"value": "433"
										},
										{
											"begin": 18189,
											"end": 18227,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 18243,
											"end": 18331,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "434"
										},
										{
											"begin": 18324,
											"end": 18330,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 18319,
											"end": 18322,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 18243,
											"end": 18331,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "257"
										},
										{
											"begin": 18243,
											"end": 18331,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 18243,
											"end": 18331,
											"name": "tag",
											"source": 9,
											"value": "434"
										},
										{
											"begin": 18243,
											"end": 18331,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 18236,
											"end": 18331,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 18236,
											"end": 18331,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 18340,
											"end": 18405,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "435"
										},
										{
											"begin": 18398,
											"end": 18404,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 18393,
											"end": 18396,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 18386,
											"end": 18390,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 18379,
											"end": 18384,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 18375,
											"end": 18391,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 18340,
											"end": 18405,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "258"
										},
										{
											"begin": 18340,
											"end": 18405,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 18340,
											"end": 18405,
											"name": "tag",
											"source": 9,
											"value": "435"
										},
										{
											"begin": 18340,
											"end": 18405,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 18430,
											"end": 18436,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 18425,
											"end": 18428,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 18421,
											"end": 18437,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 18414,
											"end": 18437,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 18414,
											"end": 18437,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 18165,
											"end": 18443,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 18057,
											"end": 18443,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 18057,
											"end": 18443,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 18057,
											"end": 18443,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 18057,
											"end": 18443,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 18057,
											"end": 18443,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 18449,
											"end": 18720,
											"name": "tag",
											"source": 9,
											"value": "199"
										},
										{
											"begin": 18449,
											"end": 18720,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 18579,
											"end": 18582,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 18601,
											"end": 18694,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "437"
										},
										{
											"begin": 18690,
											"end": 18693,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 18681,
											"end": 18687,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 18601,
											"end": 18694,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "259"
										},
										{
											"begin": 18601,
											"end": 18694,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 18601,
											"end": 18694,
											"name": "tag",
											"source": 9,
											"value": "437"
										},
										{
											"begin": 18601,
											"end": 18694,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 18594,
											"end": 18694,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 18594,
											"end": 18694,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 18711,
											"end": 18714,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 18704,
											"end": 18714,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 18704,
											"end": 18714,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 18449,
											"end": 18720,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 18449,
											"end": 18720,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 18449,
											"end": 18720,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 18449,
											"end": 18720,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 18449,
											"end": 18720,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Pausable.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"contracts/real-estate-marketplace/Marketplace.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"alvaraProtocol()": "b41b936d",
							"finalizeSale(uint256,address)": "b4d346be",
							"integrateWithAlvara(uint256)": "baf52c77",
							"listProperty(uint256,uint256,address)": "86aa217e",
							"nextPropertyId()": "39500f34",
							"owner()": "8da5cb5b",
							"pause()": "8456cb59",
							"paused()": "5c975abb",
							"paymentToken()": "3013ce29",
							"properties(uint256)": "f7b10808",
							"purchaseShares(uint256,uint256)": "d2bcdc60",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b",
							"unpause()": "3f4ba83a"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"_paymentToken\",\"type\":\"address\"},{\"internalType\":\"contract IAlvaraProtocol\",\"name\":\"_alvaraProtocol\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"AddressInsufficientBalance\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"EnforcedPause\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ExpectedPause\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedInnerCall\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"propertyId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalShares\",\"type\":\"uint256\"}],\"name\":\"PropertyListed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"propertyId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"buyer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"}],\"name\":\"PropertySold\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"propertyId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"buyer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"}],\"name\":\"SharesPurchased\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"alvaraProtocol\",\"outputs\":[{\"internalType\":\"contract IAlvaraProtocol\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"propertyId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"buyer\",\"type\":\"address\"}],\"name\":\"finalizeSale\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"propertyId\",\"type\":\"uint256\"}],\"name\":\"integrateWithAlvara\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalShares\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"}],\"name\":\"listProperty\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nextPropertyId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paymentToken\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"properties\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalShares\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"availableShares\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"isListed\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"propertyId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"sharesToBuy\",\"type\":\"uint256\"}],\"name\":\"purchaseShares\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}],\"AddressInsufficientBalance(address)\":[{\"details\":\"The ETH balance of the account is not enough to perform the operation.\"}],\"EnforcedPause()\":[{\"details\":\"The operation failed because the contract is paused.\"}],\"ExpectedPause()\":[{\"details\":\"The operation failed because the contract is not paused.\"}],\"FailedInnerCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}],\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC20 token failed.\"}]},\"events\":{\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/real-estate-marketplace/Marketplace.sol\":\"Marketplace\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x6008dabfe393240d73d7dd7688033f72740d570aa422254d29a7dce8568f3aff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5196ec75139918c6c7bb4251b36395e668f1fa6d206beba7e7520e74913940d\",\"dweb:/ipfs/QmSyqjksXxmm2mCG6qRd1yuwLykypkSVBbnBnGqJRcuJMi\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x37bb49513c49c87c4642a891b13b63571bc87013dde806617aa1efb54605f386\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3036b3a83b7c48f96641f2a9002b9f2dcb6a5958dd670894ada21ae8229b3d0\",\"dweb:/ipfs/QmUNfSBdoVtjhETaUJCYcaC7pTMgbhht926tJ2uXJbiVd3\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245\",\"dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Pausable.sol\":{\"keccak256\":\"0xb2e5f50762c27fb4b123e3619c3c02bdcba5e515309382e5bfb6f7d6486510bd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1a4b83328c98d518a2699c2cbe9e9b055e78aa57fa8639f1b88deb8b3750b5dc\",\"dweb:/ipfs/QmXdcYj5v7zQxXFPULShHkR5p4Wa2zYuupbHnFdV3cHYtc\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"contracts/real-estate-marketplace/Marketplace.sol\":{\"keccak256\":\"0xa5b8be45f160ff5d4f4002eb634b455e3cb25f85484998a62f1e2c17bf823694\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41d0a807a9ef879bbbb8b40f416c90128a9221fb8dd41f5e4c85b9e30556cc39\",\"dweb:/ipfs/QmWgiK8WvkvPJ7NuiNu4gyrCy2KhhWJ8pMa8Ztz4oGjujk\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "contracts/real-estate-marketplace/Marketplace.sol:Marketplace",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 843,
								"contract": "contracts/real-estate-marketplace/Marketplace.sol:Marketplace",
								"label": "_paused",
								"offset": 20,
								"slot": "0",
								"type": "t_bool"
							},
							{
								"astId": 2072,
								"contract": "contracts/real-estate-marketplace/Marketplace.sol:Marketplace",
								"label": "properties",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_uint256,t_struct(Property)2067_storage)"
							},
							{
								"astId": 2074,
								"contract": "contracts/real-estate-marketplace/Marketplace.sol:Marketplace",
								"label": "nextPropertyId",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 2077,
								"contract": "contracts/real-estate-marketplace/Marketplace.sol:Marketplace",
								"label": "paymentToken",
								"offset": 0,
								"slot": "3",
								"type": "t_contract(IERC20)225"
							},
							{
								"astId": 2080,
								"contract": "contracts/real-estate-marketplace/Marketplace.sol:Marketplace",
								"label": "alvaraProtocol",
								"offset": 0,
								"slot": "4",
								"type": "t_contract(IAlvaraProtocol)2020"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_contract(IAlvaraProtocol)2020": {
								"encoding": "inplace",
								"label": "contract IAlvaraProtocol",
								"numberOfBytes": "20"
							},
							"t_contract(IERC20)225": {
								"encoding": "inplace",
								"label": "contract IERC20",
								"numberOfBytes": "20"
							},
							"t_mapping(t_uint256,t_struct(Property)2067_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => struct Marketplace.Property)",
								"numberOfBytes": "32",
								"value": "t_struct(Property)2067_storage"
							},
							"t_struct(Property)2067_storage": {
								"encoding": "inplace",
								"label": "struct Marketplace.Property",
								"members": [
									{
										"astId": 2056,
										"contract": "contracts/real-estate-marketplace/Marketplace.sol:Marketplace",
										"label": "owner",
										"offset": 0,
										"slot": "0",
										"type": "t_address"
									},
									{
										"astId": 2058,
										"contract": "contracts/real-estate-marketplace/Marketplace.sol:Marketplace",
										"label": "price",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									},
									{
										"astId": 2060,
										"contract": "contracts/real-estate-marketplace/Marketplace.sol:Marketplace",
										"label": "totalShares",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									},
									{
										"astId": 2062,
										"contract": "contracts/real-estate-marketplace/Marketplace.sol:Marketplace",
										"label": "availableShares",
										"offset": 0,
										"slot": "3",
										"type": "t_uint256"
									},
									{
										"astId": 2064,
										"contract": "contracts/real-estate-marketplace/Marketplace.sol:Marketplace",
										"label": "tokenAddress",
										"offset": 0,
										"slot": "4",
										"type": "t_address"
									},
									{
										"astId": 2066,
										"contract": "contracts/real-estate-marketplace/Marketplace.sol:Marketplace",
										"label": "isListed",
										"offset": 20,
										"slot": "4",
										"type": "t_bool"
									}
								],
								"numberOfBytes": "160"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							834
						],
						"Ownable": [
							147
						]
					},
					"id": 148,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 148,
							"sourceUnit": 835,
							"src": "128:45:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 834,
										"src": "136:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 5,
										"name": "Context",
										"nameLocations": [
											"692:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 834,
										"src": "692:7:0"
									},
									"id": 6,
									"nodeType": "InheritanceSpecifier",
									"src": "692:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 4,
								"nodeType": "StructuredDocumentation",
								"src": "175:487:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 147,
							"linearizedBaseContracts": [
								147,
								834
							],
							"name": "Ownable",
							"nameLocation": "681:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 8,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "722:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 147,
									"src": "706:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 7,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "706:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 9,
										"nodeType": "StructuredDocumentation",
										"src": "735:85:0",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 13,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "831:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "866:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "858:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "858:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "857:17:0"
									},
									"src": "825:50:0"
								},
								{
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "881:82:0",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 18,
									"name": "OwnableInvalidOwner",
									"nameLocation": "974:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 16,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1002:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 18,
												"src": "994:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "994:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "993:15:0"
									},
									"src": "968:41:0"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 24,
									"name": "OwnershipTransferred",
									"nameLocation": "1021:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 20,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "1058:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1042:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 19,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1042:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 22,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1089:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1073:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 21,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1073:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1041:57:0"
									},
									"src": "1015:84:0"
								},
								{
									"body": {
										"id": 49,
										"nodeType": "Block",
										"src": "1259:153:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 35,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 30,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "1273:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 33,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1297:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 32,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1289:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 31,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1289:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 34,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1289:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1273:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 44,
												"nodeType": "IfStatement",
												"src": "1269:95:0",
												"trueBody": {
													"id": 43,
													"nodeType": "Block",
													"src": "1301:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 39,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1350:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 38,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1342:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 37,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1342:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 40,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1342:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 36,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "1322:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 41,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1322:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 42,
															"nodeType": "RevertStatement",
															"src": "1315:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 46,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 27,
															"src": "1392:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 45,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "1373:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 47,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1373:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 48,
												"nodeType": "ExpressionStatement",
												"src": "1373:32:0"
											}
										]
									},
									"documentation": {
										"id": 25,
										"nodeType": "StructuredDocumentation",
										"src": "1105:115:0",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 50,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1245:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 50,
												"src": "1237:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 26,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1237:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1236:22:0"
									},
									"returnParameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1259:0:0"
									},
									"scope": 147,
									"src": "1225:187:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 57,
										"nodeType": "Block",
										"src": "1521:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 53,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 84,
														"src": "1531:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 54,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1531:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 55,
												"nodeType": "ExpressionStatement",
												"src": "1531:13:0"
											},
											{
												"id": 56,
												"nodeType": "PlaceholderStatement",
												"src": "1554:1:0"
											}
										]
									},
									"documentation": {
										"id": 51,
										"nodeType": "StructuredDocumentation",
										"src": "1418:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 58,
									"name": "onlyOwner",
									"nameLocation": "1509:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1518:2:0"
									},
									"src": "1500:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 66,
										"nodeType": "Block",
										"src": "1693:30:0",
										"statements": [
											{
												"expression": {
													"id": 64,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "1710:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 63,
												"id": 65,
												"nodeType": "Return",
												"src": "1703:13:0"
											}
										]
									},
									"documentation": {
										"id": 59,
										"nodeType": "StructuredDocumentation",
										"src": "1568:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 67,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1647:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1652:2:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "1684:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 61,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1683:9:0"
									},
									"scope": 147,
									"src": "1638:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 83,
										"nodeType": "Block",
										"src": "1841:117:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 75,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 71,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 67,
															"src": "1855:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 72,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1855:7:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 73,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 816,
															"src": "1866:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 74,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1866:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1855:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 82,
												"nodeType": "IfStatement",
												"src": "1851:101:0",
												"trueBody": {
													"id": 81,
													"nodeType": "Block",
													"src": "1880:72:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 77,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 816,
																			"src": "1928:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 78,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1928:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 76,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 13,
																	"src": "1901:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 79,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1901:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 80,
															"nodeType": "RevertStatement",
															"src": "1894:47:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 68,
										"nodeType": "StructuredDocumentation",
										"src": "1729:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 84,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1805:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 69,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1816:2:0"
									},
									"returnParameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1841:0:0"
									},
									"scope": 147,
									"src": "1796:162:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 97,
										"nodeType": "Block",
										"src": "2347:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 93,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2384:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 92,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2376:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 91,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2376:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 94,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2376:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 90,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2357:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 95,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2357:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 96,
												"nodeType": "ExpressionStatement",
												"src": "2357:30:0"
											}
										]
									},
									"documentation": {
										"id": 85,
										"nodeType": "StructuredDocumentation",
										"src": "1964:324:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 98,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 88,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 87,
												"name": "onlyOwner",
												"nameLocations": [
													"2337:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2337:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2337:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "2302:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2319:2:0"
									},
									"returnParameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2347:0:0"
									},
									"scope": 147,
									"src": "2293:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 125,
										"nodeType": "Block",
										"src": "2613:145:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 106,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 101,
														"src": "2627:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 109,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2647:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 108,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2639:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 107,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2639:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 110,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2639:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2627:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 120,
												"nodeType": "IfStatement",
												"src": "2623:91:0",
												"trueBody": {
													"id": 119,
													"nodeType": "Block",
													"src": "2651:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 115,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2700:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 114,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2692:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 113,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2692:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 116,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2692:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 112,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "2672:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 117,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2672:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 118,
															"nodeType": "RevertStatement",
															"src": "2665:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 122,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 101,
															"src": "2742:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 121,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2723:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2723:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 124,
												"nodeType": "ExpressionStatement",
												"src": "2723:28:0"
											}
										]
									},
									"documentation": {
										"id": 99,
										"nodeType": "StructuredDocumentation",
										"src": "2400:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 126,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 104,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 103,
												"name": "onlyOwner",
												"nameLocations": [
													"2603:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2603:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2603:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2552:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2578:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "2570:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 100,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:18:0"
									},
									"returnParameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2613:0:0"
									},
									"scope": 147,
									"src": "2543:215:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 145,
										"nodeType": "Block",
										"src": "2975:124:0",
										"statements": [
											{
												"assignments": [
													133
												],
												"declarations": [
													{
														"constant": false,
														"id": 133,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2993:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 145,
														"src": "2985:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 132,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2985:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 135,
												"initialValue": {
													"id": 134,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "3004:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2985:25:0"
											},
											{
												"expression": {
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 136,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "3020:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 137,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 129,
														"src": "3029:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3020:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 139,
												"nodeType": "ExpressionStatement",
												"src": "3020:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 141,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 133,
															"src": "3073:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 142,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 129,
															"src": "3083:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 140,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 24,
														"src": "3052:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3052:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 144,
												"nodeType": "EmitStatement",
												"src": "3047:45:0"
											}
										]
									},
									"documentation": {
										"id": 127,
										"nodeType": "StructuredDocumentation",
										"src": "2764:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 146,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2921:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2948:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "2940:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 128,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2940:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2939:18:0"
									},
									"returnParameters": {
										"id": 131,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2975:0:0"
									},
									"scope": 147,
									"src": "2912:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 148,
							"src": "663:2438:0",
							"usedErrors": [
								13,
								18
							],
							"usedEvents": [
								24
							]
						}
					],
					"src": "102:3000:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							225
						]
					},
					"id": 226,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 149,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 150,
								"nodeType": "StructuredDocumentation",
								"src": "132:70:1",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 225,
							"linearizedBaseContracts": [
								225
							],
							"name": "IERC20",
							"nameLocation": "213:6:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 151,
										"nodeType": "StructuredDocumentation",
										"src": "226:158:1",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 159,
									"name": "Transfer",
									"nameLocation": "395:8:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 158,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 153,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "420:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "404:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 152,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "404:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 155,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "442:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "426:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 154,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "426:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 157,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "454:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "446:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 156,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "446:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "403:57:1"
									},
									"src": "389:72:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 160,
										"nodeType": "StructuredDocumentation",
										"src": "467:148:1",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 168,
									"name": "Approval",
									"nameLocation": "626:8:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 167,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 162,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "651:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 168,
												"src": "635:21:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 161,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "635:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 164,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "674:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 168,
												"src": "658:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 163,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "658:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 166,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "691:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 168,
												"src": "683:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 165,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "683:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "634:63:1"
									},
									"src": "620:78:1"
								},
								{
									"documentation": {
										"id": 169,
										"nodeType": "StructuredDocumentation",
										"src": "704:65:1",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 174,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "783:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 170,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "794:2:1"
									},
									"returnParameters": {
										"id": 173,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 172,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 174,
												"src": "820:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 171,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "819:9:1"
									},
									"scope": 225,
									"src": "774:55:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 175,
										"nodeType": "StructuredDocumentation",
										"src": "835:71:1",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 182,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "920:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 178,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 177,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "938:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 182,
												"src": "930:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 176,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "930:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "929:17:1"
									},
									"returnParameters": {
										"id": 181,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 180,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 182,
												"src": "970:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 179,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "970:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "969:9:1"
									},
									"scope": 225,
									"src": "911:68:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 183,
										"nodeType": "StructuredDocumentation",
										"src": "985:213:1",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 192,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1212:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 188,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 185,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1229:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 192,
												"src": "1221:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 184,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1221:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 187,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1241:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 192,
												"src": "1233:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 186,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1233:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1220:27:1"
									},
									"returnParameters": {
										"id": 191,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 190,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 192,
												"src": "1266:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 189,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1266:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1265:6:1"
									},
									"scope": 225,
									"src": "1203:69:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 193,
										"nodeType": "StructuredDocumentation",
										"src": "1278:264:1",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 202,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1556:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 198,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 195,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1574:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 202,
												"src": "1566:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 194,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1566:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 197,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1589:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 202,
												"src": "1581:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 196,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1581:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1565:32:1"
									},
									"returnParameters": {
										"id": 201,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 200,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 202,
												"src": "1621:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 199,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1621:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1620:9:1"
									},
									"scope": 225,
									"src": "1547:83:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 203,
										"nodeType": "StructuredDocumentation",
										"src": "1636:667:1",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 212,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2317:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 208,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 205,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2333:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 212,
												"src": "2325:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 204,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2325:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 207,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2350:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 212,
												"src": "2342:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 206,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2342:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2324:32:1"
									},
									"returnParameters": {
										"id": 211,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 210,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 212,
												"src": "2375:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 209,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2375:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2374:6:1"
									},
									"scope": 225,
									"src": "2308:73:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 213,
										"nodeType": "StructuredDocumentation",
										"src": "2387:297:1",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 224,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2698:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 220,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 215,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2719:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 224,
												"src": "2711:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 214,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2711:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 217,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2733:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 224,
												"src": "2725:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 216,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2725:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 219,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2745:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 224,
												"src": "2737:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 218,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2737:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2710:41:1"
									},
									"returnParameters": {
										"id": 223,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 222,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 224,
												"src": "2770:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 221,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2770:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2769:6:1"
									},
									"scope": 225,
									"src": "2689:87:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 226,
							"src": "203:2575:1",
							"usedErrors": [],
							"usedEvents": [
								159,
								168
							]
						}
					],
					"src": "106:2673:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
					"exportedSymbols": {
						"IERC20Permit": [
							261
						]
					},
					"id": 262,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 227,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "123:24:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Permit",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 228,
								"nodeType": "StructuredDocumentation",
								"src": "149:1963:2",
								"text": " @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n need to send a transaction, and thus is not required to hold Ether at all.\n ==== Security Considerations\n There are two important considerations concerning the use of `permit`. The first is that a valid permit signature\n expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be\n considered as an intention to spend the allowance in any specific way. The second is that because permits have\n built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should\n take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be\n generally recommended is:\n ```solidity\n function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {\n     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}\n     doThing(..., value);\n }\n function doThing(..., uint256 value) public {\n     token.safeTransferFrom(msg.sender, address(this), value);\n     ...\n }\n ```\n Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of\n `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also\n {SafeERC20-safeTransferFrom}).\n Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so\n contracts should have entry points that don't rely on permit."
							},
							"fullyImplemented": false,
							"id": 261,
							"linearizedBaseContracts": [
								261
							],
							"name": "IERC20Permit",
							"nameLocation": "2123:12:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 229,
										"nodeType": "StructuredDocumentation",
										"src": "2142:850:2",
										"text": " @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n given ``owner``'s signed approval.\n IMPORTANT: The same issues {IERC20-approve} has related to transaction\n ordering also apply here.\n Emits an {Approval} event.\n Requirements:\n - `spender` cannot be the zero address.\n - `deadline` must be a timestamp in the future.\n - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n over the EIP712-formatted function arguments.\n - the signature must use ``owner``'s current nonce (see {nonces}).\n For more information on the signature format, see the\n https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n section].\n CAUTION: See Security Considerations above."
									},
									"functionSelector": "d505accf",
									"id": 246,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "permit",
									"nameLocation": "3006:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 244,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 231,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3030:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 246,
												"src": "3022:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 230,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3022:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 233,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3053:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 246,
												"src": "3045:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 232,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3045:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 235,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3078:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 246,
												"src": "3070:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 234,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3070:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 237,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "3101:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 246,
												"src": "3093:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 236,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3093:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 239,
												"mutability": "mutable",
												"name": "v",
												"nameLocation": "3125:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 246,
												"src": "3119:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 238,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "3119:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 241,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "3144:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 246,
												"src": "3136:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 240,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3136:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 243,
												"mutability": "mutable",
												"name": "s",
												"nameLocation": "3163:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 246,
												"src": "3155:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 242,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3155:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3012:158:2"
									},
									"returnParameters": {
										"id": 245,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3179:0:2"
									},
									"scope": 261,
									"src": "2997:183:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 247,
										"nodeType": "StructuredDocumentation",
										"src": "3186:294:2",
										"text": " @dev Returns the current nonce for `owner`. This value must be\n included whenever a signature is generated for {permit}.\n Every successful call to {permit} increases ``owner``'s nonce by one. This\n prevents a signature from being used multiple times."
									},
									"functionSelector": "7ecebe00",
									"id": 254,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "nonces",
									"nameLocation": "3494:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 250,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 249,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3509:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 254,
												"src": "3501:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 248,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3501:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3500:15:2"
									},
									"returnParameters": {
										"id": 253,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 252,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 254,
												"src": "3539:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 251,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3539:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3538:9:2"
									},
									"scope": 261,
									"src": "3485:63:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 255,
										"nodeType": "StructuredDocumentation",
										"src": "3554:128:2",
										"text": " @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}."
									},
									"functionSelector": "3644e515",
									"id": 260,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "DOMAIN_SEPARATOR",
									"nameLocation": "3749:16:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 256,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3765:2:2"
									},
									"returnParameters": {
										"id": 259,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 258,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 260,
												"src": "3791:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 257,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3791:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3790:9:2"
									},
									"scope": 261,
									"src": "3740:60:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 262,
							"src": "2113:1689:2",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "123:3680:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
					"exportedSymbols": {
						"Address": [
							804
						],
						"IERC20": [
							225
						],
						"IERC20Permit": [
							261
						],
						"SafeERC20": [
							551
						]
					},
					"id": 552,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 263,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "115:24:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 265,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 552,
							"sourceUnit": 226,
							"src": "141:37:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 264,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 225,
										"src": "149:6:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
							"file": "../extensions/IERC20Permit.sol",
							"id": 267,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 552,
							"sourceUnit": 262,
							"src": "179:60:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 266,
										"name": "IERC20Permit",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 261,
										"src": "187:12:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
							"file": "../../../utils/Address.sol",
							"id": 269,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 552,
							"sourceUnit": 805,
							"src": "240:51:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 268,
										"name": "Address",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 804,
										"src": "248:7:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeERC20",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 270,
								"nodeType": "StructuredDocumentation",
								"src": "293:457:3",
								"text": " @title SafeERC20\n @dev Wrappers around ERC20 operations that throw on failure (when the token\n contract returns false). Tokens that return no value (and instead revert or\n throw on failure) are also supported, non-reverting calls are assumed to be\n successful.\n To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n which allows you to call the safe operations as `token.safeTransfer(...)`, etc."
							},
							"fullyImplemented": true,
							"id": 551,
							"linearizedBaseContracts": [
								551
							],
							"name": "SafeERC20",
							"nameLocation": "759:9:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 273,
									"libraryName": {
										"id": 271,
										"name": "Address",
										"nameLocations": [
											"781:7:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 804,
										"src": "781:7:3"
									},
									"nodeType": "UsingForDirective",
									"src": "775:26:3",
									"typeName": {
										"id": 272,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "793:7:3",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									}
								},
								{
									"documentation": {
										"id": 274,
										"nodeType": "StructuredDocumentation",
										"src": "807:64:3",
										"text": " @dev An operation with an ERC20 token failed."
									},
									"errorSelector": "5274afe7",
									"id": 278,
									"name": "SafeERC20FailedOperation",
									"nameLocation": "882:24:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 277,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 276,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "915:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 278,
												"src": "907:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 275,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "907:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "906:15:3"
									},
									"src": "876:46:3"
								},
								{
									"documentation": {
										"id": 279,
										"nodeType": "StructuredDocumentation",
										"src": "928:71:3",
										"text": " @dev Indicates a failed `decreaseAllowance` request."
									},
									"errorSelector": "e570110f",
									"id": 287,
									"name": "SafeERC20FailedDecreaseAllowance",
									"nameLocation": "1010:32:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 286,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 281,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1051:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 287,
												"src": "1043:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 280,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1043:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 283,
												"mutability": "mutable",
												"name": "currentAllowance",
												"nameLocation": "1068:16:3",
												"nodeType": "VariableDeclaration",
												"scope": 287,
												"src": "1060:24:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 282,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1060:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 285,
												"mutability": "mutable",
												"name": "requestedDecrease",
												"nameLocation": "1094:17:3",
												"nodeType": "VariableDeclaration",
												"scope": 287,
												"src": "1086:25:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 284,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1086:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1042:70:3"
									},
									"src": "1004:109:3"
								},
								{
									"body": {
										"id": 310,
										"nodeType": "Block",
										"src": "1375:88:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 299,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 291,
															"src": "1405:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$225",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 302,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 291,
																		"src": "1427:5:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$225",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 303,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1433:8:3",
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 192,
																	"src": "1427:14:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	}
																},
																{
																	"components": [
																		{
																			"id": 304,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 293,
																			"src": "1444:2:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 305,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 295,
																			"src": "1448:5:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 306,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "1443:11:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,uint256)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	},
																	{
																		"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,uint256)"
																	}
																],
																"expression": {
																	"id": 300,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1412:3:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 301,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1416:10:3",
																"memberName": "encodeCall",
																"nodeType": "MemberAccess",
																"src": "1412:14:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 307,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1412:43:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$225",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 298,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 501,
														"src": "1385:19:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$225_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 308,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1385:71:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 309,
												"nodeType": "ExpressionStatement",
												"src": "1385:71:3"
											}
										]
									},
									"documentation": {
										"id": 288,
										"nodeType": "StructuredDocumentation",
										"src": "1119:179:3",
										"text": " @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n non-reverting calls are assumed to be successful."
									},
									"id": 311,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransfer",
									"nameLocation": "1312:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 296,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 291,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1332:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 311,
												"src": "1325:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$225",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 290,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 289,
														"name": "IERC20",
														"nameLocations": [
															"1325:6:3"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 225,
														"src": "1325:6:3"
													},
													"referencedDeclaration": 225,
													"src": "1325:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$225",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 293,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1347:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 311,
												"src": "1339:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 292,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1339:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 295,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1359:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 311,
												"src": "1351:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 294,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1351:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1324:41:3"
									},
									"returnParameters": {
										"id": 297,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1375:0:3"
									},
									"scope": 551,
									"src": "1303:160:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 337,
										"nodeType": "Block",
										"src": "1792:98:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 325,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 315,
															"src": "1822:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$225",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 328,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 315,
																		"src": "1844:5:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$225",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 329,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1850:12:3",
																	"memberName": "transferFrom",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 224,
																	"src": "1844:18:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	}
																},
																{
																	"components": [
																		{
																			"id": 330,
																			"name": "from",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 317,
																			"src": "1865:4:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 331,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 319,
																			"src": "1871:2:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 332,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 321,
																			"src": "1875:5:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 333,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "1864:17:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,address,uint256)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	},
																	{
																		"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,address,uint256)"
																	}
																],
																"expression": {
																	"id": 326,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1829:3:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 327,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1833:10:3",
																"memberName": "encodeCall",
																"nodeType": "MemberAccess",
																"src": "1829:14:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 334,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1829:53:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$225",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 324,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 501,
														"src": "1802:19:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$225_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 335,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1802:81:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 336,
												"nodeType": "ExpressionStatement",
												"src": "1802:81:3"
											}
										]
									},
									"documentation": {
										"id": 312,
										"nodeType": "StructuredDocumentation",
										"src": "1469:228:3",
										"text": " @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n calling contract. If `token` returns no value, non-reverting calls are assumed to be successful."
									},
									"id": 338,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "1711:16:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 322,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 315,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1735:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 338,
												"src": "1728:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$225",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 314,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 313,
														"name": "IERC20",
														"nameLocations": [
															"1728:6:3"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 225,
														"src": "1728:6:3"
													},
													"referencedDeclaration": 225,
													"src": "1728:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$225",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 317,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1750:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 338,
												"src": "1742:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 316,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1742:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 319,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1764:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 338,
												"src": "1756:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 318,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1756:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 321,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1776:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 338,
												"src": "1768:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 320,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1768:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1727:55:3"
									},
									"returnParameters": {
										"id": 323,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1792:0:3"
									},
									"scope": 551,
									"src": "1702:188:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 368,
										"nodeType": "Block",
										"src": "2167:139:3",
										"statements": [
											{
												"assignments": [
													350
												],
												"declarations": [
													{
														"constant": false,
														"id": 350,
														"mutability": "mutable",
														"name": "oldAllowance",
														"nameLocation": "2185:12:3",
														"nodeType": "VariableDeclaration",
														"scope": 368,
														"src": "2177:20:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 349,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2177:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 359,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 355,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "2224:4:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_SafeERC20_$551",
																		"typeString": "library SafeERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_SafeERC20_$551",
																		"typeString": "library SafeERC20"
																	}
																],
																"id": 354,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2216:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 353,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2216:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 356,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2216:13:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 357,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 344,
															"src": "2231:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 351,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 342,
															"src": "2200:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$225",
																"typeString": "contract IERC20"
															}
														},
														"id": 352,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2206:9:3",
														"memberName": "allowance",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 202,
														"src": "2200:15:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view external returns (uint256)"
														}
													},
													"id": 358,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2200:39:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2177:62:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 361,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 342,
															"src": "2262:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$225",
																"typeString": "contract IERC20"
															}
														},
														{
															"id": 362,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 344,
															"src": "2269:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 365,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 363,
																"name": "oldAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 350,
																"src": "2278:12:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 364,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 346,
																"src": "2293:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2278:20:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$225",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 360,
														"name": "forceApprove",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 459,
														"src": "2249:12:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$225_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 366,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2249:50:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 367,
												"nodeType": "ExpressionStatement",
												"src": "2249:50:3"
											}
										]
									},
									"documentation": {
										"id": 339,
										"nodeType": "StructuredDocumentation",
										"src": "1896:180:3",
										"text": " @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful."
									},
									"id": 369,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeIncreaseAllowance",
									"nameLocation": "2090:21:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 347,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 342,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2119:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 369,
												"src": "2112:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$225",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 341,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 340,
														"name": "IERC20",
														"nameLocations": [
															"2112:6:3"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 225,
														"src": "2112:6:3"
													},
													"referencedDeclaration": 225,
													"src": "2112:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$225",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 344,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2134:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 369,
												"src": "2126:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 343,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2126:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 346,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2151:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 369,
												"src": "2143:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 345,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2143:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2111:46:3"
									},
									"returnParameters": {
										"id": 348,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2167:0:3"
									},
									"scope": 551,
									"src": "2081:225:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 411,
										"nodeType": "Block",
										"src": "2607:370:3",
										"statements": [
											{
												"id": 410,
												"nodeType": "UncheckedBlock",
												"src": "2617:354:3",
												"statements": [
													{
														"assignments": [
															381
														],
														"declarations": [
															{
																"constant": false,
																"id": 381,
																"mutability": "mutable",
																"name": "currentAllowance",
																"nameLocation": "2649:16:3",
																"nodeType": "VariableDeclaration",
																"scope": 410,
																"src": "2641:24:3",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 380,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2641:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 390,
														"initialValue": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 386,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2692:4:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_SafeERC20_$551",
																				"typeString": "library SafeERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_SafeERC20_$551",
																				"typeString": "library SafeERC20"
																			}
																		],
																		"id": 385,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2684:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 384,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2684:7:3",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 387,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2684:13:3",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 388,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 375,
																	"src": "2699:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 382,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 373,
																	"src": "2668:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$225",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 383,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2674:9:3",
																"memberName": "allowance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 202,
																"src": "2668:15:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address,address) view external returns (uint256)"
																}
															},
															"id": 389,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2668:39:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "2641:66:3"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 393,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 391,
																"name": "currentAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 381,
																"src": "2725:16:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 392,
																"name": "requestedDecrease",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 377,
																"src": "2744:17:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2725:36:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 401,
														"nodeType": "IfStatement",
														"src": "2721:160:3",
														"trueBody": {
															"id": 400,
															"nodeType": "Block",
															"src": "2763:118:3",
															"statements": [
																{
																	"errorCall": {
																		"arguments": [
																			{
																				"id": 395,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 375,
																				"src": "2821:7:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 396,
																				"name": "currentAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 381,
																				"src": "2830:16:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"id": 397,
																				"name": "requestedDecrease",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 377,
																				"src": "2848:17:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 394,
																			"name": "SafeERC20FailedDecreaseAllowance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 287,
																			"src": "2788:32:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																				"typeString": "function (address,uint256,uint256) pure returns (error)"
																			}
																		},
																		"id": 398,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2788:78:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_error",
																			"typeString": "error"
																		}
																	},
																	"id": 399,
																	"nodeType": "RevertStatement",
																	"src": "2781:85:3"
																}
															]
														}
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 403,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 373,
																	"src": "2907:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$225",
																		"typeString": "contract IERC20"
																	}
																},
																{
																	"id": 404,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 375,
																	"src": "2914:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 407,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 405,
																		"name": "currentAllowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 381,
																		"src": "2923:16:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 406,
																		"name": "requestedDecrease",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 377,
																		"src": "2942:17:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2923:36:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$225",
																		"typeString": "contract IERC20"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 402,
																"name": "forceApprove",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 459,
																"src": "2894:12:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$225_$_t_address_$_t_uint256_$returns$__$",
																	"typeString": "function (contract IERC20,address,uint256)"
																}
															},
															"id": 408,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2894:66:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 409,
														"nodeType": "ExpressionStatement",
														"src": "2894:66:3"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 370,
										"nodeType": "StructuredDocumentation",
										"src": "2312:192:3",
										"text": " @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\n value, non-reverting calls are assumed to be successful."
									},
									"id": 412,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeDecreaseAllowance",
									"nameLocation": "2518:21:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 378,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 373,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2547:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 412,
												"src": "2540:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$225",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 372,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 371,
														"name": "IERC20",
														"nameLocations": [
															"2540:6:3"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 225,
														"src": "2540:6:3"
													},
													"referencedDeclaration": 225,
													"src": "2540:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$225",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 375,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2562:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 412,
												"src": "2554:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 374,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2554:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 377,
												"mutability": "mutable",
												"name": "requestedDecrease",
												"nameLocation": "2579:17:3",
												"nodeType": "VariableDeclaration",
												"scope": 412,
												"src": "2571:25:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 376,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2571:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2539:58:3"
									},
									"returnParameters": {
										"id": 379,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2607:0:3"
									},
									"scope": 551,
									"src": "2509:468:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 458,
										"nodeType": "Block",
										"src": "3373:303:3",
										"statements": [
											{
												"assignments": [
													424
												],
												"declarations": [
													{
														"constant": false,
														"id": 424,
														"mutability": "mutable",
														"name": "approvalCall",
														"nameLocation": "3396:12:3",
														"nodeType": "VariableDeclaration",
														"scope": 458,
														"src": "3383:25:3",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 423,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3383:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 433,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 427,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 416,
																"src": "3426:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$225",
																	"typeString": "contract IERC20"
																}
															},
															"id": 428,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3432:7:3",
															"memberName": "approve",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 212,
															"src": "3426:13:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (address,uint256) external returns (bool)"
															}
														},
														{
															"components": [
																{
																	"id": 429,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 418,
																	"src": "3442:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 430,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 420,
																	"src": "3451:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 431,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "3441:16:3",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																"typeString": "tuple(address,uint256)"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (address,uint256) external returns (bool)"
															},
															{
																"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																"typeString": "tuple(address,uint256)"
															}
														],
														"expression": {
															"id": 425,
															"name": "abi",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967295,
															"src": "3411:3:3",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_abi",
																"typeString": "abi"
															}
														},
														"id": 426,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "3415:10:3",
														"memberName": "encodeCall",
														"nodeType": "MemberAccess",
														"src": "3411:14:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
															"typeString": "function () pure returns (bytes memory)"
														}
													},
													"id": 432,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3411:47:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3383:75:3"
											},
											{
												"condition": {
													"id": 438,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "3473:45:3",
													"subExpression": {
														"arguments": [
															{
																"id": 435,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 416,
																"src": "3498:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$225",
																	"typeString": "contract IERC20"
																}
															},
															{
																"id": 436,
																"name": "approvalCall",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 424,
																"src": "3505:12:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_IERC20_$225",
																	"typeString": "contract IERC20"
																},
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 434,
															"name": "_callOptionalReturnBool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 550,
															"src": "3474:23:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$225_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																"typeString": "function (contract IERC20,bytes memory) returns (bool)"
															}
														},
														"id": 437,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3474:44:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 457,
												"nodeType": "IfStatement",
												"src": "3469:201:3",
												"trueBody": {
													"id": 456,
													"nodeType": "Block",
													"src": "3520:150:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 440,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 416,
																		"src": "3554:5:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$225",
																			"typeString": "contract IERC20"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"expression": {
																					"id": 443,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 416,
																					"src": "3576:5:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$225",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 444,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "3582:7:3",
																				"memberName": "approve",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 212,
																				"src": "3576:13:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,uint256) external returns (bool)"
																				}
																			},
																			{
																				"components": [
																					{
																						"id": 445,
																						"name": "spender",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 418,
																						"src": "3592:7:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					{
																						"hexValue": "30",
																						"id": 446,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "3601:1:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_0_by_1",
																							"typeString": "int_const 0"
																						},
																						"value": "0"
																					}
																				],
																				"id": 447,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "3591:12:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_tuple$_t_address_$_t_rational_0_by_1_$",
																					"typeString": "tuple(address,int_const 0)"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,uint256) external returns (bool)"
																				},
																				{
																					"typeIdentifier": "t_tuple$_t_address_$_t_rational_0_by_1_$",
																					"typeString": "tuple(address,int_const 0)"
																				}
																			],
																			"expression": {
																				"id": 441,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967295,
																				"src": "3561:3:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 442,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberLocation": "3565:10:3",
																			"memberName": "encodeCall",
																			"nodeType": "MemberAccess",
																			"src": "3561:14:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																				"typeString": "function () pure returns (bytes memory)"
																			}
																		},
																		"id": 448,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3561:43:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20_$225",
																			"typeString": "contract IERC20"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 439,
																	"name": "_callOptionalReturn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 501,
																	"src": "3534:19:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$225_$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (contract IERC20,bytes memory)"
																	}
																},
																"id": 449,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3534:71:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 450,
															"nodeType": "ExpressionStatement",
															"src": "3534:71:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 452,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 416,
																		"src": "3639:5:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$225",
																			"typeString": "contract IERC20"
																		}
																	},
																	{
																		"id": 453,
																		"name": "approvalCall",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 424,
																		"src": "3646:12:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20_$225",
																			"typeString": "contract IERC20"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 451,
																	"name": "_callOptionalReturn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 501,
																	"src": "3619:19:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$225_$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (contract IERC20,bytes memory)"
																	}
																},
																"id": 454,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3619:40:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 455,
															"nodeType": "ExpressionStatement",
															"src": "3619:40:3"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 413,
										"nodeType": "StructuredDocumentation",
										"src": "2983:308:3",
										"text": " @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n to be set to zero before setting it to a non-zero value, such as USDT."
									},
									"id": 459,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "forceApprove",
									"nameLocation": "3305:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 421,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 416,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "3325:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 459,
												"src": "3318:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$225",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 415,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 414,
														"name": "IERC20",
														"nameLocations": [
															"3318:6:3"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 225,
														"src": "3318:6:3"
													},
													"referencedDeclaration": 225,
													"src": "3318:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$225",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 418,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3340:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 459,
												"src": "3332:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 417,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3332:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 420,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3357:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 459,
												"src": "3349:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 419,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3349:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3317:46:3"
									},
									"returnParameters": {
										"id": 422,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3373:0:3"
									},
									"scope": 551,
									"src": "3296:380:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 500,
										"nodeType": "Block",
										"src": "4129:559:3",
										"statements": [
											{
												"assignments": [
													469
												],
												"declarations": [
													{
														"constant": false,
														"id": 469,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "4491:10:3",
														"nodeType": "VariableDeclaration",
														"scope": 500,
														"src": "4478:23:3",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 468,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "4478:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 477,
												"initialValue": {
													"arguments": [
														{
															"id": 475,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 465,
															"src": "4532:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 472,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 463,
																	"src": "4512:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$225",
																		"typeString": "contract IERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$225",
																		"typeString": "contract IERC20"
																	}
																],
																"id": 471,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "4504:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 470,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "4504:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 473,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4504:14:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 474,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4519:12:3",
														"memberName": "functionCall",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 625,
														"src": "4504:27:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$attached_to$_t_address_$",
															"typeString": "function (address,bytes memory) returns (bytes memory)"
														}
													},
													"id": 476,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4504:33:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4478:59:3"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 490,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 481,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 478,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 469,
																"src": "4551:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 479,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4562:6:3",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "4551:17:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"hexValue": "30",
															"id": 480,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4572:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "4551:22:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"id": 489,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "4577:31:3",
														"subExpression": {
															"arguments": [
																{
																	"id": 484,
																	"name": "returndata",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 469,
																	"src": "4589:10:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																},
																{
																	"components": [
																		{
																			"id": 486,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "4602:4:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_bool_$",
																				"typeString": "type(bool)"
																			},
																			"typeName": {
																				"id": 485,
																				"name": "bool",
																				"nodeType": "ElementaryTypeName",
																				"src": "4602:4:3",
																				"typeDescriptions": {}
																			}
																		}
																	],
																	"id": 487,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "4601:6:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bool_$",
																		"typeString": "type(bool)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	},
																	{
																		"typeIdentifier": "t_type$_t_bool_$",
																		"typeString": "type(bool)"
																	}
																],
																"expression": {
																	"id": 482,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "4578:3:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 483,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "4582:6:3",
																"memberName": "decode",
																"nodeType": "MemberAccess",
																"src": "4578:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 488,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4578:30:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "4551:57:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 499,
												"nodeType": "IfStatement",
												"src": "4547:135:3",
												"trueBody": {
													"id": 498,
													"nodeType": "Block",
													"src": "4610:72:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 494,
																				"name": "token",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 463,
																				"src": "4664:5:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_IERC20_$225",
																					"typeString": "contract IERC20"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_IERC20_$225",
																					"typeString": "contract IERC20"
																				}
																			],
																			"id": 493,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "4656:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 492,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "4656:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 495,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4656:14:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 491,
																	"name": "SafeERC20FailedOperation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 278,
																	"src": "4631:24:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 496,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4631:40:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 497,
															"nodeType": "RevertStatement",
															"src": "4624:47:3"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 460,
										"nodeType": "StructuredDocumentation",
										"src": "3682:372:3",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants)."
									},
									"id": 501,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturn",
									"nameLocation": "4068:19:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 466,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 463,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "4095:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 501,
												"src": "4088:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$225",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 462,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 461,
														"name": "IERC20",
														"nameLocations": [
															"4088:6:3"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 225,
														"src": "4088:6:3"
													},
													"referencedDeclaration": 225,
													"src": "4088:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$225",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 465,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4115:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 501,
												"src": "4102:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 464,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4102:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4087:33:3"
									},
									"returnParameters": {
										"id": 467,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4129:0:3"
									},
									"scope": 551,
									"src": "4059:629:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 549,
										"nodeType": "Block",
										"src": "5278:489:3",
										"statements": [
											{
												"assignments": [
													513,
													515
												],
												"declarations": [
													{
														"constant": false,
														"id": 513,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "5579:7:3",
														"nodeType": "VariableDeclaration",
														"scope": 549,
														"src": "5574:12:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 512,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "5574:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 515,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "5601:10:3",
														"nodeType": "VariableDeclaration",
														"scope": 549,
														"src": "5588:23:3",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 514,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5588:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 523,
												"initialValue": {
													"arguments": [
														{
															"id": 521,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 507,
															"src": "5635:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 518,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 505,
																	"src": "5623:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$225",
																		"typeString": "contract IERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$225",
																		"typeString": "contract IERC20"
																	}
																],
																"id": 517,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "5615:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 516,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "5615:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 519,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5615:14:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 520,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5630:4:3",
														"memberName": "call",
														"nodeType": "MemberAccess",
														"src": "5615:19:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 522,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5615:25:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5573:67:3"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 547,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 538,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 524,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 513,
															"src": "5657:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&&",
														"rightExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"id": 536,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 528,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"expression": {
																				"id": 525,
																				"name": "returndata",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 515,
																				"src": "5669:10:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			},
																			"id": 526,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "5680:6:3",
																			"memberName": "length",
																			"nodeType": "MemberAccess",
																			"src": "5669:17:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 527,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "5690:1:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "5669:22:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "||",
																	"rightExpression": {
																		"arguments": [
																			{
																				"id": 531,
																				"name": "returndata",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 515,
																				"src": "5706:10:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			},
																			{
																				"components": [
																					{
																						"id": 533,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "5719:4:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_bool_$",
																							"typeString": "type(bool)"
																						},
																						"typeName": {
																							"id": 532,
																							"name": "bool",
																							"nodeType": "ElementaryTypeName",
																							"src": "5719:4:3",
																							"typeDescriptions": {}
																						}
																					}
																				],
																				"id": 534,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "5718:6:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				},
																				{
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			],
																			"expression": {
																				"id": 529,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967295,
																				"src": "5695:3:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 530,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberLocation": "5699:6:3",
																			"memberName": "decode",
																			"nodeType": "MemberAccess",
																			"src": "5695:10:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 535,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5695:30:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"src": "5669:56:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																}
															],
															"id": 537,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "5668:58:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "5657:69:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 546,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 541,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 505,
																			"src": "5738:5:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$225",
																				"typeString": "contract IERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_IERC20_$225",
																				"typeString": "contract IERC20"
																			}
																		],
																		"id": 540,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "5730:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 539,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "5730:7:3",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 542,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5730:14:3",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 543,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5745:4:3",
																"memberName": "code",
																"nodeType": "MemberAccess",
																"src": "5730:19:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 544,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5750:6:3",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "5730:26:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 545,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5759:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "5730:30:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "5657:103:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 511,
												"id": 548,
												"nodeType": "Return",
												"src": "5650:110:3"
											}
										]
									},
									"documentation": {
										"id": 502,
										"nodeType": "StructuredDocumentation",
										"src": "4694:490:3",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants).\n This is a variant of {_callOptionalReturn} that silents catches all reverts and returns a bool instead."
									},
									"id": 550,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturnBool",
									"nameLocation": "5198:23:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 508,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 505,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "5229:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 550,
												"src": "5222:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$225",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 504,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 503,
														"name": "IERC20",
														"nameLocations": [
															"5222:6:3"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 225,
														"src": "5222:6:3"
													},
													"referencedDeclaration": 225,
													"src": "5222:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$225",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 507,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5249:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 550,
												"src": "5236:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 506,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5236:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5221:33:3"
									},
									"returnParameters": {
										"id": 511,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 510,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 550,
												"src": "5272:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 509,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5272:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5271:6:3"
									},
									"scope": 551,
									"src": "5189:578:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 552,
							"src": "751:5018:3",
							"usedErrors": [
								278,
								287
							],
							"usedEvents": []
						}
					],
					"src": "115:5655:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
					"exportedSymbols": {
						"Address": [
							804
						]
					},
					"id": 805,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 553,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:4"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Address",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 554,
								"nodeType": "StructuredDocumentation",
								"src": "127:67:4",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 804,
							"linearizedBaseContracts": [
								804
							],
							"name": "Address",
							"nameLocation": "203:7:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 555,
										"nodeType": "StructuredDocumentation",
										"src": "217:94:4",
										"text": " @dev The ETH balance of the account is not enough to perform the operation."
									},
									"errorSelector": "cd786059",
									"id": 559,
									"name": "AddressInsufficientBalance",
									"nameLocation": "322:26:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 558,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 557,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "357:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 559,
												"src": "349:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 556,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "349:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "348:17:4"
									},
									"src": "316:50:4"
								},
								{
									"documentation": {
										"id": 560,
										"nodeType": "StructuredDocumentation",
										"src": "372:75:4",
										"text": " @dev There's no code at `target` (it is not a contract)."
									},
									"errorSelector": "9996b315",
									"id": 564,
									"name": "AddressEmptyCode",
									"nameLocation": "458:16:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 563,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 562,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "483:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 564,
												"src": "475:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 561,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "475:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "474:16:4"
									},
									"src": "452:39:4"
								},
								{
									"documentation": {
										"id": 565,
										"nodeType": "StructuredDocumentation",
										"src": "497:89:4",
										"text": " @dev A call to an address target failed. The target may have reverted."
									},
									"errorSelector": "1425ea42",
									"id": 567,
									"name": "FailedInnerCall",
									"nameLocation": "597:15:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 566,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "612:2:4"
									},
									"src": "591:24:4"
								},
								{
									"body": {
										"id": 607,
										"nodeType": "Block",
										"src": "1602:260:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 581,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 577,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "1624:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Address_$804",
																		"typeString": "library Address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Address_$804",
																		"typeString": "library Address"
																	}
																],
																"id": 576,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1616:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 575,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1616:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 578,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1616:13:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 579,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1630:7:4",
														"memberName": "balance",
														"nodeType": "MemberAccess",
														"src": "1616:21:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 580,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 572,
														"src": "1640:6:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1616:30:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 590,
												"nodeType": "IfStatement",
												"src": "1612:109:4",
												"trueBody": {
													"id": 589,
													"nodeType": "Block",
													"src": "1648:73:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 585,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "1704:4:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_Address_$804",
																					"typeString": "library Address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_Address_$804",
																					"typeString": "library Address"
																				}
																			],
																			"id": 584,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1696:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 583,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1696:7:4",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 586,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1696:13:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 582,
																	"name": "AddressInsufficientBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 559,
																	"src": "1669:26:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 587,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1669:41:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 588,
															"nodeType": "RevertStatement",
															"src": "1662:48:4"
														}
													]
												}
											},
											{
												"assignments": [
													592,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 592,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "1737:7:4",
														"nodeType": "VariableDeclaration",
														"scope": 607,
														"src": "1732:12:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 591,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "1732:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 599,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 597,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1780:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 593,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 570,
																"src": "1750:9:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 594,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1760:4:4",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "1750:14:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 596,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 595,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 572,
																"src": "1772:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "1750:29:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 598,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1750:33:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1731:52:4"
											},
											{
												"condition": {
													"id": 601,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "1797:8:4",
													"subExpression": {
														"id": 600,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 592,
														"src": "1798:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 606,
												"nodeType": "IfStatement",
												"src": "1793:63:4",
												"trueBody": {
													"id": 605,
													"nodeType": "Block",
													"src": "1807:49:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 602,
																	"name": "FailedInnerCall",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 567,
																	"src": "1828:15:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 603,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1828:17:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 604,
															"nodeType": "RevertStatement",
															"src": "1821:24:4"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 568,
										"nodeType": "StructuredDocumentation",
										"src": "621:905:4",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 608,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nameLocation": "1540:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 573,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 570,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "1566:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 608,
												"src": "1550:25:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 569,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1550:15:4",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 572,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1585:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 608,
												"src": "1577:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 571,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1577:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1549:43:4"
									},
									"returnParameters": {
										"id": 574,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1602:0:4"
									},
									"scope": 804,
									"src": "1531:331:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 624,
										"nodeType": "Block",
										"src": "2794:62:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 619,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 611,
															"src": "2833:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 620,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 613,
															"src": "2841:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 621,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2847:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															}
														],
														"id": 618,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 671,
														"src": "2811:21:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256) returns (bytes memory)"
														}
													},
													"id": 622,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2811:38:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 617,
												"id": 623,
												"nodeType": "Return",
												"src": "2804:45:4"
											}
										]
									},
									"documentation": {
										"id": 609,
										"nodeType": "StructuredDocumentation",
										"src": "1868:832:4",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason or custom error, it is bubbled\n up by this function (like regular Solidity function calls). However, if\n the call reverted with no returned reason, this function reverts with a\n {FailedInnerCall} error.\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert."
									},
									"id": 625,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "2714:12:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 614,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 611,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "2735:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 625,
												"src": "2727:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 610,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2727:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 613,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2756:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 625,
												"src": "2743:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 612,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2743:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2726:35:4"
									},
									"returnParameters": {
										"id": 617,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 616,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 625,
												"src": "2780:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 615,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2780:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2779:14:4"
									},
									"scope": 804,
									"src": "2705:151:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 670,
										"nodeType": "Block",
										"src": "3293:279:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 643,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 639,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "3315:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Address_$804",
																		"typeString": "library Address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Address_$804",
																		"typeString": "library Address"
																	}
																],
																"id": 638,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3307:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 637,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3307:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 640,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3307:13:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 641,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3321:7:4",
														"memberName": "balance",
														"nodeType": "MemberAccess",
														"src": "3307:21:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 642,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 632,
														"src": "3331:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3307:29:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 652,
												"nodeType": "IfStatement",
												"src": "3303:108:4",
												"trueBody": {
													"id": 651,
													"nodeType": "Block",
													"src": "3338:73:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 647,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "3394:4:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_Address_$804",
																					"typeString": "library Address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_Address_$804",
																					"typeString": "library Address"
																				}
																			],
																			"id": 646,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "3386:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 645,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "3386:7:4",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 648,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3386:13:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 644,
																	"name": "AddressInsufficientBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 559,
																	"src": "3359:26:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 649,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3359:41:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 650,
															"nodeType": "RevertStatement",
															"src": "3352:48:4"
														}
													]
												}
											},
											{
												"assignments": [
													654,
													656
												],
												"declarations": [
													{
														"constant": false,
														"id": 654,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "3426:7:4",
														"nodeType": "VariableDeclaration",
														"scope": 670,
														"src": "3421:12:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 653,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "3421:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 656,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "3448:10:4",
														"nodeType": "VariableDeclaration",
														"scope": 670,
														"src": "3435:23:4",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 655,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3435:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 663,
												"initialValue": {
													"arguments": [
														{
															"id": 661,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 630,
															"src": "3488:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 657,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 628,
																"src": "3462:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 658,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3469:4:4",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "3462:11:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 660,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 659,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 632,
																"src": "3481:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "3462:25:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 662,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3462:31:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3420:73:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 665,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 628,
															"src": "3537:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 666,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 654,
															"src": "3545:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 667,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 656,
															"src": "3554:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 664,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 763,
														"src": "3510:26:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory) view returns (bytes memory)"
														}
													},
													"id": 668,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3510:55:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 636,
												"id": 669,
												"nodeType": "Return",
												"src": "3503:62:4"
											}
										]
									},
									"documentation": {
										"id": 626,
										"nodeType": "StructuredDocumentation",
										"src": "2862:313:4",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`."
									},
									"id": 671,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "3189:21:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 633,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 628,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3219:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 671,
												"src": "3211:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 627,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3211:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 630,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3240:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 671,
												"src": "3227:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 629,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3227:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 632,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3254:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 671,
												"src": "3246:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 631,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3246:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3210:50:4"
									},
									"returnParameters": {
										"id": 636,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 635,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 671,
												"src": "3279:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 634,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3279:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3278:14:4"
									},
									"scope": 804,
									"src": "3180:392:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 696,
										"nodeType": "Block",
										"src": "3811:154:4",
										"statements": [
											{
												"assignments": [
													682,
													684
												],
												"declarations": [
													{
														"constant": false,
														"id": 682,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "3827:7:4",
														"nodeType": "VariableDeclaration",
														"scope": 696,
														"src": "3822:12:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 681,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "3822:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 684,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "3849:10:4",
														"nodeType": "VariableDeclaration",
														"scope": 696,
														"src": "3836:23:4",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 683,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3836:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 689,
												"initialValue": {
													"arguments": [
														{
															"id": 687,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 676,
															"src": "3881:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 685,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 674,
															"src": "3863:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 686,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3870:10:4",
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "3863:17:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 688,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3863:23:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3821:65:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 691,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 674,
															"src": "3930:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 692,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 682,
															"src": "3938:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 693,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 684,
															"src": "3947:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 690,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 763,
														"src": "3903:26:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory) view returns (bytes memory)"
														}
													},
													"id": 694,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3903:55:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 680,
												"id": 695,
												"nodeType": "Return",
												"src": "3896:62:4"
											}
										]
									},
									"documentation": {
										"id": 672,
										"nodeType": "StructuredDocumentation",
										"src": "3578:128:4",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call."
									},
									"id": 697,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "3720:18:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 677,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 674,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3747:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 697,
												"src": "3739:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 673,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3739:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 676,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3768:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 697,
												"src": "3755:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 675,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3755:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3738:35:4"
									},
									"returnParameters": {
										"id": 680,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 679,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 697,
												"src": "3797:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 678,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3797:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3796:14:4"
									},
									"scope": 804,
									"src": "3711:254:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 722,
										"nodeType": "Block",
										"src": "4203:156:4",
										"statements": [
											{
												"assignments": [
													708,
													710
												],
												"declarations": [
													{
														"constant": false,
														"id": 708,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "4219:7:4",
														"nodeType": "VariableDeclaration",
														"scope": 722,
														"src": "4214:12:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 707,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4214:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 710,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "4241:10:4",
														"nodeType": "VariableDeclaration",
														"scope": 722,
														"src": "4228:23:4",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 709,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "4228:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 715,
												"initialValue": {
													"arguments": [
														{
															"id": 713,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 702,
															"src": "4275:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 711,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 700,
															"src": "4255:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 712,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4262:12:4",
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"src": "4255:19:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 714,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4255:25:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4213:67:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 717,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 700,
															"src": "4324:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 718,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 708,
															"src": "4332:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 719,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 710,
															"src": "4341:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 716,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 763,
														"src": "4297:26:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory) view returns (bytes memory)"
														}
													},
													"id": 720,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4297:55:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 706,
												"id": 721,
												"nodeType": "Return",
												"src": "4290:62:4"
											}
										]
									},
									"documentation": {
										"id": 698,
										"nodeType": "StructuredDocumentation",
										"src": "3971:130:4",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call."
									},
									"id": 723,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "4115:20:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 703,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 700,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4144:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 723,
												"src": "4136:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 699,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4136:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 702,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4165:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 723,
												"src": "4152:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 701,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4152:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4135:35:4"
									},
									"returnParameters": {
										"id": 706,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 705,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 723,
												"src": "4189:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 704,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4189:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4188:14:4"
									},
									"scope": 804,
									"src": "4106:253:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 762,
										"nodeType": "Block",
										"src": "4783:424:4",
										"statements": [
											{
												"condition": {
													"id": 736,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "4797:8:4",
													"subExpression": {
														"id": 735,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 728,
														"src": "4798:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 760,
													"nodeType": "Block",
													"src": "4857:344:4",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 751,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 745,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"id": 742,
																			"name": "returndata",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 730,
																			"src": "5045:10:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		"id": 743,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "5056:6:4",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "5045:17:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 744,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5066:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "5045:22:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&&",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 750,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"expression": {
																				"id": 746,
																				"name": "target",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 726,
																				"src": "5071:6:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"id": 747,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "5078:4:4",
																			"memberName": "code",
																			"nodeType": "MemberAccess",
																			"src": "5071:11:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		"id": 748,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "5083:6:4",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "5071:18:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 749,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5093:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "5071:23:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "5045:49:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 757,
															"nodeType": "IfStatement",
															"src": "5041:119:4",
															"trueBody": {
																"id": 756,
																"nodeType": "Block",
																"src": "5096:64:4",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 753,
																					"name": "target",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 726,
																					"src": "5138:6:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 752,
																				"name": "AddressEmptyCode",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 564,
																				"src": "5121:16:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																					"typeString": "function (address) pure returns (error)"
																				}
																			},
																			"id": 754,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "5121:24:4",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 755,
																		"nodeType": "RevertStatement",
																		"src": "5114:31:4"
																	}
																]
															}
														},
														{
															"expression": {
																"id": 758,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 730,
																"src": "5180:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 734,
															"id": 759,
															"nodeType": "Return",
															"src": "5173:17:4"
														}
													]
												},
												"id": 761,
												"nodeType": "IfStatement",
												"src": "4793:408:4",
												"trueBody": {
													"id": 741,
													"nodeType": "Block",
													"src": "4807:44:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 738,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 730,
																		"src": "4829:10:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 737,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 803,
																	"src": "4821:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory) pure"
																	}
																},
																"id": 739,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4821:19:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 740,
															"nodeType": "ExpressionStatement",
															"src": "4821:19:4"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 724,
										"nodeType": "StructuredDocumentation",
										"src": "4365:255:4",
										"text": " @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\n was not a contract or bubbling up the revert reason (falling back to {FailedInnerCall}) in case of an\n unsuccessful call."
									},
									"id": 763,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResultFromTarget",
									"nameLocation": "4634:26:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 731,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 726,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4678:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 763,
												"src": "4670:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 725,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4670:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 728,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "4699:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 763,
												"src": "4694:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 727,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4694:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 730,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "4729:10:4",
												"nodeType": "VariableDeclaration",
												"scope": 763,
												"src": "4716:23:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 729,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4716:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4660:85:4"
									},
									"returnParameters": {
										"id": 734,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 733,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 763,
												"src": "4769:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 732,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4769:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4768:14:4"
									},
									"scope": 804,
									"src": "4625:582:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 784,
										"nodeType": "Block",
										"src": "5509:122:4",
										"statements": [
											{
												"condition": {
													"id": 774,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "5523:8:4",
													"subExpression": {
														"id": 773,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 766,
														"src": "5524:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 782,
													"nodeType": "Block",
													"src": "5583:42:4",
													"statements": [
														{
															"expression": {
																"id": 780,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 768,
																"src": "5604:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 772,
															"id": 781,
															"nodeType": "Return",
															"src": "5597:17:4"
														}
													]
												},
												"id": 783,
												"nodeType": "IfStatement",
												"src": "5519:106:4",
												"trueBody": {
													"id": 779,
													"nodeType": "Block",
													"src": "5533:44:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 776,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 768,
																		"src": "5555:10:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 775,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 803,
																	"src": "5547:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory) pure"
																	}
																},
																"id": 777,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5547:19:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 778,
															"nodeType": "ExpressionStatement",
															"src": "5547:19:4"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 764,
										"nodeType": "StructuredDocumentation",
										"src": "5213:189:4",
										"text": " @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\n revert reason or with a default {FailedInnerCall} error."
									},
									"id": 785,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResult",
									"nameLocation": "5416:16:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 769,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 766,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "5438:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 785,
												"src": "5433:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 765,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5433:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 768,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "5460:10:4",
												"nodeType": "VariableDeclaration",
												"scope": 785,
												"src": "5447:23:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 767,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5447:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5432:39:4"
									},
									"returnParameters": {
										"id": 772,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 771,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 785,
												"src": "5495:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 770,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5495:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5494:14:4"
									},
									"scope": 804,
									"src": "5407:224:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 802,
										"nodeType": "Block",
										"src": "5798:461:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 794,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 791,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 788,
															"src": "5874:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 792,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5885:6:4",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "5874:17:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 793,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5894:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5874:21:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 800,
													"nodeType": "Block",
													"src": "6204:49:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 797,
																	"name": "FailedInnerCall",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 567,
																	"src": "6225:15:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 798,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6225:17:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 799,
															"nodeType": "RevertStatement",
															"src": "6218:24:4"
														}
													]
												},
												"id": 801,
												"nodeType": "IfStatement",
												"src": "5870:383:4",
												"trueBody": {
													"id": 796,
													"nodeType": "Block",
													"src": "5897:301:4",
													"statements": [
														{
															"AST": {
																"nativeSrc": "6055:133:4",
																"nodeType": "YulBlock",
																"src": "6055:133:4",
																"statements": [
																	{
																		"nativeSrc": "6073:40:4",
																		"nodeType": "YulVariableDeclaration",
																		"src": "6073:40:4",
																		"value": {
																			"arguments": [
																				{
																					"name": "returndata",
																					"nativeSrc": "6102:10:4",
																					"nodeType": "YulIdentifier",
																					"src": "6102:10:4"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "6096:5:4",
																				"nodeType": "YulIdentifier",
																				"src": "6096:5:4"
																			},
																			"nativeSrc": "6096:17:4",
																			"nodeType": "YulFunctionCall",
																			"src": "6096:17:4"
																		},
																		"variables": [
																			{
																				"name": "returndata_size",
																				"nativeSrc": "6077:15:4",
																				"nodeType": "YulTypedName",
																				"src": "6077:15:4",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "6141:2:4",
																							"nodeType": "YulLiteral",
																							"src": "6141:2:4",
																							"type": "",
																							"value": "32"
																						},
																						{
																							"name": "returndata",
																							"nativeSrc": "6145:10:4",
																							"nodeType": "YulIdentifier",
																							"src": "6145:10:4"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "6137:3:4",
																						"nodeType": "YulIdentifier",
																						"src": "6137:3:4"
																					},
																					"nativeSrc": "6137:19:4",
																					"nodeType": "YulFunctionCall",
																					"src": "6137:19:4"
																				},
																				{
																					"name": "returndata_size",
																					"nativeSrc": "6158:15:4",
																					"nodeType": "YulIdentifier",
																					"src": "6158:15:4"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "6130:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "6130:6:4"
																			},
																			"nativeSrc": "6130:44:4",
																			"nodeType": "YulFunctionCall",
																			"src": "6130:44:4"
																		},
																		"nativeSrc": "6130:44:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "6130:44:4"
																	}
																]
															},
															"documentation": "@solidity memory-safe-assembly",
															"evmVersion": "cancun",
															"externalReferences": [
																{
																	"declaration": 788,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "6102:10:4",
																	"valueSize": 1
																},
																{
																	"declaration": 788,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "6145:10:4",
																	"valueSize": 1
																}
															],
															"id": 795,
															"nodeType": "InlineAssembly",
															"src": "6046:142:4"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 786,
										"nodeType": "StructuredDocumentation",
										"src": "5637:101:4",
										"text": " @dev Reverts with returndata if present. Otherwise reverts with {FailedInnerCall}."
									},
									"id": 803,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_revert",
									"nameLocation": "5752:7:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 789,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 788,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "5773:10:4",
												"nodeType": "VariableDeclaration",
												"scope": 803,
												"src": "5760:23:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 787,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5760:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5759:25:4"
									},
									"returnParameters": {
										"id": 790,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5798:0:4"
									},
									"scope": 804,
									"src": "5743:516:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 805,
							"src": "195:6066:4",
							"usedErrors": [
								559,
								564,
								567
							],
							"usedEvents": []
						}
					],
					"src": "101:6161:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							834
						]
					},
					"id": 835,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 806,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:5"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 807,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:5",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 834,
							"linearizedBaseContracts": [
								834
							],
							"name": "Context",
							"nameLocation": "642:7:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 815,
										"nodeType": "Block",
										"src": "718:34:5",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 812,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 813,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:5",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 811,
												"id": 814,
												"nodeType": "Return",
												"src": "728:17:5"
											}
										]
									},
									"id": 816,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 808,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:5"
									},
									"returnParameters": {
										"id": 811,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 810,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 816,
												"src": "709:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 809,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:5"
									},
									"scope": 834,
									"src": "656:96:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 824,
										"nodeType": "Block",
										"src": "825:32:5",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 821,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 822,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:5",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 820,
												"id": 823,
												"nodeType": "Return",
												"src": "835:15:5"
											}
										]
									},
									"id": 825,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 817,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:5"
									},
									"returnParameters": {
										"id": 820,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 819,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 825,
												"src": "809:14:5",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 818,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:5"
									},
									"scope": 834,
									"src": "758:99:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 832,
										"nodeType": "Block",
										"src": "935:25:5",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 830,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:5",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 829,
												"id": 831,
												"nodeType": "Return",
												"src": "945:8:5"
											}
										]
									},
									"id": 833,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 826,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:5"
									},
									"returnParameters": {
										"id": 829,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 828,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 833,
												"src": "926:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 827,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:5"
									},
									"scope": 834,
									"src": "863:97:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 835,
							"src": "624:338:5",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts/utils/Pausable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Pausable.sol",
					"exportedSymbols": {
						"Context": [
							834
						],
						"Pausable": [
							951
						]
					},
					"id": 952,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 836,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:6"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 838,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 952,
							"sourceUnit": 835,
							"src": "128:45:6",
							"symbolAliases": [
								{
									"foreign": {
										"id": 837,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 834,
										"src": "136:7:6",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 840,
										"name": "Context",
										"nameLocations": [
											"645:7:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 834,
										"src": "645:7:6"
									},
									"id": 841,
									"nodeType": "InheritanceSpecifier",
									"src": "645:7:6"
								}
							],
							"canonicalName": "Pausable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 839,
								"nodeType": "StructuredDocumentation",
								"src": "175:439:6",
								"text": " @dev Contract module which allows children to implement an emergency stop\n mechanism that can be triggered by an authorized account.\n This module is used through inheritance. It will make available the\n modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n the functions of your contract. Note that they will not be pausable by\n simply including this module, only once the modifiers are put in place."
							},
							"fullyImplemented": true,
							"id": 951,
							"linearizedBaseContracts": [
								951,
								834
							],
							"name": "Pausable",
							"nameLocation": "633:8:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 843,
									"mutability": "mutable",
									"name": "_paused",
									"nameLocation": "672:7:6",
									"nodeType": "VariableDeclaration",
									"scope": 951,
									"src": "659:20:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 842,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "659:4:6",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 844,
										"nodeType": "StructuredDocumentation",
										"src": "686:73:6",
										"text": " @dev Emitted when the pause is triggered by `account`."
									},
									"eventSelector": "62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258",
									"id": 848,
									"name": "Paused",
									"nameLocation": "770:6:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 847,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 846,
												"indexed": false,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "785:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 848,
												"src": "777:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 845,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "777:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "776:17:6"
									},
									"src": "764:30:6"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 849,
										"nodeType": "StructuredDocumentation",
										"src": "800:70:6",
										"text": " @dev Emitted when the pause is lifted by `account`."
									},
									"eventSelector": "5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa",
									"id": 853,
									"name": "Unpaused",
									"nameLocation": "881:8:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 852,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 851,
												"indexed": false,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "898:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 853,
												"src": "890:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 850,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "890:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "889:17:6"
									},
									"src": "875:32:6"
								},
								{
									"documentation": {
										"id": 854,
										"nodeType": "StructuredDocumentation",
										"src": "913:76:6",
										"text": " @dev The operation failed because the contract is paused."
									},
									"errorSelector": "d93c0665",
									"id": 856,
									"name": "EnforcedPause",
									"nameLocation": "1000:13:6",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 855,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1013:2:6"
									},
									"src": "994:22:6"
								},
								{
									"documentation": {
										"id": 857,
										"nodeType": "StructuredDocumentation",
										"src": "1022:80:6",
										"text": " @dev The operation failed because the contract is not paused."
									},
									"errorSelector": "8dfc202b",
									"id": 859,
									"name": "ExpectedPause",
									"nameLocation": "1113:13:6",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 858,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1126:2:6"
									},
									"src": "1107:22:6"
								},
								{
									"body": {
										"id": 867,
										"nodeType": "Block",
										"src": "1221:32:6",
										"statements": [
											{
												"expression": {
													"id": 865,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 863,
														"name": "_paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 843,
														"src": "1231:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 864,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1241:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "1231:15:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 866,
												"nodeType": "ExpressionStatement",
												"src": "1231:15:6"
											}
										]
									},
									"documentation": {
										"id": 860,
										"nodeType": "StructuredDocumentation",
										"src": "1135:67:6",
										"text": " @dev Initializes the contract in unpaused state."
									},
									"id": 868,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 861,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1218:2:6"
									},
									"returnParameters": {
										"id": 862,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1221:0:6"
									},
									"scope": 951,
									"src": "1207:46:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 875,
										"nodeType": "Block",
										"src": "1464:47:6",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 871,
														"name": "_requireNotPaused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 905,
														"src": "1474:17:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 872,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1474:19:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 873,
												"nodeType": "ExpressionStatement",
												"src": "1474:19:6"
											},
											{
												"id": 874,
												"nodeType": "PlaceholderStatement",
												"src": "1503:1:6"
											}
										]
									},
									"documentation": {
										"id": 869,
										"nodeType": "StructuredDocumentation",
										"src": "1259:175:6",
										"text": " @dev Modifier to make a function callable only when the contract is not paused.\n Requirements:\n - The contract must not be paused."
									},
									"id": 876,
									"name": "whenNotPaused",
									"nameLocation": "1448:13:6",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 870,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1461:2:6"
									},
									"src": "1439:72:6",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 883,
										"nodeType": "Block",
										"src": "1711:44:6",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 879,
														"name": "_requirePaused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 918,
														"src": "1721:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 880,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1721:16:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 881,
												"nodeType": "ExpressionStatement",
												"src": "1721:16:6"
											},
											{
												"id": 882,
												"nodeType": "PlaceholderStatement",
												"src": "1747:1:6"
											}
										]
									},
									"documentation": {
										"id": 877,
										"nodeType": "StructuredDocumentation",
										"src": "1517:167:6",
										"text": " @dev Modifier to make a function callable only when the contract is paused.\n Requirements:\n - The contract must be paused."
									},
									"id": 884,
									"name": "whenPaused",
									"nameLocation": "1698:10:6",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 878,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1708:2:6"
									},
									"src": "1689:66:6",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 892,
										"nodeType": "Block",
										"src": "1903:31:6",
										"statements": [
											{
												"expression": {
													"id": 890,
													"name": "_paused",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 843,
													"src": "1920:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 889,
												"id": 891,
												"nodeType": "Return",
												"src": "1913:14:6"
											}
										]
									},
									"documentation": {
										"id": 885,
										"nodeType": "StructuredDocumentation",
										"src": "1761:84:6",
										"text": " @dev Returns true if the contract is paused, and false otherwise."
									},
									"functionSelector": "5c975abb",
									"id": 893,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "paused",
									"nameLocation": "1859:6:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 886,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1865:2:6"
									},
									"returnParameters": {
										"id": 889,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 888,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 893,
												"src": "1897:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 887,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1897:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1896:6:6"
									},
									"scope": 951,
									"src": "1850:84:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 904,
										"nodeType": "Block",
										"src": "2053:77:6",
										"statements": [
											{
												"condition": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 897,
														"name": "paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 893,
														"src": "2067:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
															"typeString": "function () view returns (bool)"
														}
													},
													"id": 898,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2067:8:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 903,
												"nodeType": "IfStatement",
												"src": "2063:61:6",
												"trueBody": {
													"id": 902,
													"nodeType": "Block",
													"src": "2077:47:6",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 899,
																	"name": "EnforcedPause",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 856,
																	"src": "2098:13:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 900,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2098:15:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 901,
															"nodeType": "RevertStatement",
															"src": "2091:22:6"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 894,
										"nodeType": "StructuredDocumentation",
										"src": "1940:57:6",
										"text": " @dev Throws if the contract is paused."
									},
									"id": 905,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_requireNotPaused",
									"nameLocation": "2011:17:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 895,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2028:2:6"
									},
									"returnParameters": {
										"id": 896,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2053:0:6"
									},
									"scope": 951,
									"src": "2002:128:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 917,
										"nodeType": "Block",
										"src": "2250:78:6",
										"statements": [
											{
												"condition": {
													"id": 911,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "2264:9:6",
													"subExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 909,
															"name": "paused",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 893,
															"src": "2265:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
																"typeString": "function () view returns (bool)"
															}
														},
														"id": 910,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2265:8:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 916,
												"nodeType": "IfStatement",
												"src": "2260:62:6",
												"trueBody": {
													"id": 915,
													"nodeType": "Block",
													"src": "2275:47:6",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 912,
																	"name": "ExpectedPause",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 859,
																	"src": "2296:13:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 913,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2296:15:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 914,
															"nodeType": "RevertStatement",
															"src": "2289:22:6"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 906,
										"nodeType": "StructuredDocumentation",
										"src": "2136:61:6",
										"text": " @dev Throws if the contract is not paused."
									},
									"id": 918,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_requirePaused",
									"nameLocation": "2211:14:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 907,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2225:2:6"
									},
									"returnParameters": {
										"id": 908,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2250:0:6"
									},
									"scope": 951,
									"src": "2202:126:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 933,
										"nodeType": "Block",
										"src": "2512:66:6",
										"statements": [
											{
												"expression": {
													"id": 926,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 924,
														"name": "_paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 843,
														"src": "2522:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 925,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2532:4:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "2522:14:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 927,
												"nodeType": "ExpressionStatement",
												"src": "2522:14:6"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 929,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 816,
																"src": "2558:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 930,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2558:12:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 928,
														"name": "Paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 848,
														"src": "2551:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 931,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2551:20:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 932,
												"nodeType": "EmitStatement",
												"src": "2546:25:6"
											}
										]
									},
									"documentation": {
										"id": 919,
										"nodeType": "StructuredDocumentation",
										"src": "2334:124:6",
										"text": " @dev Triggers stopped state.\n Requirements:\n - The contract must not be paused."
									},
									"id": 934,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 922,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 921,
												"name": "whenNotPaused",
												"nameLocations": [
													"2498:13:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 876,
												"src": "2498:13:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "2498:13:6"
										}
									],
									"name": "_pause",
									"nameLocation": "2472:6:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 920,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2478:2:6"
									},
									"returnParameters": {
										"id": 923,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2512:0:6"
									},
									"scope": 951,
									"src": "2463:115:6",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 949,
										"nodeType": "Block",
										"src": "2758:69:6",
										"statements": [
											{
												"expression": {
													"id": 942,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 940,
														"name": "_paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 843,
														"src": "2768:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 941,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2778:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "2768:15:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 943,
												"nodeType": "ExpressionStatement",
												"src": "2768:15:6"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 945,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 816,
																"src": "2807:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 946,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2807:12:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 944,
														"name": "Unpaused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 853,
														"src": "2798:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 947,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2798:22:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 948,
												"nodeType": "EmitStatement",
												"src": "2793:27:6"
											}
										]
									},
									"documentation": {
										"id": 935,
										"nodeType": "StructuredDocumentation",
										"src": "2584:121:6",
										"text": " @dev Returns to normal state.\n Requirements:\n - The contract must be paused."
									},
									"id": 950,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 938,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 937,
												"name": "whenPaused",
												"nameLocations": [
													"2747:10:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 884,
												"src": "2747:10:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "2747:10:6"
										}
									],
									"name": "_unpause",
									"nameLocation": "2719:8:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 936,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2727:2:6"
									},
									"returnParameters": {
										"id": 939,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2758:0:6"
									},
									"scope": 951,
									"src": "2710:117:6",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 952,
							"src": "615:2214:6",
							"usedErrors": [
								856,
								859
							],
							"usedEvents": [
								848,
								853
							]
						}
					],
					"src": "102:2728:6"
				},
				"id": 6
			},
			"@openzeppelin/contracts/utils/math/Math.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/math/Math.sol",
					"exportedSymbols": {
						"Math": [
							2005
						]
					},
					"id": 2006,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 953,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "103:24:7"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Math",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 954,
								"nodeType": "StructuredDocumentation",
								"src": "129:73:7",
								"text": " @dev Standard math utilities missing in the Solidity language."
							},
							"fullyImplemented": true,
							"id": 2005,
							"linearizedBaseContracts": [
								2005
							],
							"name": "Math",
							"nameLocation": "211:4:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 955,
										"nodeType": "StructuredDocumentation",
										"src": "222:50:7",
										"text": " @dev Muldiv operation overflow."
									},
									"errorSelector": "227bc153",
									"id": 957,
									"name": "MathOverflowedMulDiv",
									"nameLocation": "283:20:7",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 956,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "303:2:7"
									},
									"src": "277:29:7"
								},
								{
									"canonicalName": "Math.Rounding",
									"id": 962,
									"members": [
										{
											"id": 958,
											"name": "Floor",
											"nameLocation": "336:5:7",
											"nodeType": "EnumValue",
											"src": "336:5:7"
										},
										{
											"id": 959,
											"name": "Ceil",
											"nameLocation": "379:4:7",
											"nodeType": "EnumValue",
											"src": "379:4:7"
										},
										{
											"id": 960,
											"name": "Trunc",
											"nameLocation": "421:5:7",
											"nodeType": "EnumValue",
											"src": "421:5:7"
										},
										{
											"id": 961,
											"name": "Expand",
											"nameLocation": "451:6:7",
											"nodeType": "EnumValue",
											"src": "451:6:7"
										}
									],
									"name": "Rounding",
									"nameLocation": "317:8:7",
									"nodeType": "EnumDefinition",
									"src": "312:169:7"
								},
								{
									"body": {
										"id": 993,
										"nodeType": "Block",
										"src": "661:140:7",
										"statements": [
											{
												"id": 992,
												"nodeType": "UncheckedBlock",
												"src": "671:124:7",
												"statements": [
													{
														"assignments": [
															975
														],
														"declarations": [
															{
																"constant": false,
																"id": 975,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "703:1:7",
																"nodeType": "VariableDeclaration",
																"scope": 992,
																"src": "695:9:7",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 974,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "695:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 979,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 978,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 976,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 965,
																"src": "707:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 977,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 967,
																"src": "711:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "707:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "695:17:7"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 982,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 980,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 975,
																"src": "730:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 981,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 965,
																"src": "734:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "730:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 987,
														"nodeType": "IfStatement",
														"src": "726:28:7",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 983,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "745:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 984,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "752:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 985,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "744:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 973,
															"id": 986,
															"nodeType": "Return",
															"src": "737:17:7"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 988,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "776:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 989,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 975,
																	"src": "782:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 990,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "775:9:7",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 973,
														"id": 991,
														"nodeType": "Return",
														"src": "768:16:7"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 963,
										"nodeType": "StructuredDocumentation",
										"src": "487:93:7",
										"text": " @dev Returns the addition of two unsigned integers, with an overflow flag."
									},
									"id": 994,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryAdd",
									"nameLocation": "594:6:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 968,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 965,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "609:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 994,
												"src": "601:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 964,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "601:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 967,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "620:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 994,
												"src": "612:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 966,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "612:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "600:22:7"
									},
									"returnParameters": {
										"id": 973,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 970,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 994,
												"src": "646:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 969,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "646:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 972,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 994,
												"src": "652:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 971,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "652:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "645:15:7"
									},
									"scope": 2005,
									"src": "585:216:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1021,
										"nodeType": "Block",
										"src": "984:113:7",
										"statements": [
											{
												"id": 1020,
												"nodeType": "UncheckedBlock",
												"src": "994:97:7",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1008,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1006,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 999,
																"src": "1022:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 1007,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 997,
																"src": "1026:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1022:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1013,
														"nodeType": "IfStatement",
														"src": "1018:28:7",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1009,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1037:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1010,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1044:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1011,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1036:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1005,
															"id": 1012,
															"nodeType": "Return",
															"src": "1029:17:7"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1014,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1068:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1017,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1015,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 997,
																		"src": "1074:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 1016,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 999,
																		"src": "1078:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1074:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1018,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1067:13:7",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1005,
														"id": 1019,
														"nodeType": "Return",
														"src": "1060:20:7"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 995,
										"nodeType": "StructuredDocumentation",
										"src": "807:96:7",
										"text": " @dev Returns the subtraction of two unsigned integers, with an overflow flag."
									},
									"id": 1022,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySub",
									"nameLocation": "917:6:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1000,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 997,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "932:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1022,
												"src": "924:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 996,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "924:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 999,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "943:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1022,
												"src": "935:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 998,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "935:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "923:22:7"
									},
									"returnParameters": {
										"id": 1005,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1002,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1022,
												"src": "969:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1001,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "969:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1004,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1022,
												"src": "975:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1003,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "975:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "968:15:7"
									},
									"scope": 2005,
									"src": "908:189:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1063,
										"nodeType": "Block",
										"src": "1283:417:7",
										"statements": [
											{
												"id": 1062,
												"nodeType": "UncheckedBlock",
												"src": "1293:401:7",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1036,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1034,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1025,
																"src": "1551:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1035,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1556:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1551:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1041,
														"nodeType": "IfStatement",
														"src": "1547:28:7",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "74727565",
																		"id": 1037,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1567:4:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "true"
																	},
																	{
																		"hexValue": "30",
																		"id": 1038,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1573:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1039,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1566:9:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1033,
															"id": 1040,
															"nodeType": "Return",
															"src": "1559:16:7"
														}
													},
													{
														"assignments": [
															1043
														],
														"declarations": [
															{
																"constant": false,
																"id": 1043,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "1597:1:7",
																"nodeType": "VariableDeclaration",
																"scope": 1062,
																"src": "1589:9:7",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1042,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1589:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1047,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1046,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1044,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1025,
																"src": "1601:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 1045,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1027,
																"src": "1605:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1601:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "1589:17:7"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1052,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1050,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1048,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1043,
																	"src": "1624:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 1049,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1025,
																	"src": "1628:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1624:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 1051,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1027,
																"src": "1633:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1624:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1057,
														"nodeType": "IfStatement",
														"src": "1620:33:7",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1053,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1644:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1054,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1651:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1055,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1643:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1033,
															"id": 1056,
															"nodeType": "Return",
															"src": "1636:17:7"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1058,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1675:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 1059,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1043,
																	"src": "1681:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1060,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1674:9:7",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1033,
														"id": 1061,
														"nodeType": "Return",
														"src": "1667:16:7"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1023,
										"nodeType": "StructuredDocumentation",
										"src": "1103:99:7",
										"text": " @dev Returns the multiplication of two unsigned integers, with an overflow flag."
									},
									"id": 1064,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMul",
									"nameLocation": "1216:6:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1028,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1025,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1231:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1064,
												"src": "1223:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1024,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1223:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1027,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1242:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1064,
												"src": "1234:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1026,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1234:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1222:22:7"
									},
									"returnParameters": {
										"id": 1033,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1030,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1064,
												"src": "1268:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1029,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1268:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1032,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1064,
												"src": "1274:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1031,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1274:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1267:15:7"
									},
									"scope": 2005,
									"src": "1207:493:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1091,
										"nodeType": "Block",
										"src": "1887:114:7",
										"statements": [
											{
												"id": 1090,
												"nodeType": "UncheckedBlock",
												"src": "1897:98:7",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1078,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1076,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1069,
																"src": "1925:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1077,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1930:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1925:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1083,
														"nodeType": "IfStatement",
														"src": "1921:29:7",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1079,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1941:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1080,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1948:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1081,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1940:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1075,
															"id": 1082,
															"nodeType": "Return",
															"src": "1933:17:7"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1084,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1972:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1087,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1085,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1067,
																		"src": "1978:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 1086,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1069,
																		"src": "1982:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1978:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1088,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1971:13:7",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1075,
														"id": 1089,
														"nodeType": "Return",
														"src": "1964:20:7"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1065,
										"nodeType": "StructuredDocumentation",
										"src": "1706:100:7",
										"text": " @dev Returns the division of two unsigned integers, with a division by zero flag."
									},
									"id": 1092,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryDiv",
									"nameLocation": "1820:6:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1070,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1067,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1835:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1092,
												"src": "1827:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1066,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1827:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1069,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1846:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1092,
												"src": "1838:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1068,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1838:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1826:22:7"
									},
									"returnParameters": {
										"id": 1075,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1072,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1092,
												"src": "1872:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1071,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1872:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1074,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1092,
												"src": "1878:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1073,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1878:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1871:15:7"
									},
									"scope": 2005,
									"src": "1811:190:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1119,
										"nodeType": "Block",
										"src": "2198:114:7",
										"statements": [
											{
												"id": 1118,
												"nodeType": "UncheckedBlock",
												"src": "2208:98:7",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1106,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1104,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1097,
																"src": "2236:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1105,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2241:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2236:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1111,
														"nodeType": "IfStatement",
														"src": "2232:29:7",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1107,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2252:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1108,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2259:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1109,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2251:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1103,
															"id": 1110,
															"nodeType": "Return",
															"src": "2244:17:7"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1112,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2283:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1115,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1113,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1095,
																		"src": "2289:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "%",
																	"rightExpression": {
																		"id": 1114,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1097,
																		"src": "2293:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2289:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1116,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2282:13:7",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1103,
														"id": 1117,
														"nodeType": "Return",
														"src": "2275:20:7"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1093,
										"nodeType": "StructuredDocumentation",
										"src": "2007:110:7",
										"text": " @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag."
									},
									"id": 1120,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMod",
									"nameLocation": "2131:6:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1098,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1095,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2146:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1120,
												"src": "2138:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1094,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2138:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1097,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2157:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1120,
												"src": "2149:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1096,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2149:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2137:22:7"
									},
									"returnParameters": {
										"id": 1103,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1100,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1120,
												"src": "2183:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1099,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2183:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1102,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1120,
												"src": "2189:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1101,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2189:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2182:15:7"
									},
									"scope": 2005,
									"src": "2122:190:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1137,
										"nodeType": "Block",
										"src": "2449:37:7",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1132,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1130,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1123,
															"src": "2466:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"id": 1131,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1125,
															"src": "2470:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2466:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 1134,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1125,
														"src": "2478:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1135,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "2466:13:7",
													"trueExpression": {
														"id": 1133,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1123,
														"src": "2474:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1129,
												"id": 1136,
												"nodeType": "Return",
												"src": "2459:20:7"
											}
										]
									},
									"documentation": {
										"id": 1121,
										"nodeType": "StructuredDocumentation",
										"src": "2318:59:7",
										"text": " @dev Returns the largest of two numbers."
									},
									"id": 1138,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "max",
									"nameLocation": "2391:3:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1126,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1123,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2403:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1138,
												"src": "2395:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1122,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2395:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1125,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2414:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1138,
												"src": "2406:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1124,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2406:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2394:22:7"
									},
									"returnParameters": {
										"id": 1129,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1128,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1138,
												"src": "2440:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1127,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2440:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2439:9:7"
									},
									"scope": 2005,
									"src": "2382:104:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1155,
										"nodeType": "Block",
										"src": "2624:37:7",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1150,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1148,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1141,
															"src": "2641:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 1149,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1143,
															"src": "2645:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2641:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 1152,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1143,
														"src": "2653:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1153,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "2641:13:7",
													"trueExpression": {
														"id": 1151,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1141,
														"src": "2649:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1147,
												"id": 1154,
												"nodeType": "Return",
												"src": "2634:20:7"
											}
										]
									},
									"documentation": {
										"id": 1139,
										"nodeType": "StructuredDocumentation",
										"src": "2492:60:7",
										"text": " @dev Returns the smallest of two numbers."
									},
									"id": 1156,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "min",
									"nameLocation": "2566:3:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1144,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1141,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2578:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1156,
												"src": "2570:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1140,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1143,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2589:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1156,
												"src": "2581:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1142,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2581:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:22:7"
									},
									"returnParameters": {
										"id": 1147,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1146,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1156,
												"src": "2615:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1145,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2615:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2614:9:7"
									},
									"scope": 2005,
									"src": "2557:104:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1178,
										"nodeType": "Block",
										"src": "2845:82:7",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1176,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1168,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1166,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1159,
																	"src": "2900:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 1167,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1161,
																	"src": "2904:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2900:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1169,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "2899:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1175,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1172,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1170,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1159,
																		"src": "2910:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "^",
																	"rightExpression": {
																		"id": 1171,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1161,
																		"src": "2914:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2910:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1173,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2909:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"hexValue": "32",
															"id": 1174,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2919:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "2909:11:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2899:21:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1165,
												"id": 1177,
												"nodeType": "Return",
												"src": "2892:28:7"
											}
										]
									},
									"documentation": {
										"id": 1157,
										"nodeType": "StructuredDocumentation",
										"src": "2667:102:7",
										"text": " @dev Returns the average of two numbers. The result is rounded towards\n zero."
									},
									"id": 1179,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "average",
									"nameLocation": "2783:7:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1162,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1159,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2799:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1179,
												"src": "2791:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1158,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2791:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1161,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2810:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1179,
												"src": "2802:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1160,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2802:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2790:22:7"
									},
									"returnParameters": {
										"id": 1165,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1164,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1179,
												"src": "2836:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1163,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2836:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2835:9:7"
									},
									"scope": 2005,
									"src": "2774:153:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1212,
										"nodeType": "Block",
										"src": "3219:260:7",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1191,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1189,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1184,
														"src": "3233:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1190,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3238:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3233:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1197,
												"nodeType": "IfStatement",
												"src": "3229:127:7",
												"trueBody": {
													"id": 1196,
													"nodeType": "Block",
													"src": "3241:115:7",
													"statements": [
														{
															"expression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1194,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1192,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1182,
																	"src": "3340:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 1193,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1184,
																	"src": "3344:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3340:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 1188,
															"id": 1195,
															"nodeType": "Return",
															"src": "3333:12:7"
														}
													]
												}
											},
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1200,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1198,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1182,
															"src": "3444:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 1199,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3449:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "3444:6:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1209,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1207,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1204,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1202,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1182,
																			"src": "3458:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 1203,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3462:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "3458:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 1205,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "3457:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 1206,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1184,
																"src": "3467:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3457:11:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 1208,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3471:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "3457:15:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1210,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "3444:28:7",
													"trueExpression": {
														"hexValue": "30",
														"id": 1201,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3453:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1188,
												"id": 1211,
												"nodeType": "Return",
												"src": "3437:35:7"
											}
										]
									},
									"documentation": {
										"id": 1180,
										"nodeType": "StructuredDocumentation",
										"src": "2933:210:7",
										"text": " @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds towards infinity instead\n of rounding towards zero."
									},
									"id": 1213,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ceilDiv",
									"nameLocation": "3157:7:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1185,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1182,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3173:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1213,
												"src": "3165:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1181,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3165:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1184,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3184:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1213,
												"src": "3176:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1183,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3176:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3164:22:7"
									},
									"returnParameters": {
										"id": 1188,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1187,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1213,
												"src": "3210:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1186,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3210:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3209:9:7"
									},
									"scope": 2005,
									"src": "3148:331:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1338,
										"nodeType": "Block",
										"src": "3901:4018:7",
										"statements": [
											{
												"id": 1337,
												"nodeType": "UncheckedBlock",
												"src": "3911:4002:7",
												"statements": [
													{
														"assignments": [
															1226
														],
														"declarations": [
															{
																"constant": false,
																"id": 1226,
																"mutability": "mutable",
																"name": "prod0",
																"nameLocation": "4240:5:7",
																"nodeType": "VariableDeclaration",
																"scope": 1337,
																"src": "4232:13:7",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1225,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "4232:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1230,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1229,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1227,
																"name": "x",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1216,
																"src": "4248:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 1228,
																"name": "y",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1218,
																"src": "4252:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4248:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "4232:21:7"
													},
													{
														"assignments": [
															1232
														],
														"declarations": [
															{
																"constant": false,
																"id": 1232,
																"mutability": "mutable",
																"name": "prod1",
																"nameLocation": "4320:5:7",
																"nodeType": "VariableDeclaration",
																"scope": 1337,
																"src": "4312:13:7",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1231,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "4312:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1233,
														"nodeType": "VariableDeclarationStatement",
														"src": "4312:13:7"
													},
													{
														"AST": {
															"nativeSrc": "4392:122:7",
															"nodeType": "YulBlock",
															"src": "4392:122:7",
															"statements": [
																{
																	"nativeSrc": "4410:30:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4410:30:7",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nativeSrc": "4427:1:7",
																				"nodeType": "YulIdentifier",
																				"src": "4427:1:7"
																			},
																			{
																				"name": "y",
																				"nativeSrc": "4430:1:7",
																				"nodeType": "YulIdentifier",
																				"src": "4430:1:7"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "4437:1:7",
																						"nodeType": "YulLiteral",
																						"src": "4437:1:7",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "4433:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "4433:3:7"
																				},
																				"nativeSrc": "4433:6:7",
																				"nodeType": "YulFunctionCall",
																				"src": "4433:6:7"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nativeSrc": "4420:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "4420:6:7"
																		},
																		"nativeSrc": "4420:20:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4420:20:7"
																	},
																	"variables": [
																		{
																			"name": "mm",
																			"nativeSrc": "4414:2:7",
																			"nodeType": "YulTypedName",
																			"src": "4414:2:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4457:43:7",
																	"nodeType": "YulAssignment",
																	"src": "4457:43:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nativeSrc": "4474:2:7",
																						"nodeType": "YulIdentifier",
																						"src": "4474:2:7"
																					},
																					{
																						"name": "prod0",
																						"nativeSrc": "4478:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "4478:5:7"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "4470:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "4470:3:7"
																				},
																				"nativeSrc": "4470:14:7",
																				"nodeType": "YulFunctionCall",
																				"src": "4470:14:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nativeSrc": "4489:2:7",
																						"nodeType": "YulIdentifier",
																						"src": "4489:2:7"
																					},
																					{
																						"name": "prod0",
																						"nativeSrc": "4493:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "4493:5:7"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "4486:2:7",
																					"nodeType": "YulIdentifier",
																					"src": "4486:2:7"
																				},
																				"nativeSrc": "4486:13:7",
																				"nodeType": "YulFunctionCall",
																				"src": "4486:13:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4466:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "4466:3:7"
																		},
																		"nativeSrc": "4466:34:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4466:34:7"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nativeSrc": "4457:5:7",
																			"nodeType": "YulIdentifier",
																			"src": "4457:5:7"
																		}
																	]
																}
															]
														},
														"evmVersion": "cancun",
														"externalReferences": [
															{
																"declaration": 1226,
																"isOffset": false,
																"isSlot": false,
																"src": "4478:5:7",
																"valueSize": 1
															},
															{
																"declaration": 1226,
																"isOffset": false,
																"isSlot": false,
																"src": "4493:5:7",
																"valueSize": 1
															},
															{
																"declaration": 1232,
																"isOffset": false,
																"isSlot": false,
																"src": "4457:5:7",
																"valueSize": 1
															},
															{
																"declaration": 1216,
																"isOffset": false,
																"isSlot": false,
																"src": "4427:1:7",
																"valueSize": 1
															},
															{
																"declaration": 1218,
																"isOffset": false,
																"isSlot": false,
																"src": "4430:1:7",
																"valueSize": 1
															}
														],
														"id": 1234,
														"nodeType": "InlineAssembly",
														"src": "4383:131:7"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1237,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1235,
																"name": "prod1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1232,
																"src": "4595:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1236,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4604:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "4595:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1243,
														"nodeType": "IfStatement",
														"src": "4591:368:7",
														"trueBody": {
															"id": 1242,
															"nodeType": "Block",
															"src": "4607:352:7",
															"statements": [
																{
																	"expression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1240,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1238,
																			"name": "prod0",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1226,
																			"src": "4925:5:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "/",
																		"rightExpression": {
																			"id": 1239,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1220,
																			"src": "4933:11:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "4925:19:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"functionReturnParameters": 1224,
																	"id": 1241,
																	"nodeType": "Return",
																	"src": "4918:26:7"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1246,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1244,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1220,
																"src": "5065:11:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 1245,
																"name": "prod1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1232,
																"src": "5080:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5065:20:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1251,
														"nodeType": "IfStatement",
														"src": "5061:88:7",
														"trueBody": {
															"id": 1250,
															"nodeType": "Block",
															"src": "5087:62:7",
															"statements": [
																{
																	"errorCall": {
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 1247,
																			"name": "MathOverflowedMulDiv",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 957,
																			"src": "5112:20:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																				"typeString": "function () pure returns (error)"
																			}
																		},
																		"id": 1248,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5112:22:7",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_error",
																			"typeString": "error"
																		}
																	},
																	"id": 1249,
																	"nodeType": "RevertStatement",
																	"src": "5105:29:7"
																}
															]
														}
													},
													{
														"assignments": [
															1253
														],
														"declarations": [
															{
																"constant": false,
																"id": 1253,
																"mutability": "mutable",
																"name": "remainder",
																"nameLocation": "5412:9:7",
																"nodeType": "VariableDeclaration",
																"scope": 1337,
																"src": "5404:17:7",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1252,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "5404:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1254,
														"nodeType": "VariableDeclarationStatement",
														"src": "5404:17:7"
													},
													{
														"AST": {
															"nativeSrc": "5444:291:7",
															"nodeType": "YulBlock",
															"src": "5444:291:7",
															"statements": [
																{
																	"nativeSrc": "5513:38:7",
																	"nodeType": "YulAssignment",
																	"src": "5513:38:7",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nativeSrc": "5533:1:7",
																				"nodeType": "YulIdentifier",
																				"src": "5533:1:7"
																			},
																			{
																				"name": "y",
																				"nativeSrc": "5536:1:7",
																				"nodeType": "YulIdentifier",
																				"src": "5536:1:7"
																			},
																			{
																				"name": "denominator",
																				"nativeSrc": "5539:11:7",
																				"nodeType": "YulIdentifier",
																				"src": "5539:11:7"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nativeSrc": "5526:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "5526:6:7"
																		},
																		"nativeSrc": "5526:25:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5526:25:7"
																	},
																	"variableNames": [
																		{
																			"name": "remainder",
																			"nativeSrc": "5513:9:7",
																			"nodeType": "YulIdentifier",
																			"src": "5513:9:7"
																		}
																	]
																},
																{
																	"nativeSrc": "5633:41:7",
																	"nodeType": "YulAssignment",
																	"src": "5633:41:7",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod1",
																				"nativeSrc": "5646:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "5646:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "remainder",
																						"nativeSrc": "5656:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "5656:9:7"
																					},
																					{
																						"name": "prod0",
																						"nativeSrc": "5667:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "5667:5:7"
																					}
																				],
																				"functionName": {
																					"name": "gt",
																					"nativeSrc": "5653:2:7",
																					"nodeType": "YulIdentifier",
																					"src": "5653:2:7"
																				},
																				"nativeSrc": "5653:20:7",
																				"nodeType": "YulFunctionCall",
																				"src": "5653:20:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5642:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "5642:3:7"
																		},
																		"nativeSrc": "5642:32:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5642:32:7"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nativeSrc": "5633:5:7",
																			"nodeType": "YulIdentifier",
																			"src": "5633:5:7"
																		}
																	]
																},
																{
																	"nativeSrc": "5691:30:7",
																	"nodeType": "YulAssignment",
																	"src": "5691:30:7",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nativeSrc": "5704:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "5704:5:7"
																			},
																			{
																				"name": "remainder",
																				"nativeSrc": "5711:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "5711:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5700:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "5700:3:7"
																		},
																		"nativeSrc": "5700:21:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5700:21:7"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nativeSrc": "5691:5:7",
																			"nodeType": "YulIdentifier",
																			"src": "5691:5:7"
																		}
																	]
																}
															]
														},
														"evmVersion": "cancun",
														"externalReferences": [
															{
																"declaration": 1220,
																"isOffset": false,
																"isSlot": false,
																"src": "5539:11:7",
																"valueSize": 1
															},
															{
																"declaration": 1226,
																"isOffset": false,
																"isSlot": false,
																"src": "5667:5:7",
																"valueSize": 1
															},
															{
																"declaration": 1226,
																"isOffset": false,
																"isSlot": false,
																"src": "5691:5:7",
																"valueSize": 1
															},
															{
																"declaration": 1226,
																"isOffset": false,
																"isSlot": false,
																"src": "5704:5:7",
																"valueSize": 1
															},
															{
																"declaration": 1232,
																"isOffset": false,
																"isSlot": false,
																"src": "5633:5:7",
																"valueSize": 1
															},
															{
																"declaration": 1232,
																"isOffset": false,
																"isSlot": false,
																"src": "5646:5:7",
																"valueSize": 1
															},
															{
																"declaration": 1253,
																"isOffset": false,
																"isSlot": false,
																"src": "5513:9:7",
																"valueSize": 1
															},
															{
																"declaration": 1253,
																"isOffset": false,
																"isSlot": false,
																"src": "5656:9:7",
																"valueSize": 1
															},
															{
																"declaration": 1253,
																"isOffset": false,
																"isSlot": false,
																"src": "5711:9:7",
																"valueSize": 1
															},
															{
																"declaration": 1216,
																"isOffset": false,
																"isSlot": false,
																"src": "5533:1:7",
																"valueSize": 1
															},
															{
																"declaration": 1218,
																"isOffset": false,
																"isSlot": false,
																"src": "5536:1:7",
																"valueSize": 1
															}
														],
														"id": 1255,
														"nodeType": "InlineAssembly",
														"src": "5435:300:7"
													},
													{
														"assignments": [
															1257
														],
														"declarations": [
															{
																"constant": false,
																"id": 1257,
																"mutability": "mutable",
																"name": "twos",
																"nameLocation": "5947:4:7",
																"nodeType": "VariableDeclaration",
																"scope": 1337,
																"src": "5939:12:7",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1256,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "5939:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1264,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1263,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1258,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1220,
																"src": "5954:11:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1261,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "30",
																			"id": 1259,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "5969:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"id": 1260,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1220,
																			"src": "5973:11:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "5969:15:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 1262,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "5968:17:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5954:31:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "5939:46:7"
													},
													{
														"AST": {
															"nativeSrc": "6008:362:7",
															"nodeType": "YulBlock",
															"src": "6008:362:7",
															"statements": [
																{
																	"nativeSrc": "6073:37:7",
																	"nodeType": "YulAssignment",
																	"src": "6073:37:7",
																	"value": {
																		"arguments": [
																			{
																				"name": "denominator",
																				"nativeSrc": "6092:11:7",
																				"nodeType": "YulIdentifier",
																				"src": "6092:11:7"
																			},
																			{
																				"name": "twos",
																				"nativeSrc": "6105:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "6105:4:7"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nativeSrc": "6088:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "6088:3:7"
																		},
																		"nativeSrc": "6088:22:7",
																		"nodeType": "YulFunctionCall",
																		"src": "6088:22:7"
																	},
																	"variableNames": [
																		{
																			"name": "denominator",
																			"nativeSrc": "6073:11:7",
																			"nodeType": "YulIdentifier",
																			"src": "6073:11:7"
																		}
																	]
																},
																{
																	"nativeSrc": "6177:25:7",
																	"nodeType": "YulAssignment",
																	"src": "6177:25:7",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nativeSrc": "6190:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "6190:5:7"
																			},
																			{
																				"name": "twos",
																				"nativeSrc": "6197:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "6197:4:7"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nativeSrc": "6186:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "6186:3:7"
																		},
																		"nativeSrc": "6186:16:7",
																		"nodeType": "YulFunctionCall",
																		"src": "6186:16:7"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nativeSrc": "6177:5:7",
																			"nodeType": "YulIdentifier",
																			"src": "6177:5:7"
																		}
																	]
																},
																{
																	"nativeSrc": "6317:39:7",
																	"nodeType": "YulAssignment",
																	"src": "6317:39:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "6337:1:7",
																								"nodeType": "YulLiteral",
																								"src": "6337:1:7",
																								"type": "",
																								"value": "0"
																							},
																							{
																								"name": "twos",
																								"nativeSrc": "6340:4:7",
																								"nodeType": "YulIdentifier",
																								"src": "6340:4:7"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "6333:3:7",
																							"nodeType": "YulIdentifier",
																							"src": "6333:3:7"
																						},
																						"nativeSrc": "6333:12:7",
																						"nodeType": "YulFunctionCall",
																						"src": "6333:12:7"
																					},
																					{
																						"name": "twos",
																						"nativeSrc": "6347:4:7",
																						"nodeType": "YulIdentifier",
																						"src": "6347:4:7"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nativeSrc": "6329:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "6329:3:7"
																				},
																				"nativeSrc": "6329:23:7",
																				"nodeType": "YulFunctionCall",
																				"src": "6329:23:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6354:1:7",
																				"nodeType": "YulLiteral",
																				"src": "6354:1:7",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6325:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "6325:3:7"
																		},
																		"nativeSrc": "6325:31:7",
																		"nodeType": "YulFunctionCall",
																		"src": "6325:31:7"
																	},
																	"variableNames": [
																		{
																			"name": "twos",
																			"nativeSrc": "6317:4:7",
																			"nodeType": "YulIdentifier",
																			"src": "6317:4:7"
																		}
																	]
																}
															]
														},
														"evmVersion": "cancun",
														"externalReferences": [
															{
																"declaration": 1220,
																"isOffset": false,
																"isSlot": false,
																"src": "6073:11:7",
																"valueSize": 1
															},
															{
																"declaration": 1220,
																"isOffset": false,
																"isSlot": false,
																"src": "6092:11:7",
																"valueSize": 1
															},
															{
																"declaration": 1226,
																"isOffset": false,
																"isSlot": false,
																"src": "6177:5:7",
																"valueSize": 1
															},
															{
																"declaration": 1226,
																"isOffset": false,
																"isSlot": false,
																"src": "6190:5:7",
																"valueSize": 1
															},
															{
																"declaration": 1257,
																"isOffset": false,
																"isSlot": false,
																"src": "6105:4:7",
																"valueSize": 1
															},
															{
																"declaration": 1257,
																"isOffset": false,
																"isSlot": false,
																"src": "6197:4:7",
																"valueSize": 1
															},
															{
																"declaration": 1257,
																"isOffset": false,
																"isSlot": false,
																"src": "6317:4:7",
																"valueSize": 1
															},
															{
																"declaration": 1257,
																"isOffset": false,
																"isSlot": false,
																"src": "6340:4:7",
																"valueSize": 1
															},
															{
																"declaration": 1257,
																"isOffset": false,
																"isSlot": false,
																"src": "6347:4:7",
																"valueSize": 1
															}
														],
														"id": 1265,
														"nodeType": "InlineAssembly",
														"src": "5999:371:7"
													},
													{
														"expression": {
															"id": 1270,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1266,
																"name": "prod0",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1226,
																"src": "6436:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "|=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1269,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1267,
																	"name": "prod1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1232,
																	"src": "6445:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 1268,
																	"name": "twos",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1257,
																	"src": "6453:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6445:12:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6436:21:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1271,
														"nodeType": "ExpressionStatement",
														"src": "6436:21:7"
													},
													{
														"assignments": [
															1273
														],
														"declarations": [
															{
																"constant": false,
																"id": 1273,
																"mutability": "mutable",
																"name": "inverse",
																"nameLocation": "6783:7:7",
																"nodeType": "VariableDeclaration",
																"scope": 1337,
																"src": "6775:15:7",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1272,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "6775:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1280,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1279,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1276,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "33",
																			"id": 1274,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "6794:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_3_by_1",
																				"typeString": "int_const 3"
																			},
																			"value": "3"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"id": 1275,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1220,
																			"src": "6798:11:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6794:15:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 1277,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "6793:17:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "^",
															"rightExpression": {
																"hexValue": "32",
																"id": 1278,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6813:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "6793:21:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "6775:39:7"
													},
													{
														"expression": {
															"id": 1287,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1281,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1273,
																"src": "7031:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1286,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1282,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7042:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1285,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1283,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1220,
																		"src": "7046:11:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1284,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1273,
																		"src": "7060:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7046:21:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7042:25:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7031:36:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1288,
														"nodeType": "ExpressionStatement",
														"src": "7031:36:7"
													},
													{
														"expression": {
															"id": 1295,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1289,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1273,
																"src": "7100:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1294,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1290,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7111:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1293,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1291,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1220,
																		"src": "7115:11:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1292,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1273,
																		"src": "7129:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7115:21:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7111:25:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7100:36:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1296,
														"nodeType": "ExpressionStatement",
														"src": "7100:36:7"
													},
													{
														"expression": {
															"id": 1303,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1297,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1273,
																"src": "7170:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1302,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1298,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7181:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1301,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1299,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1220,
																		"src": "7185:11:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1300,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1273,
																		"src": "7199:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7185:21:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7181:25:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7170:36:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1304,
														"nodeType": "ExpressionStatement",
														"src": "7170:36:7"
													},
													{
														"expression": {
															"id": 1311,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1305,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1273,
																"src": "7240:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1310,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1306,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7251:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1309,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1307,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1220,
																		"src": "7255:11:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1308,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1273,
																		"src": "7269:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7255:21:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7251:25:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7240:36:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1312,
														"nodeType": "ExpressionStatement",
														"src": "7240:36:7"
													},
													{
														"expression": {
															"id": 1319,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1313,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1273,
																"src": "7310:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1318,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1314,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7321:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1317,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1315,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1220,
																		"src": "7325:11:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1316,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1273,
																		"src": "7339:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7325:21:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7321:25:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7310:36:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1320,
														"nodeType": "ExpressionStatement",
														"src": "7310:36:7"
													},
													{
														"expression": {
															"id": 1327,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1321,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1273,
																"src": "7381:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1326,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1322,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7392:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1325,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1323,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1220,
																		"src": "7396:11:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1324,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1273,
																		"src": "7410:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7396:21:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7392:25:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7381:36:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1328,
														"nodeType": "ExpressionStatement",
														"src": "7381:36:7"
													},
													{
														"expression": {
															"id": 1333,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1329,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1223,
																"src": "7851:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1332,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1330,
																	"name": "prod0",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1226,
																	"src": "7860:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 1331,
																	"name": "inverse",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1273,
																	"src": "7868:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7860:15:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7851:24:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1334,
														"nodeType": "ExpressionStatement",
														"src": "7851:24:7"
													},
													{
														"expression": {
															"id": 1335,
															"name": "result",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1223,
															"src": "7896:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1224,
														"id": 1336,
														"nodeType": "Return",
														"src": "7889:13:7"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1214,
										"nodeType": "StructuredDocumentation",
										"src": "3485:313:7",
										"text": " @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n denominator == 0.\n @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n Uniswap Labs also under MIT license."
									},
									"id": 1339,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "3812:6:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1221,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1216,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "3827:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1339,
												"src": "3819:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1215,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3819:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1218,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "3838:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1339,
												"src": "3830:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1217,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3830:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1220,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "3849:11:7",
												"nodeType": "VariableDeclaration",
												"scope": 1339,
												"src": "3841:19:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1219,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3841:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3818:43:7"
									},
									"returnParameters": {
										"id": 1224,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1223,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "3893:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1339,
												"src": "3885:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1222,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3885:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3884:16:7"
									},
									"scope": 2005,
									"src": "3803:4116:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1381,
										"nodeType": "Block",
										"src": "8161:192:7",
										"statements": [
											{
												"assignments": [
													1355
												],
												"declarations": [
													{
														"constant": false,
														"id": 1355,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "8179:6:7",
														"nodeType": "VariableDeclaration",
														"scope": 1381,
														"src": "8171:14:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1354,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8171:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1361,
												"initialValue": {
													"arguments": [
														{
															"id": 1357,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1342,
															"src": "8195:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1358,
															"name": "y",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1344,
															"src": "8198:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1359,
															"name": "denominator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1346,
															"src": "8201:11:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1356,
														"name": "mulDiv",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1339,
															1382
														],
														"referencedDeclaration": 1339,
														"src": "8188:6:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1360,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8188:25:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8171:42:7"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1372,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 1363,
																"name": "rounding",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1349,
																"src": "8244:8:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_Rounding_$962",
																	"typeString": "enum Math.Rounding"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_enum$_Rounding_$962",
																	"typeString": "enum Math.Rounding"
																}
															],
															"id": 1362,
															"name": "unsignedRoundsUp",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2004,
															"src": "8227:16:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$962_$returns$_t_bool_$",
																"typeString": "function (enum Math.Rounding) pure returns (bool)"
															}
														},
														"id": 1364,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8227:26:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1371,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 1366,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1342,
																	"src": "8264:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 1367,
																	"name": "y",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1344,
																	"src": "8267:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 1368,
																	"name": "denominator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1346,
																	"src": "8270:11:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1365,
																"name": "mulmod",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967280,
																"src": "8257:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1369,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8257:25:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 1370,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8285:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "8257:29:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "8227:59:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1378,
												"nodeType": "IfStatement",
												"src": "8223:101:7",
												"trueBody": {
													"id": 1377,
													"nodeType": "Block",
													"src": "8288:36:7",
													"statements": [
														{
															"expression": {
																"id": 1375,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1373,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1355,
																	"src": "8302:6:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"hexValue": "31",
																	"id": 1374,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8312:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "8302:11:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1376,
															"nodeType": "ExpressionStatement",
															"src": "8302:11:7"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1379,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1355,
													"src": "8340:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1353,
												"id": 1380,
												"nodeType": "Return",
												"src": "8333:13:7"
											}
										]
									},
									"documentation": {
										"id": 1340,
										"nodeType": "StructuredDocumentation",
										"src": "7925:121:7",
										"text": " @notice Calculates x * y / denominator with full precision, following the selected rounding direction."
									},
									"id": 1382,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "8060:6:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1350,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1342,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "8075:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1382,
												"src": "8067:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1341,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8067:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1344,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "8086:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1382,
												"src": "8078:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1343,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8078:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1346,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "8097:11:7",
												"nodeType": "VariableDeclaration",
												"scope": 1382,
												"src": "8089:19:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1345,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8089:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1349,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "8119:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 1382,
												"src": "8110:17:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$962",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 1348,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1347,
														"name": "Rounding",
														"nameLocations": [
															"8110:8:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 962,
														"src": "8110:8:7"
													},
													"referencedDeclaration": 962,
													"src": "8110:8:7",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$962",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8066:62:7"
									},
									"returnParameters": {
										"id": 1353,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1352,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1382,
												"src": "8152:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1351,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8152:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8151:9:7"
									},
									"scope": 2005,
									"src": "8051:302:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1493,
										"nodeType": "Block",
										"src": "8644:1585:7",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1392,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1390,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1385,
														"src": "8658:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1391,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8663:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "8658:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1396,
												"nodeType": "IfStatement",
												"src": "8654:45:7",
												"trueBody": {
													"id": 1395,
													"nodeType": "Block",
													"src": "8666:33:7",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 1393,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8687:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 1389,
															"id": 1394,
															"nodeType": "Return",
															"src": "8680:8:7"
														}
													]
												}
											},
											{
												"assignments": [
													1398
												],
												"declarations": [
													{
														"constant": false,
														"id": 1398,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "9386:6:7",
														"nodeType": "VariableDeclaration",
														"scope": 1493,
														"src": "9378:14:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1397,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9378:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1407,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1406,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "31",
														"id": 1399,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9395:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"nodeType": "BinaryOperation",
													"operator": "<<",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1404,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"id": 1401,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1385,
																			"src": "9406:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 1400,
																		"name": "log2",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [
																			1661,
																			1696
																		],
																		"referencedDeclaration": 1661,
																		"src": "9401:4:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1402,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "9401:7:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1403,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9412:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9401:12:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1405,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "9400:14:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9395:19:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9378:36:7"
											},
											{
												"id": 1492,
												"nodeType": "UncheckedBlock",
												"src": "9815:408:7",
												"statements": [
													{
														"expression": {
															"id": 1417,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1408,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1398,
																"src": "9839:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1416,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1413,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1409,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1398,
																				"src": "9849:6:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1412,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1410,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1385,
																					"src": "9858:1:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 1411,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1398,
																					"src": "9862:6:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "9858:10:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9849:19:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1414,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9848:21:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1415,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9873:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9848:26:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9839:35:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1418,
														"nodeType": "ExpressionStatement",
														"src": "9839:35:7"
													},
													{
														"expression": {
															"id": 1428,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1419,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1398,
																"src": "9888:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1427,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1424,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1420,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1398,
																				"src": "9898:6:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1423,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1421,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1385,
																					"src": "9907:1:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 1422,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1398,
																					"src": "9911:6:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "9907:10:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9898:19:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1425,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9897:21:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1426,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9922:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9897:26:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9888:35:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1429,
														"nodeType": "ExpressionStatement",
														"src": "9888:35:7"
													},
													{
														"expression": {
															"id": 1439,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1430,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1398,
																"src": "9937:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1438,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1435,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1431,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1398,
																				"src": "9947:6:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1434,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1432,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1385,
																					"src": "9956:1:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 1433,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1398,
																					"src": "9960:6:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "9956:10:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9947:19:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1436,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9946:21:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1437,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9971:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9946:26:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9937:35:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1440,
														"nodeType": "ExpressionStatement",
														"src": "9937:35:7"
													},
													{
														"expression": {
															"id": 1450,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1441,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1398,
																"src": "9986:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1449,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1446,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1442,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1398,
																				"src": "9996:6:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1445,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1443,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1385,
																					"src": "10005:1:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 1444,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1398,
																					"src": "10009:6:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10005:10:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9996:19:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1447,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9995:21:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1448,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10020:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9995:26:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9986:35:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1451,
														"nodeType": "ExpressionStatement",
														"src": "9986:35:7"
													},
													{
														"expression": {
															"id": 1461,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1452,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1398,
																"src": "10035:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1460,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1457,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1453,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1398,
																				"src": "10045:6:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1456,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1454,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1385,
																					"src": "10054:1:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 1455,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1398,
																					"src": "10058:6:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10054:10:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "10045:19:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1458,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "10044:21:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1459,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10069:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10044:26:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10035:35:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1462,
														"nodeType": "ExpressionStatement",
														"src": "10035:35:7"
													},
													{
														"expression": {
															"id": 1472,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1463,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1398,
																"src": "10084:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1471,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1468,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1464,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1398,
																				"src": "10094:6:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1467,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1465,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1385,
																					"src": "10103:1:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 1466,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1398,
																					"src": "10107:6:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10103:10:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "10094:19:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1469,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "10093:21:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1470,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10118:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10093:26:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10084:35:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1473,
														"nodeType": "ExpressionStatement",
														"src": "10084:35:7"
													},
													{
														"expression": {
															"id": 1483,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1474,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1398,
																"src": "10133:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1482,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1479,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1475,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1398,
																				"src": "10143:6:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1478,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1476,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1385,
																					"src": "10152:1:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 1477,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1398,
																					"src": "10156:6:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10152:10:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "10143:19:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1480,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "10142:21:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1481,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10167:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10142:26:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10133:35:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1484,
														"nodeType": "ExpressionStatement",
														"src": "10133:35:7"
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 1486,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1398,
																	"src": "10193:6:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1489,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1487,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1385,
																		"src": "10201:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 1488,
																		"name": "result",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1398,
																		"src": "10205:6:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "10201:10:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1485,
																"name": "min",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1156,
																"src": "10189:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1490,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10189:23:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1389,
														"id": 1491,
														"nodeType": "Return",
														"src": "10182:30:7"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1383,
										"nodeType": "StructuredDocumentation",
										"src": "8359:223:7",
										"text": " @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n towards zero.\n Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11)."
									},
									"id": 1494,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "8596:4:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1386,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1385,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "8609:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1494,
												"src": "8601:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1384,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8601:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8600:11:7"
									},
									"returnParameters": {
										"id": 1389,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1388,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1494,
												"src": "8635:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1387,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8635:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8634:9:7"
									},
									"scope": 2005,
									"src": "8587:1642:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1528,
										"nodeType": "Block",
										"src": "10405:164:7",
										"statements": [
											{
												"id": 1527,
												"nodeType": "UncheckedBlock",
												"src": "10415:148:7",
												"statements": [
													{
														"assignments": [
															1506
														],
														"declarations": [
															{
																"constant": false,
																"id": 1506,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "10447:6:7",
																"nodeType": "VariableDeclaration",
																"scope": 1527,
																"src": "10439:14:7",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1505,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "10439:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1510,
														"initialValue": {
															"arguments": [
																{
																	"id": 1508,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1497,
																	"src": "10461:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1507,
																"name": "sqrt",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	1494,
																	1529
																],
																"referencedDeclaration": 1494,
																"src": "10456:4:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 1509,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10456:7:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "10439:24:7"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1525,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1511,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1506,
																"src": "10484:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 1520,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 1513,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1500,
																						"src": "10511:8:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$962",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$962",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 1512,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2004,
																					"src": "10494:16:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$962_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 1514,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "10494:26:7",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1519,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1517,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 1515,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1506,
																						"src": "10524:6:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "*",
																					"rightExpression": {
																						"id": 1516,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1506,
																						"src": "10533:6:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "10524:15:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 1518,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1497,
																					"src": "10542:1:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10524:19:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "10494:49:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 1522,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10550:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 1523,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "10494:57:7",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 1521,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10546:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 1524,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "10493:59:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "10484:68:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1504,
														"id": 1526,
														"nodeType": "Return",
														"src": "10477:75:7"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1495,
										"nodeType": "StructuredDocumentation",
										"src": "10235:89:7",
										"text": " @notice Calculates sqrt(a), following the selected rounding direction."
									},
									"id": 1529,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "10338:4:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1501,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1497,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "10351:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1529,
												"src": "10343:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1496,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10343:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1500,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "10363:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 1529,
												"src": "10354:17:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$962",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 1499,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1498,
														"name": "Rounding",
														"nameLocations": [
															"10354:8:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 962,
														"src": "10354:8:7"
													},
													"referencedDeclaration": 962,
													"src": "10354:8:7",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$962",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10342:30:7"
									},
									"returnParameters": {
										"id": 1504,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1503,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1529,
												"src": "10396:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1502,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10396:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10395:9:7"
									},
									"scope": 2005,
									"src": "10329:240:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1660,
										"nodeType": "Block",
										"src": "10760:922:7",
										"statements": [
											{
												"assignments": [
													1538
												],
												"declarations": [
													{
														"constant": false,
														"id": 1538,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "10778:6:7",
														"nodeType": "VariableDeclaration",
														"scope": 1660,
														"src": "10770:14:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1537,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10770:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1540,
												"initialValue": {
													"hexValue": "30",
													"id": 1539,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "10787:1:7",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10770:18:7"
											},
											{
												"id": 1657,
												"nodeType": "UncheckedBlock",
												"src": "10798:855:7",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1545,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1543,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1541,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1532,
																	"src": "10826:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "313238",
																	"id": 1542,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10835:3:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "10826:12:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1544,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10841:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "10826:16:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1555,
														"nodeType": "IfStatement",
														"src": "10822:99:7",
														"trueBody": {
															"id": 1554,
															"nodeType": "Block",
															"src": "10844:77:7",
															"statements": [
																{
																	"expression": {
																		"id": 1548,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1546,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1532,
																			"src": "10862:5:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 1547,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10872:3:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "10862:13:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1549,
																	"nodeType": "ExpressionStatement",
																	"src": "10862:13:7"
																},
																{
																	"expression": {
																		"id": 1552,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1550,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1538,
																			"src": "10893:6:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 1551,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10903:3:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "10893:13:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1553,
																	"nodeType": "ExpressionStatement",
																	"src": "10893:13:7"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1560,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1558,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1556,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1532,
																	"src": "10938:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 1557,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10947:2:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "10938:11:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1559,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10952:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "10938:15:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1570,
														"nodeType": "IfStatement",
														"src": "10934:96:7",
														"trueBody": {
															"id": 1569,
															"nodeType": "Block",
															"src": "10955:75:7",
															"statements": [
																{
																	"expression": {
																		"id": 1563,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1561,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1532,
																			"src": "10973:5:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 1562,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10983:2:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "10973:12:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1564,
																	"nodeType": "ExpressionStatement",
																	"src": "10973:12:7"
																},
																{
																	"expression": {
																		"id": 1567,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1565,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1538,
																			"src": "11003:6:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 1566,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11013:2:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "11003:12:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1568,
																	"nodeType": "ExpressionStatement",
																	"src": "11003:12:7"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1575,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1573,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1571,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1532,
																	"src": "11047:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 1572,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11056:2:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "11047:11:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1574,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11061:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11047:15:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1585,
														"nodeType": "IfStatement",
														"src": "11043:96:7",
														"trueBody": {
															"id": 1584,
															"nodeType": "Block",
															"src": "11064:75:7",
															"statements": [
																{
																	"expression": {
																		"id": 1578,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1576,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1532,
																			"src": "11082:5:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 1577,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11092:2:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "11082:12:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1579,
																	"nodeType": "ExpressionStatement",
																	"src": "11082:12:7"
																},
																{
																	"expression": {
																		"id": 1582,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1580,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1538,
																			"src": "11112:6:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 1581,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11122:2:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "11112:12:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1583,
																	"nodeType": "ExpressionStatement",
																	"src": "11112:12:7"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1590,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1588,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1586,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1532,
																	"src": "11156:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 1587,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11165:2:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "11156:11:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1589,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11170:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11156:15:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1600,
														"nodeType": "IfStatement",
														"src": "11152:96:7",
														"trueBody": {
															"id": 1599,
															"nodeType": "Block",
															"src": "11173:75:7",
															"statements": [
																{
																	"expression": {
																		"id": 1593,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1591,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1532,
																			"src": "11191:5:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 1592,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11201:2:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "11191:12:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1594,
																	"nodeType": "ExpressionStatement",
																	"src": "11191:12:7"
																},
																{
																	"expression": {
																		"id": 1597,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1595,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1538,
																			"src": "11221:6:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 1596,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11231:2:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "11221:12:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1598,
																	"nodeType": "ExpressionStatement",
																	"src": "11221:12:7"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1605,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1603,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1601,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1532,
																	"src": "11265:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 1602,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11274:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "11265:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1604,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11278:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11265:14:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1615,
														"nodeType": "IfStatement",
														"src": "11261:93:7",
														"trueBody": {
															"id": 1614,
															"nodeType": "Block",
															"src": "11281:73:7",
															"statements": [
																{
																	"expression": {
																		"id": 1608,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1606,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1532,
																			"src": "11299:5:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 1607,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11309:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "11299:11:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1609,
																	"nodeType": "ExpressionStatement",
																	"src": "11299:11:7"
																},
																{
																	"expression": {
																		"id": 1612,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1610,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1538,
																			"src": "11328:6:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 1611,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11338:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "11328:11:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1613,
																	"nodeType": "ExpressionStatement",
																	"src": "11328:11:7"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1620,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1618,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1616,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1532,
																	"src": "11371:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 1617,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11380:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "11371:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1619,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11384:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11371:14:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1630,
														"nodeType": "IfStatement",
														"src": "11367:93:7",
														"trueBody": {
															"id": 1629,
															"nodeType": "Block",
															"src": "11387:73:7",
															"statements": [
																{
																	"expression": {
																		"id": 1623,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1621,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1532,
																			"src": "11405:5:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 1622,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11415:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "11405:11:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1624,
																	"nodeType": "ExpressionStatement",
																	"src": "11405:11:7"
																},
																{
																	"expression": {
																		"id": 1627,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1625,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1538,
																			"src": "11434:6:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 1626,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11444:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "11434:11:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1628,
																	"nodeType": "ExpressionStatement",
																	"src": "11434:11:7"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1635,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1633,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1631,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1532,
																	"src": "11477:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 1632,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11486:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "11477:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1634,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11490:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11477:14:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1645,
														"nodeType": "IfStatement",
														"src": "11473:93:7",
														"trueBody": {
															"id": 1644,
															"nodeType": "Block",
															"src": "11493:73:7",
															"statements": [
																{
																	"expression": {
																		"id": 1638,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1636,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1532,
																			"src": "11511:5:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 1637,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11521:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "11511:11:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1639,
																	"nodeType": "ExpressionStatement",
																	"src": "11511:11:7"
																},
																{
																	"expression": {
																		"id": 1642,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1640,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1538,
																			"src": "11540:6:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 1641,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11550:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "11540:11:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1643,
																	"nodeType": "ExpressionStatement",
																	"src": "11540:11:7"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1650,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1648,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1646,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1532,
																	"src": "11583:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1647,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11592:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "11583:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1649,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11596:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11583:14:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1656,
														"nodeType": "IfStatement",
														"src": "11579:64:7",
														"trueBody": {
															"id": 1655,
															"nodeType": "Block",
															"src": "11599:44:7",
															"statements": [
																{
																	"expression": {
																		"id": 1653,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1651,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1538,
																			"src": "11617:6:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 1652,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11627:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "11617:11:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1654,
																	"nodeType": "ExpressionStatement",
																	"src": "11617:11:7"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 1658,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1538,
													"src": "11669:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1536,
												"id": 1659,
												"nodeType": "Return",
												"src": "11662:13:7"
											}
										]
									},
									"documentation": {
										"id": 1530,
										"nodeType": "StructuredDocumentation",
										"src": "10575:119:7",
										"text": " @dev Return the log in base 2 of a positive value rounded towards zero.\n Returns 0 if given 0."
									},
									"id": 1661,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log2",
									"nameLocation": "10708:4:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1533,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1532,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10721:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1661,
												"src": "10713:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1531,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10713:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10712:15:7"
									},
									"returnParameters": {
										"id": 1536,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1535,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1661,
												"src": "10751:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1534,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10751:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10750:9:7"
									},
									"scope": 2005,
									"src": "10699:983:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1695,
										"nodeType": "Block",
										"src": "11915:168:7",
										"statements": [
											{
												"id": 1694,
												"nodeType": "UncheckedBlock",
												"src": "11925:152:7",
												"statements": [
													{
														"assignments": [
															1673
														],
														"declarations": [
															{
																"constant": false,
																"id": 1673,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "11957:6:7",
																"nodeType": "VariableDeclaration",
																"scope": 1694,
																"src": "11949:14:7",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1672,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "11949:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1677,
														"initialValue": {
															"arguments": [
																{
																	"id": 1675,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1664,
																	"src": "11971:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1674,
																"name": "log2",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	1661,
																	1696
																],
																"referencedDeclaration": 1661,
																"src": "11966:4:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 1676,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11966:11:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "11949:28:7"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1692,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1678,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1673,
																"src": "11998:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 1687,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 1680,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1667,
																						"src": "12025:8:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$962",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$962",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 1679,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2004,
																					"src": "12008:16:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$962_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 1681,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "12008:26:7",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1686,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1684,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "31",
																						"id": 1682,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "12038:1:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<<",
																					"rightExpression": {
																						"id": 1683,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1673,
																						"src": "12043:6:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "12038:11:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 1685,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1664,
																					"src": "12052:5:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "12038:19:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "12008:49:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 1689,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12064:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 1690,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "12008:57:7",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 1688,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12060:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 1691,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "12007:59:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "11998:68:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1671,
														"id": 1693,
														"nodeType": "Return",
														"src": "11991:75:7"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1662,
										"nodeType": "StructuredDocumentation",
										"src": "11688:142:7",
										"text": " @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 1696,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log2",
									"nameLocation": "11844:4:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1668,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1664,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "11857:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1696,
												"src": "11849:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1663,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11849:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1667,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "11873:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 1696,
												"src": "11864:17:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$962",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 1666,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1665,
														"name": "Rounding",
														"nameLocations": [
															"11864:8:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 962,
														"src": "11864:8:7"
													},
													"referencedDeclaration": 962,
													"src": "11864:8:7",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$962",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11848:34:7"
									},
									"returnParameters": {
										"id": 1671,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1670,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1696,
												"src": "11906:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1669,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11906:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11905:9:7"
									},
									"scope": 2005,
									"src": "11835:248:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1824,
										"nodeType": "Block",
										"src": "12276:854:7",
										"statements": [
											{
												"assignments": [
													1705
												],
												"declarations": [
													{
														"constant": false,
														"id": 1705,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "12294:6:7",
														"nodeType": "VariableDeclaration",
														"scope": 1824,
														"src": "12286:14:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1704,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "12286:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1707,
												"initialValue": {
													"hexValue": "30",
													"id": 1706,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "12303:1:7",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12286:18:7"
											},
											{
												"id": 1821,
												"nodeType": "UncheckedBlock",
												"src": "12314:787:7",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1712,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1708,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1699,
																"src": "12342:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(57 digits omitted)...0000"
																},
																"id": 1711,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1709,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12351:2:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 1710,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12357:2:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "12351:8:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(57 digits omitted)...0000"
																}
															},
															"src": "12342:17:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1724,
														"nodeType": "IfStatement",
														"src": "12338:103:7",
														"trueBody": {
															"id": 1723,
															"nodeType": "Block",
															"src": "12361:80:7",
															"statements": [
																{
																	"expression": {
																		"id": 1717,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1713,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1699,
																			"src": "12379:5:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(57 digits omitted)...0000"
																			},
																			"id": 1716,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 1714,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12388:2:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3634",
																				"id": 1715,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12394:2:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_64_by_1",
																					"typeString": "int_const 64"
																				},
																				"value": "64"
																			},
																			"src": "12388:8:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(57 digits omitted)...0000"
																			}
																		},
																		"src": "12379:17:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1718,
																	"nodeType": "ExpressionStatement",
																	"src": "12379:17:7"
																},
																{
																	"expression": {
																		"id": 1721,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1719,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1705,
																			"src": "12414:6:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 1720,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12424:2:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "12414:12:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1722,
																	"nodeType": "ExpressionStatement",
																	"src": "12414:12:7"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1729,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1725,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1699,
																"src": "12458:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(25 digits omitted)...0000"
																},
																"id": 1728,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1726,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12467:2:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 1727,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12473:2:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "12467:8:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(25 digits omitted)...0000"
																}
															},
															"src": "12458:17:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1741,
														"nodeType": "IfStatement",
														"src": "12454:103:7",
														"trueBody": {
															"id": 1740,
															"nodeType": "Block",
															"src": "12477:80:7",
															"statements": [
																{
																	"expression": {
																		"id": 1734,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1730,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1699,
																			"src": "12495:5:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(25 digits omitted)...0000"
																			},
																			"id": 1733,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 1731,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12504:2:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3332",
																				"id": 1732,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12510:2:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_32_by_1",
																					"typeString": "int_const 32"
																				},
																				"value": "32"
																			},
																			"src": "12504:8:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(25 digits omitted)...0000"
																			}
																		},
																		"src": "12495:17:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1735,
																	"nodeType": "ExpressionStatement",
																	"src": "12495:17:7"
																},
																{
																	"expression": {
																		"id": 1738,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1736,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1705,
																			"src": "12530:6:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 1737,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12540:2:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "12530:12:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1739,
																	"nodeType": "ExpressionStatement",
																	"src": "12530:12:7"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1746,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1742,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1699,
																"src": "12574:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000000000_by_1",
																	"typeString": "int_const 10000000000000000"
																},
																"id": 1745,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1743,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12583:2:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 1744,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12589:2:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "12583:8:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000_by_1",
																	"typeString": "int_const 10000000000000000"
																}
															},
															"src": "12574:17:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1758,
														"nodeType": "IfStatement",
														"src": "12570:103:7",
														"trueBody": {
															"id": 1757,
															"nodeType": "Block",
															"src": "12593:80:7",
															"statements": [
																{
																	"expression": {
																		"id": 1751,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1747,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1699,
																			"src": "12611:5:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000000000000000_by_1",
																				"typeString": "int_const 10000000000000000"
																			},
																			"id": 1750,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 1748,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12620:2:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3136",
																				"id": 1749,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12626:2:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_16_by_1",
																					"typeString": "int_const 16"
																				},
																				"value": "16"
																			},
																			"src": "12620:8:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000000000000000_by_1",
																				"typeString": "int_const 10000000000000000"
																			}
																		},
																		"src": "12611:17:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1752,
																	"nodeType": "ExpressionStatement",
																	"src": "12611:17:7"
																},
																{
																	"expression": {
																		"id": 1755,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1753,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1705,
																			"src": "12646:6:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 1754,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12656:2:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "12646:12:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1756,
																	"nodeType": "ExpressionStatement",
																	"src": "12646:12:7"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1763,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1759,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1699,
																"src": "12690:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																},
																"id": 1762,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1760,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12699:2:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 1761,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12705:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "12699:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																}
															},
															"src": "12690:16:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1775,
														"nodeType": "IfStatement",
														"src": "12686:100:7",
														"trueBody": {
															"id": 1774,
															"nodeType": "Block",
															"src": "12708:78:7",
															"statements": [
																{
																	"expression": {
																		"id": 1768,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1764,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1699,
																			"src": "12726:5:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			},
																			"id": 1767,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 1765,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12735:2:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "38",
																				"id": 1766,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12741:1:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_8_by_1",
																					"typeString": "int_const 8"
																				},
																				"value": "8"
																			},
																			"src": "12735:7:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			}
																		},
																		"src": "12726:16:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1769,
																	"nodeType": "ExpressionStatement",
																	"src": "12726:16:7"
																},
																{
																	"expression": {
																		"id": 1772,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1770,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1705,
																			"src": "12760:6:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 1771,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12770:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "12760:11:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1773,
																	"nodeType": "ExpressionStatement",
																	"src": "12760:11:7"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1780,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1776,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1699,
																"src": "12803:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																},
																"id": 1779,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1777,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12812:2:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 1778,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12818:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "12812:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																}
															},
															"src": "12803:16:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1792,
														"nodeType": "IfStatement",
														"src": "12799:100:7",
														"trueBody": {
															"id": 1791,
															"nodeType": "Block",
															"src": "12821:78:7",
															"statements": [
																{
																	"expression": {
																		"id": 1785,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1781,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1699,
																			"src": "12839:5:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			},
																			"id": 1784,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 1782,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12848:2:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "34",
																				"id": 1783,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12854:1:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_4_by_1",
																					"typeString": "int_const 4"
																				},
																				"value": "4"
																			},
																			"src": "12848:7:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			}
																		},
																		"src": "12839:16:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1786,
																	"nodeType": "ExpressionStatement",
																	"src": "12839:16:7"
																},
																{
																	"expression": {
																		"id": 1789,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1787,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1705,
																			"src": "12873:6:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 1788,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12883:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "12873:11:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1790,
																	"nodeType": "ExpressionStatement",
																	"src": "12873:11:7"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1797,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1793,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1699,
																"src": "12916:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																},
																"id": 1796,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1794,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12925:2:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 1795,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12931:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "12925:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																}
															},
															"src": "12916:16:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1809,
														"nodeType": "IfStatement",
														"src": "12912:100:7",
														"trueBody": {
															"id": 1808,
															"nodeType": "Block",
															"src": "12934:78:7",
															"statements": [
																{
																	"expression": {
																		"id": 1802,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1798,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1699,
																			"src": "12952:5:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			},
																			"id": 1801,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 1799,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12961:2:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "32",
																				"id": 1800,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12967:1:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_2_by_1",
																					"typeString": "int_const 2"
																				},
																				"value": "2"
																			},
																			"src": "12961:7:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			}
																		},
																		"src": "12952:16:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1803,
																	"nodeType": "ExpressionStatement",
																	"src": "12952:16:7"
																},
																{
																	"expression": {
																		"id": 1806,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1804,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1705,
																			"src": "12986:6:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 1805,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12996:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "12986:11:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1807,
																	"nodeType": "ExpressionStatement",
																	"src": "12986:11:7"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1814,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1810,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1699,
																"src": "13029:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																},
																"id": 1813,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1811,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13038:2:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1812,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13044:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "13038:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																}
															},
															"src": "13029:16:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1820,
														"nodeType": "IfStatement",
														"src": "13025:66:7",
														"trueBody": {
															"id": 1819,
															"nodeType": "Block",
															"src": "13047:44:7",
															"statements": [
																{
																	"expression": {
																		"id": 1817,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1815,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1705,
																			"src": "13065:6:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 1816,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13075:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "13065:11:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1818,
																	"nodeType": "ExpressionStatement",
																	"src": "13065:11:7"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 1822,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1705,
													"src": "13117:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1703,
												"id": 1823,
												"nodeType": "Return",
												"src": "13110:13:7"
											}
										]
									},
									"documentation": {
										"id": 1697,
										"nodeType": "StructuredDocumentation",
										"src": "12089:120:7",
										"text": " @dev Return the log in base 10 of a positive value rounded towards zero.\n Returns 0 if given 0."
									},
									"id": 1825,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log10",
									"nameLocation": "12223:5:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1700,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1699,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "12237:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1825,
												"src": "12229:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1698,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12229:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12228:15:7"
									},
									"returnParameters": {
										"id": 1703,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1702,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1825,
												"src": "12267:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1701,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12267:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12266:9:7"
									},
									"scope": 2005,
									"src": "12214:916:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1859,
										"nodeType": "Block",
										"src": "13365:170:7",
										"statements": [
											{
												"id": 1858,
												"nodeType": "UncheckedBlock",
												"src": "13375:154:7",
												"statements": [
													{
														"assignments": [
															1837
														],
														"declarations": [
															{
																"constant": false,
																"id": 1837,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "13407:6:7",
																"nodeType": "VariableDeclaration",
																"scope": 1858,
																"src": "13399:14:7",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1836,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "13399:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1841,
														"initialValue": {
															"arguments": [
																{
																	"id": 1839,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1828,
																	"src": "13422:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1838,
																"name": "log10",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	1825,
																	1860
																],
																"referencedDeclaration": 1825,
																"src": "13416:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 1840,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13416:12:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "13399:29:7"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1856,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1842,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1837,
																"src": "13449:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 1851,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 1844,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1831,
																						"src": "13476:8:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$962",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$962",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 1843,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2004,
																					"src": "13459:16:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$962_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 1845,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "13459:26:7",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1850,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1848,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "3130",
																						"id": 1846,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "13489:2:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_10_by_1",
																							"typeString": "int_const 10"
																						},
																						"value": "10"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "**",
																					"rightExpression": {
																						"id": 1847,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1837,
																						"src": "13495:6:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "13489:12:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 1849,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1828,
																					"src": "13504:5:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "13489:20:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "13459:50:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 1853,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13516:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 1854,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "13459:58:7",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 1852,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13512:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 1855,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "13458:60:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "13449:69:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1835,
														"id": 1857,
														"nodeType": "Return",
														"src": "13442:76:7"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1826,
										"nodeType": "StructuredDocumentation",
										"src": "13136:143:7",
										"text": " @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 1860,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log10",
									"nameLocation": "13293:5:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1832,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1828,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "13307:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1860,
												"src": "13299:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1827,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13299:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1831,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "13323:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 1860,
												"src": "13314:17:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$962",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 1830,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1829,
														"name": "Rounding",
														"nameLocations": [
															"13314:8:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 962,
														"src": "13314:8:7"
													},
													"referencedDeclaration": 962,
													"src": "13314:8:7",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$962",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13298:34:7"
									},
									"returnParameters": {
										"id": 1835,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1834,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1860,
												"src": "13356:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1833,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13356:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13355:9:7"
									},
									"scope": 2005,
									"src": "13284:251:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1946,
										"nodeType": "Block",
										"src": "13855:600:7",
										"statements": [
											{
												"assignments": [
													1869
												],
												"declarations": [
													{
														"constant": false,
														"id": 1869,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "13873:6:7",
														"nodeType": "VariableDeclaration",
														"scope": 1946,
														"src": "13865:14:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1868,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "13865:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1871,
												"initialValue": {
													"hexValue": "30",
													"id": 1870,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "13882:1:7",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "13865:18:7"
											},
											{
												"id": 1943,
												"nodeType": "UncheckedBlock",
												"src": "13893:533:7",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1876,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1874,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1872,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1863,
																	"src": "13921:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "313238",
																	"id": 1873,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13930:3:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "13921:12:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1875,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "13936:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "13921:16:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1886,
														"nodeType": "IfStatement",
														"src": "13917:98:7",
														"trueBody": {
															"id": 1885,
															"nodeType": "Block",
															"src": "13939:76:7",
															"statements": [
																{
																	"expression": {
																		"id": 1879,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1877,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1863,
																			"src": "13957:5:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 1878,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13967:3:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "13957:13:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1880,
																	"nodeType": "ExpressionStatement",
																	"src": "13957:13:7"
																},
																{
																	"expression": {
																		"id": 1883,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1881,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1869,
																			"src": "13988:6:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 1882,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13998:2:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "13988:12:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1884,
																	"nodeType": "ExpressionStatement",
																	"src": "13988:12:7"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1891,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1889,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1887,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1863,
																	"src": "14032:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 1888,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14041:2:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "14032:11:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1890,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14046:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14032:15:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1901,
														"nodeType": "IfStatement",
														"src": "14028:95:7",
														"trueBody": {
															"id": 1900,
															"nodeType": "Block",
															"src": "14049:74:7",
															"statements": [
																{
																	"expression": {
																		"id": 1894,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1892,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1863,
																			"src": "14067:5:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 1893,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14077:2:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "14067:12:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1895,
																	"nodeType": "ExpressionStatement",
																	"src": "14067:12:7"
																},
																{
																	"expression": {
																		"id": 1898,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1896,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1869,
																			"src": "14097:6:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 1897,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14107:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "14097:11:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1899,
																	"nodeType": "ExpressionStatement",
																	"src": "14097:11:7"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1906,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1904,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1902,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1863,
																	"src": "14140:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 1903,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14149:2:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "14140:11:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1905,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14154:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14140:15:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1916,
														"nodeType": "IfStatement",
														"src": "14136:95:7",
														"trueBody": {
															"id": 1915,
															"nodeType": "Block",
															"src": "14157:74:7",
															"statements": [
																{
																	"expression": {
																		"id": 1909,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1907,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1863,
																			"src": "14175:5:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 1908,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14185:2:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "14175:12:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1910,
																	"nodeType": "ExpressionStatement",
																	"src": "14175:12:7"
																},
																{
																	"expression": {
																		"id": 1913,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1911,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1869,
																			"src": "14205:6:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 1912,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14215:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "14205:11:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1914,
																	"nodeType": "ExpressionStatement",
																	"src": "14205:11:7"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1921,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1919,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1917,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1863,
																	"src": "14248:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 1918,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14257:2:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "14248:11:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1920,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14262:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14248:15:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1931,
														"nodeType": "IfStatement",
														"src": "14244:95:7",
														"trueBody": {
															"id": 1930,
															"nodeType": "Block",
															"src": "14265:74:7",
															"statements": [
																{
																	"expression": {
																		"id": 1924,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1922,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1863,
																			"src": "14283:5:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 1923,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14293:2:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "14283:12:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1925,
																	"nodeType": "ExpressionStatement",
																	"src": "14283:12:7"
																},
																{
																	"expression": {
																		"id": 1928,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1926,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1869,
																			"src": "14313:6:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 1927,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14323:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "14313:11:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1929,
																	"nodeType": "ExpressionStatement",
																	"src": "14313:11:7"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1936,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1934,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1932,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1863,
																	"src": "14356:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 1933,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14365:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "14356:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1935,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14369:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14356:14:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1942,
														"nodeType": "IfStatement",
														"src": "14352:64:7",
														"trueBody": {
															"id": 1941,
															"nodeType": "Block",
															"src": "14372:44:7",
															"statements": [
																{
																	"expression": {
																		"id": 1939,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1937,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1869,
																			"src": "14390:6:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 1938,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14400:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "14390:11:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1940,
																	"nodeType": "ExpressionStatement",
																	"src": "14390:11:7"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 1944,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1869,
													"src": "14442:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1867,
												"id": 1945,
												"nodeType": "Return",
												"src": "14435:13:7"
											}
										]
									},
									"documentation": {
										"id": 1861,
										"nodeType": "StructuredDocumentation",
										"src": "13541:246:7",
										"text": " @dev Return the log in base 256 of a positive value rounded towards zero.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."
									},
									"id": 1947,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log256",
									"nameLocation": "13801:6:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1864,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1863,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "13816:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1947,
												"src": "13808:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1862,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13808:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13807:15:7"
									},
									"returnParameters": {
										"id": 1867,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1866,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1947,
												"src": "13846:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1865,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13846:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13845:9:7"
									},
									"scope": 2005,
									"src": "13792:663:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1984,
										"nodeType": "Block",
										"src": "14692:177:7",
										"statements": [
											{
												"id": 1983,
												"nodeType": "UncheckedBlock",
												"src": "14702:161:7",
												"statements": [
													{
														"assignments": [
															1959
														],
														"declarations": [
															{
																"constant": false,
																"id": 1959,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "14734:6:7",
																"nodeType": "VariableDeclaration",
																"scope": 1983,
																"src": "14726:14:7",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1958,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "14726:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1963,
														"initialValue": {
															"arguments": [
																{
																	"id": 1961,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1950,
																	"src": "14750:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1960,
																"name": "log256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	1947,
																	1985
																],
																"referencedDeclaration": 1947,
																"src": "14743:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 1962,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14743:13:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "14726:30:7"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1981,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1964,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1959,
																"src": "14777:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 1976,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 1966,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1953,
																						"src": "14804:8:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$962",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$962",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 1965,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2004,
																					"src": "14787:16:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$962_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 1967,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "14787:26:7",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1975,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1973,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "31",
																						"id": 1968,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "14817:1:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<<",
																					"rightExpression": {
																						"components": [
																							{
																								"commonType": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								"id": 1971,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"id": 1969,
																									"name": "result",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1959,
																									"src": "14823:6:7",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "<<",
																								"rightExpression": {
																									"hexValue": "33",
																									"id": 1970,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "14833:1:7",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_3_by_1",
																										"typeString": "int_const 3"
																									},
																									"value": "3"
																								},
																								"src": "14823:11:7",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"id": 1972,
																						"isConstant": false,
																						"isInlineArray": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "TupleExpression",
																						"src": "14822:13:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "14817:18:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 1974,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1950,
																					"src": "14838:5:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "14817:26:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "14787:56:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 1978,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14850:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 1979,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "14787:64:7",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 1977,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14846:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 1980,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "14786:66:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "14777:75:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1957,
														"id": 1982,
														"nodeType": "Return",
														"src": "14770:82:7"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1948,
										"nodeType": "StructuredDocumentation",
										"src": "14461:144:7",
										"text": " @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 1985,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log256",
									"nameLocation": "14619:6:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1954,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1950,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "14634:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1985,
												"src": "14626:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1949,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14626:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1953,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "14650:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 1985,
												"src": "14641:17:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$962",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 1952,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1951,
														"name": "Rounding",
														"nameLocations": [
															"14641:8:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 962,
														"src": "14641:8:7"
													},
													"referencedDeclaration": 962,
													"src": "14641:8:7",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$962",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14625:34:7"
									},
									"returnParameters": {
										"id": 1957,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1956,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1985,
												"src": "14683:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1955,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14683:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14682:9:7"
									},
									"scope": 2005,
									"src": "14610:259:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2003,
										"nodeType": "Block",
										"src": "15067:48:7",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													},
													"id": 2001,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														},
														"id": 1999,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 1996,
																	"name": "rounding",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1989,
																	"src": "15090:8:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_Rounding_$962",
																		"typeString": "enum Math.Rounding"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_enum$_Rounding_$962",
																		"typeString": "enum Math.Rounding"
																	}
																],
																"id": 1995,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "15084:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint8_$",
																	"typeString": "type(uint8)"
																},
																"typeName": {
																	"id": 1994,
																	"name": "uint8",
																	"nodeType": "ElementaryTypeName",
																	"src": "15084:5:7",
																	"typeDescriptions": {}
																}
															},
															"id": 1997,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "15084:15:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "%",
														"rightExpression": {
															"hexValue": "32",
															"id": 1998,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "15102:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "15084:19:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "31",
														"id": 2000,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "15107:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "15084:24:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1993,
												"id": 2002,
												"nodeType": "Return",
												"src": "15077:31:7"
											}
										]
									},
									"documentation": {
										"id": 1986,
										"nodeType": "StructuredDocumentation",
										"src": "14875:113:7",
										"text": " @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers."
									},
									"id": 2004,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "unsignedRoundsUp",
									"nameLocation": "15002:16:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1990,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1989,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "15028:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 2004,
												"src": "15019:17:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$962",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 1988,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1987,
														"name": "Rounding",
														"nameLocations": [
															"15019:8:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 962,
														"src": "15019:8:7"
													},
													"referencedDeclaration": 962,
													"src": "15019:8:7",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$962",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15018:19:7"
									},
									"returnParameters": {
										"id": 1993,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1992,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2004,
												"src": "15061:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1991,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "15061:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15060:6:7"
									},
									"scope": 2005,
									"src": "14993:122:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2006,
							"src": "203:14914:7",
							"usedErrors": [
								957
							],
							"usedEvents": []
						}
					],
					"src": "103:15015:7"
				},
				"id": 7
			},
			"contracts/real-estate-marketplace/Marketplace.sol": {
				"ast": {
					"absolutePath": "contracts/real-estate-marketplace/Marketplace.sol",
					"exportedSymbols": {
						"Address": [
							804
						],
						"Context": [
							834
						],
						"IAlvaraProtocol": [
							2020
						],
						"IERC20": [
							225
						],
						"IERC20Permit": [
							261
						],
						"Marketplace": [
							2325
						],
						"Math": [
							2005
						],
						"Ownable": [
							147
						],
						"Pausable": [
							951
						],
						"SafeERC20": [
							551
						]
					},
					"id": 2326,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2007,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:8"
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 2008,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2326,
							"sourceUnit": 148,
							"src": "57:52:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Pausable.sol",
							"file": "@openzeppelin/contracts/utils/Pausable.sol",
							"id": 2009,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2326,
							"sourceUnit": 952,
							"src": "110:52:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 2010,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2326,
							"sourceUnit": 226,
							"src": "163:56:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
							"id": 2011,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2326,
							"sourceUnit": 552,
							"src": "220:65:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/Math.sol",
							"file": "@openzeppelin/contracts/utils/math/Math.sol",
							"id": 2012,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2326,
							"sourceUnit": 2006,
							"src": "286:53:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IAlvaraProtocol",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 2020,
							"linearizedBaseContracts": [
								2020
							],
							"name": "IAlvaraProtocol",
							"nameLocation": "351:15:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "7485cdc2",
									"id": 2019,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "checkPropertyIntegration",
									"nameLocation": "382:24:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2015,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2014,
												"mutability": "mutable",
												"name": "propertyId",
												"nameLocation": "415:10:8",
												"nodeType": "VariableDeclaration",
												"scope": 2019,
												"src": "407:18:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2013,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "407:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "406:20:8"
									},
									"returnParameters": {
										"id": 2018,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2017,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2019,
												"src": "450:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2016,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "450:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "449:6:8"
									},
									"scope": 2020,
									"src": "373:83:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2326,
							"src": "341:117:8",
							"usedErrors": [],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 2021,
										"name": "Ownable",
										"nameLocations": [
											"484:7:8"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 147,
										"src": "484:7:8"
									},
									"id": 2022,
									"nodeType": "InheritanceSpecifier",
									"src": "484:7:8"
								},
								{
									"baseName": {
										"id": 2023,
										"name": "Pausable",
										"nameLocations": [
											"493:8:8"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 951,
										"src": "493:8:8"
									},
									"id": 2024,
									"nodeType": "InheritanceSpecifier",
									"src": "493:8:8"
								}
							],
							"canonicalName": "Marketplace",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 2325,
							"linearizedBaseContracts": [
								2325,
								951,
								147,
								834
							],
							"name": "Marketplace",
							"nameLocation": "469:11:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 2028,
									"libraryName": {
										"id": 2025,
										"name": "SafeERC20",
										"nameLocations": [
											"514:9:8"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 551,
										"src": "514:9:8"
									},
									"nodeType": "UsingForDirective",
									"src": "508:27:8",
									"typeName": {
										"id": 2027,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 2026,
											"name": "IERC20",
											"nameLocations": [
												"528:6:8"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 225,
											"src": "528:6:8"
										},
										"referencedDeclaration": 225,
										"src": "528:6:8",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$225",
											"typeString": "contract IERC20"
										}
									}
								},
								{
									"anonymous": false,
									"eventSelector": "2c479e2e638a3a97a6f194336f17f298b4ec7145f37c7d35ff6346f9cd4a0030",
									"id": 2038,
									"name": "PropertyListed",
									"nameLocation": "568:14:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2037,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2030,
												"indexed": false,
												"mutability": "mutable",
												"name": "propertyId",
												"nameLocation": "591:10:8",
												"nodeType": "VariableDeclaration",
												"scope": 2038,
												"src": "583:18:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2029,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "583:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2032,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "619:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 2038,
												"src": "603:21:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2031,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "603:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2034,
												"indexed": false,
												"mutability": "mutable",
												"name": "price",
												"nameLocation": "634:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 2038,
												"src": "626:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2033,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "626:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2036,
												"indexed": false,
												"mutability": "mutable",
												"name": "totalShares",
												"nameLocation": "649:11:8",
												"nodeType": "VariableDeclaration",
												"scope": 2038,
												"src": "641:19:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2035,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "641:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "582:79:8"
									},
									"src": "562:100:8"
								},
								{
									"anonymous": false,
									"eventSelector": "d4a7a37d339805413b4085e0f8e0932dfb0a4f84f08f98a6e53673b5ee8eee15",
									"id": 2046,
									"name": "SharesPurchased",
									"nameLocation": "673:15:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2045,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2040,
												"indexed": false,
												"mutability": "mutable",
												"name": "propertyId",
												"nameLocation": "697:10:8",
												"nodeType": "VariableDeclaration",
												"scope": 2046,
												"src": "689:18:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2039,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "689:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2042,
												"indexed": true,
												"mutability": "mutable",
												"name": "buyer",
												"nameLocation": "725:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 2046,
												"src": "709:21:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2041,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2044,
												"indexed": false,
												"mutability": "mutable",
												"name": "shares",
												"nameLocation": "740:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 2046,
												"src": "732:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2043,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "732:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "688:59:8"
									},
									"src": "667:81:8"
								},
								{
									"anonymous": false,
									"eventSelector": "f17a6666765db393a6218bb324c4de5cc60c9ee3b981bd102ba416effc13b895",
									"id": 2054,
									"name": "PropertySold",
									"nameLocation": "759:12:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2053,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2048,
												"indexed": false,
												"mutability": "mutable",
												"name": "propertyId",
												"nameLocation": "780:10:8",
												"nodeType": "VariableDeclaration",
												"scope": 2054,
												"src": "772:18:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2047,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "772:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2050,
												"indexed": true,
												"mutability": "mutable",
												"name": "buyer",
												"nameLocation": "808:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 2054,
												"src": "792:21:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2049,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "792:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2052,
												"indexed": false,
												"mutability": "mutable",
												"name": "shares",
												"nameLocation": "823:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 2054,
												"src": "815:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2051,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "815:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "771:59:8"
									},
									"src": "753:78:8"
								},
								{
									"canonicalName": "Marketplace.Property",
									"id": 2067,
									"members": [
										{
											"constant": false,
											"id": 2056,
											"mutability": "mutable",
											"name": "owner",
											"nameLocation": "905:5:8",
											"nodeType": "VariableDeclaration",
											"scope": 2067,
											"src": "897:13:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 2055,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "897:7:8",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2058,
											"mutability": "mutable",
											"name": "price",
											"nameLocation": "928:5:8",
											"nodeType": "VariableDeclaration",
											"scope": 2067,
											"src": "920:13:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2057,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "920:7:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2060,
											"mutability": "mutable",
											"name": "totalShares",
											"nameLocation": "951:11:8",
											"nodeType": "VariableDeclaration",
											"scope": 2067,
											"src": "943:19:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2059,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "943:7:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2062,
											"mutability": "mutable",
											"name": "availableShares",
											"nameLocation": "980:15:8",
											"nodeType": "VariableDeclaration",
											"scope": 2067,
											"src": "972:23:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2061,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "972:7:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2064,
											"mutability": "mutable",
											"name": "tokenAddress",
											"nameLocation": "1013:12:8",
											"nodeType": "VariableDeclaration",
											"scope": 2067,
											"src": "1005:20:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 2063,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1005:7:8",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2066,
											"mutability": "mutable",
											"name": "isListed",
											"nameLocation": "1073:8:8",
											"nodeType": "VariableDeclaration",
											"scope": 2067,
											"src": "1068:13:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 2065,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "1068:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Property",
									"nameLocation": "878:8:8",
									"nodeType": "StructDefinition",
									"scope": 2325,
									"src": "871:217:8",
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "f7b10808",
									"id": 2072,
									"mutability": "mutable",
									"name": "properties",
									"nameLocation": "1134:10:8",
									"nodeType": "VariableDeclaration",
									"scope": 2325,
									"src": "1098:46:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Property_$2067_storage_$",
										"typeString": "mapping(uint256 => struct Marketplace.Property)"
									},
									"typeName": {
										"id": 2071,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 2068,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1106:7:8",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "1098:28:8",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Property_$2067_storage_$",
											"typeString": "mapping(uint256 => struct Marketplace.Property)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 2070,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 2069,
												"name": "Property",
												"nameLocations": [
													"1117:8:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2067,
												"src": "1117:8:8"
											},
											"referencedDeclaration": 2067,
											"src": "1117:8:8",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Property_$2067_storage_ptr",
												"typeString": "struct Marketplace.Property"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "39500f34",
									"id": 2074,
									"mutability": "mutable",
									"name": "nextPropertyId",
									"nameLocation": "1165:14:8",
									"nodeType": "VariableDeclaration",
									"scope": 2325,
									"src": "1150:29:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 2073,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1150:7:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "3013ce29",
									"id": 2077,
									"mutability": "mutable",
									"name": "paymentToken",
									"nameLocation": "1204:12:8",
									"nodeType": "VariableDeclaration",
									"scope": 2325,
									"src": "1190:26:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$225",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"id": 2076,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 2075,
											"name": "IERC20",
											"nameLocations": [
												"1190:6:8"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 225,
											"src": "1190:6:8"
										},
										"referencedDeclaration": 225,
										"src": "1190:6:8",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$225",
											"typeString": "contract IERC20"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "b41b936d",
									"id": 2080,
									"mutability": "mutable",
									"name": "alvaraProtocol",
									"nameLocation": "1284:14:8",
									"nodeType": "VariableDeclaration",
									"scope": 2325,
									"src": "1261:37:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IAlvaraProtocol_$2020",
										"typeString": "contract IAlvaraProtocol"
									},
									"typeName": {
										"id": 2079,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 2078,
											"name": "IAlvaraProtocol",
											"nameLocations": [
												"1261:15:8"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 2020,
											"src": "1261:15:8"
										},
										"referencedDeclaration": 2020,
										"src": "1261:15:8",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IAlvaraProtocol_$2020",
											"typeString": "contract IAlvaraProtocol"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 2101,
										"nodeType": "Block",
										"src": "1450:87:8",
										"statements": [
											{
												"expression": {
													"id": 2095,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2093,
														"name": "paymentToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2077,
														"src": "1460:12:8",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$225",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2094,
														"name": "_paymentToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2083,
														"src": "1475:13:8",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$225",
															"typeString": "contract IERC20"
														}
													},
													"src": "1460:28:8",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$225",
														"typeString": "contract IERC20"
													}
												},
												"id": 2096,
												"nodeType": "ExpressionStatement",
												"src": "1460:28:8"
											},
											{
												"expression": {
													"id": 2099,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2097,
														"name": "alvaraProtocol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2080,
														"src": "1498:14:8",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IAlvaraProtocol_$2020",
															"typeString": "contract IAlvaraProtocol"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2098,
														"name": "_alvaraProtocol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2086,
														"src": "1515:15:8",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IAlvaraProtocol_$2020",
															"typeString": "contract IAlvaraProtocol"
														}
													},
													"src": "1498:32:8",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IAlvaraProtocol_$2020",
														"typeString": "contract IAlvaraProtocol"
													}
												},
												"id": 2100,
												"nodeType": "ExpressionStatement",
												"src": "1498:32:8"
											}
										]
									},
									"id": 2102,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"expression": {
														"id": 2089,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "1438:3:8",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 2090,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "1442:6:8",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "1438:10:8",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 2091,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 2088,
												"name": "Ownable",
												"nameLocations": [
													"1430:7:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 147,
												"src": "1430:7:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "1430:19:8"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2087,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2083,
												"mutability": "mutable",
												"name": "_paymentToken",
												"nameLocation": "1382:13:8",
												"nodeType": "VariableDeclaration",
												"scope": 2102,
												"src": "1375:20:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$225",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 2082,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2081,
														"name": "IERC20",
														"nameLocations": [
															"1375:6:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 225,
														"src": "1375:6:8"
													},
													"referencedDeclaration": 225,
													"src": "1375:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$225",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2086,
												"mutability": "mutable",
												"name": "_alvaraProtocol",
												"nameLocation": "1413:15:8",
												"nodeType": "VariableDeclaration",
												"scope": 2102,
												"src": "1397:31:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IAlvaraProtocol_$2020",
													"typeString": "contract IAlvaraProtocol"
												},
												"typeName": {
													"id": 2085,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2084,
														"name": "IAlvaraProtocol",
														"nameLocations": [
															"1397:15:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2020,
														"src": "1397:15:8"
													},
													"referencedDeclaration": 2020,
													"src": "1397:15:8",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IAlvaraProtocol_$2020",
														"typeString": "contract IAlvaraProtocol"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1374:55:8"
									},
									"returnParameters": {
										"id": 2092,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1450:0:8"
									},
									"scope": 2325,
									"src": "1363:174:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2152,
										"nodeType": "Block",
										"src": "1685:525:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2116,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2114,
																"name": "price",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2104,
																"src": "1703:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2115,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1711:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1703:9:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5072696365206d7573742062652067726561746572207468616e2030",
															"id": 2117,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1714:30:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f496d2a6b8c6dfd2fdeb51133639f7cbcc6985234f7207231dd11f4a16998dde",
																"typeString": "literal_string \"Price must be greater than 0\""
															},
															"value": "Price must be greater than 0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f496d2a6b8c6dfd2fdeb51133639f7cbcc6985234f7207231dd11f4a16998dde",
																"typeString": "literal_string \"Price must be greater than 0\""
															}
														],
														"id": 2113,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1695:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2118,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1695:50:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2119,
												"nodeType": "ExpressionStatement",
												"src": "1695:50:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2123,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2121,
																"name": "totalShares",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2106,
																"src": "1763:11:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2122,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1777:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1763:15:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "546f74616c20736861726573206d7573742062652067726561746572207468616e2030",
															"id": 2124,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1780:37:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_2b57b42f08fffb4ec4084ecc30661f6abc2751da5a541cc8e00f347dcfafc705",
																"typeString": "literal_string \"Total shares must be greater than 0\""
															},
															"value": "Total shares must be greater than 0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_2b57b42f08fffb4ec4084ecc30661f6abc2751da5a541cc8e00f347dcfafc705",
																"typeString": "literal_string \"Total shares must be greater than 0\""
															}
														],
														"id": 2120,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1755:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2125,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1755:63:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2126,
												"nodeType": "ExpressionStatement",
												"src": "1755:63:8"
											},
											{
												"expression": {
													"id": 2139,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2127,
															"name": "properties",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2072,
															"src": "1837:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Property_$2067_storage_$",
																"typeString": "mapping(uint256 => struct Marketplace.Property storage ref)"
															}
														},
														"id": 2129,
														"indexExpression": {
															"id": 2128,
															"name": "nextPropertyId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2074,
															"src": "1848:14:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1837:26:8",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Property_$2067_storage",
															"typeString": "struct Marketplace.Property storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"expression": {
																	"id": 2131,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "1896:3:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 2132,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1900:6:8",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "1896:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 2133,
																"name": "price",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2104,
																"src": "1927:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 2134,
																"name": "totalShares",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2106,
																"src": "1959:11:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 2135,
																"name": "totalShares",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2106,
																"src": "2001:11:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 2136,
																"name": "tokenAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2108,
																"src": "2040:12:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"hexValue": "74727565",
																"id": 2137,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2076:4:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															],
															"id": 2130,
															"name": "Property",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2067,
															"src": "1866:8:8",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_struct$_Property_$2067_storage_ptr_$",
																"typeString": "type(struct Marketplace.Property storage pointer)"
															}
														},
														"id": 2138,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "structConstructorCall",
														"lValueRequested": false,
														"nameLocations": [
															"1889:5:8",
															"1920:5:8",
															"1946:11:8",
															"1984:15:8",
															"2026:12:8",
															"2066:8:8"
														],
														"names": [
															"owner",
															"price",
															"totalShares",
															"availableShares",
															"tokenAddress",
															"isListed"
														],
														"nodeType": "FunctionCall",
														"src": "1866:225:8",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Property_$2067_memory_ptr",
															"typeString": "struct Marketplace.Property memory"
														}
													},
													"src": "1837:254:8",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Property_$2067_storage",
														"typeString": "struct Marketplace.Property storage ref"
													}
												},
												"id": 2140,
												"nodeType": "ExpressionStatement",
												"src": "1837:254:8"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 2142,
															"name": "nextPropertyId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2074,
															"src": "2130:14:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 2143,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2146:3:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2144,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2150:6:8",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2146:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2145,
															"name": "price",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2104,
															"src": "2158:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2146,
															"name": "totalShares",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2106,
															"src": "2165:11:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2141,
														"name": "PropertyListed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2038,
														"src": "2115:14:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,address,uint256,uint256)"
														}
													},
													"id": 2147,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2115:62:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2148,
												"nodeType": "EmitStatement",
												"src": "2110:67:8"
											},
											{
												"expression": {
													"id": 2150,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "++",
													"prefix": false,
													"src": "2187:16:8",
													"subExpression": {
														"id": 2149,
														"name": "nextPropertyId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2074,
														"src": "2187:14:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2151,
												"nodeType": "ExpressionStatement",
												"src": "2187:16:8"
											}
										]
									},
									"functionSelector": "86aa217e",
									"id": 2153,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2111,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2110,
												"name": "whenNotPaused",
												"nameLocations": [
													"1671:13:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 876,
												"src": "1671:13:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "1671:13:8"
										}
									],
									"name": "listProperty",
									"nameLocation": "1591:12:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2109,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2104,
												"mutability": "mutable",
												"name": "price",
												"nameLocation": "1612:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 2153,
												"src": "1604:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2103,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1604:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2106,
												"mutability": "mutable",
												"name": "totalShares",
												"nameLocation": "1627:11:8",
												"nodeType": "VariableDeclaration",
												"scope": 2153,
												"src": "1619:19:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2105,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1619:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2108,
												"mutability": "mutable",
												"name": "tokenAddress",
												"nameLocation": "1648:12:8",
												"nodeType": "VariableDeclaration",
												"scope": 2153,
												"src": "1640:20:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2107,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1640:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1603:58:8"
									},
									"returnParameters": {
										"id": 2112,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1685:0:8"
									},
									"scope": 2325,
									"src": "1582:628:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2226,
										"nodeType": "Block",
										"src": "2357:597:8",
										"statements": [
											{
												"assignments": [
													2164
												],
												"declarations": [
													{
														"constant": false,
														"id": 2164,
														"mutability": "mutable",
														"name": "property",
														"nameLocation": "2384:8:8",
														"nodeType": "VariableDeclaration",
														"scope": 2226,
														"src": "2367:25:8",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Property_$2067_storage_ptr",
															"typeString": "struct Marketplace.Property"
														},
														"typeName": {
															"id": 2163,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 2162,
																"name": "Property",
																"nameLocations": [
																	"2367:8:8"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 2067,
																"src": "2367:8:8"
															},
															"referencedDeclaration": 2067,
															"src": "2367:8:8",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Property_$2067_storage_ptr",
																"typeString": "struct Marketplace.Property"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2168,
												"initialValue": {
													"baseExpression": {
														"id": 2165,
														"name": "properties",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2072,
														"src": "2395:10:8",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Property_$2067_storage_$",
															"typeString": "mapping(uint256 => struct Marketplace.Property storage ref)"
														}
													},
													"id": 2167,
													"indexExpression": {
														"id": 2166,
														"name": "propertyId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2155,
														"src": "2406:10:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2395:22:8",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Property_$2067_storage",
														"typeString": "struct Marketplace.Property storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2367:50:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 2170,
																"name": "property",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2164,
																"src": "2435:8:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Property_$2067_storage_ptr",
																	"typeString": "struct Marketplace.Property storage pointer"
																}
															},
															"id": 2171,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2444:8:8",
															"memberName": "isListed",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2066,
															"src": "2435:17:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "50726f7065727479206973206e6f74206c6973746564",
															"id": 2172,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2454:24:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_fe58975cefc9dea6eec5cc2540c1aea6a97b8ab8cab294e509ea3b5e0121d2aa",
																"typeString": "literal_string \"Property is not listed\""
															},
															"value": "Property is not listed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_fe58975cefc9dea6eec5cc2540c1aea6a97b8ab8cab294e509ea3b5e0121d2aa",
																"typeString": "literal_string \"Property is not listed\""
															}
														],
														"id": 2169,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2427:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2173,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2427:52:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2174,
												"nodeType": "ExpressionStatement",
												"src": "2427:52:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2179,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 2176,
																	"name": "property",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2164,
																	"src": "2497:8:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Property_$2067_storage_ptr",
																		"typeString": "struct Marketplace.Property storage pointer"
																	}
																},
																"id": 2177,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2506:15:8",
																"memberName": "availableShares",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2062,
																"src": "2497:24:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 2178,
																"name": "sharesToBuy",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2157,
																"src": "2525:11:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2497:39:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f7420656e6f7567682073686172657320617661696c61626c65",
															"id": 2180,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2538:29:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c2664836f08f089a39d927da540bfbfc322ded0e69c3d2ff852ad8874067c6e6",
																"typeString": "literal_string \"Not enough shares available\""
															},
															"value": "Not enough shares available"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c2664836f08f089a39d927da540bfbfc322ded0e69c3d2ff852ad8874067c6e6",
																"typeString": "literal_string \"Not enough shares available\""
															}
														],
														"id": 2175,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2489:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2181,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2489:79:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2182,
												"nodeType": "ExpressionStatement",
												"src": "2489:79:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2186,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2184,
																"name": "sharesToBuy",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2157,
																"src": "2586:11:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2185,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2600:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2586:15:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "53686172657320746f20627579206d7573742062652067726561746572207468616e2030",
															"id": 2187,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2603:38:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_fc24bcfbd025f2a9f173aad2479d5b4b312d679ab7aa91e42dd3551e03a420b8",
																"typeString": "literal_string \"Shares to buy must be greater than 0\""
															},
															"value": "Shares to buy must be greater than 0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_fc24bcfbd025f2a9f173aad2479d5b4b312d679ab7aa91e42dd3551e03a420b8",
																"typeString": "literal_string \"Shares to buy must be greater than 0\""
															}
														],
														"id": 2183,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2578:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2188,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2578:64:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2189,
												"nodeType": "ExpressionStatement",
												"src": "2578:64:8"
											},
											{
												"assignments": [
													2191
												],
												"declarations": [
													{
														"constant": false,
														"id": 2191,
														"mutability": "mutable",
														"name": "totalPrice",
														"nameLocation": "2669:10:8",
														"nodeType": "VariableDeclaration",
														"scope": 2226,
														"src": "2661:18:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2190,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2661:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2200,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2199,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2195,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 2192,
																		"name": "property",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2164,
																		"src": "2683:8:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Property_$2067_storage_ptr",
																			"typeString": "struct Marketplace.Property storage pointer"
																		}
																	},
																	"id": 2193,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2692:5:8",
																	"memberName": "price",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2058,
																	"src": "2683:14:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 2194,
																	"name": "sharesToBuy",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2157,
																	"src": "2700:11:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2683:28:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 2196,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "2682:30:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"expression": {
															"id": 2197,
															"name": "property",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2164,
															"src": "2715:8:8",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Property_$2067_storage_ptr",
																"typeString": "struct Marketplace.Property storage pointer"
															}
														},
														"id": 2198,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2724:11:8",
														"memberName": "totalShares",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2060,
														"src": "2715:20:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2682:53:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2661:74:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 2204,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2775:3:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2205,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2779:6:8",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2775:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 2208,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "2795:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Marketplace_$2325",
																		"typeString": "contract Marketplace"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Marketplace_$2325",
																		"typeString": "contract Marketplace"
																	}
																],
																"id": 2207,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2787:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2206,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2787:7:8",
																	"typeDescriptions": {}
																}
															},
															"id": 2209,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2787:13:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2210,
															"name": "totalPrice",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2191,
															"src": "2802:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 2201,
															"name": "paymentToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2077,
															"src": "2745:12:8",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$225",
																"typeString": "contract IERC20"
															}
														},
														"id": 2203,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2758:16:8",
														"memberName": "safeTransferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 338,
														"src": "2745:29:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$225_$_t_address_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$225_$",
															"typeString": "function (contract IERC20,address,address,uint256)"
														}
													},
													"id": 2211,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2745:68:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2212,
												"nodeType": "ExpressionStatement",
												"src": "2745:68:8"
											},
											{
												"expression": {
													"id": 2217,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 2213,
															"name": "property",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2164,
															"src": "2832:8:8",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Property_$2067_storage_ptr",
																"typeString": "struct Marketplace.Property storage pointer"
															}
														},
														"id": 2215,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "2841:15:8",
														"memberName": "availableShares",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2062,
														"src": "2832:24:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 2216,
														"name": "sharesToBuy",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2157,
														"src": "2860:11:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2832:39:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2218,
												"nodeType": "ExpressionStatement",
												"src": "2832:39:8"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 2220,
															"name": "propertyId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2155,
															"src": "2911:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 2221,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2923:3:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2222,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2927:6:8",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2923:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2223,
															"name": "sharesToBuy",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2157,
															"src": "2935:11:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2219,
														"name": "SharesPurchased",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2046,
														"src": "2895:15:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,address,uint256)"
														}
													},
													"id": 2224,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2895:52:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2225,
												"nodeType": "EmitStatement",
												"src": "2890:57:8"
											}
										]
									},
									"functionSelector": "d2bcdc60",
									"id": 2227,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2160,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2159,
												"name": "whenNotPaused",
												"nameLocations": [
													"2343:13:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 876,
												"src": "2343:13:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "2343:13:8"
										}
									],
									"name": "purchaseShares",
									"nameLocation": "2278:14:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2158,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2155,
												"mutability": "mutable",
												"name": "propertyId",
												"nameLocation": "2301:10:8",
												"nodeType": "VariableDeclaration",
												"scope": 2227,
												"src": "2293:18:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2154,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2293:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2157,
												"mutability": "mutable",
												"name": "sharesToBuy",
												"nameLocation": "2321:11:8",
												"nodeType": "VariableDeclaration",
												"scope": 2227,
												"src": "2313:19:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2156,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2313:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2292:41:8"
									},
									"returnParameters": {
										"id": 2161,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2357:0:8"
									},
									"scope": 2325,
									"src": "2269:685:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2292,
										"nodeType": "Block",
										"src": "3095:506:8",
										"statements": [
											{
												"assignments": [
													2238
												],
												"declarations": [
													{
														"constant": false,
														"id": 2238,
														"mutability": "mutable",
														"name": "property",
														"nameLocation": "3122:8:8",
														"nodeType": "VariableDeclaration",
														"scope": 2292,
														"src": "3105:25:8",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Property_$2067_storage_ptr",
															"typeString": "struct Marketplace.Property"
														},
														"typeName": {
															"id": 2237,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 2236,
																"name": "Property",
																"nameLocations": [
																	"3105:8:8"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 2067,
																"src": "3105:8:8"
															},
															"referencedDeclaration": 2067,
															"src": "3105:8:8",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Property_$2067_storage_ptr",
																"typeString": "struct Marketplace.Property"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2242,
												"initialValue": {
													"baseExpression": {
														"id": 2239,
														"name": "properties",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2072,
														"src": "3133:10:8",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Property_$2067_storage_$",
															"typeString": "mapping(uint256 => struct Marketplace.Property storage ref)"
														}
													},
													"id": 2241,
													"indexExpression": {
														"id": 2240,
														"name": "propertyId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2229,
														"src": "3144:10:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3133:22:8",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Property_$2067_storage",
														"typeString": "struct Marketplace.Property storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3105:50:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 2248,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 2244,
																	"name": "property",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2238,
																	"src": "3173:8:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Property_$2067_storage_ptr",
																		"typeString": "struct Marketplace.Property storage pointer"
																	}
																},
																"id": 2245,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3182:5:8",
																"memberName": "owner",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2056,
																"src": "3173:14:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 2246,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "3191:3:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 2247,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3195:6:8",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "3191:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "3173:28:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f6e6c7920746865206f776e65722063616e2066696e616c697a65207468652073616c65",
															"id": 2249,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3203:38:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_13b23e2daf0d0a1df4943827ff941ed4e12d820426db25dc1af93122c029577d",
																"typeString": "literal_string \"Only the owner can finalize the sale\""
															},
															"value": "Only the owner can finalize the sale"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_13b23e2daf0d0a1df4943827ff941ed4e12d820426db25dc1af93122c029577d",
																"typeString": "literal_string \"Only the owner can finalize the sale\""
															}
														],
														"id": 2243,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3165:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2250,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3165:77:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2251,
												"nodeType": "ExpressionStatement",
												"src": "3165:77:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2256,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 2253,
																	"name": "property",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2238,
																	"src": "3260:8:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Property_$2067_storage_ptr",
																		"typeString": "struct Marketplace.Property storage pointer"
																	}
																},
																"id": 2254,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3269:15:8",
																"memberName": "availableShares",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2062,
																"src": "3260:24:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 2255,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3288:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "3260:29:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "53686172657320617265207374696c6c20617661696c61626c65",
															"id": 2257,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3291:28:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_cd3c9b624963ff71668384fe70850a7de10eb909bb47674cc0e83a0ab696e2b4",
																"typeString": "literal_string \"Shares are still available\""
															},
															"value": "Shares are still available"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_cd3c9b624963ff71668384fe70850a7de10eb909bb47674cc0e83a0ab696e2b4",
																"typeString": "literal_string \"Shares are still available\""
															}
														],
														"id": 2252,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3252:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2258,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3252:68:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2259,
												"nodeType": "ExpressionStatement",
												"src": "3252:68:8"
											},
											{
												"expression": {
													"id": 2264,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 2260,
															"name": "property",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2238,
															"src": "3339:8:8",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Property_$2067_storage_ptr",
																"typeString": "struct Marketplace.Property storage pointer"
															}
														},
														"id": 2262,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "3348:8:8",
														"memberName": "isListed",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2066,
														"src": "3339:17:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 2263,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3359:5:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "3339:25:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2265,
												"nodeType": "ExpressionStatement",
												"src": "3339:25:8"
											},
											{
												"expression": {
													"id": 2270,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 2266,
															"name": "property",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2238,
															"src": "3374:8:8",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Property_$2067_storage_ptr",
																"typeString": "struct Marketplace.Property storage pointer"
															}
														},
														"id": 2268,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "3383:5:8",
														"memberName": "owner",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2056,
														"src": "3374:14:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2269,
														"name": "buyer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2231,
														"src": "3391:5:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3374:22:8",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 2271,
												"nodeType": "ExpressionStatement",
												"src": "3374:22:8"
											},
											{
												"assignments": [
													2273
												],
												"declarations": [
													{
														"constant": false,
														"id": 2273,
														"mutability": "mutable",
														"name": "totalPayment",
														"nameLocation": "3423:12:8",
														"nodeType": "VariableDeclaration",
														"scope": 2292,
														"src": "3415:20:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2272,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3415:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2276,
												"initialValue": {
													"expression": {
														"id": 2274,
														"name": "property",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2238,
														"src": "3438:8:8",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Property_$2067_storage_ptr",
															"typeString": "struct Marketplace.Property storage pointer"
														}
													},
													"id": 2275,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "3447:5:8",
													"memberName": "price",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 2058,
													"src": "3438:14:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3415:37:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 2280,
																"name": "property",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2238,
																"src": "3488:8:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Property_$2067_storage_ptr",
																	"typeString": "struct Marketplace.Property storage pointer"
																}
															},
															"id": 2281,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3497:5:8",
															"memberName": "owner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2056,
															"src": "3488:14:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2282,
															"name": "totalPayment",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2273,
															"src": "3504:12:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 2277,
															"name": "paymentToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2077,
															"src": "3462:12:8",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$225",
																"typeString": "contract IERC20"
															}
														},
														"id": 2279,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3475:12:8",
														"memberName": "safeTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 311,
														"src": "3462:25:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$225_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$225_$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 2283,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3462:55:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2284,
												"nodeType": "ExpressionStatement",
												"src": "3462:55:8"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 2286,
															"name": "propertyId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2229,
															"src": "3554:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2287,
															"name": "buyer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2231,
															"src": "3566:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 2288,
																"name": "property",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2238,
																"src": "3573:8:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Property_$2067_storage_ptr",
																	"typeString": "struct Marketplace.Property storage pointer"
																}
															},
															"id": 2289,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3582:11:8",
															"memberName": "totalShares",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2060,
															"src": "3573:20:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2285,
														"name": "PropertySold",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2054,
														"src": "3541:12:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,address,uint256)"
														}
													},
													"id": 2290,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3541:53:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2291,
												"nodeType": "EmitStatement",
												"src": "3536:58:8"
											}
										]
									},
									"functionSelector": "b4d346be",
									"id": 2293,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2234,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2233,
												"name": "whenNotPaused",
												"nameLocations": [
													"3081:13:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 876,
												"src": "3081:13:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "3081:13:8"
										}
									],
									"name": "finalizeSale",
									"nameLocation": "3024:12:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2232,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2229,
												"mutability": "mutable",
												"name": "propertyId",
												"nameLocation": "3045:10:8",
												"nodeType": "VariableDeclaration",
												"scope": 2293,
												"src": "3037:18:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2228,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3037:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2231,
												"mutability": "mutable",
												"name": "buyer",
												"nameLocation": "3065:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 2293,
												"src": "3057:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2230,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3057:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3036:35:8"
									},
									"returnParameters": {
										"id": 2235,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3095:0:8"
									},
									"scope": 2325,
									"src": "3015:586:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2301,
										"nodeType": "Block",
										"src": "3706:25:8",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 2298,
														"name": "_pause",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 934,
														"src": "3716:6:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 2299,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3716:8:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2300,
												"nodeType": "ExpressionStatement",
												"src": "3716:8:8"
											}
										]
									},
									"functionSelector": "8456cb59",
									"id": 2302,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2296,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2295,
												"name": "onlyOwner",
												"nameLocations": [
													"3696:9:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "3696:9:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "3696:9:8"
										}
									],
									"name": "pause",
									"nameLocation": "3679:5:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2294,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3684:2:8"
									},
									"returnParameters": {
										"id": 2297,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3706:0:8"
									},
									"scope": 2325,
									"src": "3670:61:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2310,
										"nodeType": "Block",
										"src": "3825:27:8",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 2307,
														"name": "_unpause",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 950,
														"src": "3835:8:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 2308,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3835:10:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2309,
												"nodeType": "ExpressionStatement",
												"src": "3835:10:8"
											}
										]
									},
									"functionSelector": "3f4ba83a",
									"id": 2311,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2305,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2304,
												"name": "onlyOwner",
												"nameLocations": [
													"3815:9:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "3815:9:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "3815:9:8"
										}
									],
									"name": "unpause",
									"nameLocation": "3796:7:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2303,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3803:2:8"
									},
									"returnParameters": {
										"id": 2306,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3825:0:8"
									},
									"scope": 2325,
									"src": "3787:65:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2323,
										"nodeType": "Block",
										"src": "3990:75:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2320,
															"name": "propertyId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2313,
															"src": "4047:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 2318,
															"name": "alvaraProtocol",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2080,
															"src": "4007:14:8",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IAlvaraProtocol_$2020",
																"typeString": "contract IAlvaraProtocol"
															}
														},
														"id": 2319,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4022:24:8",
														"memberName": "checkPropertyIntegration",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2019,
														"src": "4007:39:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (uint256) view external returns (bool)"
														}
													},
													"id": 2321,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4007:51:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 2317,
												"id": 2322,
												"nodeType": "Return",
												"src": "4000:58:8"
											}
										]
									},
									"functionSelector": "baf52c77",
									"id": 2324,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "integrateWithAlvara",
									"nameLocation": "3921:19:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2314,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2313,
												"mutability": "mutable",
												"name": "propertyId",
												"nameLocation": "3949:10:8",
												"nodeType": "VariableDeclaration",
												"scope": 2324,
												"src": "3941:18:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2312,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3941:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3940:20:8"
									},
									"returnParameters": {
										"id": 2317,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2316,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2324,
												"src": "3984:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2315,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3984:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3983:6:8"
									},
									"scope": 2325,
									"src": "3912:153:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2326,
							"src": "460:3607:8",
							"usedErrors": [
								13,
								18,
								278,
								559,
								564,
								567,
								856,
								859
							],
							"usedEvents": [
								24,
								848,
								853,
								2038,
								2046,
								2054
							]
						}
					],
					"src": "32:4035:8"
				},
				"id": 8
			}
		}
	}
}