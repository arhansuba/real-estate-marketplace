{
	"id": "1a997065e777c661f940fd61e5bc777b",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.26",
	"solcLongVersion": "0.8.26+commit.8a97fa7a",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/real-estate-marketplace/Shares.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"@openzeppelin/contracts/security/Pausable.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\nimport \"@openzeppelin/contracts/utils/math/Math.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\";\n\ncontract Shares is ERC20, Ownable, Pausable {\n    using Math for uint256;\n    using SafeERC20 for IERC20;\n\n    struct ShareBasket {\n        uint256 basketId;\n        uint256[] propertyIds;\n        uint256 totalShares;\n    }\n\n    struct PropertyShares {\n        uint256 totalShares;\n        uint256 availableShares;\n        mapping(address => uint256) shareholders;\n    }\n\n    mapping(uint256 => ShareBasket) public baskets;\n    mapping(uint256 => uint256) public basketShares;\n    mapping(uint256 => PropertyShares) public propertyShares;\n    mapping(uint256 => address) public propertyOwners;\n\n    event SharesIssued(address indexed investor, uint256 propertyId, uint256 sharesIssued);\n    event SharesTransferred(address indexed from, address indexed to, uint256 propertyId, uint256 sharesTransferred);\n\n    constructor() ERC20(\"PropertyShare\", \"SHARE\") Ownable(msg.sender) {\n    }\n\n    function createBasket(uint256 basketId, uint256[] memory propertyIds, uint256 totalShares) external onlyOwner {\n        baskets[basketId] = ShareBasket({\n            basketId: basketId,\n            propertyIds: propertyIds,\n            totalShares: totalShares\n        });\n        basketShares[basketId] = totalShares;\n    }\n\n    function issueShares(uint256 basketId, address to, uint256 amount) external onlyOwner {\n        require(basketShares[basketId] >= amount, \"Insufficient shares available\");\n        _mint(to, amount);\n        basketShares[basketId] -= amount;\n    }\n\n    function getBasketDetails(uint256 basketId) external view returns (ShareBasket memory) {\n        return baskets[basketId];\n    }\n\n    function issuePropertyShares(uint256 propertyId, address investor, uint256 shares) external onlyOwner whenNotPaused {\n        require(shares > 0, \"Shares must be greater than 0\");\n        require(propertyShares[propertyId].availableShares >= shares, \"Not enough shares available\");\n        \n        PropertyShares storage sharesData = propertyShares[propertyId];\n        sharesData.totalShares += shares;\n        sharesData.availableShares -= shares;\n        sharesData.shareholders[investor] += shares;\n\n        emit SharesIssued(investor, propertyId, shares);\n    }\n\n    function transferShares(uint256 propertyId, address to, uint256 shares) external whenNotPaused {\n        require(to != address(0), \"Invalid recipient address\");\n        require(propertyShares[propertyId].shareholders[msg.sender] >= shares, \"Not enough shares to transfer\");\n        \n        PropertyShares storage sharesData = propertyShares[propertyId];\n        sharesData.shareholders[msg.sender] -= shares;\n        sharesData.shareholders[to] += shares;\n\n        emit SharesTransferred(msg.sender, to, propertyId, shares);\n    }\n\n    function getShares(uint256 propertyId, address shareholder) external view returns (uint256) {\n        return propertyShares[propertyId].shareholders[shareholder];\n    }\n\n    function getTotalShares(uint256 propertyId) external view returns (uint256) {\n        return propertyShares[propertyId].totalShares;\n    }\n\n    function getAvailableShares(uint256 propertyId) external view returns (uint256) {\n        return propertyShares[propertyId].availableShares;\n    }\n\n    function setPropertyOwner(uint256 propertyId, address owner) external onlyOwner {\n        require(owner != address(0), \"Invalid owner address\");\n        propertyOwners[propertyId] = owner;\n    }\n\n    function getPropertyOwner(uint256 propertyId) external view returns (address) {\n        return propertyOwners[propertyId];\n    }\n\n    function pause() external onlyOwner {\n        _pause();\n    }\n\n    function unpause() external onlyOwner {\n        _unpause();\n    }\n\n    function integrateWithExternalSystem(uint256 /* propertyId */) external pure returns (bool) {\n        // Example integration logic\n        return true;\n    }\n}"
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/utils/SafeERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\nimport {IERC20Permit} from \"../extensions/IERC20Permit.sol\";\nimport {Address} from \"../../../utils/Address.sol\";\n\n/**\n * @title SafeERC20\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\n * contract returns false). Tokens that return no value (and instead revert or\n * throw on failure) are also supported, non-reverting calls are assumed to be\n * successful.\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\n */\nlibrary SafeERC20 {\n    using Address for address;\n\n    /**\n     * @dev An operation with an ERC20 token failed.\n     */\n    error SafeERC20FailedOperation(address token);\n\n    /**\n     * @dev Indicates a failed `decreaseAllowance` request.\n     */\n    error SafeERC20FailedDecreaseAllowance(address spender, uint256 currentAllowance, uint256 requestedDecrease);\n\n    /**\n     * @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     */\n    function safeTransfer(IERC20 token, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value)));\n    }\n\n    /**\n     * @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n     * calling contract. If `token` returns no value, non-reverting calls are assumed to be successful.\n     */\n    function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeCall(token.transferFrom, (from, to, value)));\n    }\n\n    /**\n     * @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     */\n    function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {\n        uint256 oldAllowance = token.allowance(address(this), spender);\n        forceApprove(token, spender, oldAllowance + value);\n    }\n\n    /**\n     * @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\n     * value, non-reverting calls are assumed to be successful.\n     */\n    function safeDecreaseAllowance(IERC20 token, address spender, uint256 requestedDecrease) internal {\n        unchecked {\n            uint256 currentAllowance = token.allowance(address(this), spender);\n            if (currentAllowance < requestedDecrease) {\n                revert SafeERC20FailedDecreaseAllowance(spender, currentAllowance, requestedDecrease);\n            }\n            forceApprove(token, spender, currentAllowance - requestedDecrease);\n        }\n    }\n\n    /**\n     * @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n     * to be set to zero before setting it to a non-zero value, such as USDT.\n     */\n    function forceApprove(IERC20 token, address spender, uint256 value) internal {\n        bytes memory approvalCall = abi.encodeCall(token.approve, (spender, value));\n\n        if (!_callOptionalReturnBool(token, approvalCall)) {\n            _callOptionalReturn(token, abi.encodeCall(token.approve, (spender, 0)));\n            _callOptionalReturn(token, approvalCall);\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     */\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\n        // we're implementing it ourselves. We use {Address-functionCall} to perform this call, which verifies that\n        // the target address contains contract code and also asserts for success in the low-level call.\n\n        bytes memory returndata = address(token).functionCall(data);\n        if (returndata.length != 0 && !abi.decode(returndata, (bool))) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     *\n     * This is a variant of {_callOptionalReturn} that silents catches all reverts and returns a bool instead.\n     */\n    function _callOptionalReturnBool(IERC20 token, bytes memory data) private returns (bool) {\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\n        // we're implementing it ourselves. We cannot use {Address-functionCall} here since this should return false\n        // and not revert is the subcall reverts.\n\n        (bool success, bytes memory returndata) = address(token).call(data);\n        return success && (returndata.length == 0 || abi.decode(returndata, (bool))) && address(token).code.length > 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/math/Math.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    /**\n     * @dev Muldiv operation overflow.\n     */\n    error MathOverflowedMulDiv();\n\n    enum Rounding {\n        Floor, // Toward negative infinity\n        Ceil, // Toward positive infinity\n        Trunc, // Toward zero\n        Expand // Away from zero\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds towards infinity instead\n     * of rounding towards zero.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        if (b == 0) {\n            // Guarantee the same behavior as in a regular Solidity division.\n            return a / b;\n        }\n\n        // (a + b - 1) / b can overflow on addition, so we distribute.\n        return a == 0 ? 0 : (a - 1) / b + 1;\n    }\n\n    /**\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n     * denominator == 0.\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n     * Uniswap Labs also under MIT license.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\n        unchecked {\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n            // variables such that product = prod1 * 2^256 + prod0.\n            uint256 prod0 = x * y; // Least significant 256 bits of the product\n            uint256 prod1; // Most significant 256 bits of the product\n            assembly {\n                let mm := mulmod(x, y, not(0))\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\n            }\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (prod1 == 0) {\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\n                // The surrounding unchecked block does not change this fact.\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\n                return prod0 / denominator;\n            }\n\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\n            if (denominator <= prod1) {\n                revert MathOverflowedMulDiv();\n            }\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [prod1 prod0].\n            uint256 remainder;\n            assembly {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                prod1 := sub(prod1, gt(remainder, prod0))\n                prod0 := sub(prod0, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator.\n            // Always >= 1. See https://cs.stackexchange.com/q/138556/92363.\n\n            uint256 twos = denominator & (0 - denominator);\n            assembly {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [prod1 prod0] by twos.\n                prod0 := div(prod0, twos)\n\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from prod1 into prod0.\n            prod0 |= prod1 * twos;\n\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv = 1 mod 2^4.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also\n            // works in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\n            // is no longer required.\n            result = prod0 * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\n        uint256 result = mulDiv(x, y, denominator);\n        if (unsignedRoundsUp(rounding) && mulmod(x, y, denominator) > 0) {\n            result += 1;\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n     * towards zero.\n     *\n     * Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11).\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        if (a == 0) {\n            return 0;\n        }\n\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\n        //\n        // We know that the \"msb\" (most significant bit) of our target number `a` is a power of 2 such that we have\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\n        //\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\n        // → `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\n        // → `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\n        //\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\n        uint256 result = 1 << (log2(a) >> 1);\n\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\n        // into the expected uint128 result.\n        unchecked {\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            return min(result, a / result);\n        }\n    }\n\n    /**\n     * @notice Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = sqrt(a);\n            return result + (unsignedRoundsUp(rounding) && result * result < a ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 128;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 64;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 32;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 16;\n            }\n            if (value >> 8 > 0) {\n                value >>= 8;\n                result += 8;\n            }\n            if (value >> 4 > 0) {\n                value >>= 4;\n                result += 4;\n            }\n            if (value >> 2 > 0) {\n                value >>= 2;\n                result += 2;\n            }\n            if (value >> 1 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log2(value);\n            return result + (unsignedRoundsUp(rounding) && 1 << result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 10 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10 ** 64) {\n                value /= 10 ** 64;\n                result += 64;\n            }\n            if (value >= 10 ** 32) {\n                value /= 10 ** 32;\n                result += 32;\n            }\n            if (value >= 10 ** 16) {\n                value /= 10 ** 16;\n                result += 16;\n            }\n            if (value >= 10 ** 8) {\n                value /= 10 ** 8;\n                result += 8;\n            }\n            if (value >= 10 ** 4) {\n                value /= 10 ** 4;\n                result += 4;\n            }\n            if (value >= 10 ** 2) {\n                value /= 10 ** 2;\n                result += 2;\n            }\n            if (value >= 10 ** 1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log10(value);\n            return result + (unsignedRoundsUp(rounding) && 10 ** result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 256 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     *\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\n     */\n    function log256(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 16;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 8;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 4;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 2;\n            }\n            if (value >> 8 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log256(value);\n            return result + (unsignedRoundsUp(rounding) && 1 << (result << 3) < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers.\n     */\n    function unsignedRoundsUp(Rounding rounding) internal pure returns (bool) {\n        return uint8(rounding) % 2 == 1;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC20Metadata} from \"./extensions/IERC20Metadata.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {IERC20Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC20\n * applications.\n *\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n * This allows applications to reconstruct the allowance for all accounts just\n * by listening to said events. Other implementations of the EIP may not emit\n * these events, as it isn't required by the specification.\n */\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\n    mapping(address account => uint256) private _balances;\n\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Emits an {Approval} event indicating the updated allowance. This is not\n     * required by the EIP. See the note at the beginning of {ERC20}.\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            _totalSupply += value;\n        } else {\n            uint256 fromBalance = _balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                _balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                _totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                _balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     * ```\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        _allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance != type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/security/Pausable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (security/Pausable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which allows children to implement an emergency stop\n * mechanism that can be triggered by an authorized account.\n *\n * This module is used through inheritance. It will make available the\n * modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n * the functions of your contract. Note that they will not be pausable by\n * simply including this module, only once the modifiers are put in place.\n */\nabstract contract Pausable is Context {\n    /**\n     * @dev Emitted when the pause is triggered by `account`.\n     */\n    event Paused(address account);\n\n    /**\n     * @dev Emitted when the pause is lifted by `account`.\n     */\n    event Unpaused(address account);\n\n    bool private _paused;\n\n    /**\n     * @dev Initializes the contract in unpaused state.\n     */\n    constructor() {\n        _paused = false;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is not paused.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    modifier whenNotPaused() {\n        _requireNotPaused();\n        _;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is paused.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    modifier whenPaused() {\n        _requirePaused();\n        _;\n    }\n\n    /**\n     * @dev Returns true if the contract is paused, and false otherwise.\n     */\n    function paused() public view virtual returns (bool) {\n        return _paused;\n    }\n\n    /**\n     * @dev Throws if the contract is paused.\n     */\n    function _requireNotPaused() internal view virtual {\n        require(!paused(), \"Pausable: paused\");\n    }\n\n    /**\n     * @dev Throws if the contract is not paused.\n     */\n    function _requirePaused() internal view virtual {\n        require(paused(), \"Pausable: not paused\");\n    }\n\n    /**\n     * @dev Triggers stopped state.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    function _pause() internal virtual whenNotPaused {\n        _paused = true;\n        emit Paused(_msgSender());\n    }\n\n    /**\n     * @dev Returns to normal state.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    function _unpause() internal virtual whenPaused {\n        _paused = false;\n        emit Unpaused(_msgSender());\n    }\n}\n"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Address.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev The ETH balance of the account is not enough to perform the operation.\n     */\n    error AddressInsufficientBalance(address account);\n\n    /**\n     * @dev There's no code at `target` (it is not a contract).\n     */\n    error AddressEmptyCode(address target);\n\n    /**\n     * @dev A call to an address target failed. The target may have reverted.\n     */\n    error FailedInnerCall();\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        if (address(this).balance < amount) {\n            revert AddressInsufficientBalance(address(this));\n        }\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        if (!success) {\n            revert FailedInnerCall();\n        }\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason or custom error, it is bubbled\n     * up by this function (like regular Solidity function calls). However, if\n     * the call reverted with no returned reason, this function reverts with a\n     * {FailedInnerCall} error.\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     */\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\n        if (address(this).balance < value) {\n            revert AddressInsufficientBalance(address(this));\n        }\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\n     * was not a contract or bubbling up the revert reason (falling back to {FailedInnerCall}) in case of an\n     * unsuccessful call.\n     */\n    function verifyCallResultFromTarget(\n        address target,\n        bool success,\n        bytes memory returndata\n    ) internal view returns (bytes memory) {\n        if (!success) {\n            _revert(returndata);\n        } else {\n            // only check if target is a contract if the call was successful and the return data is empty\n            // otherwise we already know that it was a contract\n            if (returndata.length == 0 && target.code.length == 0) {\n                revert AddressEmptyCode(target);\n            }\n            return returndata;\n        }\n    }\n\n    /**\n     * @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\n     * revert reason or with a default {FailedInnerCall} error.\n     */\n    function verifyCallResult(bool success, bytes memory returndata) internal pure returns (bytes memory) {\n        if (!success) {\n            _revert(returndata);\n        } else {\n            return returndata;\n        }\n    }\n\n    /**\n     * @dev Reverts with returndata if present. Otherwise reverts with {FailedInnerCall}.\n     */\n    function _revert(bytes memory returndata) private pure {\n        // Look for revert reason and bubble it up if present\n        if (returndata.length > 0) {\n            // The easiest way to bubble the revert reason is using memory via assembly\n            /// @solidity memory-safe-assembly\n            assembly {\n                let returndata_size := mload(returndata)\n                revert(add(32, returndata), returndata_size)\n            }\n        } else {\n            revert FailedInnerCall();\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/IERC20Permit.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n * https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n *\n * Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n * presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n * need to send a transaction, and thus is not required to hold Ether at all.\n *\n * ==== Security Considerations\n *\n * There are two important considerations concerning the use of `permit`. The first is that a valid permit signature\n * expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be\n * considered as an intention to spend the allowance in any specific way. The second is that because permits have\n * built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should\n * take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be\n * generally recommended is:\n *\n * ```solidity\n * function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {\n *     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}\n *     doThing(..., value);\n * }\n *\n * function doThing(..., uint256 value) public {\n *     token.safeTransferFrom(msg.sender, address(this), value);\n *     ...\n * }\n * ```\n *\n * Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of\n * `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also\n * {SafeERC20-safeTransferFrom}).\n *\n * Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so\n * contracts should have entry points that don't rely on permit.\n */\ninterface IERC20Permit {\n    /**\n     * @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n     * given ``owner``'s signed approval.\n     *\n     * IMPORTANT: The same issues {IERC20-approve} has related to transaction\n     * ordering also apply here.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `deadline` must be a timestamp in the future.\n     * - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n     * over the EIP712-formatted function arguments.\n     * - the signature must use ``owner``'s current nonce (see {nonces}).\n     *\n     * For more information on the signature format, see the\n     * https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n     * section].\n     *\n     * CAUTION: See Security Considerations above.\n     */\n    function permit(\n        address owner,\n        address spender,\n        uint256 value,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) external;\n\n    /**\n     * @dev Returns the current nonce for `owner`. This value must be\n     * included whenever a signature is generated for {permit}.\n     *\n     * Every successful call to {permit} increases ``owner``'s nonce by one. This\n     * prevents a signature from being used multiple times.\n     */\n    function nonces(address owner) external view returns (uint256);\n\n    /**\n     * @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the address provided by the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"IERC1155Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/security/Pausable.sol": {
				"Pausable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Paused",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Unpaused",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "paused",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which allows children to implement an emergency stop mechanism that can be triggered by an authorized account. This module is used through inheritance. It will make available the modifiers `whenNotPaused` and `whenPaused`, which can be applied to the functions of your contract. Note that they will not be pausable by simply including this module, only once the modifiers are put in place.",
						"events": {
							"Paused(address)": {
								"details": "Emitted when the pause is triggered by `account`."
							},
							"Unpaused(address)": {
								"details": "Emitted when the pause is lifted by `account`."
							}
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract in unpaused state."
							},
							"paused()": {
								"details": "Returns true if the contract is paused, and false otherwise."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"paused()": "5c975abb"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which allows children to implement an emergency stop mechanism that can be triggered by an authorized account. This module is used through inheritance. It will make available the modifiers `whenNotPaused` and `whenPaused`, which can be applied to the functions of your contract. Note that they will not be pausable by simply including this module, only once the modifiers are put in place.\",\"events\":{\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract in unpaused state.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/security/Pausable.sol\":\"Pausable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/security/Pausable.sol\":{\"keccak256\":\"0x0849d93b16c9940beb286a7864ed02724b248b93e0d80ef6355af5ef15c64773\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ddabb16009cd17eaca3143feadf450ac13e72919ebe2ca50e00f61cb78bc004\",\"dweb:/ipfs/QmSPwPxX7d6TTWakN5jy5wsaGkS1y9TW8fuhGSraMkLk2B\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 302,
								"contract": "@openzeppelin/contracts/security/Pausable.sol:Pausable",
								"label": "_paused",
								"offset": 0,
								"slot": "0",
								"type": "t_bool"
							}
						],
						"types": {
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5703ccdeb7b1d685e375ed719117e9edf2ab4bc544f24f23b0d50ec82257229\",\"dweb:/ipfs/QmTdwkbQq7owpCiyuzE7eh5LrD2ddrBCZ5WHVsWPi1RrTS\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 415,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 421,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 423,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 425,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 427,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC20 standard.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol": {
				"IERC20Permit": {
					"abi": [
						{
							"inputs": [],
							"name": "DOMAIN_SEPARATOR",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "nonces",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "permit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[EIP-2612]. Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all. ==== Security Considerations There are two important considerations concerning the use of `permit`. The first is that a valid permit signature expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be considered as an intention to spend the allowance in any specific way. The second is that because permits have built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be generally recommended is: ```solidity function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}     doThing(..., value); } function doThing(..., uint256 value) public {     token.safeTransferFrom(msg.sender, address(this), value);     ... } ``` Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also {SafeERC20-safeTransferFrom}). Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so contracts should have entry points that don't rely on permit.",
						"kind": "dev",
						"methods": {
							"DOMAIN_SEPARATOR()": {
								"details": "Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}."
							},
							"nonces(address)": {
								"details": "Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times."
							},
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": {
								"details": "Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]. CAUTION: See Security Considerations above."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"DOMAIN_SEPARATOR()": "3644e515",
							"nonces(address)": "7ecebe00",
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": "d505accf"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[EIP-2612]. Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all. ==== Security Considerations There are two important considerations concerning the use of `permit`. The first is that a valid permit signature expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be considered as an intention to spend the allowance in any specific way. The second is that because permits have built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be generally recommended is: ```solidity function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}     doThing(..., value); } function doThing(..., uint256 value) public {     token.safeTransferFrom(msg.sender, address(this), value);     ... } ``` Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also {SafeERC20-safeTransferFrom}). Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so contracts should have entry points that don't rely on permit.\",\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\"},\"nonces(address)\":{\"details\":\"Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]. CAUTION: See Security Considerations above.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":\"IERC20Permit\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x6008dabfe393240d73d7dd7688033f72740d570aa422254d29a7dce8568f3aff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5196ec75139918c6c7bb4251b36395e668f1fa6d206beba7e7520e74913940d\",\"dweb:/ipfs/QmSyqjksXxmm2mCG6qRd1yuwLykypkSVBbnBnGqJRcuJMi\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"SafeERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "currentAllowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "requestedDecrease",
									"type": "uint256"
								}
							],
							"name": "SafeERC20FailedDecreaseAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "SafeERC20FailedOperation",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.",
						"errors": {
							"SafeERC20FailedDecreaseAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failed `decreaseAllowance` request."
								}
							],
							"SafeERC20FailedOperation(address)": [
								{
									"details": "An operation with an ERC20 token failed."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"title": "SafeERC20",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":751:5769  library SafeERC20 {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":751:5769  library SafeERC20 {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122000840fa72512133acbe1fa59dfc491535cd1a951920b11430d489aa1712b6a7864736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122000840fa72512133acbe1fa59dfc491535cd1a951920b11430d489aa1712b6a7864736f6c634300081a0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 STOP DUP5 0xF 0xA7 0x25 SLT SGT GASPRICE 0xCB 0xE1 STATICCALL MSIZE 0xDF 0xC4 SWAP2 MSTORE8 TLOAD 0xD1 0xA9 MLOAD SWAP3 SIGNEXTEND GT NUMBER 0xD BASEFEE SWAP11 LOG1 PUSH18 0x2B6A7864736F6C634300081A003300000000 ",
							"sourceMap": "751:5018:7:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122000840fa72512133acbe1fa59dfc491535cd1a951920b11430d489aa1712b6a7864736f6c634300081a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 STOP DUP5 0xF 0xA7 0x25 SLT SGT GASPRICE 0xCB 0xE1 STATICCALL MSIZE 0xDF 0xC4 SWAP2 MSTORE8 TLOAD 0xD1 0xA9 MLOAD SWAP3 SIGNEXTEND GT NUMBER 0xD BASEFEE SWAP11 LOG1 PUSH18 0x2B6A7864736F6C634300081A003300000000 ",
							"sourceMap": "751:5018:7:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"_callOptionalReturn(contract IERC20,bytes memory)": "infinite",
								"_callOptionalReturnBool(contract IERC20,bytes memory)": "infinite",
								"forceApprove(contract IERC20,address,uint256)": "infinite",
								"safeDecreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeIncreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeTransfer(contract IERC20,address,uint256)": "infinite",
								"safeTransferFrom(contract IERC20,address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH #[$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH [$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 7,
									"value": "B"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "CODECOPY",
									"source": 7
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "BYTE",
									"source": 7
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 7,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "tag",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "ADDRESS",
									"source": 7
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "MSTORE8",
									"source": 7
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "RETURN",
									"source": 7
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122000840fa72512133acbe1fa59dfc491535cd1a951920b11430d489aa1712b6a7864736f6c634300081a0033",
									".code": [
										{
											"begin": 751,
											"end": 5769,
											"name": "PUSHDEPLOYADDRESS",
											"source": 7
										},
										{
											"begin": 751,
											"end": 5769,
											"name": "ADDRESS",
											"source": 7
										},
										{
											"begin": 751,
											"end": 5769,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 751,
											"end": 5769,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 751,
											"end": 5769,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 751,
											"end": 5769,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 751,
											"end": 5769,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 751,
											"end": 5769,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 751,
											"end": 5769,
											"name": "REVERT",
											"source": 7
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/security/Pausable.sol",
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"contracts/real-estate-marketplace/Shares.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"currentAllowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"requestedDecrease\",\"type\":\"uint256\"}],\"name\":\"SafeERC20FailedDecreaseAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\",\"errors\":{\"SafeERC20FailedDecreaseAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failed `decreaseAllowance` request.\"}],\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC20 token failed.\"}]},\"kind\":\"dev\",\"methods\":{},\"title\":\"SafeERC20\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":\"SafeERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x6008dabfe393240d73d7dd7688033f72740d570aa422254d29a7dce8568f3aff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5196ec75139918c6c7bb4251b36395e668f1fa6d206beba7e7520e74913940d\",\"dweb:/ipfs/QmSyqjksXxmm2mCG6qRd1yuwLykypkSVBbnBnGqJRcuJMi\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x37bb49513c49c87c4642a891b13b63571bc87013dde806617aa1efb54605f386\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3036b3a83b7c48f96641f2a9002b9f2dcb6a5958dd670894ada21ae8229b3d0\",\"dweb:/ipfs/QmUNfSBdoVtjhETaUJCYcaC7pTMgbhht926tJ2uXJbiVd3\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245\",\"dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"Address": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "target",
									"type": "address"
								}
							],
							"name": "AddressEmptyCode",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "AddressInsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "FailedInnerCall",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"errors": {
							"AddressEmptyCode(address)": [
								{
									"details": "There's no code at `target` (it is not a contract)."
								}
							],
							"AddressInsufficientBalance(address)": [
								{
									"details": "The ETH balance of the account is not enough to perform the operation."
								}
							],
							"FailedInnerCall()": [
								{
									"details": "A call to an address target failed. The target may have reverted."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Address.sol\":195:6261  library Address {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Address.sol\":195:6261  library Address {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122088136072b9f4c078ed84d9aed48871292807a66bde8217a15371a57aab632c0064736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122088136072b9f4c078ed84d9aed48871292807a66bde8217a15371a57aab632c0064736f6c634300081a0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP9 SGT PUSH1 0x72 0xB9 DELEGATECALL 0xC0 PUSH25 0xED84D9AED48871292807A66BDE8217A15371A57AAB632C0064 PUSH20 0x6F6C634300081A00330000000000000000000000 ",
							"sourceMap": "195:6066:8:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122088136072b9f4c078ed84d9aed48871292807a66bde8217a15371a57aab632c0064736f6c634300081a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP9 SGT PUSH1 0x72 0xB9 DELEGATECALL 0xC0 PUSH25 0xED84D9AED48871292807A66BDE8217A15371A57AAB632C0064 PUSH20 0x6F6C634300081A00330000000000000000000000 ",
							"sourceMap": "195:6066:8:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"_revert(bytes memory)": "infinite",
								"functionCall(address,bytes memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionDelegateCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"sendValue(address payable,uint256)": "infinite",
								"verifyCallResult(bool,bytes memory)": "infinite",
								"verifyCallResultFromTarget(address,bool,bytes memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH #[$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH [$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 8,
									"value": "B"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "CODECOPY",
									"source": 8
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "BYTE",
									"source": 8
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 8,
									"value": "73"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "EQ",
									"source": 8
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 8,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 8,
									"value": "4"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "tag",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "ADDRESS",
									"source": 8
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 8,
									"value": "73"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "MSTORE8",
									"source": 8
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "RETURN",
									"source": 8
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122088136072b9f4c078ed84d9aed48871292807a66bde8217a15371a57aab632c0064736f6c634300081a0033",
									".code": [
										{
											"begin": 195,
											"end": 6261,
											"name": "PUSHDEPLOYADDRESS",
											"source": 8
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "ADDRESS",
											"source": 8
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "PUSH",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "REVERT",
											"source": 8
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/security/Pausable.sol",
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"contracts/real-estate-marketplace/Shares.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"AddressInsufficientBalance\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedInnerCall\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}],\"AddressInsufficientBalance(address)\":[{\"details\":\"The ETH balance of the account is not enough to perform the operation.\"}],\"FailedInnerCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245\",\"dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/math/Math.sol": {
				"Math": {
					"abi": [
						{
							"inputs": [],
							"name": "MathOverflowedMulDiv",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard math utilities missing in the Solidity language.",
						"errors": {
							"MathOverflowedMulDiv()": [
								{
									"details": "Muldiv operation overflow."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/math/Math.sol\":203:15117  library Math {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":203:15117  library Math {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220203246029dab93f34b327ba02915d37e6c29f598a14b59593a6c7ca26ac8c1c664736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220203246029dab93f34b327ba02915d37e6c29f598a14b59593a6c7ca26ac8c1c664736f6c634300081a0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 KECCAK256 ORIGIN CHAINID MUL SWAP14 0xAB SWAP4 RETURN 0x4B ORIGIN PUSH28 0xA02915D37E6C29F598A14B59593A6C7CA26AC8C1C664736F6C634300 ADDMOD BYTE STOP CALLER ",
							"sourceMap": "203:14914:10:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220203246029dab93f34b327ba02915d37e6c29f598a14b59593a6c7ca26ac8c1c664736f6c634300081a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 KECCAK256 ORIGIN CHAINID MUL SWAP14 0xAB SWAP4 RETURN 0x4B ORIGIN PUSH28 0xA02915D37E6C29F598A14B59593A6C7CA26AC8C1C664736F6C634300 ADDMOD BYTE STOP CALLER ",
							"sourceMap": "203:14914:10:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"average(uint256,uint256)": "infinite",
								"ceilDiv(uint256,uint256)": "infinite",
								"log10(uint256)": "infinite",
								"log10(uint256,enum Math.Rounding)": "infinite",
								"log2(uint256)": "infinite",
								"log2(uint256,enum Math.Rounding)": "infinite",
								"log256(uint256)": "infinite",
								"log256(uint256,enum Math.Rounding)": "infinite",
								"max(uint256,uint256)": "infinite",
								"min(uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256,enum Math.Rounding)": "infinite",
								"sqrt(uint256)": "infinite",
								"sqrt(uint256,enum Math.Rounding)": "infinite",
								"tryAdd(uint256,uint256)": "infinite",
								"tryDiv(uint256,uint256)": "infinite",
								"tryMod(uint256,uint256)": "infinite",
								"tryMul(uint256,uint256)": "infinite",
								"trySub(uint256,uint256)": "infinite",
								"unsignedRoundsUp(enum Math.Rounding)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH #[$]",
									"source": 10,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH [$]",
									"source": 10,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 10,
									"value": "B"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "CODECOPY",
									"source": 10
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "BYTE",
									"source": 10
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 10,
									"value": "73"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "EQ",
									"source": 10
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 10,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 10,
									"value": "4"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 10,
									"value": "24"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "tag",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "ADDRESS",
									"source": 10
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 10,
									"value": "73"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MSTORE8",
									"source": 10
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "RETURN",
									"source": 10
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220203246029dab93f34b327ba02915d37e6c29f598a14b59593a6c7ca26ac8c1c664736f6c634300081a0033",
									".code": [
										{
											"begin": 203,
											"end": 15117,
											"name": "PUSHDEPLOYADDRESS",
											"source": 10
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "ADDRESS",
											"source": 10
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "REVERT",
											"source": 10
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/security/Pausable.sol",
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"contracts/real-estate-marketplace/Shares.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"MathOverflowedMulDiv\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"errors\":{\"MathOverflowedMulDiv()\":[{\"details\":\"Muldiv operation overflow.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/Math.sol\":\"Math\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/real-estate-marketplace/Shares.sol": {
				"Shares": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Paused",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "investor",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "propertyId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "sharesIssued",
									"type": "uint256"
								}
							],
							"name": "SharesIssued",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "propertyId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "sharesTransferred",
									"type": "uint256"
								}
							],
							"name": "SharesTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Unpaused",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "basketShares",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "baskets",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "basketId",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "totalShares",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "basketId",
									"type": "uint256"
								},
								{
									"internalType": "uint256[]",
									"name": "propertyIds",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256",
									"name": "totalShares",
									"type": "uint256"
								}
							],
							"name": "createBasket",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "propertyId",
									"type": "uint256"
								}
							],
							"name": "getAvailableShares",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "basketId",
									"type": "uint256"
								}
							],
							"name": "getBasketDetails",
							"outputs": [
								{
									"components": [
										{
											"internalType": "uint256",
											"name": "basketId",
											"type": "uint256"
										},
										{
											"internalType": "uint256[]",
											"name": "propertyIds",
											"type": "uint256[]"
										},
										{
											"internalType": "uint256",
											"name": "totalShares",
											"type": "uint256"
										}
									],
									"internalType": "struct Shares.ShareBasket",
									"name": "",
									"type": "tuple"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "propertyId",
									"type": "uint256"
								}
							],
							"name": "getPropertyOwner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "propertyId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "shareholder",
									"type": "address"
								}
							],
							"name": "getShares",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "propertyId",
									"type": "uint256"
								}
							],
							"name": "getTotalShares",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "integrateWithExternalSystem",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "propertyId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "investor",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "shares",
									"type": "uint256"
								}
							],
							"name": "issuePropertyShares",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "basketId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "issueShares",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "pause",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "paused",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "propertyOwners",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "propertyShares",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "totalShares",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "availableShares",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "propertyId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "setPropertyOwner",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "propertyId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "shares",
									"type": "uint256"
								}
							],
							"name": "transferShares",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "unpause",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Paused(address)": {
								"details": "Emitted when the pause is triggered by `account`."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							},
							"Unpaused(address)": {
								"details": "Emitted when the pause is lifted by `account`."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"paused()": {
								"details": "Returns true if the contract is paused, and false otherwise."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/real-estate-marketplace/Shares.sol\":343:4159  contract Shares is ERC20, Ownable, Pausable {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/real-estate-marketplace/Shares.sol\":1153:1226  constructor() ERC20(\"PropertyShare\", \"SHARE\") Ownable(msg.sender) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"contracts/real-estate-marketplace/Shares.sol\":1207:1217  msg.sender */\n  caller\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1896:2009  constructor(string memory name_, string memory symbol_) {... */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x0d\n  dup2\n  mstore\n  0x20\n  add\n  0x50726f7065727479536861726500000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x05\n  dup2\n  mstore\n  0x20\n  add\n  0x5348415245000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1970:1975  name_ */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1962:1967  _name */\n  0x03\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1962:1975  _name = name_ */\n  swap1\n  dup2\n  tag_7\n  swap2\n  swap1\n  tag_8\n  jump\t// in\ntag_7:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1995:2002  symbol_ */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1985:1992  _symbol */\n  0x04\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1985:2002  _symbol = symbol_ */\n  swap1\n  dup2\n  tag_9\n  swap2\n  swap1\n  tag_8\n  jump\t// in\ntag_9:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1896:2009  constructor(string memory name_, string memory symbol_) {... */\n  pop\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1297:1298  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1285  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\n  tag_11\n  jumpi\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1350:1351  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_12\n  swap2\n  swap1\n  tag_13\n  jump\t// in\ntag_12:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\ntag_11:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  tag_14\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1392:1404  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1391  _transferOwnership */\n  shl(0x20, tag_15)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  0x20\n  shr\n  jump\t// in\ntag_14:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1225:1412  constructor(address initialOwner) {... */\n  pop\n    /* \"@openzeppelin/contracts/security/Pausable.sol\":1006:1011  false */\n  0x00\n    /* \"@openzeppelin/contracts/security/Pausable.sol\":996:1003  _paused */\n  0x05\n  0x14\n    /* \"@openzeppelin/contracts/security/Pausable.sol\":996:1011  _paused = false */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  iszero\n  iszero\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/real-estate-marketplace/Shares.sol\":343:4159  contract Shares is ERC20, Ownable, Pausable {... */\n  jump(tag_18)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\ntag_15:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n  0x05\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n  0x05\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7:106   */\ntag_20:\n    /* \"#utility.yul\":59:65   */\n  0x00\n    /* \"#utility.yul\":93:98   */\n  dup2\n    /* \"#utility.yul\":87:99   */\n  mload\n    /* \"#utility.yul\":77:99   */\n  swap1\n  pop\n    /* \"#utility.yul\":7:106   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":112:292   */\ntag_21:\n    /* \"#utility.yul\":160:237   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":157:158   */\n  0x00\n    /* \"#utility.yul\":150:238   */\n  mstore\n    /* \"#utility.yul\":257:261   */\n  0x41\n    /* \"#utility.yul\":254:255   */\n  0x04\n    /* \"#utility.yul\":247:262   */\n  mstore\n    /* \"#utility.yul\":281:285   */\n  0x24\n    /* \"#utility.yul\":278:279   */\n  0x00\n    /* \"#utility.yul\":271:286   */\n  revert\n    /* \"#utility.yul\":298:478   */\ntag_22:\n    /* \"#utility.yul\":346:423   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":343:344   */\n  0x00\n    /* \"#utility.yul\":336:424   */\n  mstore\n    /* \"#utility.yul\":443:447   */\n  0x22\n    /* \"#utility.yul\":440:441   */\n  0x04\n    /* \"#utility.yul\":433:448   */\n  mstore\n    /* \"#utility.yul\":467:471   */\n  0x24\n    /* \"#utility.yul\":464:465   */\n  0x00\n    /* \"#utility.yul\":457:472   */\n  revert\n    /* \"#utility.yul\":484:804   */\ntag_23:\n    /* \"#utility.yul\":528:534   */\n  0x00\n    /* \"#utility.yul\":565:566   */\n  0x02\n    /* \"#utility.yul\":559:563   */\n  dup3\n    /* \"#utility.yul\":555:567   */\n  div\n    /* \"#utility.yul\":545:567   */\n  swap1\n  pop\n    /* \"#utility.yul\":612:613   */\n  0x01\n    /* \"#utility.yul\":606:610   */\n  dup3\n    /* \"#utility.yul\":602:614   */\n  and\n    /* \"#utility.yul\":633:651   */\n  dup1\n    /* \"#utility.yul\":623:704   */\n  tag_48\n  jumpi\n    /* \"#utility.yul\":689:693   */\n  0x7f\n    /* \"#utility.yul\":681:687   */\n  dup3\n    /* \"#utility.yul\":677:694   */\n  and\n    /* \"#utility.yul\":667:694   */\n  swap2\n  pop\n    /* \"#utility.yul\":623:704   */\ntag_48:\n    /* \"#utility.yul\":751:753   */\n  0x20\n    /* \"#utility.yul\":743:749   */\n  dup3\n    /* \"#utility.yul\":740:754   */\n  lt\n    /* \"#utility.yul\":720:738   */\n  dup2\n    /* \"#utility.yul\":717:755   */\n  sub\n    /* \"#utility.yul\":714:798   */\n  tag_49\n  jumpi\n    /* \"#utility.yul\":770:788   */\n  tag_50\n  tag_22\n  jump\t// in\ntag_50:\n    /* \"#utility.yul\":714:798   */\ntag_49:\n    /* \"#utility.yul\":535:804   */\n  pop\n    /* \"#utility.yul\":484:804   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":810:951   */\ntag_24:\n    /* \"#utility.yul\":859:863   */\n  0x00\n    /* \"#utility.yul\":882:885   */\n  dup2\n    /* \"#utility.yul\":874:885   */\n  swap1\n  pop\n    /* \"#utility.yul\":905:908   */\n  dup2\n    /* \"#utility.yul\":902:903   */\n  0x00\n    /* \"#utility.yul\":895:909   */\n  mstore\n    /* \"#utility.yul\":939:943   */\n  0x20\n    /* \"#utility.yul\":936:937   */\n  0x00\n    /* \"#utility.yul\":926:944   */\n  keccak256\n    /* \"#utility.yul\":918:944   */\n  swap1\n  pop\n    /* \"#utility.yul\":810:951   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":957:1050   */\ntag_25:\n    /* \"#utility.yul\":994:1000   */\n  0x00\n    /* \"#utility.yul\":1041:1043   */\n  0x20\n    /* \"#utility.yul\":1036:1038   */\n  0x1f\n    /* \"#utility.yul\":1029:1034   */\n  dup4\n    /* \"#utility.yul\":1025:1039   */\n  add\n    /* \"#utility.yul\":1021:1044   */\n  div\n    /* \"#utility.yul\":1011:1044   */\n  swap1\n  pop\n    /* \"#utility.yul\":957:1050   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1056:1163   */\ntag_26:\n    /* \"#utility.yul\":1100:1108   */\n  0x00\n    /* \"#utility.yul\":1150:1155   */\n  dup3\n    /* \"#utility.yul\":1144:1148   */\n  dup3\n    /* \"#utility.yul\":1140:1156   */\n  shl\n    /* \"#utility.yul\":1119:1156   */\n  swap1\n  pop\n    /* \"#utility.yul\":1056:1163   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1169:1562   */\ntag_27:\n    /* \"#utility.yul\":1238:1244   */\n  0x00\n    /* \"#utility.yul\":1288:1289   */\n  0x08\n    /* \"#utility.yul\":1276:1286   */\n  dup4\n    /* \"#utility.yul\":1272:1290   */\n  mul\n    /* \"#utility.yul\":1311:1408   */\n  tag_55\n    /* \"#utility.yul\":1341:1407   */\n  0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":1330:1339   */\n  dup3\n    /* \"#utility.yul\":1311:1408   */\n  tag_26\n  jump\t// in\ntag_55:\n    /* \"#utility.yul\":1429:1468   */\n  tag_56\n    /* \"#utility.yul\":1459:1467   */\n  dup7\n    /* \"#utility.yul\":1448:1457   */\n  dup4\n    /* \"#utility.yul\":1429:1468   */\n  tag_26\n  jump\t// in\ntag_56:\n    /* \"#utility.yul\":1417:1468   */\n  swap6\n  pop\n    /* \"#utility.yul\":1501:1505   */\n  dup1\n    /* \"#utility.yul\":1497:1506   */\n  not\n    /* \"#utility.yul\":1490:1495   */\n  dup5\n    /* \"#utility.yul\":1486:1507   */\n  and\n    /* \"#utility.yul\":1477:1507   */\n  swap4\n  pop\n    /* \"#utility.yul\":1550:1554   */\n  dup1\n    /* \"#utility.yul\":1540:1548   */\n  dup7\n    /* \"#utility.yul\":1536:1555   */\n  and\n    /* \"#utility.yul\":1529:1534   */\n  dup5\n    /* \"#utility.yul\":1526:1556   */\n  or\n    /* \"#utility.yul\":1516:1556   */\n  swap3\n  pop\n    /* \"#utility.yul\":1245:1562   */\n  pop\n  pop\n    /* \"#utility.yul\":1169:1562   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1568:1645   */\ntag_28:\n    /* \"#utility.yul\":1605:1612   */\n  0x00\n    /* \"#utility.yul\":1634:1639   */\n  dup2\n    /* \"#utility.yul\":1623:1639   */\n  swap1\n  pop\n    /* \"#utility.yul\":1568:1645   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1651:1711   */\ntag_29:\n    /* \"#utility.yul\":1679:1682   */\n  0x00\n    /* \"#utility.yul\":1700:1705   */\n  dup2\n    /* \"#utility.yul\":1693:1705   */\n  swap1\n  pop\n    /* \"#utility.yul\":1651:1711   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1717:1859   */\ntag_30:\n    /* \"#utility.yul\":1767:1776   */\n  0x00\n    /* \"#utility.yul\":1800:1853   */\n  tag_60\n    /* \"#utility.yul\":1818:1852   */\n  tag_61\n    /* \"#utility.yul\":1827:1851   */\n  tag_62\n    /* \"#utility.yul\":1845:1850   */\n  dup5\n    /* \"#utility.yul\":1827:1851   */\n  tag_28\n  jump\t// in\ntag_62:\n    /* \"#utility.yul\":1818:1852   */\n  tag_29\n  jump\t// in\ntag_61:\n    /* \"#utility.yul\":1800:1853   */\n  tag_28\n  jump\t// in\ntag_60:\n    /* \"#utility.yul\":1787:1853   */\n  swap1\n  pop\n    /* \"#utility.yul\":1717:1859   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1865:1940   */\ntag_31:\n    /* \"#utility.yul\":1908:1911   */\n  0x00\n    /* \"#utility.yul\":1929:1934   */\n  dup2\n    /* \"#utility.yul\":1922:1934   */\n  swap1\n  pop\n    /* \"#utility.yul\":1865:1940   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1946:2215   */\ntag_32:\n    /* \"#utility.yul\":2056:2095   */\n  tag_65\n    /* \"#utility.yul\":2087:2094   */\n  dup4\n    /* \"#utility.yul\":2056:2095   */\n  tag_30\n  jump\t// in\ntag_65:\n    /* \"#utility.yul\":2117:2208   */\n  tag_66\n    /* \"#utility.yul\":2166:2207   */\n  tag_67\n    /* \"#utility.yul\":2190:2206   */\n  dup3\n    /* \"#utility.yul\":2166:2207   */\n  tag_31\n  jump\t// in\ntag_67:\n    /* \"#utility.yul\":2158:2164   */\n  dup5\n    /* \"#utility.yul\":2151:2155   */\n  dup5\n    /* \"#utility.yul\":2145:2156   */\n  sload\n    /* \"#utility.yul\":2117:2208   */\n  tag_27\n  jump\t// in\ntag_66:\n    /* \"#utility.yul\":2111:2115   */\n  dup3\n    /* \"#utility.yul\":2104:2209   */\n  sstore\n    /* \"#utility.yul\":2022:2215   */\n  pop\n    /* \"#utility.yul\":1946:2215   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2221:2294   */\ntag_33:\n    /* \"#utility.yul\":2266:2269   */\n  0x00\n    /* \"#utility.yul\":2221:2294   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":2300:2489   */\ntag_34:\n    /* \"#utility.yul\":2377:2409   */\n  tag_70\n  tag_33\n  jump\t// in\ntag_70:\n    /* \"#utility.yul\":2418:2483   */\n  tag_71\n    /* \"#utility.yul\":2476:2482   */\n  dup2\n    /* \"#utility.yul\":2468:2474   */\n  dup5\n    /* \"#utility.yul\":2462:2466   */\n  dup5\n    /* \"#utility.yul\":2418:2483   */\n  tag_32\n  jump\t// in\ntag_71:\n    /* \"#utility.yul\":2353:2489   */\n  pop\n    /* \"#utility.yul\":2300:2489   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2495:2681   */\ntag_35:\n    /* \"#utility.yul\":2555:2675   */\ntag_73:\n    /* \"#utility.yul\":2572:2575   */\n  dup2\n    /* \"#utility.yul\":2565:2570   */\n  dup2\n    /* \"#utility.yul\":2562:2576   */\n  lt\n    /* \"#utility.yul\":2555:2675   */\n  iszero\n  tag_75\n  jumpi\n    /* \"#utility.yul\":2626:2665   */\n  tag_76\n    /* \"#utility.yul\":2663:2664   */\n  0x00\n    /* \"#utility.yul\":2656:2661   */\n  dup3\n    /* \"#utility.yul\":2626:2665   */\n  tag_34\n  jump\t// in\ntag_76:\n    /* \"#utility.yul\":2599:2600   */\n  0x01\n    /* \"#utility.yul\":2592:2597   */\n  dup2\n    /* \"#utility.yul\":2588:2601   */\n  add\n    /* \"#utility.yul\":2579:2601   */\n  swap1\n  pop\n    /* \"#utility.yul\":2555:2675   */\n  jump(tag_73)\ntag_75:\n    /* \"#utility.yul\":2495:2681   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2687:3230   */\ntag_36:\n    /* \"#utility.yul\":2788:2790   */\n  0x1f\n    /* \"#utility.yul\":2783:2786   */\n  dup3\n    /* \"#utility.yul\":2780:2791   */\n  gt\n    /* \"#utility.yul\":2777:3223   */\n  iszero\n  tag_78\n  jumpi\n    /* \"#utility.yul\":2822:2860   */\n  tag_79\n    /* \"#utility.yul\":2854:2859   */\n  dup2\n    /* \"#utility.yul\":2822:2860   */\n  tag_24\n  jump\t// in\ntag_79:\n    /* \"#utility.yul\":2906:2935   */\n  tag_80\n    /* \"#utility.yul\":2924:2934   */\n  dup5\n    /* \"#utility.yul\":2906:2935   */\n  tag_25\n  jump\t// in\ntag_80:\n    /* \"#utility.yul\":2896:2904   */\n  dup2\n    /* \"#utility.yul\":2892:2936   */\n  add\n    /* \"#utility.yul\":3089:3091   */\n  0x20\n    /* \"#utility.yul\":3077:3087   */\n  dup6\n    /* \"#utility.yul\":3074:3092   */\n  lt\n    /* \"#utility.yul\":3071:3120   */\n  iszero\n  tag_81\n  jumpi\n    /* \"#utility.yul\":3110:3118   */\n  dup2\n    /* \"#utility.yul\":3095:3118   */\n  swap1\n  pop\n    /* \"#utility.yul\":3071:3120   */\ntag_81:\n    /* \"#utility.yul\":3133:3213   */\n  tag_82\n    /* \"#utility.yul\":3189:3211   */\n  tag_83\n    /* \"#utility.yul\":3207:3210   */\n  dup6\n    /* \"#utility.yul\":3189:3211   */\n  tag_25\n  jump\t// in\ntag_83:\n    /* \"#utility.yul\":3179:3187   */\n  dup4\n    /* \"#utility.yul\":3175:3212   */\n  add\n    /* \"#utility.yul\":3162:3173   */\n  dup3\n    /* \"#utility.yul\":3133:3213   */\n  tag_35\n  jump\t// in\ntag_82:\n    /* \"#utility.yul\":2792:3223   */\n  pop\n  pop\n    /* \"#utility.yul\":2777:3223   */\ntag_78:\n    /* \"#utility.yul\":2687:3230   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3236:3353   */\ntag_37:\n    /* \"#utility.yul\":3290:3298   */\n  0x00\n    /* \"#utility.yul\":3340:3345   */\n  dup3\n    /* \"#utility.yul\":3334:3338   */\n  dup3\n    /* \"#utility.yul\":3330:3346   */\n  shr\n    /* \"#utility.yul\":3309:3346   */\n  swap1\n  pop\n    /* \"#utility.yul\":3236:3353   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3359:3528   */\ntag_38:\n    /* \"#utility.yul\":3403:3409   */\n  0x00\n    /* \"#utility.yul\":3436:3487   */\n  tag_86\n    /* \"#utility.yul\":3484:3485   */\n  0x00\n    /* \"#utility.yul\":3480:3486   */\n  not\n    /* \"#utility.yul\":3472:3477   */\n  dup5\n    /* \"#utility.yul\":3469:3470   */\n  0x08\n    /* \"#utility.yul\":3465:3478   */\n  mul\n    /* \"#utility.yul\":3436:3487   */\n  tag_37\n  jump\t// in\ntag_86:\n    /* \"#utility.yul\":3432:3488   */\n  not\n    /* \"#utility.yul\":3517:3521   */\n  dup1\n    /* \"#utility.yul\":3511:3515   */\n  dup4\n    /* \"#utility.yul\":3507:3522   */\n  and\n    /* \"#utility.yul\":3497:3522   */\n  swap2\n  pop\n    /* \"#utility.yul\":3410:3528   */\n  pop\n    /* \"#utility.yul\":3359:3528   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3533:3828   */\ntag_39:\n    /* \"#utility.yul\":3609:3613   */\n  0x00\n    /* \"#utility.yul\":3755:3784   */\n  tag_88\n    /* \"#utility.yul\":3780:3783   */\n  dup4\n    /* \"#utility.yul\":3774:3778   */\n  dup4\n    /* \"#utility.yul\":3755:3784   */\n  tag_38\n  jump\t// in\ntag_88:\n    /* \"#utility.yul\":3747:3784   */\n  swap2\n  pop\n    /* \"#utility.yul\":3817:3820   */\n  dup3\n    /* \"#utility.yul\":3814:3815   */\n  0x02\n    /* \"#utility.yul\":3810:3821   */\n  mul\n    /* \"#utility.yul\":3804:3808   */\n  dup3\n    /* \"#utility.yul\":3801:3822   */\n  or\n    /* \"#utility.yul\":3793:3822   */\n  swap1\n  pop\n    /* \"#utility.yul\":3533:3828   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3833:5228   */\ntag_8:\n    /* \"#utility.yul\":3950:3987   */\n  tag_90\n    /* \"#utility.yul\":3983:3986   */\n  dup3\n    /* \"#utility.yul\":3950:3987   */\n  tag_20\n  jump\t// in\ntag_90:\n    /* \"#utility.yul\":4052:4070   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":4044:4050   */\n  dup2\n    /* \"#utility.yul\":4041:4071   */\n  gt\n    /* \"#utility.yul\":4038:4094   */\n  iszero\n  tag_91\n  jumpi\n    /* \"#utility.yul\":4074:4092   */\n  tag_92\n  tag_21\n  jump\t// in\ntag_92:\n    /* \"#utility.yul\":4038:4094   */\ntag_91:\n    /* \"#utility.yul\":4118:4156   */\n  tag_93\n    /* \"#utility.yul\":4150:4154   */\n  dup3\n    /* \"#utility.yul\":4144:4155   */\n  sload\n    /* \"#utility.yul\":4118:4156   */\n  tag_23\n  jump\t// in\ntag_93:\n    /* \"#utility.yul\":4203:4270   */\n  tag_94\n    /* \"#utility.yul\":4263:4269   */\n  dup3\n    /* \"#utility.yul\":4255:4261   */\n  dup3\n    /* \"#utility.yul\":4249:4253   */\n  dup6\n    /* \"#utility.yul\":4203:4270   */\n  tag_36\n  jump\t// in\ntag_94:\n    /* \"#utility.yul\":4297:4298   */\n  0x00\n    /* \"#utility.yul\":4321:4325   */\n  0x20\n    /* \"#utility.yul\":4308:4325   */\n  swap1\n  pop\n    /* \"#utility.yul\":4353:4355   */\n  0x1f\n    /* \"#utility.yul\":4345:4351   */\n  dup4\n    /* \"#utility.yul\":4342:4356   */\n  gt\n    /* \"#utility.yul\":4370:4371   */\n  0x01\n    /* \"#utility.yul\":4365:4983   */\n  dup2\n  eq\n  tag_96\n  jumpi\n    /* \"#utility.yul\":5027:5028   */\n  0x00\n    /* \"#utility.yul\":5044:5050   */\n  dup5\n    /* \"#utility.yul\":5041:5118   */\n  iszero\n  tag_97\n  jumpi\n    /* \"#utility.yul\":5093:5102   */\n  dup3\n    /* \"#utility.yul\":5088:5091   */\n  dup8\n    /* \"#utility.yul\":5084:5103   */\n  add\n    /* \"#utility.yul\":5078:5104   */\n  mload\n    /* \"#utility.yul\":5069:5104   */\n  swap1\n  pop\n    /* \"#utility.yul\":5041:5118   */\ntag_97:\n    /* \"#utility.yul\":5144:5211   */\n  tag_98\n    /* \"#utility.yul\":5204:5210   */\n  dup6\n    /* \"#utility.yul\":5197:5202   */\n  dup3\n    /* \"#utility.yul\":5144:5211   */\n  tag_39\n  jump\t// in\ntag_98:\n    /* \"#utility.yul\":5138:5142   */\n  dup7\n    /* \"#utility.yul\":5131:5212   */\n  sstore\n    /* \"#utility.yul\":5000:5222   */\n  pop\n    /* \"#utility.yul\":4335:5222   */\n  jump(tag_95)\n    /* \"#utility.yul\":4365:4983   */\ntag_96:\n    /* \"#utility.yul\":4417:4421   */\n  0x1f\n    /* \"#utility.yul\":4413:4422   */\n  not\n    /* \"#utility.yul\":4405:4411   */\n  dup5\n    /* \"#utility.yul\":4401:4423   */\n  and\n    /* \"#utility.yul\":4451:4488   */\n  tag_99\n    /* \"#utility.yul\":4483:4487   */\n  dup7\n    /* \"#utility.yul\":4451:4488   */\n  tag_24\n  jump\t// in\ntag_99:\n    /* \"#utility.yul\":4510:4511   */\n  0x00\n    /* \"#utility.yul\":4524:4732   */\ntag_100:\n    /* \"#utility.yul\":4538:4545   */\n  dup3\n    /* \"#utility.yul\":4535:4536   */\n  dup2\n    /* \"#utility.yul\":4532:4546   */\n  lt\n    /* \"#utility.yul\":4524:4732   */\n  iszero\n  tag_102\n  jumpi\n    /* \"#utility.yul\":4617:4626   */\n  dup5\n    /* \"#utility.yul\":4612:4615   */\n  dup10\n    /* \"#utility.yul\":4608:4627   */\n  add\n    /* \"#utility.yul\":4602:4628   */\n  mload\n    /* \"#utility.yul\":4594:4600   */\n  dup3\n    /* \"#utility.yul\":4587:4629   */\n  sstore\n    /* \"#utility.yul\":4668:4669   */\n  0x01\n    /* \"#utility.yul\":4660:4666   */\n  dup3\n    /* \"#utility.yul\":4656:4670   */\n  add\n    /* \"#utility.yul\":4646:4670   */\n  swap2\n  pop\n    /* \"#utility.yul\":4715:4717   */\n  0x20\n    /* \"#utility.yul\":4704:4713   */\n  dup6\n    /* \"#utility.yul\":4700:4718   */\n  add\n    /* \"#utility.yul\":4687:4718   */\n  swap5\n  pop\n    /* \"#utility.yul\":4561:4565   */\n  0x20\n    /* \"#utility.yul\":4558:4559   */\n  dup2\n    /* \"#utility.yul\":4554:4566   */\n  add\n    /* \"#utility.yul\":4549:4566   */\n  swap1\n  pop\n    /* \"#utility.yul\":4524:4732   */\n  jump(tag_100)\ntag_102:\n    /* \"#utility.yul\":4760:4766   */\n  dup7\n    /* \"#utility.yul\":4751:4758   */\n  dup4\n    /* \"#utility.yul\":4748:4767   */\n  lt\n    /* \"#utility.yul\":4745:4924   */\n  iszero\n  tag_103\n  jumpi\n    /* \"#utility.yul\":4818:4827   */\n  dup5\n    /* \"#utility.yul\":4813:4816   */\n  dup10\n    /* \"#utility.yul\":4809:4828   */\n  add\n    /* \"#utility.yul\":4803:4829   */\n  mload\n    /* \"#utility.yul\":4861:4909   */\n  tag_104\n    /* \"#utility.yul\":4903:4907   */\n  0x1f\n    /* \"#utility.yul\":4895:4901   */\n  dup10\n    /* \"#utility.yul\":4891:4908   */\n  and\n    /* \"#utility.yul\":4880:4889   */\n  dup3\n    /* \"#utility.yul\":4861:4909   */\n  tag_38\n  jump\t// in\ntag_104:\n    /* \"#utility.yul\":4853:4859   */\n  dup4\n    /* \"#utility.yul\":4846:4910   */\n  sstore\n    /* \"#utility.yul\":4768:4924   */\n  pop\n    /* \"#utility.yul\":4745:4924   */\ntag_103:\n    /* \"#utility.yul\":4970:4971   */\n  0x01\n    /* \"#utility.yul\":4966:4967   */\n  0x02\n    /* \"#utility.yul\":4958:4964   */\n  dup9\n    /* \"#utility.yul\":4954:4968   */\n  mul\n    /* \"#utility.yul\":4950:4972   */\n  add\n    /* \"#utility.yul\":4944:4948   */\n  dup9\n    /* \"#utility.yul\":4937:4973   */\n  sstore\n    /* \"#utility.yul\":4372:4983   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":4335:5222   */\ntag_95:\n  pop\n    /* \"#utility.yul\":3925:5228   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":3833:5228   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5234:5360   */\ntag_40:\n    /* \"#utility.yul\":5271:5278   */\n  0x00\n    /* \"#utility.yul\":5311:5353   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":5304:5309   */\n  dup3\n    /* \"#utility.yul\":5300:5354   */\n  and\n    /* \"#utility.yul\":5289:5354   */\n  swap1\n  pop\n    /* \"#utility.yul\":5234:5360   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5366:5462   */\ntag_41:\n    /* \"#utility.yul\":5403:5410   */\n  0x00\n    /* \"#utility.yul\":5432:5456   */\n  tag_107\n    /* \"#utility.yul\":5450:5455   */\n  dup3\n    /* \"#utility.yul\":5432:5456   */\n  tag_40\n  jump\t// in\ntag_107:\n    /* \"#utility.yul\":5421:5456   */\n  swap1\n  pop\n    /* \"#utility.yul\":5366:5462   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5468:5586   */\ntag_42:\n    /* \"#utility.yul\":5555:5579   */\n  tag_109\n    /* \"#utility.yul\":5573:5578   */\n  dup2\n    /* \"#utility.yul\":5555:5579   */\n  tag_41\n  jump\t// in\ntag_109:\n    /* \"#utility.yul\":5550:5553   */\n  dup3\n    /* \"#utility.yul\":5543:5580   */\n  mstore\n    /* \"#utility.yul\":5468:5586   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5592:5814   */\ntag_13:\n    /* \"#utility.yul\":5685:5689   */\n  0x00\n    /* \"#utility.yul\":5723:5725   */\n  0x20\n    /* \"#utility.yul\":5712:5721   */\n  dup3\n    /* \"#utility.yul\":5708:5726   */\n  add\n    /* \"#utility.yul\":5700:5726   */\n  swap1\n  pop\n    /* \"#utility.yul\":5736:5807   */\n  tag_111\n    /* \"#utility.yul\":5804:5805   */\n  0x00\n    /* \"#utility.yul\":5793:5802   */\n  dup4\n    /* \"#utility.yul\":5789:5806   */\n  add\n    /* \"#utility.yul\":5780:5786   */\n  dup5\n    /* \"#utility.yul\":5736:5807   */\n  tag_42\n  jump\t// in\ntag_111:\n    /* \"#utility.yul\":5592:5814   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"contracts/real-estate-marketplace/Shares.sol\":343:4159  contract Shares is ERC20, Ownable, Pausable {... */\ntag_18:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/real-estate-marketplace/Shares.sol\":343:4159  contract Shares is ERC20, Ownable, Pausable {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x8456cb59\n      gt\n      tag_33\n      jumpi\n      dup1\n      0xb543cf38\n      gt\n      tag_34\n      jumpi\n      dup1\n      0xdd8aa6f6\n      gt\n      tag_35\n      jumpi\n      dup1\n      0xdd8aa6f6\n      eq\n      tag_29\n      jumpi\n      dup1\n      0xe34fc531\n      eq\n      tag_30\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_31\n      jumpi\n      dup1\n      0xff03e8c2\n      eq\n      tag_32\n      jumpi\n      jump(tag_2)\n    tag_35:\n      dup1\n      0xb543cf38\n      eq\n      tag_25\n      jumpi\n      dup1\n      0xb7b551ed\n      eq\n      tag_26\n      jumpi\n      dup1\n      0xdcd9d12d\n      eq\n      tag_27\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_28\n      jumpi\n      jump(tag_2)\n    tag_34:\n      dup1\n      0x8da5cb5b\n      gt\n      tag_36\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_21\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_22\n      jumpi\n      dup1\n      0xa60ed374\n      eq\n      tag_23\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_24\n      jumpi\n      jump(tag_2)\n    tag_36:\n      dup1\n      0x8456cb59\n      eq\n      tag_18\n      jumpi\n      dup1\n      0x84b9a6e6\n      eq\n      tag_19\n      jumpi\n      dup1\n      0x85fff858\n      eq\n      tag_20\n      jumpi\n      jump(tag_2)\n    tag_33:\n      dup1\n      0x51111b72\n      gt\n      tag_37\n      jumpi\n      dup1\n      0x70a08231\n      gt\n      tag_38\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_15\n      jumpi\n      dup1\n      0x75c0b9fe\n      eq\n      tag_16\n      jumpi\n      dup1\n      0x7f2af083\n      eq\n      tag_17\n      jumpi\n      jump(tag_2)\n    tag_38:\n      dup1\n      0x51111b72\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x5813a683\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x5c975abb\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x5dfe7721\n      eq\n      tag_13\n      jumpi\n      jump(tag_2)\n    tag_37:\n      dup1\n      0x23b872dd\n      gt\n      tag_39\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x3f4ba83a\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x4885cf0a\n      eq\n      tag_9\n      jumpi\n      jump(tag_2)\n    tag_39:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_5\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2074:2163  function name() public view virtual returns (string memory) {... */\n    tag_3:\n      tag_40\n      tag_41\n      jump\t// in\n    tag_40:\n      mload(0x40)\n      tag_42\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_42:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4293:4479  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_4:\n      tag_44\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_45\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_45:\n      tag_47\n      jump\t// in\n    tag_44:\n      mload(0x40)\n      tag_48\n      swap2\n      swap1\n      tag_49\n      jump\t// in\n    tag_48:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3144:3241  function totalSupply() public view virtual returns (uint256) {... */\n    tag_5:\n      tag_50\n      tag_51\n      jump\t// in\n    tag_50:\n      mload(0x40)\n      tag_52\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_52:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5039:5283  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_6:\n      tag_54\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_55\n      swap2\n      swap1\n      tag_56\n      jump\t// in\n    tag_55:\n      tag_57\n      jump\t// in\n    tag_54:\n      mload(0x40)\n      tag_58\n      swap2\n      swap1\n      tag_49\n      jump\t// in\n    tag_58:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3002:3084  function decimals() public view virtual returns (uint8) {... */\n    tag_7:\n      tag_59\n      tag_60\n      jump\t// in\n    tag_59:\n      mload(0x40)\n      tag_61\n      swap2\n      swap1\n      tag_62\n      jump\t// in\n    tag_61:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/real-estate-marketplace/Shares.sol\":3929:3994  function unpause() external onlyOwner {... */\n    tag_8:\n      tag_63\n      tag_64\n      jump\t// in\n    tag_63:\n      stop\n        /* \"contracts/real-estate-marketplace/Shares.sol\":771:818  mapping(uint256 => uint256) public basketShares */\n    tag_9:\n      tag_65\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_66\n      swap2\n      swap1\n      tag_67\n      jump\t// in\n    tag_66:\n      tag_68\n      jump\t// in\n    tag_65:\n      mload(0x40)\n      tag_69\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_69:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/real-estate-marketplace/Shares.sol\":1232:1556  function createBasket(uint256 basketId, uint256[] memory propertyIds, uint256 totalShares) external onlyOwner {... */\n    tag_10:\n      tag_70\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_71\n      swap2\n      swap1\n      tag_72\n      jump\t// in\n    tag_71:\n      tag_73\n      jump\t// in\n    tag_70:\n      stop\n        /* \"contracts/real-estate-marketplace/Shares.sol\":3528:3722  function setPropertyOwner(uint256 propertyId, address owner) external onlyOwner {... */\n    tag_11:\n      tag_74\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_75\n      swap2\n      swap1\n      tag_76\n      jump\t// in\n    tag_75:\n      tag_77\n      jump\t// in\n    tag_74:\n      stop\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1615:1699  function paused() public view virtual returns (bool) {... */\n    tag_12:\n      tag_78\n      tag_79\n      jump\t// in\n    tag_78:\n      mload(0x40)\n      tag_80\n      swap2\n      swap1\n      tag_49\n      jump\t// in\n    tag_80:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/real-estate-marketplace/Shares.sol\":4000:4157  function integrateWithExternalSystem(uint256 /* propertyId */) external pure returns (bool) {... */\n    tag_13:\n      tag_81\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_82\n      swap2\n      swap1\n      tag_67\n      jump\t// in\n    tag_82:\n      tag_83\n      jump\t// in\n    tag_81:\n      mload(0x40)\n      tag_84\n      swap2\n      swap1\n      tag_49\n      jump\t// in\n    tag_84:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3299:3415  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_14:\n      tag_85\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_86\n      swap2\n      swap1\n      tag_87\n      jump\t// in\n    tag_86:\n      tag_88\n      jump\t// in\n    tag_85:\n      mload(0x40)\n      tag_89\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_89:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_15:\n      tag_90\n      tag_91\n      jump\t// in\n    tag_90:\n      stop\n        /* \"contracts/real-estate-marketplace/Shares.sol\":3058:3226  function getShares(uint256 propertyId, address shareholder) external view returns (uint256) {... */\n    tag_16:\n      tag_92\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_93\n      swap2\n      swap1\n      tag_76\n      jump\t// in\n    tag_93:\n      tag_94\n      jump\t// in\n    tag_92:\n      mload(0x40)\n      tag_95\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_95:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/real-estate-marketplace/Shares.sol\":886:935  mapping(uint256 => address) public propertyOwners */\n    tag_17:\n      tag_96\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_97\n      swap2\n      swap1\n      tag_67\n      jump\t// in\n    tag_97:\n      tag_98\n      jump\t// in\n    tag_96:\n      mload(0x40)\n      tag_99\n      swap2\n      swap1\n      tag_100\n      jump\t// in\n    tag_99:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/real-estate-marketplace/Shares.sol\":3862:3923  function pause() external onlyOwner {... */\n    tag_18:\n      tag_101\n      tag_102\n      jump\t// in\n    tag_101:\n      stop\n        /* \"contracts/real-estate-marketplace/Shares.sol\":2521:3052  function transferShares(uint256 propertyId, address to, uint256 shares) external whenNotPaused {... */\n    tag_19:\n      tag_103\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_104\n      swap2\n      swap1\n      tag_105\n      jump\t// in\n    tag_104:\n      tag_106\n      jump\t// in\n    tag_103:\n      stop\n        /* \"contracts/real-estate-marketplace/Shares.sol\":3232:3370  function getTotalShares(uint256 propertyId) external view returns (uint256) {... */\n    tag_20:\n      tag_107\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_108\n      swap2\n      swap1\n      tag_67\n      jump\t// in\n    tag_108:\n      tag_109\n      jump\t// in\n    tag_107:\n      mload(0x40)\n      tag_110\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_110:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_21:\n      tag_111\n      tag_112\n      jump\t// in\n    tag_111:\n      mload(0x40)\n      tag_113\n      swap2\n      swap1\n      tag_100\n      jump\t// in\n    tag_113:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2276:2369  function symbol() public view virtual returns (string memory) {... */\n    tag_22:\n      tag_114\n      tag_115\n      jump\t// in\n    tag_114:\n      mload(0x40)\n      tag_116\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_116:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/real-estate-marketplace/Shares.sol\":719:765  mapping(uint256 => ShareBasket) public baskets */\n    tag_23:\n      tag_117\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_118\n      swap2\n      swap1\n      tag_67\n      jump\t// in\n    tag_118:\n      tag_119\n      jump\t// in\n    tag_117:\n      mload(0x40)\n      tag_120\n      swap3\n      swap2\n      swap1\n      tag_121\n      jump\t// in\n    tag_120:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3610:3788  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_24:\n      tag_122\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_123\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_123:\n      tag_124\n      jump\t// in\n    tag_122:\n      mload(0x40)\n      tag_125\n      swap2\n      swap1\n      tag_49\n      jump\t// in\n    tag_125:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/real-estate-marketplace/Shares.sol\":1948:2515  function issuePropertyShares(uint256 propertyId, address investor, uint256 shares) external onlyOwner whenNotPaused {... */\n    tag_25:\n      tag_126\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_127\n      swap2\n      swap1\n      tag_105\n      jump\t// in\n    tag_127:\n      tag_128\n      jump\t// in\n    tag_126:\n      stop\n        /* \"contracts/real-estate-marketplace/Shares.sol\":824:880  mapping(uint256 => PropertyShares) public propertyShares */\n    tag_26:\n      tag_129\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_130\n      swap2\n      swap1\n      tag_67\n      jump\t// in\n    tag_130:\n      tag_131\n      jump\t// in\n    tag_129:\n      mload(0x40)\n      tag_132\n      swap3\n      swap2\n      swap1\n      tag_121\n      jump\t// in\n    tag_132:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/real-estate-marketplace/Shares.sol\":3376:3522  function getAvailableShares(uint256 propertyId) external view returns (uint256) {... */\n    tag_27:\n      tag_133\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_134\n      swap2\n      swap1\n      tag_67\n      jump\t// in\n    tag_134:\n      tag_135\n      jump\t// in\n    tag_133:\n      mload(0x40)\n      tag_136\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_136:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3846:3986  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_28:\n      tag_137\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_138\n      swap2\n      swap1\n      tag_139\n      jump\t// in\n    tag_138:\n      tag_140\n      jump\t// in\n    tag_137:\n      mload(0x40)\n      tag_141\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_141:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/real-estate-marketplace/Shares.sol\":1562:1808  function issueShares(uint256 basketId, address to, uint256 amount) external onlyOwner {... */\n    tag_29:\n      tag_142\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_143\n      swap2\n      swap1\n      tag_105\n      jump\t// in\n    tag_143:\n      tag_144\n      jump\t// in\n    tag_142:\n      stop\n        /* \"contracts/real-estate-marketplace/Shares.sol\":3728:3856  function getPropertyOwner(uint256 propertyId) external view returns (address) {... */\n    tag_30:\n      tag_145\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_146\n      swap2\n      swap1\n      tag_67\n      jump\t// in\n    tag_146:\n      tag_147\n      jump\t// in\n    tag_145:\n      mload(0x40)\n      tag_148\n      swap2\n      swap1\n      tag_100\n      jump\t// in\n    tag_148:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_31:\n      tag_149\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_150\n      swap2\n      swap1\n      tag_87\n      jump\t// in\n    tag_150:\n      tag_151\n      jump\t// in\n    tag_149:\n      stop\n        /* \"contracts/real-estate-marketplace/Shares.sol\":1814:1942  function getBasketDetails(uint256 basketId) external view returns (ShareBasket memory) {... */\n    tag_32:\n      tag_152\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_153\n      swap2\n      swap1\n      tag_67\n      jump\t// in\n    tag_153:\n      tag_154\n      jump\t// in\n    tag_152:\n      mload(0x40)\n      tag_155\n      swap2\n      swap1\n      tag_156\n      jump\t// in\n    tag_155:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2074:2163  function name() public view virtual returns (string memory) {... */\n    tag_41:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2119:2132  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2151:2156  _name */\n      0x03\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2144:2156  return _name */\n      dup1\n      sload\n      tag_158\n      swap1\n      tag_159\n      jump\t// in\n    tag_158:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_160\n      swap1\n      tag_159\n      jump\t// in\n    tag_160:\n      dup1\n      iszero\n      tag_161\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_162\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_161)\n    tag_162:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_163:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_163\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_161:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2074:2163  function name() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4293:4479  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_47:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4366:4370  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4382:4395  address owner */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4398:4410  _msgSender() */\n      tag_165\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4398:4408  _msgSender */\n      tag_166\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4398:4410  _msgSender() */\n      jump\t// in\n    tag_165:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4382:4410  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4420:4451  _approve(owner, spender, value) */\n      tag_167\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4429:4434  owner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4436:4443  spender */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4445:4450  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4420:4428  _approve */\n      tag_168\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4420:4451  _approve(owner, spender, value) */\n      jump\t// in\n    tag_167:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4468:4472  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4461:4472  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4293:4479  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3144:3241  function totalSupply() public view virtual returns (uint256) {... */\n    tag_51:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3196:3203  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3222:3234  _totalSupply */\n      sload(0x02)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3215:3234  return _totalSupply */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3144:3241  function totalSupply() public view virtual returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5039:5283  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_57:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5126:5130  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5142:5157  address spender */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5160:5172  _msgSender() */\n      tag_171\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5160:5170  _msgSender */\n      tag_166\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5160:5172  _msgSender() */\n      jump\t// in\n    tag_171:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5142:5172  address spender = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5182:5219  _spendAllowance(from, spender, value) */\n      tag_172\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5198:5202  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5204:5211  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5213:5218  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5182:5197  _spendAllowance */\n      tag_173\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5182:5219  _spendAllowance(from, spender, value) */\n      jump\t// in\n    tag_172:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5229:5255  _transfer(from, to, value) */\n      tag_174\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5239:5243  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5245:5247  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5249:5254  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5229:5238  _transfer */\n      tag_175\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5229:5255  _transfer(from, to, value) */\n      jump\t// in\n    tag_174:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5272:5276  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5265:5276  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5039:5283  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3002:3084  function decimals() public view virtual returns (uint8) {... */\n    tag_60:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3051:3056  uint8 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3075:3077  18 */\n      0x12\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3068:3077  return 18 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3002:3084  function decimals() public view virtual returns (uint8) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/real-estate-marketplace/Shares.sol\":3929:3994  function unpause() external onlyOwner {... */\n    tag_64:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_178\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_179\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_178:\n        /* \"contracts/real-estate-marketplace/Shares.sol\":3977:3987  _unpause() */\n      tag_181\n        /* \"contracts/real-estate-marketplace/Shares.sol\":3977:3985  _unpause */\n      tag_182\n        /* \"contracts/real-estate-marketplace/Shares.sol\":3977:3987  _unpause() */\n      jump\t// in\n    tag_181:\n        /* \"contracts/real-estate-marketplace/Shares.sol\":3929:3994  function unpause() external onlyOwner {... */\n      jump\t// out\n        /* \"contracts/real-estate-marketplace/Shares.sol\":771:818  mapping(uint256 => uint256) public basketShares */\n    tag_68:\n      mstore(0x20, 0x07)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"contracts/real-estate-marketplace/Shares.sol\":1232:1556  function createBasket(uint256 basketId, uint256[] memory propertyIds, uint256 totalShares) external onlyOwner {... */\n    tag_73:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_184\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_179\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_184:\n        /* \"contracts/real-estate-marketplace/Shares.sol\":1372:1503  ShareBasket({... */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n        /* \"contracts/real-estate-marketplace/Shares.sol\":1408:1416  basketId */\n      dup5\n        /* \"contracts/real-estate-marketplace/Shares.sol\":1372:1503  ShareBasket({... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/real-estate-marketplace/Shares.sol\":1443:1454  propertyIds */\n      dup4\n        /* \"contracts/real-estate-marketplace/Shares.sol\":1372:1503  ShareBasket({... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/real-estate-marketplace/Shares.sol\":1481:1492  totalShares */\n      dup3\n        /* \"contracts/real-estate-marketplace/Shares.sol\":1372:1503  ShareBasket({... */\n      dup2\n      mstore\n      pop\n        /* \"contracts/real-estate-marketplace/Shares.sol\":1352:1359  baskets */\n      0x06\n        /* \"contracts/real-estate-marketplace/Shares.sol\":1352:1369  baskets[basketId] */\n      0x00\n        /* \"contracts/real-estate-marketplace/Shares.sol\":1360:1368  basketId */\n      dup6\n        /* \"contracts/real-estate-marketplace/Shares.sol\":1352:1369  baskets[basketId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/real-estate-marketplace/Shares.sol\":1352:1503  baskets[basketId] = ShareBasket({... */\n      0x00\n      dup3\n      add\n      mload\n      dup2\n      0x00\n      add\n      sstore\n      0x20\n      dup3\n      add\n      mload\n      dup2\n      0x01\n      add\n      swap1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      tag_186\n      swap3\n      swap2\n      swap1\n      tag_187\n      jump\t// in\n    tag_186:\n      pop\n      0x40\n      dup3\n      add\n      mload\n      dup2\n      0x02\n      add\n      sstore\n      swap1\n      pop\n      pop\n        /* \"contracts/real-estate-marketplace/Shares.sol\":1538:1549  totalShares */\n      dup1\n        /* \"contracts/real-estate-marketplace/Shares.sol\":1513:1525  basketShares */\n      0x07\n        /* \"contracts/real-estate-marketplace/Shares.sol\":1513:1535  basketShares[basketId] */\n      0x00\n        /* \"contracts/real-estate-marketplace/Shares.sol\":1526:1534  basketId */\n      dup6\n        /* \"contracts/real-estate-marketplace/Shares.sol\":1513:1535  basketShares[basketId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/real-estate-marketplace/Shares.sol\":1513:1549  basketShares[basketId] = totalShares */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/real-estate-marketplace/Shares.sol\":1232:1556  function createBasket(uint256 basketId, uint256[] memory propertyIds, uint256 totalShares) external onlyOwner {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/real-estate-marketplace/Shares.sol\":3528:3722  function setPropertyOwner(uint256 propertyId, address owner) external onlyOwner {... */\n    tag_77:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_189\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_179\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_189:\n        /* \"contracts/real-estate-marketplace/Shares.sol\":3643:3644  0 */\n      0x00\n        /* \"contracts/real-estate-marketplace/Shares.sol\":3626:3645  owner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/real-estate-marketplace/Shares.sol\":3626:3631  owner */\n      dup2\n        /* \"contracts/real-estate-marketplace/Shares.sol\":3626:3645  owner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/real-estate-marketplace/Shares.sol\":3618:3671  require(owner != address(0), \"Invalid owner address\") */\n      tag_191\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_192\n      swap1\n      tag_193\n      jump\t// in\n    tag_192:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_191:\n        /* \"contracts/real-estate-marketplace/Shares.sol\":3710:3715  owner */\n      dup1\n        /* \"contracts/real-estate-marketplace/Shares.sol\":3681:3695  propertyOwners */\n      0x09\n        /* \"contracts/real-estate-marketplace/Shares.sol\":3681:3707  propertyOwners[propertyId] */\n      0x00\n        /* \"contracts/real-estate-marketplace/Shares.sol\":3696:3706  propertyId */\n      dup5\n        /* \"contracts/real-estate-marketplace/Shares.sol\":3681:3707  propertyOwners[propertyId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/real-estate-marketplace/Shares.sol\":3681:3715  propertyOwners[propertyId] = owner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/real-estate-marketplace/Shares.sol\":3528:3722  function setPropertyOwner(uint256 propertyId, address owner) external onlyOwner {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1615:1699  function paused() public view virtual returns (bool) {... */\n    tag_79:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1662:1666  bool */\n      0x00\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1685:1692  _paused */\n      0x05\n      0x14\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1678:1692  return _paused */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1615:1699  function paused() public view virtual returns (bool) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/real-estate-marketplace/Shares.sol\":4000:4157  function integrateWithExternalSystem(uint256 /* propertyId */) external pure returns (bool) {... */\n    tag_83:\n        /* \"contracts/real-estate-marketplace/Shares.sol\":4086:4090  bool */\n      0x00\n        /* \"contracts/real-estate-marketplace/Shares.sol\":4146:4150  true */\n      0x01\n        /* \"contracts/real-estate-marketplace/Shares.sol\":4139:4150  return true */\n      swap1\n      pop\n        /* \"contracts/real-estate-marketplace/Shares.sol\":4000:4157  function integrateWithExternalSystem(uint256 /* propertyId */) external pure returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3299:3415  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_88:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3364:3371  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3390:3399  _balances */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3390:3408  _balances[account] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3400:3407  account */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3390:3408  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3383:3408  return _balances[account] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3299:3415  function balanceOf(address account) public view virtual returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_91:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_198\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_179\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_198:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      tag_200\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2384:2385  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2375  _transferOwnership */\n      tag_201\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_200:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"contracts/real-estate-marketplace/Shares.sol\":3058:3226  function getShares(uint256 propertyId, address shareholder) external view returns (uint256) {... */\n    tag_94:\n        /* \"contracts/real-estate-marketplace/Shares.sol\":3141:3148  uint256 */\n      0x00\n        /* \"contracts/real-estate-marketplace/Shares.sol\":3167:3181  propertyShares */\n      0x08\n        /* \"contracts/real-estate-marketplace/Shares.sol\":3167:3193  propertyShares[propertyId] */\n      0x00\n        /* \"contracts/real-estate-marketplace/Shares.sol\":3182:3192  propertyId */\n      dup5\n        /* \"contracts/real-estate-marketplace/Shares.sol\":3167:3193  propertyShares[propertyId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/real-estate-marketplace/Shares.sol\":3167:3206  propertyShares[propertyId].shareholders */\n      0x02\n      add\n        /* \"contracts/real-estate-marketplace/Shares.sol\":3167:3219  propertyShares[propertyId].shareholders[shareholder] */\n      0x00\n        /* \"contracts/real-estate-marketplace/Shares.sol\":3207:3218  shareholder */\n      dup4\n        /* \"contracts/real-estate-marketplace/Shares.sol\":3167:3219  propertyShares[propertyId].shareholders[shareholder] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/real-estate-marketplace/Shares.sol\":3160:3219  return propertyShares[propertyId].shareholders[shareholder] */\n      swap1\n      pop\n        /* \"contracts/real-estate-marketplace/Shares.sol\":3058:3226  function getShares(uint256 propertyId, address shareholder) external view returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/real-estate-marketplace/Shares.sol\":886:935  mapping(uint256 => address) public propertyOwners */\n    tag_98:\n      mstore(0x20, 0x09)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/real-estate-marketplace/Shares.sol\":3862:3923  function pause() external onlyOwner {... */\n    tag_102:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_204\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_179\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_204:\n        /* \"contracts/real-estate-marketplace/Shares.sol\":3908:3916  _pause() */\n      tag_206\n        /* \"contracts/real-estate-marketplace/Shares.sol\":3908:3914  _pause */\n      tag_207\n        /* \"contracts/real-estate-marketplace/Shares.sol\":3908:3916  _pause() */\n      jump\t// in\n    tag_206:\n        /* \"contracts/real-estate-marketplace/Shares.sol\":3862:3923  function pause() external onlyOwner {... */\n      jump\t// out\n        /* \"contracts/real-estate-marketplace/Shares.sol\":2521:3052  function transferShares(uint256 propertyId, address to, uint256 shares) external whenNotPaused {... */\n    tag_106:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1239:1258  _requireNotPaused() */\n      tag_209\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1239:1256  _requireNotPaused */\n      tag_210\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1239:1258  _requireNotPaused() */\n      jump\t// in\n    tag_209:\n        /* \"contracts/real-estate-marketplace/Shares.sol\":2648:2649  0 */\n      0x00\n        /* \"contracts/real-estate-marketplace/Shares.sol\":2634:2650  to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/real-estate-marketplace/Shares.sol\":2634:2636  to */\n      dup3\n        /* \"contracts/real-estate-marketplace/Shares.sol\":2634:2650  to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/real-estate-marketplace/Shares.sol\":2626:2680  require(to != address(0), \"Invalid recipient address\") */\n      tag_212\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_213\n      swap1\n      tag_214\n      jump\t// in\n    tag_213:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_212:\n        /* \"contracts/real-estate-marketplace/Shares.sol\":2753:2759  shares */\n      dup1\n        /* \"contracts/real-estate-marketplace/Shares.sol\":2698:2712  propertyShares */\n      0x08\n        /* \"contracts/real-estate-marketplace/Shares.sol\":2698:2724  propertyShares[propertyId] */\n      0x00\n        /* \"contracts/real-estate-marketplace/Shares.sol\":2713:2723  propertyId */\n      dup6\n        /* \"contracts/real-estate-marketplace/Shares.sol\":2698:2724  propertyShares[propertyId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/real-estate-marketplace/Shares.sol\":2698:2737  propertyShares[propertyId].shareholders */\n      0x02\n      add\n        /* \"contracts/real-estate-marketplace/Shares.sol\":2698:2749  propertyShares[propertyId].shareholders[msg.sender] */\n      0x00\n        /* \"contracts/real-estate-marketplace/Shares.sol\":2738:2748  msg.sender */\n      caller\n        /* \"contracts/real-estate-marketplace/Shares.sol\":2698:2749  propertyShares[propertyId].shareholders[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/real-estate-marketplace/Shares.sol\":2698:2759  propertyShares[propertyId].shareholders[msg.sender] >= shares */\n      lt\n      iszero\n        /* \"contracts/real-estate-marketplace/Shares.sol\":2690:2793  require(propertyShares[propertyId].shareholders[msg.sender] >= shares, \"Not enough shares to transfer\") */\n      tag_215\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_216\n      swap1\n      tag_217\n      jump\t// in\n    tag_216:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_215:\n        /* \"contracts/real-estate-marketplace/Shares.sol\":2812:2845  PropertyShares storage sharesData */\n      0x00\n        /* \"contracts/real-estate-marketplace/Shares.sol\":2848:2862  propertyShares */\n      0x08\n        /* \"contracts/real-estate-marketplace/Shares.sol\":2848:2874  propertyShares[propertyId] */\n      0x00\n        /* \"contracts/real-estate-marketplace/Shares.sol\":2863:2873  propertyId */\n      dup6\n        /* \"contracts/real-estate-marketplace/Shares.sol\":2848:2874  propertyShares[propertyId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/real-estate-marketplace/Shares.sol\":2812:2874  PropertyShares storage sharesData = propertyShares[propertyId] */\n      swap1\n      pop\n        /* \"contracts/real-estate-marketplace/Shares.sol\":2923:2929  shares */\n      dup2\n        /* \"contracts/real-estate-marketplace/Shares.sol\":2884:2894  sharesData */\n      dup2\n        /* \"contracts/real-estate-marketplace/Shares.sol\":2884:2907  sharesData.shareholders */\n      0x02\n      add\n        /* \"contracts/real-estate-marketplace/Shares.sol\":2884:2919  sharesData.shareholders[msg.sender] */\n      0x00\n        /* \"contracts/real-estate-marketplace/Shares.sol\":2908:2918  msg.sender */\n      caller\n        /* \"contracts/real-estate-marketplace/Shares.sol\":2884:2919  sharesData.shareholders[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/real-estate-marketplace/Shares.sol\":2884:2929  sharesData.shareholders[msg.sender] -= shares */\n      dup3\n      dup3\n      sload\n      tag_218\n      swap2\n      swap1\n      tag_219\n      jump\t// in\n    tag_218:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/real-estate-marketplace/Shares.sol\":2970:2976  shares */\n      dup2\n        /* \"contracts/real-estate-marketplace/Shares.sol\":2939:2949  sharesData */\n      dup2\n        /* \"contracts/real-estate-marketplace/Shares.sol\":2939:2962  sharesData.shareholders */\n      0x02\n      add\n        /* \"contracts/real-estate-marketplace/Shares.sol\":2939:2966  sharesData.shareholders[to] */\n      0x00\n        /* \"contracts/real-estate-marketplace/Shares.sol\":2963:2965  to */\n      dup6\n        /* \"contracts/real-estate-marketplace/Shares.sol\":2939:2966  sharesData.shareholders[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/real-estate-marketplace/Shares.sol\":2939:2976  sharesData.shareholders[to] += shares */\n      dup3\n      dup3\n      sload\n      tag_220\n      swap2\n      swap1\n      tag_221\n      jump\t// in\n    tag_220:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/real-estate-marketplace/Shares.sol\":3022:3024  to */\n      dup3\n        /* \"contracts/real-estate-marketplace/Shares.sol\":2992:3045  SharesTransferred(msg.sender, to, propertyId, shares) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/real-estate-marketplace/Shares.sol\":3010:3020  msg.sender */\n      caller\n        /* \"contracts/real-estate-marketplace/Shares.sol\":2992:3045  SharesTransferred(msg.sender, to, propertyId, shares) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x1ba44e8b79687fed555749cae6dcccf9bc5df37a2739fbc73062f07b534cf03e\n        /* \"contracts/real-estate-marketplace/Shares.sol\":3026:3036  propertyId */\n      dup7\n        /* \"contracts/real-estate-marketplace/Shares.sol\":3038:3044  shares */\n      dup6\n        /* \"contracts/real-estate-marketplace/Shares.sol\":2992:3045  SharesTransferred(msg.sender, to, propertyId, shares) */\n      mload(0x40)\n      tag_222\n      swap3\n      swap2\n      swap1\n      tag_121\n      jump\t// in\n    tag_222:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/real-estate-marketplace/Shares.sol\":2616:3052  {... */\n      pop\n        /* \"contracts/real-estate-marketplace/Shares.sol\":2521:3052  function transferShares(uint256 propertyId, address to, uint256 shares) external whenNotPaused {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/real-estate-marketplace/Shares.sol\":3232:3370  function getTotalShares(uint256 propertyId) external view returns (uint256) {... */\n    tag_109:\n        /* \"contracts/real-estate-marketplace/Shares.sol\":3299:3306  uint256 */\n      0x00\n        /* \"contracts/real-estate-marketplace/Shares.sol\":3325:3339  propertyShares */\n      0x08\n        /* \"contracts/real-estate-marketplace/Shares.sol\":3325:3351  propertyShares[propertyId] */\n      0x00\n        /* \"contracts/real-estate-marketplace/Shares.sol\":3340:3350  propertyId */\n      dup4\n        /* \"contracts/real-estate-marketplace/Shares.sol\":3325:3351  propertyShares[propertyId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/real-estate-marketplace/Shares.sol\":3325:3363  propertyShares[propertyId].totalShares */\n      0x00\n      add\n      sload\n        /* \"contracts/real-estate-marketplace/Shares.sol\":3318:3363  return propertyShares[propertyId].totalShares */\n      swap1\n      pop\n        /* \"contracts/real-estate-marketplace/Shares.sol\":3232:3370  function getTotalShares(uint256 propertyId) external view returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_112:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1684:1691  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1703:1716  return _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2276:2369  function symbol() public view virtual returns (string memory) {... */\n    tag_115:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2323:2336  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2355:2362  _symbol */\n      0x04\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2348:2362  return _symbol */\n      dup1\n      sload\n      tag_226\n      swap1\n      tag_159\n      jump\t// in\n    tag_226:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_227\n      swap1\n      tag_159\n      jump\t// in\n    tag_227:\n      dup1\n      iszero\n      tag_228\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_229\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_228)\n    tag_229:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_230:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_230\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_228:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2276:2369  function symbol() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/real-estate-marketplace/Shares.sol\":719:765  mapping(uint256 => ShareBasket) public baskets */\n    tag_119:\n      mstore(0x20, 0x06)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      dup1\n      0x00\n      add\n      sload\n      swap1\n      dup1\n      0x02\n      add\n      sload\n      swap1\n      pop\n      dup3\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3610:3788  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_124:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3679:3683  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3695:3708  address owner */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3711:3723  _msgSender() */\n      tag_232\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3711:3721  _msgSender */\n      tag_166\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3711:3723  _msgSender() */\n      jump\t// in\n    tag_232:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3695:3723  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3733:3760  _transfer(owner, to, value) */\n      tag_233\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3743:3748  owner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3750:3752  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3754:3759  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3733:3742  _transfer */\n      tag_175\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3733:3760  _transfer(owner, to, value) */\n      jump\t// in\n    tag_233:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3777:3781  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3770:3781  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3610:3788  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/real-estate-marketplace/Shares.sol\":1948:2515  function issuePropertyShares(uint256 propertyId, address investor, uint256 shares) external onlyOwner whenNotPaused {... */\n    tag_128:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_235\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_179\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_235:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1239:1258  _requireNotPaused() */\n      tag_237\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1239:1256  _requireNotPaused */\n      tag_210\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1239:1258  _requireNotPaused() */\n      jump\t// in\n    tag_237:\n        /* \"contracts/real-estate-marketplace/Shares.sol\":2091:2092  0 */\n      0x00\n        /* \"contracts/real-estate-marketplace/Shares.sol\":2082:2088  shares */\n      dup2\n        /* \"contracts/real-estate-marketplace/Shares.sol\":2082:2092  shares > 0 */\n      gt\n        /* \"contracts/real-estate-marketplace/Shares.sol\":2074:2126  require(shares > 0, \"Shares must be greater than 0\") */\n      tag_239\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_240\n      swap1\n      tag_241\n      jump\t// in\n    tag_240:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_239:\n        /* \"contracts/real-estate-marketplace/Shares.sol\":2190:2196  shares */\n      dup1\n        /* \"contracts/real-estate-marketplace/Shares.sol\":2144:2158  propertyShares */\n      0x08\n        /* \"contracts/real-estate-marketplace/Shares.sol\":2144:2170  propertyShares[propertyId] */\n      0x00\n        /* \"contracts/real-estate-marketplace/Shares.sol\":2159:2169  propertyId */\n      dup6\n        /* \"contracts/real-estate-marketplace/Shares.sol\":2144:2170  propertyShares[propertyId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/real-estate-marketplace/Shares.sol\":2144:2186  propertyShares[propertyId].availableShares */\n      0x01\n      add\n      sload\n        /* \"contracts/real-estate-marketplace/Shares.sol\":2144:2196  propertyShares[propertyId].availableShares >= shares */\n      lt\n      iszero\n        /* \"contracts/real-estate-marketplace/Shares.sol\":2136:2228  require(propertyShares[propertyId].availableShares >= shares, \"Not enough shares available\") */\n      tag_242\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_243\n      swap1\n      tag_244\n      jump\t// in\n    tag_243:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_242:\n        /* \"contracts/real-estate-marketplace/Shares.sol\":2247:2280  PropertyShares storage sharesData */\n      0x00\n        /* \"contracts/real-estate-marketplace/Shares.sol\":2283:2297  propertyShares */\n      0x08\n        /* \"contracts/real-estate-marketplace/Shares.sol\":2283:2309  propertyShares[propertyId] */\n      0x00\n        /* \"contracts/real-estate-marketplace/Shares.sol\":2298:2308  propertyId */\n      dup6\n        /* \"contracts/real-estate-marketplace/Shares.sol\":2283:2309  propertyShares[propertyId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/real-estate-marketplace/Shares.sol\":2247:2309  PropertyShares storage sharesData = propertyShares[propertyId] */\n      swap1\n      pop\n        /* \"contracts/real-estate-marketplace/Shares.sol\":2345:2351  shares */\n      dup2\n        /* \"contracts/real-estate-marketplace/Shares.sol\":2319:2329  sharesData */\n      dup2\n        /* \"contracts/real-estate-marketplace/Shares.sol\":2319:2341  sharesData.totalShares */\n      0x00\n      add\n      0x00\n        /* \"contracts/real-estate-marketplace/Shares.sol\":2319:2351  sharesData.totalShares += shares */\n      dup3\n      dup3\n      sload\n      tag_245\n      swap2\n      swap1\n      tag_221\n      jump\t// in\n    tag_245:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/real-estate-marketplace/Shares.sol\":2391:2397  shares */\n      dup2\n        /* \"contracts/real-estate-marketplace/Shares.sol\":2361:2371  sharesData */\n      dup2\n        /* \"contracts/real-estate-marketplace/Shares.sol\":2361:2387  sharesData.availableShares */\n      0x01\n      add\n      0x00\n        /* \"contracts/real-estate-marketplace/Shares.sol\":2361:2397  sharesData.availableShares -= shares */\n      dup3\n      dup3\n      sload\n      tag_246\n      swap2\n      swap1\n      tag_219\n      jump\t// in\n    tag_246:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/real-estate-marketplace/Shares.sol\":2444:2450  shares */\n      dup2\n        /* \"contracts/real-estate-marketplace/Shares.sol\":2407:2417  sharesData */\n      dup2\n        /* \"contracts/real-estate-marketplace/Shares.sol\":2407:2430  sharesData.shareholders */\n      0x02\n      add\n        /* \"contracts/real-estate-marketplace/Shares.sol\":2407:2440  sharesData.shareholders[investor] */\n      0x00\n        /* \"contracts/real-estate-marketplace/Shares.sol\":2431:2439  investor */\n      dup6\n        /* \"contracts/real-estate-marketplace/Shares.sol\":2407:2440  sharesData.shareholders[investor] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/real-estate-marketplace/Shares.sol\":2407:2450  sharesData.shareholders[investor] += shares */\n      dup3\n      dup3\n      sload\n      tag_247\n      swap2\n      swap1\n      tag_221\n      jump\t// in\n    tag_247:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/real-estate-marketplace/Shares.sol\":2479:2487  investor */\n      dup3\n        /* \"contracts/real-estate-marketplace/Shares.sol\":2466:2508  SharesIssued(investor, propertyId, shares) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x6b3332210c2263e1008f810d148fc1c61a002c8f5dfcf18fe06858064bc49e69\n        /* \"contracts/real-estate-marketplace/Shares.sol\":2489:2499  propertyId */\n      dup6\n        /* \"contracts/real-estate-marketplace/Shares.sol\":2501:2507  shares */\n      dup5\n        /* \"contracts/real-estate-marketplace/Shares.sol\":2466:2508  SharesIssued(investor, propertyId, shares) */\n      mload(0x40)\n      tag_248\n      swap3\n      swap2\n      swap1\n      tag_121\n      jump\t// in\n    tag_248:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/real-estate-marketplace/Shares.sol\":2064:2515  {... */\n      pop\n        /* \"contracts/real-estate-marketplace/Shares.sol\":1948:2515  function issuePropertyShares(uint256 propertyId, address investor, uint256 shares) external onlyOwner whenNotPaused {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/real-estate-marketplace/Shares.sol\":824:880  mapping(uint256 => PropertyShares) public propertyShares */\n    tag_131:\n      mstore(0x20, 0x08)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      dup1\n      0x00\n      add\n      sload\n      swap1\n      dup1\n      0x01\n      add\n      sload\n      swap1\n      pop\n      dup3\n      jump\t// out\n        /* \"contracts/real-estate-marketplace/Shares.sol\":3376:3522  function getAvailableShares(uint256 propertyId) external view returns (uint256) {... */\n    tag_135:\n        /* \"contracts/real-estate-marketplace/Shares.sol\":3447:3454  uint256 */\n      0x00\n        /* \"contracts/real-estate-marketplace/Shares.sol\":3473:3487  propertyShares */\n      0x08\n        /* \"contracts/real-estate-marketplace/Shares.sol\":3473:3499  propertyShares[propertyId] */\n      0x00\n        /* \"contracts/real-estate-marketplace/Shares.sol\":3488:3498  propertyId */\n      dup4\n        /* \"contracts/real-estate-marketplace/Shares.sol\":3473:3499  propertyShares[propertyId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/real-estate-marketplace/Shares.sol\":3473:3515  propertyShares[propertyId].availableShares */\n      0x01\n      add\n      sload\n        /* \"contracts/real-estate-marketplace/Shares.sol\":3466:3515  return propertyShares[propertyId].availableShares */\n      swap1\n      pop\n        /* \"contracts/real-estate-marketplace/Shares.sol\":3376:3522  function getAvailableShares(uint256 propertyId) external view returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3846:3986  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_140:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3926:3933  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3963  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3970  _allowances[owner] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3964:3969  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3970  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3979  _allowances[owner][spender] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3971:3978  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3979  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3945:3979  return _allowances[owner][spender] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3846:3986  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/real-estate-marketplace/Shares.sol\":1562:1808  function issueShares(uint256 basketId, address to, uint256 amount) external onlyOwner {... */\n    tag_144:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_252\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_179\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_252:\n        /* \"contracts/real-estate-marketplace/Shares.sol\":1692:1698  amount */\n      dup1\n        /* \"contracts/real-estate-marketplace/Shares.sol\":1666:1678  basketShares */\n      0x07\n        /* \"contracts/real-estate-marketplace/Shares.sol\":1666:1688  basketShares[basketId] */\n      0x00\n        /* \"contracts/real-estate-marketplace/Shares.sol\":1679:1687  basketId */\n      dup6\n        /* \"contracts/real-estate-marketplace/Shares.sol\":1666:1688  basketShares[basketId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/real-estate-marketplace/Shares.sol\":1666:1698  basketShares[basketId] >= amount */\n      lt\n      iszero\n        /* \"contracts/real-estate-marketplace/Shares.sol\":1658:1732  require(basketShares[basketId] >= amount, \"Insufficient shares available\") */\n      tag_254\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_255\n      swap1\n      tag_256\n      jump\t// in\n    tag_255:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_254:\n        /* \"contracts/real-estate-marketplace/Shares.sol\":1742:1759  _mint(to, amount) */\n      tag_257\n        /* \"contracts/real-estate-marketplace/Shares.sol\":1748:1750  to */\n      dup3\n        /* \"contracts/real-estate-marketplace/Shares.sol\":1752:1758  amount */\n      dup3\n        /* \"contracts/real-estate-marketplace/Shares.sol\":1742:1747  _mint */\n      tag_258\n        /* \"contracts/real-estate-marketplace/Shares.sol\":1742:1759  _mint(to, amount) */\n      jump\t// in\n    tag_257:\n        /* \"contracts/real-estate-marketplace/Shares.sol\":1795:1801  amount */\n      dup1\n        /* \"contracts/real-estate-marketplace/Shares.sol\":1769:1781  basketShares */\n      0x07\n        /* \"contracts/real-estate-marketplace/Shares.sol\":1769:1791  basketShares[basketId] */\n      0x00\n        /* \"contracts/real-estate-marketplace/Shares.sol\":1782:1790  basketId */\n      dup6\n        /* \"contracts/real-estate-marketplace/Shares.sol\":1769:1791  basketShares[basketId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/real-estate-marketplace/Shares.sol\":1769:1801  basketShares[basketId] -= amount */\n      dup3\n      dup3\n      sload\n      tag_259\n      swap2\n      swap1\n      tag_219\n      jump\t// in\n    tag_259:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/real-estate-marketplace/Shares.sol\":1562:1808  function issueShares(uint256 basketId, address to, uint256 amount) external onlyOwner {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/real-estate-marketplace/Shares.sol\":3728:3856  function getPropertyOwner(uint256 propertyId) external view returns (address) {... */\n    tag_147:\n        /* \"contracts/real-estate-marketplace/Shares.sol\":3797:3804  address */\n      0x00\n        /* \"contracts/real-estate-marketplace/Shares.sol\":3823:3837  propertyOwners */\n      0x09\n        /* \"contracts/real-estate-marketplace/Shares.sol\":3823:3849  propertyOwners[propertyId] */\n      0x00\n        /* \"contracts/real-estate-marketplace/Shares.sol\":3838:3848  propertyId */\n      dup4\n        /* \"contracts/real-estate-marketplace/Shares.sol\":3823:3849  propertyOwners[propertyId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/real-estate-marketplace/Shares.sol\":3816:3849  return propertyOwners[propertyId] */\n      swap1\n      pop\n        /* \"contracts/real-estate-marketplace/Shares.sol\":3728:3856  function getPropertyOwner(uint256 propertyId) external view returns (address) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_151:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_262\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_179\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_262:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2647:2648  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2635  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n      tag_264\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2700:2701  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_265\n      swap2\n      swap1\n      tag_100\n      jump\t// in\n    tag_265:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n    tag_264:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      tag_266\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2742:2750  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2741  _transferOwnership */\n      tag_201\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_266:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/real-estate-marketplace/Shares.sol\":1814:1942  function getBasketDetails(uint256 basketId) external view returns (ShareBasket memory) {... */\n    tag_154:\n        /* \"contracts/real-estate-marketplace/Shares.sol\":1881:1899  ShareBasket memory */\n      tag_267\n      tag_268\n      jump\t// in\n    tag_267:\n        /* \"contracts/real-estate-marketplace/Shares.sol\":1918:1925  baskets */\n      0x06\n        /* \"contracts/real-estate-marketplace/Shares.sol\":1918:1935  baskets[basketId] */\n      0x00\n        /* \"contracts/real-estate-marketplace/Shares.sol\":1926:1934  basketId */\n      dup4\n        /* \"contracts/real-estate-marketplace/Shares.sol\":1918:1935  baskets[basketId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/real-estate-marketplace/Shares.sol\":1911:1935  return baskets[basketId] */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      swap1\n      dup2\n      0x00\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x01\n      dup3\n      add\n      dup1\n      sload\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      dup1\n      iszero\n      tag_270\n      jumpi\n      0x20\n      mul\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_271:\n      dup2\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      0x01\n      add\n      swap1\n      dup1\n      dup4\n      gt\n      tag_271\n      jumpi\n    tag_270:\n      pop\n      pop\n      pop\n      pop\n      pop\n      dup2\n      mstore\n      0x20\n      add\n      0x02\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      pop\n      pop\n      swap1\n      pop\n        /* \"contracts/real-estate-marketplace/Shares.sol\":1814:1942  function getBasketDetails(uint256 basketId) external view returns (ShareBasket memory) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n    tag_166:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":709:716  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":728:745  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8989:9117  function _approve(address owner, address spender, uint256 value) internal {... */\n    tag_168:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9073:9110  _approve(owner, spender, value, true) */\n      tag_274\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9082:9087  owner */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9089:9096  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9098:9103  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9105:9109  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9073:9081  _approve */\n      tag_275\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9073:9110  _approve(owner, spender, value, true) */\n      jump\t// in\n    tag_274:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8989:9117  function _approve(address owner, address spender, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10663:11140  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n    tag_173:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10762:10786  uint256 currentAllowance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10789:10814  allowance(owner, spender) */\n      tag_277\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10799:10804  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10806:10813  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10789:10798  allowance */\n      tag_140\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10789:10814  allowance(owner, spender) */\n      jump\t// in\n    tag_277:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10762:10814  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10848:10865  type(uint256).max */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10828:10844  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10828:10865  currentAllowance != type(uint256).max */\n      eq\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10824:11134  if (currentAllowance != type(uint256).max) {... */\n      tag_278\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10904:10909  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10885:10901  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10885:10909  currentAllowance < value */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10881:11011  if (currentAllowance < value) {... */\n      iszero\n      tag_279\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10963:10970  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10972:10988  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10990:10995  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10936:10996  ERC20InsufficientAllowance(spender, currentAllowance, value) */\n      mload(0x40)\n      0xfb8f41b200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_280\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_281\n      jump\t// in\n    tag_280:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10881:11011  if (currentAllowance < value) {... */\n    tag_279:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11052:11109  _approve(owner, spender, currentAllowance - value, false) */\n      tag_282\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11061:11066  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11068:11075  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11096:11101  value */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11077:11093  currentAllowance */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11077:11101  currentAllowance - value */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11103:11108  false */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11052:11060  _approve */\n      tag_275\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11052:11109  _approve(owner, spender, currentAllowance - value, false) */\n      jump\t// in\n    tag_282:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10824:11134  if (currentAllowance != type(uint256).max) {... */\n    tag_278:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10752:11140  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10663:11140  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5656:5956  function _transfer(address from, address to, uint256 value) internal {... */\n    tag_175:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5755:5756  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5739:5757  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5739:5743  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5739:5757  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5735:5821  if (from == address(0)) {... */\n      tag_284\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5807:5808  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5780:5810  ERC20InvalidSender(address(0)) */\n      mload(0x40)\n      0x96c6fd1e00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_285\n      swap2\n      swap1\n      tag_100\n      jump\t// in\n    tag_285:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5735:5821  if (from == address(0)) {... */\n    tag_284:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5848:5849  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5834:5850  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5834:5836  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5834:5850  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5830:5916  if (to == address(0)) {... */\n      tag_286\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5902:5903  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5873:5905  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      0xec442f0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_287\n      swap2\n      swap1\n      tag_100\n      jump\t// in\n    tag_287:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5830:5916  if (to == address(0)) {... */\n    tag_286:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5925:5949  _update(from, to, value) */\n      tag_288\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5933:5937  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5939:5941  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5943:5948  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5925:5932  _update */\n      tag_289\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5925:5949  _update(from, to, value) */\n      jump\t// in\n    tag_288:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5656:5956  function _transfer(address from, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n    tag_179:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      tag_291\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1876  _msgSender */\n      tag_166\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      jump\t// in\n    tag_291:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      tag_292\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1860  owner */\n      tag_112\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      jump\t// in\n    tag_292:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n      tag_293\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      tag_294\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1938  _msgSender */\n      tag_166\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      jump\t// in\n    tag_294:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      mload(0x40)\n      0x118cdaa700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_295\n      swap2\n      swap1\n      tag_100\n      jump\t// in\n    tag_295:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n    tag_293:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2433:2550  function _unpause() internal virtual whenPaused {... */\n    tag_182:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1486:1502  _requirePaused() */\n      tag_297\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1486:1500  _requirePaused */\n      tag_298\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1486:1502  _requirePaused() */\n      jump\t// in\n    tag_297:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2501:2506  false */\n      0x00\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2491:2498  _paused */\n      0x05\n      0x14\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2491:2506  _paused = false */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2521:2543  Unpaused(_msgSender()) */\n      0x5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2530:2542  _msgSender() */\n      tag_300\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2530:2540  _msgSender */\n      tag_166\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2530:2542  _msgSender() */\n      jump\t// in\n    tag_300:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2521:2543  Unpaused(_msgSender()) */\n      mload(0x40)\n      tag_301\n      swap2\n      swap1\n      tag_100\n      jump\t// in\n    tag_301:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2433:2550  function _unpause() internal virtual whenPaused {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_201:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n      0x05\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2186:2301  function _pause() internal virtual whenNotPaused {... */\n    tag_207:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1239:1258  _requireNotPaused() */\n      tag_304\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1239:1256  _requireNotPaused */\n      tag_210\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1239:1258  _requireNotPaused() */\n      jump\t// in\n    tag_304:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2255:2259  true */\n      0x01\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2245:2252  _paused */\n      0x05\n      0x14\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2245:2259  _paused = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2274:2294  Paused(_msgSender()) */\n      0x62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2281:2293  _msgSender() */\n      tag_306\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2281:2291  _msgSender */\n      tag_166\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2281:2293  _msgSender() */\n      jump\t// in\n    tag_306:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2274:2294  Paused(_msgSender()) */\n      mload(0x40)\n      tag_307\n      swap2\n      swap1\n      tag_100\n      jump\t// in\n    tag_307:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2186:2301  function _pause() internal virtual whenNotPaused {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1767:1873  function _requireNotPaused() internal view virtual {... */\n    tag_210:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1837:1845  paused() */\n      tag_309\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1837:1843  paused */\n      tag_79\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1837:1845  paused() */\n      jump\t// in\n    tag_309:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1836:1845  !paused() */\n      iszero\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1828:1866  require(!paused(), \"Pausable: paused\") */\n      tag_310\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_311\n      swap1\n      tag_312\n      jump\t// in\n    tag_311:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_310:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1767:1873  function _requireNotPaused() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7721:7929  function _mint(address account, uint256 value) internal {... */\n    tag_258:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7810:7811  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7791:7812  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7791:7798  account */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7791:7812  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7787:7878  if (account == address(0)) {... */\n      tag_314\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7864:7865  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7835:7867  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      0xec442f0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_315\n      swap2\n      swap1\n      tag_100\n      jump\t// in\n    tag_315:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7787:7878  if (account == address(0)) {... */\n    tag_314:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7887:7922  _update(address(0), account, value) */\n      tag_316\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7903:7904  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7907:7914  account */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7916:7921  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7887:7894  _update */\n      tag_289\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7887:7922  _update(address(0), account, value) */\n      jump\t// in\n    tag_316:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7721:7929  function _mint(address account, uint256 value) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9949:10381  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n    tag_275:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10078:10079  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10061:10080  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10061:10066  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10061:10080  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10057:10146  if (owner == address(0)) {... */\n      tag_318\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10132:10133  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10103:10135  ERC20InvalidApprover(address(0)) */\n      mload(0x40)\n      0xe602df0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_319\n      swap2\n      swap1\n      tag_100\n      jump\t// in\n    tag_319:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10057:10146  if (owner == address(0)) {... */\n    tag_318:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10178:10179  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10159:10180  spender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10159:10166  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10159:10180  spender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10155:10245  if (spender == address(0)) {... */\n      tag_320\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10231:10232  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10203:10234  ERC20InvalidSpender(address(0)) */\n      mload(0x40)\n      0x94280d6200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_321\n      swap2\n      swap1\n      tag_100\n      jump\t// in\n    tag_321:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10155:10245  if (spender == address(0)) {... */\n    tag_320:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10284:10289  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10254:10265  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10254:10272  _allowances[owner] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10266:10271  owner */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10254:10272  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10254:10281  _allowances[owner][spender] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10273:10280  spender */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10254:10281  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10254:10289  _allowances[owner][spender] = value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10303:10312  emitEvent */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10299:10375  if (emitEvent) {... */\n      iszero\n      tag_322\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10349:10356  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10333:10364  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10342:10347  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10333:10364  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10358:10363  value */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10333:10364  Approval(owner, spender, value) */\n      mload(0x40)\n      tag_323\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_323:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10299:10375  if (emitEvent) {... */\n    tag_322:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9949:10381  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6271:7378  function _update(address from, address to, uint256 value) internal virtual {... */\n    tag_289:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6376:6377  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6360:6378  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6360:6364  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6360:6378  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6356:6896  if (from == address(0)) {... */\n      tag_325\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6512:6517  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6496:6508  _totalSupply */\n      0x02\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6496:6517  _totalSupply += value */\n      dup3\n      dup3\n      sload\n      tag_326\n      swap2\n      swap1\n      tag_221\n      jump\t// in\n    tag_326:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6356:6896  if (from == address(0)) {... */\n      jump(tag_327)\n    tag_325:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6548:6567  uint256 fromBalance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6570:6579  _balances */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6570:6585  _balances[from] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6580:6584  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6570:6585  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6548:6585  uint256 fromBalance = _balances[from] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6617:6622  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6603:6614  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6603:6622  fromBalance < value */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6599:6714  if (fromBalance < value) {... */\n      iszero\n      tag_328\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6674:6678  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6680:6691  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6693:6698  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6649:6699  ERC20InsufficientBalance(from, fromBalance, value) */\n      mload(0x40)\n      0xe450d38c00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_329\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_281\n      jump\t// in\n    tag_329:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6599:6714  if (fromBalance < value) {... */\n    tag_328:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6866:6871  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6852:6863  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6852:6871  fromBalance - value */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6843  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6849  _balances[from] */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6844:6848  from */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6849  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6871  _balances[from] = fromBalance - value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6534:6896  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6356:6896  if (from == address(0)) {... */\n    tag_327:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6924:6925  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6910:6926  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6910:6912  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6910:6926  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6906:7331  if (to == address(0)) {... */\n      tag_330\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7089:7094  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7073:7085  _totalSupply */\n      0x02\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7073:7094  _totalSupply -= value */\n      dup3\n      dup3\n      sload\n      sub\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6906:7331  if (to == address(0)) {... */\n      jump(tag_331)\n    tag_330:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7301:7306  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7293  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7297  _balances[to] */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7294:7296  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7297  _balances[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7306  _balances[to] += value */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6906:7331  if (to == address(0)) {... */\n    tag_331:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7361:7363  to */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7346:7371  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7355:7359  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7346:7371  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7365:7370  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7346:7371  Transfer(from, to, value) */\n      mload(0x40)\n      tag_332\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_332:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6271:7378  function _update(address from, address to, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1945:2051  function _requirePaused() internal view virtual {... */\n    tag_298:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2011:2019  paused() */\n      tag_334\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2011:2017  paused */\n      tag_79\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2011:2019  paused() */\n      jump\t// in\n    tag_334:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2003:2044  require(paused(), \"Pausable: not paused\") */\n      tag_335\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_336\n      swap1\n      tag_337\n      jump\t// in\n    tag_336:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_335:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1945:2051  function _requirePaused() internal view virtual {... */\n      jump\t// out\n    tag_187:\n      dup3\n      dup1\n      sload\n      dup3\n      dup3\n      sstore\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      dup2\n      add\n      swap3\n      dup3\n      iszero\n      tag_338\n      jumpi\n      swap2\n      0x20\n      mul\n      dup3\n      add\n    tag_339:\n      dup3\n      dup2\n      gt\n      iszero\n      tag_340\n      jumpi\n      dup3\n      mload\n      dup3\n      sstore\n      swap2\n      0x20\n      add\n      swap2\n      swap1\n      0x01\n      add\n      swap1\n      jump(tag_339)\n    tag_340:\n    tag_338:\n      pop\n      swap1\n      pop\n      tag_341\n      swap2\n      swap1\n      tag_342\n      jump\t// in\n    tag_341:\n      pop\n      swap1\n      jump\t// out\n    tag_268:\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      0x20\n      add\n      0x60\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup2\n      mstore\n      pop\n      swap1\n      jump\t// out\n    tag_342:\n    tag_343:\n      dup1\n      dup3\n      gt\n      iszero\n      tag_344\n      jumpi\n      0x00\n      dup2\n      0x00\n      swap1\n      sstore\n      pop\n      0x01\n      add\n      jump(tag_343)\n    tag_344:\n      pop\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":7:106   */\n    tag_345:\n        /* \"#utility.yul\":59:65   */\n      0x00\n        /* \"#utility.yul\":93:98   */\n      dup2\n        /* \"#utility.yul\":87:99   */\n      mload\n        /* \"#utility.yul\":77:99   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:106   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":112:281   */\n    tag_346:\n        /* \"#utility.yul\":196:207   */\n      0x00\n        /* \"#utility.yul\":230:236   */\n      dup3\n        /* \"#utility.yul\":225:228   */\n      dup3\n        /* \"#utility.yul\":218:237   */\n      mstore\n        /* \"#utility.yul\":270:274   */\n      0x20\n        /* \"#utility.yul\":265:268   */\n      dup3\n        /* \"#utility.yul\":261:275   */\n      add\n        /* \"#utility.yul\":246:275   */\n      swap1\n      pop\n        /* \"#utility.yul\":112:281   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":287:426   */\n    tag_347:\n        /* \"#utility.yul\":376:382   */\n      dup3\n        /* \"#utility.yul\":371:374   */\n      dup2\n        /* \"#utility.yul\":366:369   */\n      dup4\n        /* \"#utility.yul\":360:383   */\n      mcopy\n        /* \"#utility.yul\":417:418   */\n      0x00\n        /* \"#utility.yul\":408:414   */\n      dup4\n        /* \"#utility.yul\":403:406   */\n      dup4\n        /* \"#utility.yul\":399:415   */\n      add\n        /* \"#utility.yul\":392:419   */\n      mstore\n        /* \"#utility.yul\":287:426   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":432:534   */\n    tag_348:\n        /* \"#utility.yul\":473:479   */\n      0x00\n        /* \"#utility.yul\":524:526   */\n      0x1f\n        /* \"#utility.yul\":520:527   */\n      not\n        /* \"#utility.yul\":515:517   */\n      0x1f\n        /* \"#utility.yul\":508:513   */\n      dup4\n        /* \"#utility.yul\":504:518   */\n      add\n        /* \"#utility.yul\":500:528   */\n      and\n        /* \"#utility.yul\":490:528   */\n      swap1\n      pop\n        /* \"#utility.yul\":432:534   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":540:917   */\n    tag_349:\n        /* \"#utility.yul\":628:631   */\n      0x00\n        /* \"#utility.yul\":656:695   */\n      tag_406\n        /* \"#utility.yul\":689:694   */\n      dup3\n        /* \"#utility.yul\":656:695   */\n      tag_345\n      jump\t// in\n    tag_406:\n        /* \"#utility.yul\":711:782   */\n      tag_407\n        /* \"#utility.yul\":775:781   */\n      dup2\n        /* \"#utility.yul\":770:773   */\n      dup6\n        /* \"#utility.yul\":711:782   */\n      tag_346\n      jump\t// in\n    tag_407:\n        /* \"#utility.yul\":704:782   */\n      swap4\n      pop\n        /* \"#utility.yul\":791:856   */\n      tag_408\n        /* \"#utility.yul\":849:855   */\n      dup2\n        /* \"#utility.yul\":844:847   */\n      dup6\n        /* \"#utility.yul\":837:841   */\n      0x20\n        /* \"#utility.yul\":830:835   */\n      dup7\n        /* \"#utility.yul\":826:842   */\n      add\n        /* \"#utility.yul\":791:856   */\n      tag_347\n      jump\t// in\n    tag_408:\n        /* \"#utility.yul\":881:910   */\n      tag_409\n        /* \"#utility.yul\":903:909   */\n      dup2\n        /* \"#utility.yul\":881:910   */\n      tag_348\n      jump\t// in\n    tag_409:\n        /* \"#utility.yul\":876:879   */\n      dup5\n        /* \"#utility.yul\":872:911   */\n      add\n        /* \"#utility.yul\":865:911   */\n      swap2\n      pop\n        /* \"#utility.yul\":632:917   */\n      pop\n        /* \"#utility.yul\":540:917   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":923:1236   */\n    tag_43:\n        /* \"#utility.yul\":1036:1040   */\n      0x00\n        /* \"#utility.yul\":1074:1076   */\n      0x20\n        /* \"#utility.yul\":1063:1072   */\n      dup3\n        /* \"#utility.yul\":1059:1077   */\n      add\n        /* \"#utility.yul\":1051:1077   */\n      swap1\n      pop\n        /* \"#utility.yul\":1123:1132   */\n      dup2\n        /* \"#utility.yul\":1117:1121   */\n      dup2\n        /* \"#utility.yul\":1113:1133   */\n      sub\n        /* \"#utility.yul\":1109:1110   */\n      0x00\n        /* \"#utility.yul\":1098:1107   */\n      dup4\n        /* \"#utility.yul\":1094:1111   */\n      add\n        /* \"#utility.yul\":1087:1134   */\n      mstore\n        /* \"#utility.yul\":1151:1229   */\n      tag_411\n        /* \"#utility.yul\":1224:1228   */\n      dup2\n        /* \"#utility.yul\":1215:1221   */\n      dup5\n        /* \"#utility.yul\":1151:1229   */\n      tag_349\n      jump\t// in\n    tag_411:\n        /* \"#utility.yul\":1143:1229   */\n      swap1\n      pop\n        /* \"#utility.yul\":923:1236   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1242:1317   */\n    tag_350:\n        /* \"#utility.yul\":1275:1281   */\n      0x00\n        /* \"#utility.yul\":1308:1310   */\n      0x40\n        /* \"#utility.yul\":1302:1311   */\n      mload\n        /* \"#utility.yul\":1292:1311   */\n      swap1\n      pop\n        /* \"#utility.yul\":1242:1317   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":1323:1440   */\n    tag_351:\n        /* \"#utility.yul\":1432:1433   */\n      0x00\n        /* \"#utility.yul\":1429:1430   */\n      dup1\n        /* \"#utility.yul\":1422:1434   */\n      revert\n        /* \"#utility.yul\":1446:1563   */\n    tag_352:\n        /* \"#utility.yul\":1555:1556   */\n      0x00\n        /* \"#utility.yul\":1552:1553   */\n      dup1\n        /* \"#utility.yul\":1545:1557   */\n      revert\n        /* \"#utility.yul\":1569:1695   */\n    tag_353:\n        /* \"#utility.yul\":1606:1613   */\n      0x00\n        /* \"#utility.yul\":1646:1688   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":1639:1644   */\n      dup3\n        /* \"#utility.yul\":1635:1689   */\n      and\n        /* \"#utility.yul\":1624:1689   */\n      swap1\n      pop\n        /* \"#utility.yul\":1569:1695   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1701:1797   */\n    tag_354:\n        /* \"#utility.yul\":1738:1745   */\n      0x00\n        /* \"#utility.yul\":1767:1791   */\n      tag_417\n        /* \"#utility.yul\":1785:1790   */\n      dup3\n        /* \"#utility.yul\":1767:1791   */\n      tag_353\n      jump\t// in\n    tag_417:\n        /* \"#utility.yul\":1756:1791   */\n      swap1\n      pop\n        /* \"#utility.yul\":1701:1797   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1803:1925   */\n    tag_355:\n        /* \"#utility.yul\":1876:1900   */\n      tag_419\n        /* \"#utility.yul\":1894:1899   */\n      dup2\n        /* \"#utility.yul\":1876:1900   */\n      tag_354\n      jump\t// in\n    tag_419:\n        /* \"#utility.yul\":1869:1874   */\n      dup2\n        /* \"#utility.yul\":1866:1901   */\n      eq\n        /* \"#utility.yul\":1856:1919   */\n      tag_420\n      jumpi\n        /* \"#utility.yul\":1915:1916   */\n      0x00\n        /* \"#utility.yul\":1912:1913   */\n      dup1\n        /* \"#utility.yul\":1905:1917   */\n      revert\n        /* \"#utility.yul\":1856:1919   */\n    tag_420:\n        /* \"#utility.yul\":1803:1925   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1931:2070   */\n    tag_356:\n        /* \"#utility.yul\":1977:1982   */\n      0x00\n        /* \"#utility.yul\":2015:2021   */\n      dup2\n        /* \"#utility.yul\":2002:2022   */\n      calldataload\n        /* \"#utility.yul\":1993:2022   */\n      swap1\n      pop\n        /* \"#utility.yul\":2031:2064   */\n      tag_422\n        /* \"#utility.yul\":2058:2063   */\n      dup2\n        /* \"#utility.yul\":2031:2064   */\n      tag_355\n      jump\t// in\n    tag_422:\n        /* \"#utility.yul\":1931:2070   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2076:2153   */\n    tag_357:\n        /* \"#utility.yul\":2113:2120   */\n      0x00\n        /* \"#utility.yul\":2142:2147   */\n      dup2\n        /* \"#utility.yul\":2131:2147   */\n      swap1\n      pop\n        /* \"#utility.yul\":2076:2153   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2159:2281   */\n    tag_358:\n        /* \"#utility.yul\":2232:2256   */\n      tag_425\n        /* \"#utility.yul\":2250:2255   */\n      dup2\n        /* \"#utility.yul\":2232:2256   */\n      tag_357\n      jump\t// in\n    tag_425:\n        /* \"#utility.yul\":2225:2230   */\n      dup2\n        /* \"#utility.yul\":2222:2257   */\n      eq\n        /* \"#utility.yul\":2212:2275   */\n      tag_426\n      jumpi\n        /* \"#utility.yul\":2271:2272   */\n      0x00\n        /* \"#utility.yul\":2268:2269   */\n      dup1\n        /* \"#utility.yul\":2261:2273   */\n      revert\n        /* \"#utility.yul\":2212:2275   */\n    tag_426:\n        /* \"#utility.yul\":2159:2281   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2287:2426   */\n    tag_359:\n        /* \"#utility.yul\":2333:2338   */\n      0x00\n        /* \"#utility.yul\":2371:2377   */\n      dup2\n        /* \"#utility.yul\":2358:2378   */\n      calldataload\n        /* \"#utility.yul\":2349:2378   */\n      swap1\n      pop\n        /* \"#utility.yul\":2387:2420   */\n      tag_428\n        /* \"#utility.yul\":2414:2419   */\n      dup2\n        /* \"#utility.yul\":2387:2420   */\n      tag_358\n      jump\t// in\n    tag_428:\n        /* \"#utility.yul\":2287:2426   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2432:2906   */\n    tag_46:\n        /* \"#utility.yul\":2500:2506   */\n      0x00\n        /* \"#utility.yul\":2508:2514   */\n      dup1\n        /* \"#utility.yul\":2557:2559   */\n      0x40\n        /* \"#utility.yul\":2545:2554   */\n      dup4\n        /* \"#utility.yul\":2536:2543   */\n      dup6\n        /* \"#utility.yul\":2532:2555   */\n      sub\n        /* \"#utility.yul\":2528:2560   */\n      slt\n        /* \"#utility.yul\":2525:2644   */\n      iszero\n      tag_430\n      jumpi\n        /* \"#utility.yul\":2563:2642   */\n      tag_431\n      tag_351\n      jump\t// in\n    tag_431:\n        /* \"#utility.yul\":2525:2644   */\n    tag_430:\n        /* \"#utility.yul\":2683:2684   */\n      0x00\n        /* \"#utility.yul\":2708:2761   */\n      tag_432\n        /* \"#utility.yul\":2753:2760   */\n      dup6\n        /* \"#utility.yul\":2744:2750   */\n      dup3\n        /* \"#utility.yul\":2733:2742   */\n      dup7\n        /* \"#utility.yul\":2729:2751   */\n      add\n        /* \"#utility.yul\":2708:2761   */\n      tag_356\n      jump\t// in\n    tag_432:\n        /* \"#utility.yul\":2698:2761   */\n      swap3\n      pop\n        /* \"#utility.yul\":2654:2771   */\n      pop\n        /* \"#utility.yul\":2810:2812   */\n      0x20\n        /* \"#utility.yul\":2836:2889   */\n      tag_433\n        /* \"#utility.yul\":2881:2888   */\n      dup6\n        /* \"#utility.yul\":2872:2878   */\n      dup3\n        /* \"#utility.yul\":2861:2870   */\n      dup7\n        /* \"#utility.yul\":2857:2879   */\n      add\n        /* \"#utility.yul\":2836:2889   */\n      tag_359\n      jump\t// in\n    tag_433:\n        /* \"#utility.yul\":2826:2889   */\n      swap2\n      pop\n        /* \"#utility.yul\":2781:2899   */\n      pop\n        /* \"#utility.yul\":2432:2906   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2912:3002   */\n    tag_360:\n        /* \"#utility.yul\":2946:2953   */\n      0x00\n        /* \"#utility.yul\":2989:2994   */\n      dup2\n        /* \"#utility.yul\":2982:2995   */\n      iszero\n        /* \"#utility.yul\":2975:2996   */\n      iszero\n        /* \"#utility.yul\":2964:2996   */\n      swap1\n      pop\n        /* \"#utility.yul\":2912:3002   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3008:3117   */\n    tag_361:\n        /* \"#utility.yul\":3089:3110   */\n      tag_436\n        /* \"#utility.yul\":3104:3109   */\n      dup2\n        /* \"#utility.yul\":3089:3110   */\n      tag_360\n      jump\t// in\n    tag_436:\n        /* \"#utility.yul\":3084:3087   */\n      dup3\n        /* \"#utility.yul\":3077:3111   */\n      mstore\n        /* \"#utility.yul\":3008:3117   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3123:3333   */\n    tag_49:\n        /* \"#utility.yul\":3210:3214   */\n      0x00\n        /* \"#utility.yul\":3248:3250   */\n      0x20\n        /* \"#utility.yul\":3237:3246   */\n      dup3\n        /* \"#utility.yul\":3233:3251   */\n      add\n        /* \"#utility.yul\":3225:3251   */\n      swap1\n      pop\n        /* \"#utility.yul\":3261:3326   */\n      tag_438\n        /* \"#utility.yul\":3323:3324   */\n      0x00\n        /* \"#utility.yul\":3312:3321   */\n      dup4\n        /* \"#utility.yul\":3308:3325   */\n      add\n        /* \"#utility.yul\":3299:3305   */\n      dup5\n        /* \"#utility.yul\":3261:3326   */\n      tag_361\n      jump\t// in\n    tag_438:\n        /* \"#utility.yul\":3123:3333   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3339:3457   */\n    tag_362:\n        /* \"#utility.yul\":3426:3450   */\n      tag_440\n        /* \"#utility.yul\":3444:3449   */\n      dup2\n        /* \"#utility.yul\":3426:3450   */\n      tag_357\n      jump\t// in\n    tag_440:\n        /* \"#utility.yul\":3421:3424   */\n      dup3\n        /* \"#utility.yul\":3414:3451   */\n      mstore\n        /* \"#utility.yul\":3339:3457   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3463:3685   */\n    tag_53:\n        /* \"#utility.yul\":3556:3560   */\n      0x00\n        /* \"#utility.yul\":3594:3596   */\n      0x20\n        /* \"#utility.yul\":3583:3592   */\n      dup3\n        /* \"#utility.yul\":3579:3597   */\n      add\n        /* \"#utility.yul\":3571:3597   */\n      swap1\n      pop\n        /* \"#utility.yul\":3607:3678   */\n      tag_442\n        /* \"#utility.yul\":3675:3676   */\n      0x00\n        /* \"#utility.yul\":3664:3673   */\n      dup4\n        /* \"#utility.yul\":3660:3677   */\n      add\n        /* \"#utility.yul\":3651:3657   */\n      dup5\n        /* \"#utility.yul\":3607:3678   */\n      tag_362\n      jump\t// in\n    tag_442:\n        /* \"#utility.yul\":3463:3685   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3691:4310   */\n    tag_56:\n        /* \"#utility.yul\":3768:3774   */\n      0x00\n        /* \"#utility.yul\":3776:3782   */\n      dup1\n        /* \"#utility.yul\":3784:3790   */\n      0x00\n        /* \"#utility.yul\":3833:3835   */\n      0x60\n        /* \"#utility.yul\":3821:3830   */\n      dup5\n        /* \"#utility.yul\":3812:3819   */\n      dup7\n        /* \"#utility.yul\":3808:3831   */\n      sub\n        /* \"#utility.yul\":3804:3836   */\n      slt\n        /* \"#utility.yul\":3801:3920   */\n      iszero\n      tag_444\n      jumpi\n        /* \"#utility.yul\":3839:3918   */\n      tag_445\n      tag_351\n      jump\t// in\n    tag_445:\n        /* \"#utility.yul\":3801:3920   */\n    tag_444:\n        /* \"#utility.yul\":3959:3960   */\n      0x00\n        /* \"#utility.yul\":3984:4037   */\n      tag_446\n        /* \"#utility.yul\":4029:4036   */\n      dup7\n        /* \"#utility.yul\":4020:4026   */\n      dup3\n        /* \"#utility.yul\":4009:4018   */\n      dup8\n        /* \"#utility.yul\":4005:4027   */\n      add\n        /* \"#utility.yul\":3984:4037   */\n      tag_356\n      jump\t// in\n    tag_446:\n        /* \"#utility.yul\":3974:4037   */\n      swap4\n      pop\n        /* \"#utility.yul\":3930:4047   */\n      pop\n        /* \"#utility.yul\":4086:4088   */\n      0x20\n        /* \"#utility.yul\":4112:4165   */\n      tag_447\n        /* \"#utility.yul\":4157:4164   */\n      dup7\n        /* \"#utility.yul\":4148:4154   */\n      dup3\n        /* \"#utility.yul\":4137:4146   */\n      dup8\n        /* \"#utility.yul\":4133:4155   */\n      add\n        /* \"#utility.yul\":4112:4165   */\n      tag_356\n      jump\t// in\n    tag_447:\n        /* \"#utility.yul\":4102:4165   */\n      swap3\n      pop\n        /* \"#utility.yul\":4057:4175   */\n      pop\n        /* \"#utility.yul\":4214:4216   */\n      0x40\n        /* \"#utility.yul\":4240:4293   */\n      tag_448\n        /* \"#utility.yul\":4285:4292   */\n      dup7\n        /* \"#utility.yul\":4276:4282   */\n      dup3\n        /* \"#utility.yul\":4265:4274   */\n      dup8\n        /* \"#utility.yul\":4261:4283   */\n      add\n        /* \"#utility.yul\":4240:4293   */\n      tag_359\n      jump\t// in\n    tag_448:\n        /* \"#utility.yul\":4230:4293   */\n      swap2\n      pop\n        /* \"#utility.yul\":4185:4303   */\n      pop\n        /* \"#utility.yul\":3691:4310   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":4316:4402   */\n    tag_363:\n        /* \"#utility.yul\":4351:4358   */\n      0x00\n        /* \"#utility.yul\":4391:4395   */\n      0xff\n        /* \"#utility.yul\":4384:4389   */\n      dup3\n        /* \"#utility.yul\":4380:4396   */\n      and\n        /* \"#utility.yul\":4369:4396   */\n      swap1\n      pop\n        /* \"#utility.yul\":4316:4402   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4408:4520   */\n    tag_364:\n        /* \"#utility.yul\":4491:4513   */\n      tag_451\n        /* \"#utility.yul\":4507:4512   */\n      dup2\n        /* \"#utility.yul\":4491:4513   */\n      tag_363\n      jump\t// in\n    tag_451:\n        /* \"#utility.yul\":4486:4489   */\n      dup3\n        /* \"#utility.yul\":4479:4514   */\n      mstore\n        /* \"#utility.yul\":4408:4520   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4526:4740   */\n    tag_62:\n        /* \"#utility.yul\":4615:4619   */\n      0x00\n        /* \"#utility.yul\":4653:4655   */\n      0x20\n        /* \"#utility.yul\":4642:4651   */\n      dup3\n        /* \"#utility.yul\":4638:4656   */\n      add\n        /* \"#utility.yul\":4630:4656   */\n      swap1\n      pop\n        /* \"#utility.yul\":4666:4733   */\n      tag_453\n        /* \"#utility.yul\":4730:4731   */\n      0x00\n        /* \"#utility.yul\":4719:4728   */\n      dup4\n        /* \"#utility.yul\":4715:4732   */\n      add\n        /* \"#utility.yul\":4706:4712   */\n      dup5\n        /* \"#utility.yul\":4666:4733   */\n      tag_364\n      jump\t// in\n    tag_453:\n        /* \"#utility.yul\":4526:4740   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4746:5075   */\n    tag_67:\n        /* \"#utility.yul\":4805:4811   */\n      0x00\n        /* \"#utility.yul\":4854:4856   */\n      0x20\n        /* \"#utility.yul\":4842:4851   */\n      dup3\n        /* \"#utility.yul\":4833:4840   */\n      dup5\n        /* \"#utility.yul\":4829:4852   */\n      sub\n        /* \"#utility.yul\":4825:4857   */\n      slt\n        /* \"#utility.yul\":4822:4941   */\n      iszero\n      tag_455\n      jumpi\n        /* \"#utility.yul\":4860:4939   */\n      tag_456\n      tag_351\n      jump\t// in\n    tag_456:\n        /* \"#utility.yul\":4822:4941   */\n    tag_455:\n        /* \"#utility.yul\":4980:4981   */\n      0x00\n        /* \"#utility.yul\":5005:5058   */\n      tag_457\n        /* \"#utility.yul\":5050:5057   */\n      dup5\n        /* \"#utility.yul\":5041:5047   */\n      dup3\n        /* \"#utility.yul\":5030:5039   */\n      dup6\n        /* \"#utility.yul\":5026:5048   */\n      add\n        /* \"#utility.yul\":5005:5058   */\n      tag_359\n      jump\t// in\n    tag_457:\n        /* \"#utility.yul\":4995:5058   */\n      swap2\n      pop\n        /* \"#utility.yul\":4951:5068   */\n      pop\n        /* \"#utility.yul\":4746:5075   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5081:5198   */\n    tag_365:\n        /* \"#utility.yul\":5190:5191   */\n      0x00\n        /* \"#utility.yul\":5187:5188   */\n      dup1\n        /* \"#utility.yul\":5180:5192   */\n      revert\n        /* \"#utility.yul\":5204:5384   */\n    tag_366:\n        /* \"#utility.yul\":5252:5329   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":5249:5250   */\n      0x00\n        /* \"#utility.yul\":5242:5330   */\n      mstore\n        /* \"#utility.yul\":5349:5353   */\n      0x41\n        /* \"#utility.yul\":5346:5347   */\n      0x04\n        /* \"#utility.yul\":5339:5354   */\n      mstore\n        /* \"#utility.yul\":5373:5377   */\n      0x24\n        /* \"#utility.yul\":5370:5371   */\n      0x00\n        /* \"#utility.yul\":5363:5378   */\n      revert\n        /* \"#utility.yul\":5390:5671   */\n    tag_367:\n        /* \"#utility.yul\":5473:5500   */\n      tag_461\n        /* \"#utility.yul\":5495:5499   */\n      dup3\n        /* \"#utility.yul\":5473:5500   */\n      tag_348\n      jump\t// in\n    tag_461:\n        /* \"#utility.yul\":5465:5471   */\n      dup2\n        /* \"#utility.yul\":5461:5501   */\n      add\n        /* \"#utility.yul\":5603:5609   */\n      dup2\n        /* \"#utility.yul\":5591:5601   */\n      dup2\n        /* \"#utility.yul\":5588:5610   */\n      lt\n        /* \"#utility.yul\":5567:5585   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":5555:5565   */\n      dup3\n        /* \"#utility.yul\":5552:5586   */\n      gt\n        /* \"#utility.yul\":5549:5611   */\n      or\n        /* \"#utility.yul\":5546:5634   */\n      iszero\n      tag_462\n      jumpi\n        /* \"#utility.yul\":5614:5632   */\n      tag_463\n      tag_366\n      jump\t// in\n    tag_463:\n        /* \"#utility.yul\":5546:5634   */\n    tag_462:\n        /* \"#utility.yul\":5654:5664   */\n      dup1\n        /* \"#utility.yul\":5650:5652   */\n      0x40\n        /* \"#utility.yul\":5643:5665   */\n      mstore\n        /* \"#utility.yul\":5433:5671   */\n      pop\n        /* \"#utility.yul\":5390:5671   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5677:5806   */\n    tag_368:\n        /* \"#utility.yul\":5711:5717   */\n      0x00\n        /* \"#utility.yul\":5738:5758   */\n      tag_465\n      tag_350\n      jump\t// in\n    tag_465:\n        /* \"#utility.yul\":5728:5758   */\n      swap1\n      pop\n        /* \"#utility.yul\":5767:5800   */\n      tag_466\n        /* \"#utility.yul\":5795:5799   */\n      dup3\n        /* \"#utility.yul\":5787:5793   */\n      dup3\n        /* \"#utility.yul\":5767:5800   */\n      tag_367\n      jump\t// in\n    tag_466:\n        /* \"#utility.yul\":5677:5806   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5812:6123   */\n    tag_369:\n        /* \"#utility.yul\":5889:5893   */\n      0x00\n        /* \"#utility.yul\":5979:5997   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":5971:5977   */\n      dup3\n        /* \"#utility.yul\":5968:5998   */\n      gt\n        /* \"#utility.yul\":5965:6021   */\n      iszero\n      tag_468\n      jumpi\n        /* \"#utility.yul\":6001:6019   */\n      tag_469\n      tag_366\n      jump\t// in\n    tag_469:\n        /* \"#utility.yul\":5965:6021   */\n    tag_468:\n        /* \"#utility.yul\":6051:6055   */\n      0x20\n        /* \"#utility.yul\":6043:6049   */\n      dup3\n        /* \"#utility.yul\":6039:6056   */\n      mul\n        /* \"#utility.yul\":6031:6056   */\n      swap1\n      pop\n        /* \"#utility.yul\":6111:6115   */\n      0x20\n        /* \"#utility.yul\":6105:6109   */\n      dup2\n        /* \"#utility.yul\":6101:6116   */\n      add\n        /* \"#utility.yul\":6093:6116   */\n      swap1\n      pop\n        /* \"#utility.yul\":5812:6123   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6129:6246   */\n    tag_370:\n        /* \"#utility.yul\":6238:6239   */\n      0x00\n        /* \"#utility.yul\":6235:6236   */\n      dup1\n        /* \"#utility.yul\":6228:6240   */\n      revert\n        /* \"#utility.yul\":6269:6979   */\n    tag_371:\n        /* \"#utility.yul\":6365:6370   */\n      0x00\n        /* \"#utility.yul\":6390:6471   */\n      tag_472\n        /* \"#utility.yul\":6406:6470   */\n      tag_473\n        /* \"#utility.yul\":6463:6469   */\n      dup5\n        /* \"#utility.yul\":6406:6470   */\n      tag_369\n      jump\t// in\n    tag_473:\n        /* \"#utility.yul\":6390:6471   */\n      tag_368\n      jump\t// in\n    tag_472:\n        /* \"#utility.yul\":6381:6471   */\n      swap1\n      pop\n        /* \"#utility.yul\":6491:6496   */\n      dup1\n        /* \"#utility.yul\":6520:6526   */\n      dup4\n        /* \"#utility.yul\":6513:6518   */\n      dup3\n        /* \"#utility.yul\":6506:6527   */\n      mstore\n        /* \"#utility.yul\":6554:6558   */\n      0x20\n        /* \"#utility.yul\":6547:6552   */\n      dup3\n        /* \"#utility.yul\":6543:6559   */\n      add\n        /* \"#utility.yul\":6536:6559   */\n      swap1\n      pop\n        /* \"#utility.yul\":6607:6611   */\n      0x20\n        /* \"#utility.yul\":6599:6605   */\n      dup5\n        /* \"#utility.yul\":6595:6612   */\n      mul\n        /* \"#utility.yul\":6587:6593   */\n      dup4\n        /* \"#utility.yul\":6583:6613   */\n      add\n        /* \"#utility.yul\":6636:6639   */\n      dup6\n        /* \"#utility.yul\":6628:6634   */\n      dup2\n        /* \"#utility.yul\":6625:6640   */\n      gt\n        /* \"#utility.yul\":6622:6744   */\n      iszero\n      tag_474\n      jumpi\n        /* \"#utility.yul\":6655:6734   */\n      tag_475\n      tag_370\n      jump\t// in\n    tag_475:\n        /* \"#utility.yul\":6622:6744   */\n    tag_474:\n        /* \"#utility.yul\":6770:6776   */\n      dup4\n        /* \"#utility.yul\":6753:6973   */\n    tag_476:\n        /* \"#utility.yul\":6787:6793   */\n      dup2\n        /* \"#utility.yul\":6782:6785   */\n      dup2\n        /* \"#utility.yul\":6779:6794   */\n      lt\n        /* \"#utility.yul\":6753:6973   */\n      iszero\n      tag_478\n      jumpi\n        /* \"#utility.yul\":6862:6865   */\n      dup1\n        /* \"#utility.yul\":6891:6928   */\n      tag_479\n        /* \"#utility.yul\":6924:6927   */\n      dup9\n        /* \"#utility.yul\":6912:6922   */\n      dup3\n        /* \"#utility.yul\":6891:6928   */\n      tag_359\n      jump\t// in\n    tag_479:\n        /* \"#utility.yul\":6886:6889   */\n      dup5\n        /* \"#utility.yul\":6879:6929   */\n      mstore\n        /* \"#utility.yul\":6958:6962   */\n      0x20\n        /* \"#utility.yul\":6953:6956   */\n      dup5\n        /* \"#utility.yul\":6949:6963   */\n      add\n        /* \"#utility.yul\":6942:6963   */\n      swap4\n      pop\n        /* \"#utility.yul\":6829:6973   */\n      pop\n        /* \"#utility.yul\":6813:6817   */\n      0x20\n        /* \"#utility.yul\":6808:6811   */\n      dup2\n        /* \"#utility.yul\":6804:6818   */\n      add\n        /* \"#utility.yul\":6797:6818   */\n      swap1\n      pop\n        /* \"#utility.yul\":6753:6973   */\n      jump(tag_476)\n    tag_478:\n        /* \"#utility.yul\":6757:6778   */\n      pop\n        /* \"#utility.yul\":6371:6979   */\n      pop\n      pop\n        /* \"#utility.yul\":6269:6979   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7002:7372   */\n    tag_372:\n        /* \"#utility.yul\":7073:7078   */\n      0x00\n        /* \"#utility.yul\":7122:7125   */\n      dup3\n        /* \"#utility.yul\":7115:7119   */\n      0x1f\n        /* \"#utility.yul\":7107:7113   */\n      dup4\n        /* \"#utility.yul\":7103:7120   */\n      add\n        /* \"#utility.yul\":7099:7126   */\n      slt\n        /* \"#utility.yul\":7089:7211   */\n      tag_481\n      jumpi\n        /* \"#utility.yul\":7130:7209   */\n      tag_482\n      tag_365\n      jump\t// in\n    tag_482:\n        /* \"#utility.yul\":7089:7211   */\n    tag_481:\n        /* \"#utility.yul\":7247:7253   */\n      dup2\n        /* \"#utility.yul\":7234:7254   */\n      calldataload\n        /* \"#utility.yul\":7272:7366   */\n      tag_483\n        /* \"#utility.yul\":7362:7365   */\n      dup5\n        /* \"#utility.yul\":7354:7360   */\n      dup3\n        /* \"#utility.yul\":7347:7351   */\n      0x20\n        /* \"#utility.yul\":7339:7345   */\n      dup7\n        /* \"#utility.yul\":7335:7352   */\n      add\n        /* \"#utility.yul\":7272:7366   */\n      tag_371\n      jump\t// in\n    tag_483:\n        /* \"#utility.yul\":7263:7366   */\n      swap2\n      pop\n        /* \"#utility.yul\":7079:7372   */\n      pop\n        /* \"#utility.yul\":7002:7372   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7378:8207   */\n    tag_72:\n        /* \"#utility.yul\":7480:7486   */\n      0x00\n        /* \"#utility.yul\":7488:7494   */\n      dup1\n        /* \"#utility.yul\":7496:7502   */\n      0x00\n        /* \"#utility.yul\":7545:7547   */\n      0x60\n        /* \"#utility.yul\":7533:7542   */\n      dup5\n        /* \"#utility.yul\":7524:7531   */\n      dup7\n        /* \"#utility.yul\":7520:7543   */\n      sub\n        /* \"#utility.yul\":7516:7548   */\n      slt\n        /* \"#utility.yul\":7513:7632   */\n      iszero\n      tag_485\n      jumpi\n        /* \"#utility.yul\":7551:7630   */\n      tag_486\n      tag_351\n      jump\t// in\n    tag_486:\n        /* \"#utility.yul\":7513:7632   */\n    tag_485:\n        /* \"#utility.yul\":7671:7672   */\n      0x00\n        /* \"#utility.yul\":7696:7749   */\n      tag_487\n        /* \"#utility.yul\":7741:7748   */\n      dup7\n        /* \"#utility.yul\":7732:7738   */\n      dup3\n        /* \"#utility.yul\":7721:7730   */\n      dup8\n        /* \"#utility.yul\":7717:7739   */\n      add\n        /* \"#utility.yul\":7696:7749   */\n      tag_359\n      jump\t// in\n    tag_487:\n        /* \"#utility.yul\":7686:7749   */\n      swap4\n      pop\n        /* \"#utility.yul\":7642:7759   */\n      pop\n        /* \"#utility.yul\":7826:7828   */\n      0x20\n        /* \"#utility.yul\":7815:7824   */\n      dup5\n        /* \"#utility.yul\":7811:7829   */\n      add\n        /* \"#utility.yul\":7798:7830   */\n      calldataload\n        /* \"#utility.yul\":7857:7875   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":7849:7855   */\n      dup2\n        /* \"#utility.yul\":7846:7876   */\n      gt\n        /* \"#utility.yul\":7843:7960   */\n      iszero\n      tag_488\n      jumpi\n        /* \"#utility.yul\":7879:7958   */\n      tag_489\n      tag_352\n      jump\t// in\n    tag_489:\n        /* \"#utility.yul\":7843:7960   */\n    tag_488:\n        /* \"#utility.yul\":7984:8062   */\n      tag_490\n        /* \"#utility.yul\":8054:8061   */\n      dup7\n        /* \"#utility.yul\":8045:8051   */\n      dup3\n        /* \"#utility.yul\":8034:8043   */\n      dup8\n        /* \"#utility.yul\":8030:8052   */\n      add\n        /* \"#utility.yul\":7984:8062   */\n      tag_372\n      jump\t// in\n    tag_490:\n        /* \"#utility.yul\":7974:8062   */\n      swap3\n      pop\n        /* \"#utility.yul\":7769:8072   */\n      pop\n        /* \"#utility.yul\":8111:8113   */\n      0x40\n        /* \"#utility.yul\":8137:8190   */\n      tag_491\n        /* \"#utility.yul\":8182:8189   */\n      dup7\n        /* \"#utility.yul\":8173:8179   */\n      dup3\n        /* \"#utility.yul\":8162:8171   */\n      dup8\n        /* \"#utility.yul\":8158:8180   */\n      add\n        /* \"#utility.yul\":8137:8190   */\n      tag_359\n      jump\t// in\n    tag_491:\n        /* \"#utility.yul\":8127:8190   */\n      swap2\n      pop\n        /* \"#utility.yul\":8082:8200   */\n      pop\n        /* \"#utility.yul\":7378:8207   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":8213:8687   */\n    tag_76:\n        /* \"#utility.yul\":8281:8287   */\n      0x00\n        /* \"#utility.yul\":8289:8295   */\n      dup1\n        /* \"#utility.yul\":8338:8340   */\n      0x40\n        /* \"#utility.yul\":8326:8335   */\n      dup4\n        /* \"#utility.yul\":8317:8324   */\n      dup6\n        /* \"#utility.yul\":8313:8336   */\n      sub\n        /* \"#utility.yul\":8309:8341   */\n      slt\n        /* \"#utility.yul\":8306:8425   */\n      iszero\n      tag_493\n      jumpi\n        /* \"#utility.yul\":8344:8423   */\n      tag_494\n      tag_351\n      jump\t// in\n    tag_494:\n        /* \"#utility.yul\":8306:8425   */\n    tag_493:\n        /* \"#utility.yul\":8464:8465   */\n      0x00\n        /* \"#utility.yul\":8489:8542   */\n      tag_495\n        /* \"#utility.yul\":8534:8541   */\n      dup6\n        /* \"#utility.yul\":8525:8531   */\n      dup3\n        /* \"#utility.yul\":8514:8523   */\n      dup7\n        /* \"#utility.yul\":8510:8532   */\n      add\n        /* \"#utility.yul\":8489:8542   */\n      tag_359\n      jump\t// in\n    tag_495:\n        /* \"#utility.yul\":8479:8542   */\n      swap3\n      pop\n        /* \"#utility.yul\":8435:8552   */\n      pop\n        /* \"#utility.yul\":8591:8593   */\n      0x20\n        /* \"#utility.yul\":8617:8670   */\n      tag_496\n        /* \"#utility.yul\":8662:8669   */\n      dup6\n        /* \"#utility.yul\":8653:8659   */\n      dup3\n        /* \"#utility.yul\":8642:8651   */\n      dup7\n        /* \"#utility.yul\":8638:8660   */\n      add\n        /* \"#utility.yul\":8617:8670   */\n      tag_356\n      jump\t// in\n    tag_496:\n        /* \"#utility.yul\":8607:8670   */\n      swap2\n      pop\n        /* \"#utility.yul\":8562:8680   */\n      pop\n        /* \"#utility.yul\":8213:8687   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8693:9022   */\n    tag_87:\n        /* \"#utility.yul\":8752:8758   */\n      0x00\n        /* \"#utility.yul\":8801:8803   */\n      0x20\n        /* \"#utility.yul\":8789:8798   */\n      dup3\n        /* \"#utility.yul\":8780:8787   */\n      dup5\n        /* \"#utility.yul\":8776:8799   */\n      sub\n        /* \"#utility.yul\":8772:8804   */\n      slt\n        /* \"#utility.yul\":8769:8888   */\n      iszero\n      tag_498\n      jumpi\n        /* \"#utility.yul\":8807:8886   */\n      tag_499\n      tag_351\n      jump\t// in\n    tag_499:\n        /* \"#utility.yul\":8769:8888   */\n    tag_498:\n        /* \"#utility.yul\":8927:8928   */\n      0x00\n        /* \"#utility.yul\":8952:9005   */\n      tag_500\n        /* \"#utility.yul\":8997:9004   */\n      dup5\n        /* \"#utility.yul\":8988:8994   */\n      dup3\n        /* \"#utility.yul\":8977:8986   */\n      dup6\n        /* \"#utility.yul\":8973:8995   */\n      add\n        /* \"#utility.yul\":8952:9005   */\n      tag_356\n      jump\t// in\n    tag_500:\n        /* \"#utility.yul\":8942:9005   */\n      swap2\n      pop\n        /* \"#utility.yul\":8898:9015   */\n      pop\n        /* \"#utility.yul\":8693:9022   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9028:9146   */\n    tag_373:\n        /* \"#utility.yul\":9115:9139   */\n      tag_502\n        /* \"#utility.yul\":9133:9138   */\n      dup2\n        /* \"#utility.yul\":9115:9139   */\n      tag_354\n      jump\t// in\n    tag_502:\n        /* \"#utility.yul\":9110:9113   */\n      dup3\n        /* \"#utility.yul\":9103:9140   */\n      mstore\n        /* \"#utility.yul\":9028:9146   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9152:9374   */\n    tag_100:\n        /* \"#utility.yul\":9245:9249   */\n      0x00\n        /* \"#utility.yul\":9283:9285   */\n      0x20\n        /* \"#utility.yul\":9272:9281   */\n      dup3\n        /* \"#utility.yul\":9268:9286   */\n      add\n        /* \"#utility.yul\":9260:9286   */\n      swap1\n      pop\n        /* \"#utility.yul\":9296:9367   */\n      tag_504\n        /* \"#utility.yul\":9364:9365   */\n      0x00\n        /* \"#utility.yul\":9353:9362   */\n      dup4\n        /* \"#utility.yul\":9349:9366   */\n      add\n        /* \"#utility.yul\":9340:9346   */\n      dup5\n        /* \"#utility.yul\":9296:9367   */\n      tag_373\n      jump\t// in\n    tag_504:\n        /* \"#utility.yul\":9152:9374   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9380:9999   */\n    tag_105:\n        /* \"#utility.yul\":9457:9463   */\n      0x00\n        /* \"#utility.yul\":9465:9471   */\n      dup1\n        /* \"#utility.yul\":9473:9479   */\n      0x00\n        /* \"#utility.yul\":9522:9524   */\n      0x60\n        /* \"#utility.yul\":9510:9519   */\n      dup5\n        /* \"#utility.yul\":9501:9508   */\n      dup7\n        /* \"#utility.yul\":9497:9520   */\n      sub\n        /* \"#utility.yul\":9493:9525   */\n      slt\n        /* \"#utility.yul\":9490:9609   */\n      iszero\n      tag_506\n      jumpi\n        /* \"#utility.yul\":9528:9607   */\n      tag_507\n      tag_351\n      jump\t// in\n    tag_507:\n        /* \"#utility.yul\":9490:9609   */\n    tag_506:\n        /* \"#utility.yul\":9648:9649   */\n      0x00\n        /* \"#utility.yul\":9673:9726   */\n      tag_508\n        /* \"#utility.yul\":9718:9725   */\n      dup7\n        /* \"#utility.yul\":9709:9715   */\n      dup3\n        /* \"#utility.yul\":9698:9707   */\n      dup8\n        /* \"#utility.yul\":9694:9716   */\n      add\n        /* \"#utility.yul\":9673:9726   */\n      tag_359\n      jump\t// in\n    tag_508:\n        /* \"#utility.yul\":9663:9726   */\n      swap4\n      pop\n        /* \"#utility.yul\":9619:9736   */\n      pop\n        /* \"#utility.yul\":9775:9777   */\n      0x20\n        /* \"#utility.yul\":9801:9854   */\n      tag_509\n        /* \"#utility.yul\":9846:9853   */\n      dup7\n        /* \"#utility.yul\":9837:9843   */\n      dup3\n        /* \"#utility.yul\":9826:9835   */\n      dup8\n        /* \"#utility.yul\":9822:9844   */\n      add\n        /* \"#utility.yul\":9801:9854   */\n      tag_356\n      jump\t// in\n    tag_509:\n        /* \"#utility.yul\":9791:9854   */\n      swap3\n      pop\n        /* \"#utility.yul\":9746:9864   */\n      pop\n        /* \"#utility.yul\":9903:9905   */\n      0x40\n        /* \"#utility.yul\":9929:9982   */\n      tag_510\n        /* \"#utility.yul\":9974:9981   */\n      dup7\n        /* \"#utility.yul\":9965:9971   */\n      dup3\n        /* \"#utility.yul\":9954:9963   */\n      dup8\n        /* \"#utility.yul\":9950:9972   */\n      add\n        /* \"#utility.yul\":9929:9982   */\n      tag_359\n      jump\t// in\n    tag_510:\n        /* \"#utility.yul\":9919:9982   */\n      swap2\n      pop\n        /* \"#utility.yul\":9874:9992   */\n      pop\n        /* \"#utility.yul\":9380:9999   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":10005:10337   */\n    tag_121:\n        /* \"#utility.yul\":10126:10130   */\n      0x00\n        /* \"#utility.yul\":10164:10166   */\n      0x40\n        /* \"#utility.yul\":10153:10162   */\n      dup3\n        /* \"#utility.yul\":10149:10167   */\n      add\n        /* \"#utility.yul\":10141:10167   */\n      swap1\n      pop\n        /* \"#utility.yul\":10177:10248   */\n      tag_512\n        /* \"#utility.yul\":10245:10246   */\n      0x00\n        /* \"#utility.yul\":10234:10243   */\n      dup4\n        /* \"#utility.yul\":10230:10247   */\n      add\n        /* \"#utility.yul\":10221:10227   */\n      dup6\n        /* \"#utility.yul\":10177:10248   */\n      tag_362\n      jump\t// in\n    tag_512:\n        /* \"#utility.yul\":10258:10330   */\n      tag_513\n        /* \"#utility.yul\":10326:10328   */\n      0x20\n        /* \"#utility.yul\":10315:10324   */\n      dup4\n        /* \"#utility.yul\":10311:10329   */\n      add\n        /* \"#utility.yul\":10302:10308   */\n      dup5\n        /* \"#utility.yul\":10258:10330   */\n      tag_362\n      jump\t// in\n    tag_513:\n        /* \"#utility.yul\":10005:10337   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10343:10817   */\n    tag_139:\n        /* \"#utility.yul\":10411:10417   */\n      0x00\n        /* \"#utility.yul\":10419:10425   */\n      dup1\n        /* \"#utility.yul\":10468:10470   */\n      0x40\n        /* \"#utility.yul\":10456:10465   */\n      dup4\n        /* \"#utility.yul\":10447:10454   */\n      dup6\n        /* \"#utility.yul\":10443:10466   */\n      sub\n        /* \"#utility.yul\":10439:10471   */\n      slt\n        /* \"#utility.yul\":10436:10555   */\n      iszero\n      tag_515\n      jumpi\n        /* \"#utility.yul\":10474:10553   */\n      tag_516\n      tag_351\n      jump\t// in\n    tag_516:\n        /* \"#utility.yul\":10436:10555   */\n    tag_515:\n        /* \"#utility.yul\":10594:10595   */\n      0x00\n        /* \"#utility.yul\":10619:10672   */\n      tag_517\n        /* \"#utility.yul\":10664:10671   */\n      dup6\n        /* \"#utility.yul\":10655:10661   */\n      dup3\n        /* \"#utility.yul\":10644:10653   */\n      dup7\n        /* \"#utility.yul\":10640:10662   */\n      add\n        /* \"#utility.yul\":10619:10672   */\n      tag_356\n      jump\t// in\n    tag_517:\n        /* \"#utility.yul\":10609:10672   */\n      swap3\n      pop\n        /* \"#utility.yul\":10565:10682   */\n      pop\n        /* \"#utility.yul\":10721:10723   */\n      0x20\n        /* \"#utility.yul\":10747:10800   */\n      tag_518\n        /* \"#utility.yul\":10792:10799   */\n      dup6\n        /* \"#utility.yul\":10783:10789   */\n      dup3\n        /* \"#utility.yul\":10772:10781   */\n      dup7\n        /* \"#utility.yul\":10768:10790   */\n      add\n        /* \"#utility.yul\":10747:10800   */\n      tag_356\n      jump\t// in\n    tag_518:\n        /* \"#utility.yul\":10737:10800   */\n      swap2\n      pop\n        /* \"#utility.yul\":10692:10810   */\n      pop\n        /* \"#utility.yul\":10343:10817   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10823:10931   */\n    tag_374:\n        /* \"#utility.yul\":10900:10924   */\n      tag_520\n        /* \"#utility.yul\":10918:10923   */\n      dup2\n        /* \"#utility.yul\":10900:10924   */\n      tag_357\n      jump\t// in\n    tag_520:\n        /* \"#utility.yul\":10895:10898   */\n      dup3\n        /* \"#utility.yul\":10888:10925   */\n      mstore\n        /* \"#utility.yul\":10823:10931   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10937:11051   */\n    tag_375:\n        /* \"#utility.yul\":11004:11010   */\n      0x00\n        /* \"#utility.yul\":11038:11043   */\n      dup2\n        /* \"#utility.yul\":11032:11044   */\n      mload\n        /* \"#utility.yul\":11022:11044   */\n      swap1\n      pop\n        /* \"#utility.yul\":10937:11051   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11057:11231   */\n    tag_376:\n        /* \"#utility.yul\":11146:11157   */\n      0x00\n        /* \"#utility.yul\":11180:11186   */\n      dup3\n        /* \"#utility.yul\":11175:11178   */\n      dup3\n        /* \"#utility.yul\":11168:11187   */\n      mstore\n        /* \"#utility.yul\":11220:11224   */\n      0x20\n        /* \"#utility.yul\":11215:11218   */\n      dup3\n        /* \"#utility.yul\":11211:11225   */\n      add\n        /* \"#utility.yul\":11196:11225   */\n      swap1\n      pop\n        /* \"#utility.yul\":11057:11231   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11237:11369   */\n    tag_377:\n        /* \"#utility.yul\":11304:11308   */\n      0x00\n        /* \"#utility.yul\":11327:11330   */\n      dup2\n        /* \"#utility.yul\":11319:11330   */\n      swap1\n      pop\n        /* \"#utility.yul\":11357:11361   */\n      0x20\n        /* \"#utility.yul\":11352:11355   */\n      dup3\n        /* \"#utility.yul\":11348:11362   */\n      add\n        /* \"#utility.yul\":11340:11362   */\n      swap1\n      pop\n        /* \"#utility.yul\":11237:11369   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11375:11554   */\n    tag_378:\n        /* \"#utility.yul\":11444:11454   */\n      0x00\n        /* \"#utility.yul\":11465:11511   */\n      tag_525\n        /* \"#utility.yul\":11507:11510   */\n      dup4\n        /* \"#utility.yul\":11499:11505   */\n      dup4\n        /* \"#utility.yul\":11465:11511   */\n      tag_374\n      jump\t// in\n    tag_525:\n        /* \"#utility.yul\":11543:11547   */\n      0x20\n        /* \"#utility.yul\":11538:11541   */\n      dup4\n        /* \"#utility.yul\":11534:11548   */\n      add\n        /* \"#utility.yul\":11520:11548   */\n      swap1\n      pop\n        /* \"#utility.yul\":11375:11554   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11560:11673   */\n    tag_379:\n        /* \"#utility.yul\":11630:11634   */\n      0x00\n        /* \"#utility.yul\":11662:11666   */\n      0x20\n        /* \"#utility.yul\":11657:11660   */\n      dup3\n        /* \"#utility.yul\":11653:11667   */\n      add\n        /* \"#utility.yul\":11645:11667   */\n      swap1\n      pop\n        /* \"#utility.yul\":11560:11673   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11709:12421   */\n    tag_380:\n        /* \"#utility.yul\":11818:11821   */\n      0x00\n        /* \"#utility.yul\":11847:11901   */\n      tag_528\n        /* \"#utility.yul\":11895:11900   */\n      dup3\n        /* \"#utility.yul\":11847:11901   */\n      tag_375\n      jump\t// in\n    tag_528:\n        /* \"#utility.yul\":11917:11993   */\n      tag_529\n        /* \"#utility.yul\":11986:11992   */\n      dup2\n        /* \"#utility.yul\":11981:11984   */\n      dup6\n        /* \"#utility.yul\":11917:11993   */\n      tag_376\n      jump\t// in\n    tag_529:\n        /* \"#utility.yul\":11910:11993   */\n      swap4\n      pop\n        /* \"#utility.yul\":12017:12073   */\n      tag_530\n        /* \"#utility.yul\":12067:12072   */\n      dup4\n        /* \"#utility.yul\":12017:12073   */\n      tag_377\n      jump\t// in\n    tag_530:\n        /* \"#utility.yul\":12096:12103   */\n      dup1\n        /* \"#utility.yul\":12127:12128   */\n      0x00\n        /* \"#utility.yul\":12112:12396   */\n    tag_531:\n        /* \"#utility.yul\":12137:12143   */\n      dup4\n        /* \"#utility.yul\":12134:12135   */\n      dup2\n        /* \"#utility.yul\":12131:12144   */\n      lt\n        /* \"#utility.yul\":12112:12396   */\n      iszero\n      tag_533\n      jumpi\n        /* \"#utility.yul\":12213:12219   */\n      dup2\n        /* \"#utility.yul\":12207:12220   */\n      mload\n        /* \"#utility.yul\":12240:12303   */\n      tag_534\n        /* \"#utility.yul\":12299:12302   */\n      dup9\n        /* \"#utility.yul\":12284:12297   */\n      dup3\n        /* \"#utility.yul\":12240:12303   */\n      tag_378\n      jump\t// in\n    tag_534:\n        /* \"#utility.yul\":12233:12303   */\n      swap8\n      pop\n        /* \"#utility.yul\":12326:12386   */\n      tag_535\n        /* \"#utility.yul\":12379:12385   */\n      dup4\n        /* \"#utility.yul\":12326:12386   */\n      tag_379\n      jump\t// in\n    tag_535:\n        /* \"#utility.yul\":12316:12386   */\n      swap3\n      pop\n        /* \"#utility.yul\":12172:12396   */\n      pop\n        /* \"#utility.yul\":12159:12160   */\n      0x01\n        /* \"#utility.yul\":12156:12157   */\n      dup2\n        /* \"#utility.yul\":12152:12161   */\n      add\n        /* \"#utility.yul\":12147:12161   */\n      swap1\n      pop\n        /* \"#utility.yul\":12112:12396   */\n      jump(tag_531)\n    tag_533:\n        /* \"#utility.yul\":12116:12130   */\n      pop\n        /* \"#utility.yul\":12412:12415   */\n      dup6\n        /* \"#utility.yul\":12405:12415   */\n      swap4\n      pop\n        /* \"#utility.yul\":11823:12421   */\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":11709:12421   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12489:13325   */\n    tag_381:\n        /* \"#utility.yul\":12616:12619   */\n      0x00\n        /* \"#utility.yul\":12652:12656   */\n      0x60\n        /* \"#utility.yul\":12647:12650   */\n      dup4\n        /* \"#utility.yul\":12643:12657   */\n      add\n        /* \"#utility.yul\":12743:12747   */\n      0x00\n        /* \"#utility.yul\":12736:12741   */\n      dup4\n        /* \"#utility.yul\":12732:12748   */\n      add\n        /* \"#utility.yul\":12726:12749   */\n      mload\n        /* \"#utility.yul\":12762:12825   */\n      tag_537\n        /* \"#utility.yul\":12819:12823   */\n      0x00\n        /* \"#utility.yul\":12814:12817   */\n      dup7\n        /* \"#utility.yul\":12810:12824   */\n      add\n        /* \"#utility.yul\":12796:12808   */\n      dup3\n        /* \"#utility.yul\":12762:12825   */\n      tag_374\n      jump\t// in\n    tag_537:\n        /* \"#utility.yul\":12667:12835   */\n      pop\n        /* \"#utility.yul\":12924:12928   */\n      0x20\n        /* \"#utility.yul\":12917:12922   */\n      dup4\n        /* \"#utility.yul\":12913:12929   */\n      add\n        /* \"#utility.yul\":12907:12930   */\n      mload\n        /* \"#utility.yul\":12977:12980   */\n      dup5\n        /* \"#utility.yul\":12971:12975   */\n      dup3\n        /* \"#utility.yul\":12967:12981   */\n      sub\n        /* \"#utility.yul\":12960:12964   */\n      0x20\n        /* \"#utility.yul\":12955:12958   */\n      dup7\n        /* \"#utility.yul\":12951:12965   */\n      add\n        /* \"#utility.yul\":12944:12982   */\n      mstore\n        /* \"#utility.yul\":13003:13106   */\n      tag_538\n        /* \"#utility.yul\":13101:13105   */\n      dup3\n        /* \"#utility.yul\":13087:13099   */\n      dup3\n        /* \"#utility.yul\":13003:13106   */\n      tag_380\n      jump\t// in\n    tag_538:\n        /* \"#utility.yul\":12995:13106   */\n      swap2\n      pop\n        /* \"#utility.yul\":12845:13117   */\n      pop\n        /* \"#utility.yul\":13206:13210   */\n      0x40\n        /* \"#utility.yul\":13199:13204   */\n      dup4\n        /* \"#utility.yul\":13195:13211   */\n      add\n        /* \"#utility.yul\":13189:13212   */\n      mload\n        /* \"#utility.yul\":13225:13288   */\n      tag_539\n        /* \"#utility.yul\":13282:13286   */\n      0x40\n        /* \"#utility.yul\":13277:13280   */\n      dup7\n        /* \"#utility.yul\":13273:13287   */\n      add\n        /* \"#utility.yul\":13259:13271   */\n      dup3\n        /* \"#utility.yul\":13225:13288   */\n      tag_374\n      jump\t// in\n    tag_539:\n        /* \"#utility.yul\":13127:13298   */\n      pop\n        /* \"#utility.yul\":13315:13319   */\n      dup1\n        /* \"#utility.yul\":13308:13319   */\n      swap2\n      pop\n        /* \"#utility.yul\":12621:13325   */\n      pop\n        /* \"#utility.yul\":12489:13325   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13331:13720   */\n    tag_156:\n        /* \"#utility.yul\":13482:13486   */\n      0x00\n        /* \"#utility.yul\":13520:13522   */\n      0x20\n        /* \"#utility.yul\":13509:13518   */\n      dup3\n        /* \"#utility.yul\":13505:13523   */\n      add\n        /* \"#utility.yul\":13497:13523   */\n      swap1\n      pop\n        /* \"#utility.yul\":13569:13578   */\n      dup2\n        /* \"#utility.yul\":13563:13567   */\n      dup2\n        /* \"#utility.yul\":13559:13579   */\n      sub\n        /* \"#utility.yul\":13555:13556   */\n      0x00\n        /* \"#utility.yul\":13544:13553   */\n      dup4\n        /* \"#utility.yul\":13540:13557   */\n      add\n        /* \"#utility.yul\":13533:13580   */\n      mstore\n        /* \"#utility.yul\":13597:13713   */\n      tag_541\n        /* \"#utility.yul\":13708:13712   */\n      dup2\n        /* \"#utility.yul\":13699:13705   */\n      dup5\n        /* \"#utility.yul\":13597:13713   */\n      tag_381\n      jump\t// in\n    tag_541:\n        /* \"#utility.yul\":13589:13713   */\n      swap1\n      pop\n        /* \"#utility.yul\":13331:13720   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13726:13906   */\n    tag_382:\n        /* \"#utility.yul\":13774:13851   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":13771:13772   */\n      0x00\n        /* \"#utility.yul\":13764:13852   */\n      mstore\n        /* \"#utility.yul\":13871:13875   */\n      0x22\n        /* \"#utility.yul\":13868:13869   */\n      0x04\n        /* \"#utility.yul\":13861:13876   */\n      mstore\n        /* \"#utility.yul\":13895:13899   */\n      0x24\n        /* \"#utility.yul\":13892:13893   */\n      0x00\n        /* \"#utility.yul\":13885:13900   */\n      revert\n        /* \"#utility.yul\":13912:14232   */\n    tag_159:\n        /* \"#utility.yul\":13956:13962   */\n      0x00\n        /* \"#utility.yul\":13993:13994   */\n      0x02\n        /* \"#utility.yul\":13987:13991   */\n      dup3\n        /* \"#utility.yul\":13983:13995   */\n      div\n        /* \"#utility.yul\":13973:13995   */\n      swap1\n      pop\n        /* \"#utility.yul\":14040:14041   */\n      0x01\n        /* \"#utility.yul\":14034:14038   */\n      dup3\n        /* \"#utility.yul\":14030:14042   */\n      and\n        /* \"#utility.yul\":14061:14079   */\n      dup1\n        /* \"#utility.yul\":14051:14132   */\n      tag_544\n      jumpi\n        /* \"#utility.yul\":14117:14121   */\n      0x7f\n        /* \"#utility.yul\":14109:14115   */\n      dup3\n        /* \"#utility.yul\":14105:14122   */\n      and\n        /* \"#utility.yul\":14095:14122   */\n      swap2\n      pop\n        /* \"#utility.yul\":14051:14132   */\n    tag_544:\n        /* \"#utility.yul\":14179:14181   */\n      0x20\n        /* \"#utility.yul\":14171:14177   */\n      dup3\n        /* \"#utility.yul\":14168:14182   */\n      lt\n        /* \"#utility.yul\":14148:14166   */\n      dup2\n        /* \"#utility.yul\":14145:14183   */\n      sub\n        /* \"#utility.yul\":14142:14226   */\n      tag_545\n      jumpi\n        /* \"#utility.yul\":14198:14216   */\n      tag_546\n      tag_382\n      jump\t// in\n    tag_546:\n        /* \"#utility.yul\":14142:14226   */\n    tag_545:\n        /* \"#utility.yul\":13963:14232   */\n      pop\n        /* \"#utility.yul\":13912:14232   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14238:14409   */\n    tag_383:\n        /* \"#utility.yul\":14378:14401   */\n      0x496e76616c6964206f776e657220616464726573730000000000000000000000\n        /* \"#utility.yul\":14374:14375   */\n      0x00\n        /* \"#utility.yul\":14366:14372   */\n      dup3\n        /* \"#utility.yul\":14362:14376   */\n      add\n        /* \"#utility.yul\":14355:14402   */\n      mstore\n        /* \"#utility.yul\":14238:14409   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14415:14781   */\n    tag_384:\n        /* \"#utility.yul\":14557:14560   */\n      0x00\n        /* \"#utility.yul\":14578:14645   */\n      tag_549\n        /* \"#utility.yul\":14642:14644   */\n      0x15\n        /* \"#utility.yul\":14637:14640   */\n      dup4\n        /* \"#utility.yul\":14578:14645   */\n      tag_346\n      jump\t// in\n    tag_549:\n        /* \"#utility.yul\":14571:14645   */\n      swap2\n      pop\n        /* \"#utility.yul\":14654:14747   */\n      tag_550\n        /* \"#utility.yul\":14743:14746   */\n      dup3\n        /* \"#utility.yul\":14654:14747   */\n      tag_383\n      jump\t// in\n    tag_550:\n        /* \"#utility.yul\":14772:14774   */\n      0x20\n        /* \"#utility.yul\":14767:14770   */\n      dup3\n        /* \"#utility.yul\":14763:14775   */\n      add\n        /* \"#utility.yul\":14756:14775   */\n      swap1\n      pop\n        /* \"#utility.yul\":14415:14781   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14787:15206   */\n    tag_193:\n        /* \"#utility.yul\":14953:14957   */\n      0x00\n        /* \"#utility.yul\":14991:14993   */\n      0x20\n        /* \"#utility.yul\":14980:14989   */\n      dup3\n        /* \"#utility.yul\":14976:14994   */\n      add\n        /* \"#utility.yul\":14968:14994   */\n      swap1\n      pop\n        /* \"#utility.yul\":15040:15049   */\n      dup2\n        /* \"#utility.yul\":15034:15038   */\n      dup2\n        /* \"#utility.yul\":15030:15050   */\n      sub\n        /* \"#utility.yul\":15026:15027   */\n      0x00\n        /* \"#utility.yul\":15015:15024   */\n      dup4\n        /* \"#utility.yul\":15011:15028   */\n      add\n        /* \"#utility.yul\":15004:15051   */\n      mstore\n        /* \"#utility.yul\":15068:15199   */\n      tag_552\n        /* \"#utility.yul\":15194:15198   */\n      dup2\n        /* \"#utility.yul\":15068:15199   */\n      tag_384\n      jump\t// in\n    tag_552:\n        /* \"#utility.yul\":15060:15199   */\n      swap1\n      pop\n        /* \"#utility.yul\":14787:15206   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15212:15387   */\n    tag_385:\n        /* \"#utility.yul\":15352:15379   */\n      0x496e76616c696420726563697069656e74206164647265737300000000000000\n        /* \"#utility.yul\":15348:15349   */\n      0x00\n        /* \"#utility.yul\":15340:15346   */\n      dup3\n        /* \"#utility.yul\":15336:15350   */\n      add\n        /* \"#utility.yul\":15329:15380   */\n      mstore\n        /* \"#utility.yul\":15212:15387   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15393:15759   */\n    tag_386:\n        /* \"#utility.yul\":15535:15538   */\n      0x00\n        /* \"#utility.yul\":15556:15623   */\n      tag_555\n        /* \"#utility.yul\":15620:15622   */\n      0x19\n        /* \"#utility.yul\":15615:15618   */\n      dup4\n        /* \"#utility.yul\":15556:15623   */\n      tag_346\n      jump\t// in\n    tag_555:\n        /* \"#utility.yul\":15549:15623   */\n      swap2\n      pop\n        /* \"#utility.yul\":15632:15725   */\n      tag_556\n        /* \"#utility.yul\":15721:15724   */\n      dup3\n        /* \"#utility.yul\":15632:15725   */\n      tag_385\n      jump\t// in\n    tag_556:\n        /* \"#utility.yul\":15750:15752   */\n      0x20\n        /* \"#utility.yul\":15745:15748   */\n      dup3\n        /* \"#utility.yul\":15741:15753   */\n      add\n        /* \"#utility.yul\":15734:15753   */\n      swap1\n      pop\n        /* \"#utility.yul\":15393:15759   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15765:16184   */\n    tag_214:\n        /* \"#utility.yul\":15931:15935   */\n      0x00\n        /* \"#utility.yul\":15969:15971   */\n      0x20\n        /* \"#utility.yul\":15958:15967   */\n      dup3\n        /* \"#utility.yul\":15954:15972   */\n      add\n        /* \"#utility.yul\":15946:15972   */\n      swap1\n      pop\n        /* \"#utility.yul\":16018:16027   */\n      dup2\n        /* \"#utility.yul\":16012:16016   */\n      dup2\n        /* \"#utility.yul\":16008:16028   */\n      sub\n        /* \"#utility.yul\":16004:16005   */\n      0x00\n        /* \"#utility.yul\":15993:16002   */\n      dup4\n        /* \"#utility.yul\":15989:16006   */\n      add\n        /* \"#utility.yul\":15982:16029   */\n      mstore\n        /* \"#utility.yul\":16046:16177   */\n      tag_558\n        /* \"#utility.yul\":16172:16176   */\n      dup2\n        /* \"#utility.yul\":16046:16177   */\n      tag_386\n      jump\t// in\n    tag_558:\n        /* \"#utility.yul\":16038:16177   */\n      swap1\n      pop\n        /* \"#utility.yul\":15765:16184   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16190:16369   */\n    tag_387:\n        /* \"#utility.yul\":16330:16361   */\n      0x4e6f7420656e6f7567682073686172657320746f207472616e73666572000000\n        /* \"#utility.yul\":16326:16327   */\n      0x00\n        /* \"#utility.yul\":16318:16324   */\n      dup3\n        /* \"#utility.yul\":16314:16328   */\n      add\n        /* \"#utility.yul\":16307:16362   */\n      mstore\n        /* \"#utility.yul\":16190:16369   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16375:16741   */\n    tag_388:\n        /* \"#utility.yul\":16517:16520   */\n      0x00\n        /* \"#utility.yul\":16538:16605   */\n      tag_561\n        /* \"#utility.yul\":16602:16604   */\n      0x1d\n        /* \"#utility.yul\":16597:16600   */\n      dup4\n        /* \"#utility.yul\":16538:16605   */\n      tag_346\n      jump\t// in\n    tag_561:\n        /* \"#utility.yul\":16531:16605   */\n      swap2\n      pop\n        /* \"#utility.yul\":16614:16707   */\n      tag_562\n        /* \"#utility.yul\":16703:16706   */\n      dup3\n        /* \"#utility.yul\":16614:16707   */\n      tag_387\n      jump\t// in\n    tag_562:\n        /* \"#utility.yul\":16732:16734   */\n      0x20\n        /* \"#utility.yul\":16727:16730   */\n      dup3\n        /* \"#utility.yul\":16723:16735   */\n      add\n        /* \"#utility.yul\":16716:16735   */\n      swap1\n      pop\n        /* \"#utility.yul\":16375:16741   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16747:17166   */\n    tag_217:\n        /* \"#utility.yul\":16913:16917   */\n      0x00\n        /* \"#utility.yul\":16951:16953   */\n      0x20\n        /* \"#utility.yul\":16940:16949   */\n      dup3\n        /* \"#utility.yul\":16936:16954   */\n      add\n        /* \"#utility.yul\":16928:16954   */\n      swap1\n      pop\n        /* \"#utility.yul\":17000:17009   */\n      dup2\n        /* \"#utility.yul\":16994:16998   */\n      dup2\n        /* \"#utility.yul\":16990:17010   */\n      sub\n        /* \"#utility.yul\":16986:16987   */\n      0x00\n        /* \"#utility.yul\":16975:16984   */\n      dup4\n        /* \"#utility.yul\":16971:16988   */\n      add\n        /* \"#utility.yul\":16964:17011   */\n      mstore\n        /* \"#utility.yul\":17028:17159   */\n      tag_564\n        /* \"#utility.yul\":17154:17158   */\n      dup2\n        /* \"#utility.yul\":17028:17159   */\n      tag_388\n      jump\t// in\n    tag_564:\n        /* \"#utility.yul\":17020:17159   */\n      swap1\n      pop\n        /* \"#utility.yul\":16747:17166   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17172:17352   */\n    tag_389:\n        /* \"#utility.yul\":17220:17297   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":17217:17218   */\n      0x00\n        /* \"#utility.yul\":17210:17298   */\n      mstore\n        /* \"#utility.yul\":17317:17321   */\n      0x11\n        /* \"#utility.yul\":17314:17315   */\n      0x04\n        /* \"#utility.yul\":17307:17322   */\n      mstore\n        /* \"#utility.yul\":17341:17345   */\n      0x24\n        /* \"#utility.yul\":17338:17339   */\n      0x00\n        /* \"#utility.yul\":17331:17346   */\n      revert\n        /* \"#utility.yul\":17358:17552   */\n    tag_219:\n        /* \"#utility.yul\":17398:17402   */\n      0x00\n        /* \"#utility.yul\":17418:17438   */\n      tag_567\n        /* \"#utility.yul\":17436:17437   */\n      dup3\n        /* \"#utility.yul\":17418:17438   */\n      tag_357\n      jump\t// in\n    tag_567:\n        /* \"#utility.yul\":17413:17438   */\n      swap2\n      pop\n        /* \"#utility.yul\":17452:17472   */\n      tag_568\n        /* \"#utility.yul\":17470:17471   */\n      dup4\n        /* \"#utility.yul\":17452:17472   */\n      tag_357\n      jump\t// in\n    tag_568:\n        /* \"#utility.yul\":17447:17472   */\n      swap3\n      pop\n        /* \"#utility.yul\":17496:17497   */\n      dup3\n        /* \"#utility.yul\":17493:17494   */\n      dup3\n        /* \"#utility.yul\":17489:17498   */\n      sub\n        /* \"#utility.yul\":17481:17498   */\n      swap1\n      pop\n        /* \"#utility.yul\":17520:17521   */\n      dup2\n        /* \"#utility.yul\":17514:17518   */\n      dup2\n        /* \"#utility.yul\":17511:17522   */\n      gt\n        /* \"#utility.yul\":17508:17545   */\n      iszero\n      tag_569\n      jumpi\n        /* \"#utility.yul\":17525:17543   */\n      tag_570\n      tag_389\n      jump\t// in\n    tag_570:\n        /* \"#utility.yul\":17508:17545   */\n    tag_569:\n        /* \"#utility.yul\":17358:17552   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17558:17749   */\n    tag_221:\n        /* \"#utility.yul\":17598:17601   */\n      0x00\n        /* \"#utility.yul\":17617:17637   */\n      tag_572\n        /* \"#utility.yul\":17635:17636   */\n      dup3\n        /* \"#utility.yul\":17617:17637   */\n      tag_357\n      jump\t// in\n    tag_572:\n        /* \"#utility.yul\":17612:17637   */\n      swap2\n      pop\n        /* \"#utility.yul\":17651:17671   */\n      tag_573\n        /* \"#utility.yul\":17669:17670   */\n      dup4\n        /* \"#utility.yul\":17651:17671   */\n      tag_357\n      jump\t// in\n    tag_573:\n        /* \"#utility.yul\":17646:17671   */\n      swap3\n      pop\n        /* \"#utility.yul\":17694:17695   */\n      dup3\n        /* \"#utility.yul\":17691:17692   */\n      dup3\n        /* \"#utility.yul\":17687:17696   */\n      add\n        /* \"#utility.yul\":17680:17696   */\n      swap1\n      pop\n        /* \"#utility.yul\":17715:17718   */\n      dup1\n        /* \"#utility.yul\":17712:17713   */\n      dup3\n        /* \"#utility.yul\":17709:17719   */\n      gt\n        /* \"#utility.yul\":17706:17742   */\n      iszero\n      tag_574\n      jumpi\n        /* \"#utility.yul\":17722:17740   */\n      tag_575\n      tag_389\n      jump\t// in\n    tag_575:\n        /* \"#utility.yul\":17706:17742   */\n    tag_574:\n        /* \"#utility.yul\":17558:17749   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17755:17934   */\n    tag_390:\n        /* \"#utility.yul\":17895:17926   */\n      0x536861726573206d7573742062652067726561746572207468616e2030000000\n        /* \"#utility.yul\":17891:17892   */\n      0x00\n        /* \"#utility.yul\":17883:17889   */\n      dup3\n        /* \"#utility.yul\":17879:17893   */\n      add\n        /* \"#utility.yul\":17872:17927   */\n      mstore\n        /* \"#utility.yul\":17755:17934   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17940:18306   */\n    tag_391:\n        /* \"#utility.yul\":18082:18085   */\n      0x00\n        /* \"#utility.yul\":18103:18170   */\n      tag_578\n        /* \"#utility.yul\":18167:18169   */\n      0x1d\n        /* \"#utility.yul\":18162:18165   */\n      dup4\n        /* \"#utility.yul\":18103:18170   */\n      tag_346\n      jump\t// in\n    tag_578:\n        /* \"#utility.yul\":18096:18170   */\n      swap2\n      pop\n        /* \"#utility.yul\":18179:18272   */\n      tag_579\n        /* \"#utility.yul\":18268:18271   */\n      dup3\n        /* \"#utility.yul\":18179:18272   */\n      tag_390\n      jump\t// in\n    tag_579:\n        /* \"#utility.yul\":18297:18299   */\n      0x20\n        /* \"#utility.yul\":18292:18295   */\n      dup3\n        /* \"#utility.yul\":18288:18300   */\n      add\n        /* \"#utility.yul\":18281:18300   */\n      swap1\n      pop\n        /* \"#utility.yul\":17940:18306   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18312:18731   */\n    tag_241:\n        /* \"#utility.yul\":18478:18482   */\n      0x00\n        /* \"#utility.yul\":18516:18518   */\n      0x20\n        /* \"#utility.yul\":18505:18514   */\n      dup3\n        /* \"#utility.yul\":18501:18519   */\n      add\n        /* \"#utility.yul\":18493:18519   */\n      swap1\n      pop\n        /* \"#utility.yul\":18565:18574   */\n      dup2\n        /* \"#utility.yul\":18559:18563   */\n      dup2\n        /* \"#utility.yul\":18555:18575   */\n      sub\n        /* \"#utility.yul\":18551:18552   */\n      0x00\n        /* \"#utility.yul\":18540:18549   */\n      dup4\n        /* \"#utility.yul\":18536:18553   */\n      add\n        /* \"#utility.yul\":18529:18576   */\n      mstore\n        /* \"#utility.yul\":18593:18724   */\n      tag_581\n        /* \"#utility.yul\":18719:18723   */\n      dup2\n        /* \"#utility.yul\":18593:18724   */\n      tag_391\n      jump\t// in\n    tag_581:\n        /* \"#utility.yul\":18585:18724   */\n      swap1\n      pop\n        /* \"#utility.yul\":18312:18731   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18737:18914   */\n    tag_392:\n        /* \"#utility.yul\":18877:18906   */\n      0x4e6f7420656e6f7567682073686172657320617661696c61626c650000000000\n        /* \"#utility.yul\":18873:18874   */\n      0x00\n        /* \"#utility.yul\":18865:18871   */\n      dup3\n        /* \"#utility.yul\":18861:18875   */\n      add\n        /* \"#utility.yul\":18854:18907   */\n      mstore\n        /* \"#utility.yul\":18737:18914   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18920:19286   */\n    tag_393:\n        /* \"#utility.yul\":19062:19065   */\n      0x00\n        /* \"#utility.yul\":19083:19150   */\n      tag_584\n        /* \"#utility.yul\":19147:19149   */\n      0x1b\n        /* \"#utility.yul\":19142:19145   */\n      dup4\n        /* \"#utility.yul\":19083:19150   */\n      tag_346\n      jump\t// in\n    tag_584:\n        /* \"#utility.yul\":19076:19150   */\n      swap2\n      pop\n        /* \"#utility.yul\":19159:19252   */\n      tag_585\n        /* \"#utility.yul\":19248:19251   */\n      dup3\n        /* \"#utility.yul\":19159:19252   */\n      tag_392\n      jump\t// in\n    tag_585:\n        /* \"#utility.yul\":19277:19279   */\n      0x20\n        /* \"#utility.yul\":19272:19275   */\n      dup3\n        /* \"#utility.yul\":19268:19280   */\n      add\n        /* \"#utility.yul\":19261:19280   */\n      swap1\n      pop\n        /* \"#utility.yul\":18920:19286   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19292:19711   */\n    tag_244:\n        /* \"#utility.yul\":19458:19462   */\n      0x00\n        /* \"#utility.yul\":19496:19498   */\n      0x20\n        /* \"#utility.yul\":19485:19494   */\n      dup3\n        /* \"#utility.yul\":19481:19499   */\n      add\n        /* \"#utility.yul\":19473:19499   */\n      swap1\n      pop\n        /* \"#utility.yul\":19545:19554   */\n      dup2\n        /* \"#utility.yul\":19539:19543   */\n      dup2\n        /* \"#utility.yul\":19535:19555   */\n      sub\n        /* \"#utility.yul\":19531:19532   */\n      0x00\n        /* \"#utility.yul\":19520:19529   */\n      dup4\n        /* \"#utility.yul\":19516:19533   */\n      add\n        /* \"#utility.yul\":19509:19556   */\n      mstore\n        /* \"#utility.yul\":19573:19704   */\n      tag_587\n        /* \"#utility.yul\":19699:19703   */\n      dup2\n        /* \"#utility.yul\":19573:19704   */\n      tag_393\n      jump\t// in\n    tag_587:\n        /* \"#utility.yul\":19565:19704   */\n      swap1\n      pop\n        /* \"#utility.yul\":19292:19711   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19717:19896   */\n    tag_394:\n        /* \"#utility.yul\":19857:19888   */\n      0x496e73756666696369656e742073686172657320617661696c61626c65000000\n        /* \"#utility.yul\":19853:19854   */\n      0x00\n        /* \"#utility.yul\":19845:19851   */\n      dup3\n        /* \"#utility.yul\":19841:19855   */\n      add\n        /* \"#utility.yul\":19834:19889   */\n      mstore\n        /* \"#utility.yul\":19717:19896   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19902:20268   */\n    tag_395:\n        /* \"#utility.yul\":20044:20047   */\n      0x00\n        /* \"#utility.yul\":20065:20132   */\n      tag_590\n        /* \"#utility.yul\":20129:20131   */\n      0x1d\n        /* \"#utility.yul\":20124:20127   */\n      dup4\n        /* \"#utility.yul\":20065:20132   */\n      tag_346\n      jump\t// in\n    tag_590:\n        /* \"#utility.yul\":20058:20132   */\n      swap2\n      pop\n        /* \"#utility.yul\":20141:20234   */\n      tag_591\n        /* \"#utility.yul\":20230:20233   */\n      dup3\n        /* \"#utility.yul\":20141:20234   */\n      tag_394\n      jump\t// in\n    tag_591:\n        /* \"#utility.yul\":20259:20261   */\n      0x20\n        /* \"#utility.yul\":20254:20257   */\n      dup3\n        /* \"#utility.yul\":20250:20262   */\n      add\n        /* \"#utility.yul\":20243:20262   */\n      swap1\n      pop\n        /* \"#utility.yul\":19902:20268   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20274:20693   */\n    tag_256:\n        /* \"#utility.yul\":20440:20444   */\n      0x00\n        /* \"#utility.yul\":20478:20480   */\n      0x20\n        /* \"#utility.yul\":20467:20476   */\n      dup3\n        /* \"#utility.yul\":20463:20481   */\n      add\n        /* \"#utility.yul\":20455:20481   */\n      swap1\n      pop\n        /* \"#utility.yul\":20527:20536   */\n      dup2\n        /* \"#utility.yul\":20521:20525   */\n      dup2\n        /* \"#utility.yul\":20517:20537   */\n      sub\n        /* \"#utility.yul\":20513:20514   */\n      0x00\n        /* \"#utility.yul\":20502:20511   */\n      dup4\n        /* \"#utility.yul\":20498:20515   */\n      add\n        /* \"#utility.yul\":20491:20538   */\n      mstore\n        /* \"#utility.yul\":20555:20686   */\n      tag_593\n        /* \"#utility.yul\":20681:20685   */\n      dup2\n        /* \"#utility.yul\":20555:20686   */\n      tag_395\n      jump\t// in\n    tag_593:\n        /* \"#utility.yul\":20547:20686   */\n      swap1\n      pop\n        /* \"#utility.yul\":20274:20693   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20699:21141   */\n    tag_281:\n        /* \"#utility.yul\":20848:20852   */\n      0x00\n        /* \"#utility.yul\":20886:20888   */\n      0x60\n        /* \"#utility.yul\":20875:20884   */\n      dup3\n        /* \"#utility.yul\":20871:20889   */\n      add\n        /* \"#utility.yul\":20863:20889   */\n      swap1\n      pop\n        /* \"#utility.yul\":20899:20970   */\n      tag_595\n        /* \"#utility.yul\":20967:20968   */\n      0x00\n        /* \"#utility.yul\":20956:20965   */\n      dup4\n        /* \"#utility.yul\":20952:20969   */\n      add\n        /* \"#utility.yul\":20943:20949   */\n      dup7\n        /* \"#utility.yul\":20899:20970   */\n      tag_373\n      jump\t// in\n    tag_595:\n        /* \"#utility.yul\":20980:21052   */\n      tag_596\n        /* \"#utility.yul\":21048:21050   */\n      0x20\n        /* \"#utility.yul\":21037:21046   */\n      dup4\n        /* \"#utility.yul\":21033:21051   */\n      add\n        /* \"#utility.yul\":21024:21030   */\n      dup6\n        /* \"#utility.yul\":20980:21052   */\n      tag_362\n      jump\t// in\n    tag_596:\n        /* \"#utility.yul\":21062:21134   */\n      tag_597\n        /* \"#utility.yul\":21130:21132   */\n      0x40\n        /* \"#utility.yul\":21119:21128   */\n      dup4\n        /* \"#utility.yul\":21115:21133   */\n      add\n        /* \"#utility.yul\":21106:21112   */\n      dup5\n        /* \"#utility.yul\":21062:21134   */\n      tag_362\n      jump\t// in\n    tag_597:\n        /* \"#utility.yul\":20699:21141   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21147:21313   */\n    tag_396:\n        /* \"#utility.yul\":21287:21305   */\n      0x5061757361626c653a2070617573656400000000000000000000000000000000\n        /* \"#utility.yul\":21283:21284   */\n      0x00\n        /* \"#utility.yul\":21275:21281   */\n      dup3\n        /* \"#utility.yul\":21271:21285   */\n      add\n        /* \"#utility.yul\":21264:21306   */\n      mstore\n        /* \"#utility.yul\":21147:21313   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21319:21685   */\n    tag_397:\n        /* \"#utility.yul\":21461:21464   */\n      0x00\n        /* \"#utility.yul\":21482:21549   */\n      tag_600\n        /* \"#utility.yul\":21546:21548   */\n      0x10\n        /* \"#utility.yul\":21541:21544   */\n      dup4\n        /* \"#utility.yul\":21482:21549   */\n      tag_346\n      jump\t// in\n    tag_600:\n        /* \"#utility.yul\":21475:21549   */\n      swap2\n      pop\n        /* \"#utility.yul\":21558:21651   */\n      tag_601\n        /* \"#utility.yul\":21647:21650   */\n      dup3\n        /* \"#utility.yul\":21558:21651   */\n      tag_396\n      jump\t// in\n    tag_601:\n        /* \"#utility.yul\":21676:21678   */\n      0x20\n        /* \"#utility.yul\":21671:21674   */\n      dup3\n        /* \"#utility.yul\":21667:21679   */\n      add\n        /* \"#utility.yul\":21660:21679   */\n      swap1\n      pop\n        /* \"#utility.yul\":21319:21685   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21691:22110   */\n    tag_312:\n        /* \"#utility.yul\":21857:21861   */\n      0x00\n        /* \"#utility.yul\":21895:21897   */\n      0x20\n        /* \"#utility.yul\":21884:21893   */\n      dup3\n        /* \"#utility.yul\":21880:21898   */\n      add\n        /* \"#utility.yul\":21872:21898   */\n      swap1\n      pop\n        /* \"#utility.yul\":21944:21953   */\n      dup2\n        /* \"#utility.yul\":21938:21942   */\n      dup2\n        /* \"#utility.yul\":21934:21954   */\n      sub\n        /* \"#utility.yul\":21930:21931   */\n      0x00\n        /* \"#utility.yul\":21919:21928   */\n      dup4\n        /* \"#utility.yul\":21915:21932   */\n      add\n        /* \"#utility.yul\":21908:21955   */\n      mstore\n        /* \"#utility.yul\":21972:22103   */\n      tag_603\n        /* \"#utility.yul\":22098:22102   */\n      dup2\n        /* \"#utility.yul\":21972:22103   */\n      tag_397\n      jump\t// in\n    tag_603:\n        /* \"#utility.yul\":21964:22103   */\n      swap1\n      pop\n        /* \"#utility.yul\":21691:22110   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22116:22286   */\n    tag_398:\n        /* \"#utility.yul\":22256:22278   */\n      0x5061757361626c653a206e6f7420706175736564000000000000000000000000\n        /* \"#utility.yul\":22252:22253   */\n      0x00\n        /* \"#utility.yul\":22244:22250   */\n      dup3\n        /* \"#utility.yul\":22240:22254   */\n      add\n        /* \"#utility.yul\":22233:22279   */\n      mstore\n        /* \"#utility.yul\":22116:22286   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22292:22658   */\n    tag_399:\n        /* \"#utility.yul\":22434:22437   */\n      0x00\n        /* \"#utility.yul\":22455:22522   */\n      tag_606\n        /* \"#utility.yul\":22519:22521   */\n      0x14\n        /* \"#utility.yul\":22514:22517   */\n      dup4\n        /* \"#utility.yul\":22455:22522   */\n      tag_346\n      jump\t// in\n    tag_606:\n        /* \"#utility.yul\":22448:22522   */\n      swap2\n      pop\n        /* \"#utility.yul\":22531:22624   */\n      tag_607\n        /* \"#utility.yul\":22620:22623   */\n      dup3\n        /* \"#utility.yul\":22531:22624   */\n      tag_398\n      jump\t// in\n    tag_607:\n        /* \"#utility.yul\":22649:22651   */\n      0x20\n        /* \"#utility.yul\":22644:22647   */\n      dup3\n        /* \"#utility.yul\":22640:22652   */\n      add\n        /* \"#utility.yul\":22633:22652   */\n      swap1\n      pop\n        /* \"#utility.yul\":22292:22658   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22664:23083   */\n    tag_337:\n        /* \"#utility.yul\":22830:22834   */\n      0x00\n        /* \"#utility.yul\":22868:22870   */\n      0x20\n        /* \"#utility.yul\":22857:22866   */\n      dup3\n        /* \"#utility.yul\":22853:22871   */\n      add\n        /* \"#utility.yul\":22845:22871   */\n      swap1\n      pop\n        /* \"#utility.yul\":22917:22926   */\n      dup2\n        /* \"#utility.yul\":22911:22915   */\n      dup2\n        /* \"#utility.yul\":22907:22927   */\n      sub\n        /* \"#utility.yul\":22903:22904   */\n      0x00\n        /* \"#utility.yul\":22892:22901   */\n      dup4\n        /* \"#utility.yul\":22888:22905   */\n      add\n        /* \"#utility.yul\":22881:22928   */\n      mstore\n        /* \"#utility.yul\":22945:23076   */\n      tag_609\n        /* \"#utility.yul\":23071:23075   */\n      dup2\n        /* \"#utility.yul\":22945:23076   */\n      tag_399\n      jump\t// in\n    tag_609:\n        /* \"#utility.yul\":22937:23076   */\n      swap1\n      pop\n        /* \"#utility.yul\":22664:23083   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212208a3288be81ac17034bbe1af1db02ba6a69e546275e1d6032a6813f487d83739364736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_2759": {
									"entryPoint": null,
									"id": 2759,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_311": {
									"entryPoint": null,
									"id": 311,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_444": {
									"entryPoint": null,
									"id": 444,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_50": {
									"entryPoint": null,
									"id": 50,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 318,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 1338,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 1353,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_dataslot_t_string_storage": {
									"entryPoint": 661,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 513,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_t_string_storage": {
									"entryPoint": 946,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"cleanup_t_address": {
									"entryPoint": 1321,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 1290,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 787,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clear_storage_range_t_bytes1": {
									"entryPoint": 912,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"convert_t_uint256_to_t_uint256": {
									"entryPoint": 805,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 1083,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"divide_by_32_ceil": {
									"entryPoint": 679,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 613,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": 1056,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"identity": {
									"entryPoint": 796,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mask_bytes_dynamic": {
									"entryPoint": 1028,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x22": {
									"entryPoint": 568,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 523,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"prepare_store_t_uint256": {
									"entryPoint": 838,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_left_dynamic": {
									"entryPoint": 694,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"shift_right_unsigned_dynamic": {
									"entryPoint": 1016,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"storage_set_to_zero_t_uint256": {
									"entryPoint": 888,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"update_byte_slice_dynamic32": {
									"entryPoint": 706,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"update_storage_value_t_uint256_to_t_uint256": {
									"entryPoint": 847,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"zero_value_for_split_t_uint256": {
									"entryPoint": 884,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:5817:12",
										"nodeType": "YulBlock",
										"src": "0:5817:12",
										"statements": [
											{
												"body": {
													"nativeSrc": "66:40:12",
													"nodeType": "YulBlock",
													"src": "66:40:12",
													"statements": [
														{
															"nativeSrc": "77:22:12",
															"nodeType": "YulAssignment",
															"src": "77:22:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "93:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "93:5:12"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "87:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "87:5:12"
																},
																"nativeSrc": "87:12:12",
																"nodeType": "YulFunctionCall",
																"src": "87:12:12"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "77:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "77:6:12"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "7:99:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "49:5:12",
														"nodeType": "YulTypedName",
														"src": "49:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "59:6:12",
														"nodeType": "YulTypedName",
														"src": "59:6:12",
														"type": ""
													}
												],
												"src": "7:99:12"
											},
											{
												"body": {
													"nativeSrc": "140:152:12",
													"nodeType": "YulBlock",
													"src": "140:152:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "157:1:12",
																		"nodeType": "YulLiteral",
																		"src": "157:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "160:77:12",
																		"nodeType": "YulLiteral",
																		"src": "160:77:12",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "150:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "150:6:12"
																},
																"nativeSrc": "150:88:12",
																"nodeType": "YulFunctionCall",
																"src": "150:88:12"
															},
															"nativeSrc": "150:88:12",
															"nodeType": "YulExpressionStatement",
															"src": "150:88:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "254:1:12",
																		"nodeType": "YulLiteral",
																		"src": "254:1:12",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "257:4:12",
																		"nodeType": "YulLiteral",
																		"src": "257:4:12",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "247:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "247:6:12"
																},
																"nativeSrc": "247:15:12",
																"nodeType": "YulFunctionCall",
																"src": "247:15:12"
															},
															"nativeSrc": "247:15:12",
															"nodeType": "YulExpressionStatement",
															"src": "247:15:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "278:1:12",
																		"nodeType": "YulLiteral",
																		"src": "278:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "281:4:12",
																		"nodeType": "YulLiteral",
																		"src": "281:4:12",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "271:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "271:6:12"
																},
																"nativeSrc": "271:15:12",
																"nodeType": "YulFunctionCall",
																"src": "271:15:12"
															},
															"nativeSrc": "271:15:12",
															"nodeType": "YulExpressionStatement",
															"src": "271:15:12"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "112:180:12",
												"nodeType": "YulFunctionDefinition",
												"src": "112:180:12"
											},
											{
												"body": {
													"nativeSrc": "326:152:12",
													"nodeType": "YulBlock",
													"src": "326:152:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "343:1:12",
																		"nodeType": "YulLiteral",
																		"src": "343:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "346:77:12",
																		"nodeType": "YulLiteral",
																		"src": "346:77:12",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "336:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "336:6:12"
																},
																"nativeSrc": "336:88:12",
																"nodeType": "YulFunctionCall",
																"src": "336:88:12"
															},
															"nativeSrc": "336:88:12",
															"nodeType": "YulExpressionStatement",
															"src": "336:88:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "440:1:12",
																		"nodeType": "YulLiteral",
																		"src": "440:1:12",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "443:4:12",
																		"nodeType": "YulLiteral",
																		"src": "443:4:12",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "433:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "433:6:12"
																},
																"nativeSrc": "433:15:12",
																"nodeType": "YulFunctionCall",
																"src": "433:15:12"
															},
															"nativeSrc": "433:15:12",
															"nodeType": "YulExpressionStatement",
															"src": "433:15:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "464:1:12",
																		"nodeType": "YulLiteral",
																		"src": "464:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "467:4:12",
																		"nodeType": "YulLiteral",
																		"src": "467:4:12",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "457:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "457:6:12"
																},
																"nativeSrc": "457:15:12",
																"nodeType": "YulFunctionCall",
																"src": "457:15:12"
															},
															"nativeSrc": "457:15:12",
															"nodeType": "YulExpressionStatement",
															"src": "457:15:12"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "298:180:12",
												"nodeType": "YulFunctionDefinition",
												"src": "298:180:12"
											},
											{
												"body": {
													"nativeSrc": "535:269:12",
													"nodeType": "YulBlock",
													"src": "535:269:12",
													"statements": [
														{
															"nativeSrc": "545:22:12",
															"nodeType": "YulAssignment",
															"src": "545:22:12",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "559:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "559:4:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "565:1:12",
																		"nodeType": "YulLiteral",
																		"src": "565:1:12",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "555:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "555:3:12"
																},
																"nativeSrc": "555:12:12",
																"nodeType": "YulFunctionCall",
																"src": "555:12:12"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "545:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "545:6:12"
																}
															]
														},
														{
															"nativeSrc": "576:38:12",
															"nodeType": "YulVariableDeclaration",
															"src": "576:38:12",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "606:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "606:4:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "612:1:12",
																		"nodeType": "YulLiteral",
																		"src": "612:1:12",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "602:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "602:3:12"
																},
																"nativeSrc": "602:12:12",
																"nodeType": "YulFunctionCall",
																"src": "602:12:12"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "580:18:12",
																	"nodeType": "YulTypedName",
																	"src": "580:18:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "653:51:12",
																"nodeType": "YulBlock",
																"src": "653:51:12",
																"statements": [
																	{
																		"nativeSrc": "667:27:12",
																		"nodeType": "YulAssignment",
																		"src": "667:27:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "681:6:12",
																					"nodeType": "YulIdentifier",
																					"src": "681:6:12"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "689:4:12",
																					"nodeType": "YulLiteral",
																					"src": "689:4:12",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "677:3:12",
																				"nodeType": "YulIdentifier",
																				"src": "677:3:12"
																			},
																			"nativeSrc": "677:17:12",
																			"nodeType": "YulFunctionCall",
																			"src": "677:17:12"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "667:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "667:6:12"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "633:18:12",
																		"nodeType": "YulIdentifier",
																		"src": "633:18:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "626:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "626:6:12"
																},
																"nativeSrc": "626:26:12",
																"nodeType": "YulFunctionCall",
																"src": "626:26:12"
															},
															"nativeSrc": "623:81:12",
															"nodeType": "YulIf",
															"src": "623:81:12"
														},
														{
															"body": {
																"nativeSrc": "756:42:12",
																"nodeType": "YulBlock",
																"src": "756:42:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "770:16:12",
																				"nodeType": "YulIdentifier",
																				"src": "770:16:12"
																			},
																			"nativeSrc": "770:18:12",
																			"nodeType": "YulFunctionCall",
																			"src": "770:18:12"
																		},
																		"nativeSrc": "770:18:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "770:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "720:18:12",
																		"nodeType": "YulIdentifier",
																		"src": "720:18:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "743:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "743:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "751:2:12",
																				"nodeType": "YulLiteral",
																				"src": "751:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "740:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "740:2:12"
																		},
																		"nativeSrc": "740:14:12",
																		"nodeType": "YulFunctionCall",
																		"src": "740:14:12"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "717:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "717:2:12"
																},
																"nativeSrc": "717:38:12",
																"nodeType": "YulFunctionCall",
																"src": "717:38:12"
															},
															"nativeSrc": "714:84:12",
															"nodeType": "YulIf",
															"src": "714:84:12"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "484:320:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "519:4:12",
														"nodeType": "YulTypedName",
														"src": "519:4:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "528:6:12",
														"nodeType": "YulTypedName",
														"src": "528:6:12",
														"type": ""
													}
												],
												"src": "484:320:12"
											},
											{
												"body": {
													"nativeSrc": "864:87:12",
													"nodeType": "YulBlock",
													"src": "864:87:12",
													"statements": [
														{
															"nativeSrc": "874:11:12",
															"nodeType": "YulAssignment",
															"src": "874:11:12",
															"value": {
																"name": "ptr",
																"nativeSrc": "882:3:12",
																"nodeType": "YulIdentifier",
																"src": "882:3:12"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "874:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "874:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "902:1:12",
																		"nodeType": "YulLiteral",
																		"src": "902:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "905:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "905:3:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "895:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "895:6:12"
																},
																"nativeSrc": "895:14:12",
																"nodeType": "YulFunctionCall",
																"src": "895:14:12"
															},
															"nativeSrc": "895:14:12",
															"nodeType": "YulExpressionStatement",
															"src": "895:14:12"
														},
														{
															"nativeSrc": "918:26:12",
															"nodeType": "YulAssignment",
															"src": "918:26:12",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "936:1:12",
																		"nodeType": "YulLiteral",
																		"src": "936:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "939:4:12",
																		"nodeType": "YulLiteral",
																		"src": "939:4:12",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "926:9:12",
																	"nodeType": "YulIdentifier",
																	"src": "926:9:12"
																},
																"nativeSrc": "926:18:12",
																"nodeType": "YulFunctionCall",
																"src": "926:18:12"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "918:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "918:4:12"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_string_storage",
												"nativeSrc": "810:141:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "851:3:12",
														"nodeType": "YulTypedName",
														"src": "851:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "859:4:12",
														"nodeType": "YulTypedName",
														"src": "859:4:12",
														"type": ""
													}
												],
												"src": "810:141:12"
											},
											{
												"body": {
													"nativeSrc": "1001:49:12",
													"nodeType": "YulBlock",
													"src": "1001:49:12",
													"statements": [
														{
															"nativeSrc": "1011:33:12",
															"nodeType": "YulAssignment",
															"src": "1011:33:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1029:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "1029:5:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1036:2:12",
																				"nodeType": "YulLiteral",
																				"src": "1036:2:12",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1025:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "1025:3:12"
																		},
																		"nativeSrc": "1025:14:12",
																		"nodeType": "YulFunctionCall",
																		"src": "1025:14:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1041:2:12",
																		"nodeType": "YulLiteral",
																		"src": "1041:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "1021:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "1021:3:12"
																},
																"nativeSrc": "1021:23:12",
																"nodeType": "YulFunctionCall",
																"src": "1021:23:12"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "1011:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "1011:6:12"
																}
															]
														}
													]
												},
												"name": "divide_by_32_ceil",
												"nativeSrc": "957:93:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "984:5:12",
														"nodeType": "YulTypedName",
														"src": "984:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "994:6:12",
														"nodeType": "YulTypedName",
														"src": "994:6:12",
														"type": ""
													}
												],
												"src": "957:93:12"
											},
											{
												"body": {
													"nativeSrc": "1109:54:12",
													"nodeType": "YulBlock",
													"src": "1109:54:12",
													"statements": [
														{
															"nativeSrc": "1119:37:12",
															"nodeType": "YulAssignment",
															"src": "1119:37:12",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "1144:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "1144:4:12"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "1150:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "1150:5:12"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nativeSrc": "1140:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "1140:3:12"
																},
																"nativeSrc": "1140:16:12",
																"nodeType": "YulFunctionCall",
																"src": "1140:16:12"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "1119:8:12",
																	"nodeType": "YulIdentifier",
																	"src": "1119:8:12"
																}
															]
														}
													]
												},
												"name": "shift_left_dynamic",
												"nativeSrc": "1056:107:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "1084:4:12",
														"nodeType": "YulTypedName",
														"src": "1084:4:12",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "1090:5:12",
														"nodeType": "YulTypedName",
														"src": "1090:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "1100:8:12",
														"nodeType": "YulTypedName",
														"src": "1100:8:12",
														"type": ""
													}
												],
												"src": "1056:107:12"
											},
											{
												"body": {
													"nativeSrc": "1245:317:12",
													"nodeType": "YulBlock",
													"src": "1245:317:12",
													"statements": [
														{
															"nativeSrc": "1255:35:12",
															"nodeType": "YulVariableDeclaration",
															"src": "1255:35:12",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBytes",
																		"nativeSrc": "1276:10:12",
																		"nodeType": "YulIdentifier",
																		"src": "1276:10:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1288:1:12",
																		"nodeType": "YulLiteral",
																		"src": "1288:1:12",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "1272:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "1272:3:12"
																},
																"nativeSrc": "1272:18:12",
																"nodeType": "YulFunctionCall",
																"src": "1272:18:12"
															},
															"variables": [
																{
																	"name": "shiftBits",
																	"nativeSrc": "1259:9:12",
																	"nodeType": "YulTypedName",
																	"src": "1259:9:12",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1299:109:12",
															"nodeType": "YulVariableDeclaration",
															"src": "1299:109:12",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "1330:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "1330:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1341:66:12",
																		"nodeType": "YulLiteral",
																		"src": "1341:66:12",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "1311:18:12",
																	"nodeType": "YulIdentifier",
																	"src": "1311:18:12"
																},
																"nativeSrc": "1311:97:12",
																"nodeType": "YulFunctionCall",
																"src": "1311:97:12"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "1303:4:12",
																	"nodeType": "YulTypedName",
																	"src": "1303:4:12",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1417:51:12",
															"nodeType": "YulAssignment",
															"src": "1417:51:12",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "1448:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "1448:9:12"
																	},
																	{
																		"name": "toInsert",
																		"nativeSrc": "1459:8:12",
																		"nodeType": "YulIdentifier",
																		"src": "1459:8:12"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "1429:18:12",
																	"nodeType": "YulIdentifier",
																	"src": "1429:18:12"
																},
																"nativeSrc": "1429:39:12",
																"nodeType": "YulFunctionCall",
																"src": "1429:39:12"
															},
															"variableNames": [
																{
																	"name": "toInsert",
																	"nativeSrc": "1417:8:12",
																	"nodeType": "YulIdentifier",
																	"src": "1417:8:12"
																}
															]
														},
														{
															"nativeSrc": "1477:30:12",
															"nodeType": "YulAssignment",
															"src": "1477:30:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1490:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "1490:5:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mask",
																				"nativeSrc": "1501:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "1501:4:12"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "1497:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "1497:3:12"
																		},
																		"nativeSrc": "1497:9:12",
																		"nodeType": "YulFunctionCall",
																		"src": "1497:9:12"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1486:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "1486:3:12"
																},
																"nativeSrc": "1486:21:12",
																"nodeType": "YulFunctionCall",
																"src": "1486:21:12"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1477:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "1477:5:12"
																}
															]
														},
														{
															"nativeSrc": "1516:40:12",
															"nodeType": "YulAssignment",
															"src": "1516:40:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1529:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "1529:5:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "toInsert",
																				"nativeSrc": "1540:8:12",
																				"nodeType": "YulIdentifier",
																				"src": "1540:8:12"
																			},
																			{
																				"name": "mask",
																				"nativeSrc": "1550:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "1550:4:12"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "1536:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "1536:3:12"
																		},
																		"nativeSrc": "1536:19:12",
																		"nodeType": "YulFunctionCall",
																		"src": "1536:19:12"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "1526:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "1526:2:12"
																},
																"nativeSrc": "1526:30:12",
																"nodeType": "YulFunctionCall",
																"src": "1526:30:12"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "1516:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "1516:6:12"
																}
															]
														}
													]
												},
												"name": "update_byte_slice_dynamic32",
												"nativeSrc": "1169:393:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1206:5:12",
														"nodeType": "YulTypedName",
														"src": "1206:5:12",
														"type": ""
													},
													{
														"name": "shiftBytes",
														"nativeSrc": "1213:10:12",
														"nodeType": "YulTypedName",
														"src": "1213:10:12",
														"type": ""
													},
													{
														"name": "toInsert",
														"nativeSrc": "1225:8:12",
														"nodeType": "YulTypedName",
														"src": "1225:8:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "1238:6:12",
														"nodeType": "YulTypedName",
														"src": "1238:6:12",
														"type": ""
													}
												],
												"src": "1169:393:12"
											},
											{
												"body": {
													"nativeSrc": "1613:32:12",
													"nodeType": "YulBlock",
													"src": "1613:32:12",
													"statements": [
														{
															"nativeSrc": "1623:16:12",
															"nodeType": "YulAssignment",
															"src": "1623:16:12",
															"value": {
																"name": "value",
																"nativeSrc": "1634:5:12",
																"nodeType": "YulIdentifier",
																"src": "1634:5:12"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1623:7:12",
																	"nodeType": "YulIdentifier",
																	"src": "1623:7:12"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "1568:77:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1595:5:12",
														"nodeType": "YulTypedName",
														"src": "1595:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1605:7:12",
														"nodeType": "YulTypedName",
														"src": "1605:7:12",
														"type": ""
													}
												],
												"src": "1568:77:12"
											},
											{
												"body": {
													"nativeSrc": "1683:28:12",
													"nodeType": "YulBlock",
													"src": "1683:28:12",
													"statements": [
														{
															"nativeSrc": "1693:12:12",
															"nodeType": "YulAssignment",
															"src": "1693:12:12",
															"value": {
																"name": "value",
																"nativeSrc": "1700:5:12",
																"nodeType": "YulIdentifier",
																"src": "1700:5:12"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "1693:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "1693:3:12"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "1651:60:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1669:5:12",
														"nodeType": "YulTypedName",
														"src": "1669:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "1679:3:12",
														"nodeType": "YulTypedName",
														"src": "1679:3:12",
														"type": ""
													}
												],
												"src": "1651:60:12"
											},
											{
												"body": {
													"nativeSrc": "1777:82:12",
													"nodeType": "YulBlock",
													"src": "1777:82:12",
													"statements": [
														{
															"nativeSrc": "1787:66:12",
															"nodeType": "YulAssignment",
															"src": "1787:66:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1845:5:12",
																						"nodeType": "YulIdentifier",
																						"src": "1845:5:12"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "1827:17:12",
																					"nodeType": "YulIdentifier",
																					"src": "1827:17:12"
																				},
																				"nativeSrc": "1827:24:12",
																				"nodeType": "YulFunctionCall",
																				"src": "1827:24:12"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "1818:8:12",
																			"nodeType": "YulIdentifier",
																			"src": "1818:8:12"
																		},
																		"nativeSrc": "1818:34:12",
																		"nodeType": "YulFunctionCall",
																		"src": "1818:34:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "1800:17:12",
																	"nodeType": "YulIdentifier",
																	"src": "1800:17:12"
																},
																"nativeSrc": "1800:53:12",
																"nodeType": "YulFunctionCall",
																"src": "1800:53:12"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "1787:9:12",
																	"nodeType": "YulIdentifier",
																	"src": "1787:9:12"
																}
															]
														}
													]
												},
												"name": "convert_t_uint256_to_t_uint256",
												"nativeSrc": "1717:142:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1757:5:12",
														"nodeType": "YulTypedName",
														"src": "1757:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "1767:9:12",
														"nodeType": "YulTypedName",
														"src": "1767:9:12",
														"type": ""
													}
												],
												"src": "1717:142:12"
											},
											{
												"body": {
													"nativeSrc": "1912:28:12",
													"nodeType": "YulBlock",
													"src": "1912:28:12",
													"statements": [
														{
															"nativeSrc": "1922:12:12",
															"nodeType": "YulAssignment",
															"src": "1922:12:12",
															"value": {
																"name": "value",
																"nativeSrc": "1929:5:12",
																"nodeType": "YulIdentifier",
																"src": "1929:5:12"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "1922:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "1922:3:12"
																}
															]
														}
													]
												},
												"name": "prepare_store_t_uint256",
												"nativeSrc": "1865:75:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1898:5:12",
														"nodeType": "YulTypedName",
														"src": "1898:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "1908:3:12",
														"nodeType": "YulTypedName",
														"src": "1908:3:12",
														"type": ""
													}
												],
												"src": "1865:75:12"
											},
											{
												"body": {
													"nativeSrc": "2022:193:12",
													"nodeType": "YulBlock",
													"src": "2022:193:12",
													"statements": [
														{
															"nativeSrc": "2032:63:12",
															"nodeType": "YulVariableDeclaration",
															"src": "2032:63:12",
															"value": {
																"arguments": [
																	{
																		"name": "value_0",
																		"nativeSrc": "2087:7:12",
																		"nodeType": "YulIdentifier",
																		"src": "2087:7:12"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint256_to_t_uint256",
																	"nativeSrc": "2056:30:12",
																	"nodeType": "YulIdentifier",
																	"src": "2056:30:12"
																},
																"nativeSrc": "2056:39:12",
																"nodeType": "YulFunctionCall",
																"src": "2056:39:12"
															},
															"variables": [
																{
																	"name": "convertedValue_0",
																	"nativeSrc": "2036:16:12",
																	"nodeType": "YulTypedName",
																	"src": "2036:16:12",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "2111:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "2111:4:12"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "2151:4:12",
																						"nodeType": "YulIdentifier",
																						"src": "2151:4:12"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "2145:5:12",
																					"nodeType": "YulIdentifier",
																					"src": "2145:5:12"
																				},
																				"nativeSrc": "2145:11:12",
																				"nodeType": "YulFunctionCall",
																				"src": "2145:11:12"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "2158:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "2158:6:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "convertedValue_0",
																						"nativeSrc": "2190:16:12",
																						"nodeType": "YulIdentifier",
																						"src": "2190:16:12"
																					}
																				],
																				"functionName": {
																					"name": "prepare_store_t_uint256",
																					"nativeSrc": "2166:23:12",
																					"nodeType": "YulIdentifier",
																					"src": "2166:23:12"
																				},
																				"nativeSrc": "2166:41:12",
																				"nodeType": "YulFunctionCall",
																				"src": "2166:41:12"
																			}
																		],
																		"functionName": {
																			"name": "update_byte_slice_dynamic32",
																			"nativeSrc": "2117:27:12",
																			"nodeType": "YulIdentifier",
																			"src": "2117:27:12"
																		},
																		"nativeSrc": "2117:91:12",
																		"nodeType": "YulFunctionCall",
																		"src": "2117:91:12"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nativeSrc": "2104:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "2104:6:12"
																},
																"nativeSrc": "2104:105:12",
																"nodeType": "YulFunctionCall",
																"src": "2104:105:12"
															},
															"nativeSrc": "2104:105:12",
															"nodeType": "YulExpressionStatement",
															"src": "2104:105:12"
														}
													]
												},
												"name": "update_storage_value_t_uint256_to_t_uint256",
												"nativeSrc": "1946:269:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "1999:4:12",
														"nodeType": "YulTypedName",
														"src": "1999:4:12",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "2005:6:12",
														"nodeType": "YulTypedName",
														"src": "2005:6:12",
														"type": ""
													},
													{
														"name": "value_0",
														"nativeSrc": "2013:7:12",
														"nodeType": "YulTypedName",
														"src": "2013:7:12",
														"type": ""
													}
												],
												"src": "1946:269:12"
											},
											{
												"body": {
													"nativeSrc": "2270:24:12",
													"nodeType": "YulBlock",
													"src": "2270:24:12",
													"statements": [
														{
															"nativeSrc": "2280:8:12",
															"nodeType": "YulAssignment",
															"src": "2280:8:12",
															"value": {
																"kind": "number",
																"nativeSrc": "2287:1:12",
																"nodeType": "YulLiteral",
																"src": "2287:1:12",
																"type": "",
																"value": "0"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "2280:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "2280:3:12"
																}
															]
														}
													]
												},
												"name": "zero_value_for_split_t_uint256",
												"nativeSrc": "2221:73:12",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "2266:3:12",
														"nodeType": "YulTypedName",
														"src": "2266:3:12",
														"type": ""
													}
												],
												"src": "2221:73:12"
											},
											{
												"body": {
													"nativeSrc": "2353:136:12",
													"nodeType": "YulBlock",
													"src": "2353:136:12",
													"statements": [
														{
															"nativeSrc": "2363:46:12",
															"nodeType": "YulVariableDeclaration",
															"src": "2363:46:12",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "zero_value_for_split_t_uint256",
																	"nativeSrc": "2377:30:12",
																	"nodeType": "YulIdentifier",
																	"src": "2377:30:12"
																},
																"nativeSrc": "2377:32:12",
																"nodeType": "YulFunctionCall",
																"src": "2377:32:12"
															},
															"variables": [
																{
																	"name": "zero_0",
																	"nativeSrc": "2367:6:12",
																	"nodeType": "YulTypedName",
																	"src": "2367:6:12",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "2462:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "2462:4:12"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "2468:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "2468:6:12"
																	},
																	{
																		"name": "zero_0",
																		"nativeSrc": "2476:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "2476:6:12"
																	}
																],
																"functionName": {
																	"name": "update_storage_value_t_uint256_to_t_uint256",
																	"nativeSrc": "2418:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "2418:43:12"
																},
																"nativeSrc": "2418:65:12",
																"nodeType": "YulFunctionCall",
																"src": "2418:65:12"
															},
															"nativeSrc": "2418:65:12",
															"nodeType": "YulExpressionStatement",
															"src": "2418:65:12"
														}
													]
												},
												"name": "storage_set_to_zero_t_uint256",
												"nativeSrc": "2300:189:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "2339:4:12",
														"nodeType": "YulTypedName",
														"src": "2339:4:12",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "2345:6:12",
														"nodeType": "YulTypedName",
														"src": "2345:6:12",
														"type": ""
													}
												],
												"src": "2300:189:12"
											},
											{
												"body": {
													"nativeSrc": "2545:136:12",
													"nodeType": "YulBlock",
													"src": "2545:136:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "2612:63:12",
																"nodeType": "YulBlock",
																"src": "2612:63:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "2656:5:12",
																					"nodeType": "YulIdentifier",
																					"src": "2656:5:12"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2663:1:12",
																					"nodeType": "YulLiteral",
																					"src": "2663:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "storage_set_to_zero_t_uint256",
																				"nativeSrc": "2626:29:12",
																				"nodeType": "YulIdentifier",
																				"src": "2626:29:12"
																			},
																			"nativeSrc": "2626:39:12",
																			"nodeType": "YulFunctionCall",
																			"src": "2626:39:12"
																		},
																		"nativeSrc": "2626:39:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "2626:39:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "start",
																		"nativeSrc": "2565:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "2565:5:12"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "2572:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "2572:3:12"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "2562:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "2562:2:12"
																},
																"nativeSrc": "2562:14:12",
																"nodeType": "YulFunctionCall",
																"src": "2562:14:12"
															},
															"nativeSrc": "2555:120:12",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "2577:26:12",
																"nodeType": "YulBlock",
																"src": "2577:26:12",
																"statements": [
																	{
																		"nativeSrc": "2579:22:12",
																		"nodeType": "YulAssignment",
																		"src": "2579:22:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "2592:5:12",
																					"nodeType": "YulIdentifier",
																					"src": "2592:5:12"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2599:1:12",
																					"nodeType": "YulLiteral",
																					"src": "2599:1:12",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "2588:3:12",
																				"nodeType": "YulIdentifier",
																				"src": "2588:3:12"
																			},
																			"nativeSrc": "2588:13:12",
																			"nodeType": "YulFunctionCall",
																			"src": "2588:13:12"
																		},
																		"variableNames": [
																			{
																				"name": "start",
																				"nativeSrc": "2579:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "2579:5:12"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "2559:2:12",
																"nodeType": "YulBlock",
																"src": "2559:2:12",
																"statements": []
															},
															"src": "2555:120:12"
														}
													]
												},
												"name": "clear_storage_range_t_bytes1",
												"nativeSrc": "2495:186:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nativeSrc": "2533:5:12",
														"nodeType": "YulTypedName",
														"src": "2533:5:12",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2540:3:12",
														"nodeType": "YulTypedName",
														"src": "2540:3:12",
														"type": ""
													}
												],
												"src": "2495:186:12"
											},
											{
												"body": {
													"nativeSrc": "2766:464:12",
													"nodeType": "YulBlock",
													"src": "2766:464:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "2792:431:12",
																"nodeType": "YulBlock",
																"src": "2792:431:12",
																"statements": [
																	{
																		"nativeSrc": "2806:54:12",
																		"nodeType": "YulVariableDeclaration",
																		"src": "2806:54:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "array",
																					"nativeSrc": "2854:5:12",
																					"nodeType": "YulIdentifier",
																					"src": "2854:5:12"
																				}
																			],
																			"functionName": {
																				"name": "array_dataslot_t_string_storage",
																				"nativeSrc": "2822:31:12",
																				"nodeType": "YulIdentifier",
																				"src": "2822:31:12"
																			},
																			"nativeSrc": "2822:38:12",
																			"nodeType": "YulFunctionCall",
																			"src": "2822:38:12"
																		},
																		"variables": [
																			{
																				"name": "dataArea",
																				"nativeSrc": "2810:8:12",
																				"nodeType": "YulTypedName",
																				"src": "2810:8:12",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "2873:63:12",
																		"nodeType": "YulVariableDeclaration",
																		"src": "2873:63:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "dataArea",
																					"nativeSrc": "2896:8:12",
																					"nodeType": "YulIdentifier",
																					"src": "2896:8:12"
																				},
																				{
																					"arguments": [
																						{
																							"name": "startIndex",
																							"nativeSrc": "2924:10:12",
																							"nodeType": "YulIdentifier",
																							"src": "2924:10:12"
																						}
																					],
																					"functionName": {
																						"name": "divide_by_32_ceil",
																						"nativeSrc": "2906:17:12",
																						"nodeType": "YulIdentifier",
																						"src": "2906:17:12"
																					},
																					"nativeSrc": "2906:29:12",
																					"nodeType": "YulFunctionCall",
																					"src": "2906:29:12"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "2892:3:12",
																				"nodeType": "YulIdentifier",
																				"src": "2892:3:12"
																			},
																			"nativeSrc": "2892:44:12",
																			"nodeType": "YulFunctionCall",
																			"src": "2892:44:12"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "2877:11:12",
																				"nodeType": "YulTypedName",
																				"src": "2877:11:12",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "3093:27:12",
																			"nodeType": "YulBlock",
																			"src": "3093:27:12",
																			"statements": [
																				{
																					"nativeSrc": "3095:23:12",
																					"nodeType": "YulAssignment",
																					"src": "3095:23:12",
																					"value": {
																						"name": "dataArea",
																						"nativeSrc": "3110:8:12",
																						"nodeType": "YulIdentifier",
																						"src": "3110:8:12"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "3095:11:12",
																							"nodeType": "YulIdentifier",
																							"src": "3095:11:12"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "3077:10:12",
																					"nodeType": "YulIdentifier",
																					"src": "3077:10:12"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3089:2:12",
																					"nodeType": "YulLiteral",
																					"src": "3089:2:12",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "3074:2:12",
																				"nodeType": "YulIdentifier",
																				"src": "3074:2:12"
																			},
																			"nativeSrc": "3074:18:12",
																			"nodeType": "YulFunctionCall",
																			"src": "3074:18:12"
																		},
																		"nativeSrc": "3071:49:12",
																		"nodeType": "YulIf",
																		"src": "3071:49:12"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "deleteStart",
																					"nativeSrc": "3162:11:12",
																					"nodeType": "YulIdentifier",
																					"src": "3162:11:12"
																				},
																				{
																					"arguments": [
																						{
																							"name": "dataArea",
																							"nativeSrc": "3179:8:12",
																							"nodeType": "YulIdentifier",
																							"src": "3179:8:12"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "3207:3:12",
																									"nodeType": "YulIdentifier",
																									"src": "3207:3:12"
																								}
																							],
																							"functionName": {
																								"name": "divide_by_32_ceil",
																								"nativeSrc": "3189:17:12",
																								"nodeType": "YulIdentifier",
																								"src": "3189:17:12"
																							},
																							"nativeSrc": "3189:22:12",
																							"nodeType": "YulFunctionCall",
																							"src": "3189:22:12"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "3175:3:12",
																						"nodeType": "YulIdentifier",
																						"src": "3175:3:12"
																					},
																					"nativeSrc": "3175:37:12",
																					"nodeType": "YulFunctionCall",
																					"src": "3175:37:12"
																				}
																			],
																			"functionName": {
																				"name": "clear_storage_range_t_bytes1",
																				"nativeSrc": "3133:28:12",
																				"nodeType": "YulIdentifier",
																				"src": "3133:28:12"
																			},
																			"nativeSrc": "3133:80:12",
																			"nodeType": "YulFunctionCall",
																			"src": "3133:80:12"
																		},
																		"nativeSrc": "3133:80:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "3133:80:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "2783:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "2783:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2788:2:12",
																		"nodeType": "YulLiteral",
																		"src": "2788:2:12",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2780:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "2780:2:12"
																},
																"nativeSrc": "2780:11:12",
																"nodeType": "YulFunctionCall",
																"src": "2780:11:12"
															},
															"nativeSrc": "2777:446:12",
															"nodeType": "YulIf",
															"src": "2777:446:12"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_t_string_storage",
												"nativeSrc": "2687:543:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "2742:5:12",
														"nodeType": "YulTypedName",
														"src": "2742:5:12",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "2749:3:12",
														"nodeType": "YulTypedName",
														"src": "2749:3:12",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "2754:10:12",
														"nodeType": "YulTypedName",
														"src": "2754:10:12",
														"type": ""
													}
												],
												"src": "2687:543:12"
											},
											{
												"body": {
													"nativeSrc": "3299:54:12",
													"nodeType": "YulBlock",
													"src": "3299:54:12",
													"statements": [
														{
															"nativeSrc": "3309:37:12",
															"nodeType": "YulAssignment",
															"src": "3309:37:12",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "3334:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "3334:4:12"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "3340:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "3340:5:12"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "3330:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "3330:3:12"
																},
																"nativeSrc": "3330:16:12",
																"nodeType": "YulFunctionCall",
																"src": "3330:16:12"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "3309:8:12",
																	"nodeType": "YulIdentifier",
																	"src": "3309:8:12"
																}
															]
														}
													]
												},
												"name": "shift_right_unsigned_dynamic",
												"nativeSrc": "3236:117:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "3274:4:12",
														"nodeType": "YulTypedName",
														"src": "3274:4:12",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "3280:5:12",
														"nodeType": "YulTypedName",
														"src": "3280:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "3290:8:12",
														"nodeType": "YulTypedName",
														"src": "3290:8:12",
														"type": ""
													}
												],
												"src": "3236:117:12"
											},
											{
												"body": {
													"nativeSrc": "3410:118:12",
													"nodeType": "YulBlock",
													"src": "3410:118:12",
													"statements": [
														{
															"nativeSrc": "3420:68:12",
															"nodeType": "YulVariableDeclaration",
															"src": "3420:68:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "3469:1:12",
																						"nodeType": "YulLiteral",
																						"src": "3469:1:12",
																						"type": "",
																						"value": "8"
																					},
																					{
																						"name": "bytes",
																						"nativeSrc": "3472:5:12",
																						"nodeType": "YulIdentifier",
																						"src": "3472:5:12"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "3465:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "3465:3:12"
																				},
																				"nativeSrc": "3465:13:12",
																				"nodeType": "YulFunctionCall",
																				"src": "3465:13:12"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "3484:1:12",
																						"nodeType": "YulLiteral",
																						"src": "3484:1:12",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "3480:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "3480:3:12"
																				},
																				"nativeSrc": "3480:6:12",
																				"nodeType": "YulFunctionCall",
																				"src": "3480:6:12"
																			}
																		],
																		"functionName": {
																			"name": "shift_right_unsigned_dynamic",
																			"nativeSrc": "3436:28:12",
																			"nodeType": "YulIdentifier",
																			"src": "3436:28:12"
																		},
																		"nativeSrc": "3436:51:12",
																		"nodeType": "YulFunctionCall",
																		"src": "3436:51:12"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nativeSrc": "3432:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "3432:3:12"
																},
																"nativeSrc": "3432:56:12",
																"nodeType": "YulFunctionCall",
																"src": "3432:56:12"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "3424:4:12",
																	"nodeType": "YulTypedName",
																	"src": "3424:4:12",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "3497:25:12",
															"nodeType": "YulAssignment",
															"src": "3497:25:12",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "3511:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "3511:4:12"
																	},
																	{
																		"name": "mask",
																		"nativeSrc": "3517:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "3517:4:12"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "3507:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "3507:3:12"
																},
																"nativeSrc": "3507:15:12",
																"nodeType": "YulFunctionCall",
																"src": "3507:15:12"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "3497:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "3497:6:12"
																}
															]
														}
													]
												},
												"name": "mask_bytes_dynamic",
												"nativeSrc": "3359:169:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "3387:4:12",
														"nodeType": "YulTypedName",
														"src": "3387:4:12",
														"type": ""
													},
													{
														"name": "bytes",
														"nativeSrc": "3393:5:12",
														"nodeType": "YulTypedName",
														"src": "3393:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "3403:6:12",
														"nodeType": "YulTypedName",
														"src": "3403:6:12",
														"type": ""
													}
												],
												"src": "3359:169:12"
											},
											{
												"body": {
													"nativeSrc": "3614:214:12",
													"nodeType": "YulBlock",
													"src": "3614:214:12",
													"statements": [
														{
															"nativeSrc": "3747:37:12",
															"nodeType": "YulAssignment",
															"src": "3747:37:12",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "3774:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "3774:4:12"
																	},
																	{
																		"name": "len",
																		"nativeSrc": "3780:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "3780:3:12"
																	}
																],
																"functionName": {
																	"name": "mask_bytes_dynamic",
																	"nativeSrc": "3755:18:12",
																	"nodeType": "YulIdentifier",
																	"src": "3755:18:12"
																},
																"nativeSrc": "3755:29:12",
																"nodeType": "YulFunctionCall",
																"src": "3755:29:12"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "3747:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "3747:4:12"
																}
															]
														},
														{
															"nativeSrc": "3793:29:12",
															"nodeType": "YulAssignment",
															"src": "3793:29:12",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "3804:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "3804:4:12"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "3814:1:12",
																				"nodeType": "YulLiteral",
																				"src": "3814:1:12",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "3817:3:12",
																				"nodeType": "YulIdentifier",
																				"src": "3817:3:12"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "3810:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "3810:3:12"
																		},
																		"nativeSrc": "3810:11:12",
																		"nodeType": "YulFunctionCall",
																		"src": "3810:11:12"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "3801:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "3801:2:12"
																},
																"nativeSrc": "3801:21:12",
																"nodeType": "YulFunctionCall",
																"src": "3801:21:12"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "3793:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "3793:4:12"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "3533:295:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "3595:4:12",
														"nodeType": "YulTypedName",
														"src": "3595:4:12",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "3601:3:12",
														"nodeType": "YulTypedName",
														"src": "3601:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "3609:4:12",
														"nodeType": "YulTypedName",
														"src": "3609:4:12",
														"type": ""
													}
												],
												"src": "3533:295:12"
											},
											{
												"body": {
													"nativeSrc": "3925:1303:12",
													"nodeType": "YulBlock",
													"src": "3925:1303:12",
													"statements": [
														{
															"nativeSrc": "3936:51:12",
															"nodeType": "YulVariableDeclaration",
															"src": "3936:51:12",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "3983:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "3983:3:12"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "3950:32:12",
																	"nodeType": "YulIdentifier",
																	"src": "3950:32:12"
																},
																"nativeSrc": "3950:37:12",
																"nodeType": "YulFunctionCall",
																"src": "3950:37:12"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "3940:6:12",
																	"nodeType": "YulTypedName",
																	"src": "3940:6:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4072:22:12",
																"nodeType": "YulBlock",
																"src": "4072:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "4074:16:12",
																				"nodeType": "YulIdentifier",
																				"src": "4074:16:12"
																			},
																			"nativeSrc": "4074:18:12",
																			"nodeType": "YulFunctionCall",
																			"src": "4074:18:12"
																		},
																		"nativeSrc": "4074:18:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "4074:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "4044:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "4044:6:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4052:18:12",
																		"nodeType": "YulLiteral",
																		"src": "4052:18:12",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "4041:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "4041:2:12"
																},
																"nativeSrc": "4041:30:12",
																"nodeType": "YulFunctionCall",
																"src": "4041:30:12"
															},
															"nativeSrc": "4038:56:12",
															"nodeType": "YulIf",
															"src": "4038:56:12"
														},
														{
															"nativeSrc": "4104:52:12",
															"nodeType": "YulVariableDeclaration",
															"src": "4104:52:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "slot",
																				"nativeSrc": "4150:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "4150:4:12"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nativeSrc": "4144:5:12",
																			"nodeType": "YulIdentifier",
																			"src": "4144:5:12"
																		},
																		"nativeSrc": "4144:11:12",
																		"nodeType": "YulFunctionCall",
																		"src": "4144:11:12"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nativeSrc": "4118:25:12",
																	"nodeType": "YulIdentifier",
																	"src": "4118:25:12"
																},
																"nativeSrc": "4118:38:12",
																"nodeType": "YulFunctionCall",
																"src": "4118:38:12"
															},
															"variables": [
																{
																	"name": "oldLen",
																	"nativeSrc": "4108:6:12",
																	"nodeType": "YulTypedName",
																	"src": "4108:6:12",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "4249:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "4249:4:12"
																	},
																	{
																		"name": "oldLen",
																		"nativeSrc": "4255:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "4255:6:12"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "4263:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "4263:6:12"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_t_string_storage",
																	"nativeSrc": "4203:45:12",
																	"nodeType": "YulIdentifier",
																	"src": "4203:45:12"
																},
																"nativeSrc": "4203:67:12",
																"nodeType": "YulFunctionCall",
																"src": "4203:67:12"
															},
															"nativeSrc": "4203:67:12",
															"nodeType": "YulExpressionStatement",
															"src": "4203:67:12"
														},
														{
															"nativeSrc": "4280:18:12",
															"nodeType": "YulVariableDeclaration",
															"src": "4280:18:12",
															"value": {
																"kind": "number",
																"nativeSrc": "4297:1:12",
																"nodeType": "YulLiteral",
																"src": "4297:1:12",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "4284:9:12",
																	"nodeType": "YulTypedName",
																	"src": "4284:9:12",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "4308:17:12",
															"nodeType": "YulAssignment",
															"src": "4308:17:12",
															"value": {
																"kind": "number",
																"nativeSrc": "4321:4:12",
																"nodeType": "YulLiteral",
																"src": "4321:4:12",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "4308:9:12",
																	"nodeType": "YulIdentifier",
																	"src": "4308:9:12"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "4372:611:12",
																		"nodeType": "YulBlock",
																		"src": "4372:611:12",
																		"statements": [
																			{
																				"nativeSrc": "4386:37:12",
																				"nodeType": "YulVariableDeclaration",
																				"src": "4386:37:12",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "4405:6:12",
																							"nodeType": "YulIdentifier",
																							"src": "4405:6:12"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "4417:4:12",
																									"nodeType": "YulLiteral",
																									"src": "4417:4:12",
																									"type": "",
																									"value": "0x1f"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "4413:3:12",
																								"nodeType": "YulIdentifier",
																								"src": "4413:3:12"
																							},
																							"nativeSrc": "4413:9:12",
																							"nodeType": "YulFunctionCall",
																							"src": "4413:9:12"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "4401:3:12",
																						"nodeType": "YulIdentifier",
																						"src": "4401:3:12"
																					},
																					"nativeSrc": "4401:22:12",
																					"nodeType": "YulFunctionCall",
																					"src": "4401:22:12"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "4390:7:12",
																						"nodeType": "YulTypedName",
																						"src": "4390:7:12",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "4437:51:12",
																				"nodeType": "YulVariableDeclaration",
																				"src": "4437:51:12",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "4483:4:12",
																							"nodeType": "YulIdentifier",
																							"src": "4483:4:12"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nativeSrc": "4451:31:12",
																						"nodeType": "YulIdentifier",
																						"src": "4451:31:12"
																					},
																					"nativeSrc": "4451:37:12",
																					"nodeType": "YulFunctionCall",
																					"src": "4451:37:12"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "4441:6:12",
																						"nodeType": "YulTypedName",
																						"src": "4441:6:12",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "4501:10:12",
																				"nodeType": "YulVariableDeclaration",
																				"src": "4501:10:12",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "4510:1:12",
																					"nodeType": "YulLiteral",
																					"src": "4510:1:12",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "4505:1:12",
																						"nodeType": "YulTypedName",
																						"src": "4505:1:12",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "4569:163:12",
																					"nodeType": "YulBlock",
																					"src": "4569:163:12",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "4594:6:12",
																										"nodeType": "YulIdentifier",
																										"src": "4594:6:12"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "4612:3:12",
																														"nodeType": "YulIdentifier",
																														"src": "4612:3:12"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "4617:9:12",
																														"nodeType": "YulIdentifier",
																														"src": "4617:9:12"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "4608:3:12",
																													"nodeType": "YulIdentifier",
																													"src": "4608:3:12"
																												},
																												"nativeSrc": "4608:19:12",
																												"nodeType": "YulFunctionCall",
																												"src": "4608:19:12"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "4602:5:12",
																											"nodeType": "YulIdentifier",
																											"src": "4602:5:12"
																										},
																										"nativeSrc": "4602:26:12",
																										"nodeType": "YulFunctionCall",
																										"src": "4602:26:12"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "4587:6:12",
																									"nodeType": "YulIdentifier",
																									"src": "4587:6:12"
																								},
																								"nativeSrc": "4587:42:12",
																								"nodeType": "YulFunctionCall",
																								"src": "4587:42:12"
																							},
																							"nativeSrc": "4587:42:12",
																							"nodeType": "YulExpressionStatement",
																							"src": "4587:42:12"
																						},
																						{
																							"nativeSrc": "4646:24:12",
																							"nodeType": "YulAssignment",
																							"src": "4646:24:12",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "4660:6:12",
																										"nodeType": "YulIdentifier",
																										"src": "4660:6:12"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "4668:1:12",
																										"nodeType": "YulLiteral",
																										"src": "4668:1:12",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "4656:3:12",
																									"nodeType": "YulIdentifier",
																									"src": "4656:3:12"
																								},
																								"nativeSrc": "4656:14:12",
																								"nodeType": "YulFunctionCall",
																								"src": "4656:14:12"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "4646:6:12",
																									"nodeType": "YulIdentifier",
																									"src": "4646:6:12"
																								}
																							]
																						},
																						{
																							"nativeSrc": "4687:31:12",
																							"nodeType": "YulAssignment",
																							"src": "4687:31:12",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "4704:9:12",
																										"nodeType": "YulIdentifier",
																										"src": "4704:9:12"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "4715:2:12",
																										"nodeType": "YulLiteral",
																										"src": "4715:2:12",
																										"type": "",
																										"value": "32"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "4700:3:12",
																									"nodeType": "YulIdentifier",
																									"src": "4700:3:12"
																								},
																								"nativeSrc": "4700:18:12",
																								"nodeType": "YulFunctionCall",
																								"src": "4700:18:12"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "4687:9:12",
																									"nodeType": "YulIdentifier",
																									"src": "4687:9:12"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "4535:1:12",
																							"nodeType": "YulIdentifier",
																							"src": "4535:1:12"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "4538:7:12",
																							"nodeType": "YulIdentifier",
																							"src": "4538:7:12"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "4532:2:12",
																						"nodeType": "YulIdentifier",
																						"src": "4532:2:12"
																					},
																					"nativeSrc": "4532:14:12",
																					"nodeType": "YulFunctionCall",
																					"src": "4532:14:12"
																				},
																				"nativeSrc": "4524:208:12",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "4547:21:12",
																					"nodeType": "YulBlock",
																					"src": "4547:21:12",
																					"statements": [
																						{
																							"nativeSrc": "4549:17:12",
																							"nodeType": "YulAssignment",
																							"src": "4549:17:12",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "4558:1:12",
																										"nodeType": "YulIdentifier",
																										"src": "4558:1:12"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "4561:4:12",
																										"nodeType": "YulLiteral",
																										"src": "4561:4:12",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "4554:3:12",
																									"nodeType": "YulIdentifier",
																									"src": "4554:3:12"
																								},
																								"nativeSrc": "4554:12:12",
																								"nodeType": "YulFunctionCall",
																								"src": "4554:12:12"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "4549:1:12",
																									"nodeType": "YulIdentifier",
																									"src": "4549:1:12"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "4528:3:12",
																					"nodeType": "YulBlock",
																					"src": "4528:3:12",
																					"statements": []
																				},
																				"src": "4524:208:12"
																			},
																			{
																				"body": {
																					"nativeSrc": "4768:156:12",
																					"nodeType": "YulBlock",
																					"src": "4768:156:12",
																					"statements": [
																						{
																							"nativeSrc": "4786:43:12",
																							"nodeType": "YulVariableDeclaration",
																							"src": "4786:43:12",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "4813:3:12",
																												"nodeType": "YulIdentifier",
																												"src": "4813:3:12"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "4818:9:12",
																												"nodeType": "YulIdentifier",
																												"src": "4818:9:12"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "4809:3:12",
																											"nodeType": "YulIdentifier",
																											"src": "4809:3:12"
																										},
																										"nativeSrc": "4809:19:12",
																										"nodeType": "YulFunctionCall",
																										"src": "4809:19:12"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "4803:5:12",
																									"nodeType": "YulIdentifier",
																									"src": "4803:5:12"
																								},
																								"nativeSrc": "4803:26:12",
																								"nodeType": "YulFunctionCall",
																								"src": "4803:26:12"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "4790:9:12",
																									"nodeType": "YulTypedName",
																									"src": "4790:9:12",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "4853:6:12",
																										"nodeType": "YulIdentifier",
																										"src": "4853:6:12"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "4880:9:12",
																												"nodeType": "YulIdentifier",
																												"src": "4880:9:12"
																											},
																											{
																												"arguments": [
																													{
																														"name": "newLen",
																														"nativeSrc": "4895:6:12",
																														"nodeType": "YulIdentifier",
																														"src": "4895:6:12"
																													},
																													{
																														"kind": "number",
																														"nativeSrc": "4903:4:12",
																														"nodeType": "YulLiteral",
																														"src": "4903:4:12",
																														"type": "",
																														"value": "0x1f"
																													}
																												],
																												"functionName": {
																													"name": "and",
																													"nativeSrc": "4891:3:12",
																													"nodeType": "YulIdentifier",
																													"src": "4891:3:12"
																												},
																												"nativeSrc": "4891:17:12",
																												"nodeType": "YulFunctionCall",
																												"src": "4891:17:12"
																											}
																										],
																										"functionName": {
																											"name": "mask_bytes_dynamic",
																											"nativeSrc": "4861:18:12",
																											"nodeType": "YulIdentifier",
																											"src": "4861:18:12"
																										},
																										"nativeSrc": "4861:48:12",
																										"nodeType": "YulFunctionCall",
																										"src": "4861:48:12"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "4846:6:12",
																									"nodeType": "YulIdentifier",
																									"src": "4846:6:12"
																								},
																								"nativeSrc": "4846:64:12",
																								"nodeType": "YulFunctionCall",
																								"src": "4846:64:12"
																							},
																							"nativeSrc": "4846:64:12",
																							"nodeType": "YulExpressionStatement",
																							"src": "4846:64:12"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "4751:7:12",
																							"nodeType": "YulIdentifier",
																							"src": "4751:7:12"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "4760:6:12",
																							"nodeType": "YulIdentifier",
																							"src": "4760:6:12"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "4748:2:12",
																						"nodeType": "YulIdentifier",
																						"src": "4748:2:12"
																					},
																					"nativeSrc": "4748:19:12",
																					"nodeType": "YulFunctionCall",
																					"src": "4748:19:12"
																				},
																				"nativeSrc": "4745:179:12",
																				"nodeType": "YulIf",
																				"src": "4745:179:12"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "4944:4:12",
																							"nodeType": "YulIdentifier",
																							"src": "4944:4:12"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "newLen",
																											"nativeSrc": "4958:6:12",
																											"nodeType": "YulIdentifier",
																											"src": "4958:6:12"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "4966:1:12",
																											"nodeType": "YulLiteral",
																											"src": "4966:1:12",
																											"type": "",
																											"value": "2"
																										}
																									],
																									"functionName": {
																										"name": "mul",
																										"nativeSrc": "4954:3:12",
																										"nodeType": "YulIdentifier",
																										"src": "4954:3:12"
																									},
																									"nativeSrc": "4954:14:12",
																									"nodeType": "YulFunctionCall",
																									"src": "4954:14:12"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "4970:1:12",
																									"nodeType": "YulLiteral",
																									"src": "4970:1:12",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "4950:3:12",
																								"nodeType": "YulIdentifier",
																								"src": "4950:3:12"
																							},
																							"nativeSrc": "4950:22:12",
																							"nodeType": "YulFunctionCall",
																							"src": "4950:22:12"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "4937:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "4937:6:12"
																					},
																					"nativeSrc": "4937:36:12",
																					"nodeType": "YulFunctionCall",
																					"src": "4937:36:12"
																				},
																				"nativeSrc": "4937:36:12",
																				"nodeType": "YulExpressionStatement",
																				"src": "4937:36:12"
																			}
																		]
																	},
																	"nativeSrc": "4365:618:12",
																	"nodeType": "YulCase",
																	"src": "4365:618:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4370:1:12",
																		"nodeType": "YulLiteral",
																		"src": "4370:1:12",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "5000:222:12",
																		"nodeType": "YulBlock",
																		"src": "5000:222:12",
																		"statements": [
																			{
																				"nativeSrc": "5014:14:12",
																				"nodeType": "YulVariableDeclaration",
																				"src": "5014:14:12",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "5027:1:12",
																					"nodeType": "YulLiteral",
																					"src": "5027:1:12",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "5018:5:12",
																						"nodeType": "YulTypedName",
																						"src": "5018:5:12",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "5051:67:12",
																					"nodeType": "YulBlock",
																					"src": "5051:67:12",
																					"statements": [
																						{
																							"nativeSrc": "5069:35:12",
																							"nodeType": "YulAssignment",
																							"src": "5069:35:12",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "5088:3:12",
																												"nodeType": "YulIdentifier",
																												"src": "5088:3:12"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "5093:9:12",
																												"nodeType": "YulIdentifier",
																												"src": "5093:9:12"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "5084:3:12",
																											"nodeType": "YulIdentifier",
																											"src": "5084:3:12"
																										},
																										"nativeSrc": "5084:19:12",
																										"nodeType": "YulFunctionCall",
																										"src": "5084:19:12"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "5078:5:12",
																									"nodeType": "YulIdentifier",
																									"src": "5078:5:12"
																								},
																								"nativeSrc": "5078:26:12",
																								"nodeType": "YulFunctionCall",
																								"src": "5078:26:12"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "5069:5:12",
																									"nodeType": "YulIdentifier",
																									"src": "5069:5:12"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "5044:6:12",
																					"nodeType": "YulIdentifier",
																					"src": "5044:6:12"
																				},
																				"nativeSrc": "5041:77:12",
																				"nodeType": "YulIf",
																				"src": "5041:77:12"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "5138:4:12",
																							"nodeType": "YulIdentifier",
																							"src": "5138:4:12"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "5197:5:12",
																									"nodeType": "YulIdentifier",
																									"src": "5197:5:12"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "5204:6:12",
																									"nodeType": "YulIdentifier",
																									"src": "5204:6:12"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "5144:52:12",
																								"nodeType": "YulIdentifier",
																								"src": "5144:52:12"
																							},
																							"nativeSrc": "5144:67:12",
																							"nodeType": "YulFunctionCall",
																							"src": "5144:67:12"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "5131:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "5131:6:12"
																					},
																					"nativeSrc": "5131:81:12",
																					"nodeType": "YulFunctionCall",
																					"src": "5131:81:12"
																				},
																				"nativeSrc": "5131:81:12",
																				"nodeType": "YulExpressionStatement",
																				"src": "5131:81:12"
																			}
																		]
																	},
																	"nativeSrc": "4992:230:12",
																	"nodeType": "YulCase",
																	"src": "4992:230:12",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "4345:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "4345:6:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4353:2:12",
																		"nodeType": "YulLiteral",
																		"src": "4353:2:12",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "4342:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "4342:2:12"
																},
																"nativeSrc": "4342:14:12",
																"nodeType": "YulFunctionCall",
																"src": "4342:14:12"
															},
															"nativeSrc": "4335:887:12",
															"nodeType": "YulSwitch",
															"src": "4335:887:12"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "3833:1395:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "3914:4:12",
														"nodeType": "YulTypedName",
														"src": "3914:4:12",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "3920:3:12",
														"nodeType": "YulTypedName",
														"src": "3920:3:12",
														"type": ""
													}
												],
												"src": "3833:1395:12"
											},
											{
												"body": {
													"nativeSrc": "5279:81:12",
													"nodeType": "YulBlock",
													"src": "5279:81:12",
													"statements": [
														{
															"nativeSrc": "5289:65:12",
															"nodeType": "YulAssignment",
															"src": "5289:65:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5304:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "5304:5:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5311:42:12",
																		"nodeType": "YulLiteral",
																		"src": "5311:42:12",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "5300:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "5300:3:12"
																},
																"nativeSrc": "5300:54:12",
																"nodeType": "YulFunctionCall",
																"src": "5300:54:12"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "5289:7:12",
																	"nodeType": "YulIdentifier",
																	"src": "5289:7:12"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "5234:126:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5261:5:12",
														"nodeType": "YulTypedName",
														"src": "5261:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "5271:7:12",
														"nodeType": "YulTypedName",
														"src": "5271:7:12",
														"type": ""
													}
												],
												"src": "5234:126:12"
											},
											{
												"body": {
													"nativeSrc": "5411:51:12",
													"nodeType": "YulBlock",
													"src": "5411:51:12",
													"statements": [
														{
															"nativeSrc": "5421:35:12",
															"nodeType": "YulAssignment",
															"src": "5421:35:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5450:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "5450:5:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "5432:17:12",
																	"nodeType": "YulIdentifier",
																	"src": "5432:17:12"
																},
																"nativeSrc": "5432:24:12",
																"nodeType": "YulFunctionCall",
																"src": "5432:24:12"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "5421:7:12",
																	"nodeType": "YulIdentifier",
																	"src": "5421:7:12"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "5366:96:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5393:5:12",
														"nodeType": "YulTypedName",
														"src": "5393:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "5403:7:12",
														"nodeType": "YulTypedName",
														"src": "5403:7:12",
														"type": ""
													}
												],
												"src": "5366:96:12"
											},
											{
												"body": {
													"nativeSrc": "5533:53:12",
													"nodeType": "YulBlock",
													"src": "5533:53:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5550:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "5550:3:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5573:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "5573:5:12"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "5555:17:12",
																			"nodeType": "YulIdentifier",
																			"src": "5555:17:12"
																		},
																		"nativeSrc": "5555:24:12",
																		"nodeType": "YulFunctionCall",
																		"src": "5555:24:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5543:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "5543:6:12"
																},
																"nativeSrc": "5543:37:12",
																"nodeType": "YulFunctionCall",
																"src": "5543:37:12"
															},
															"nativeSrc": "5543:37:12",
															"nodeType": "YulExpressionStatement",
															"src": "5543:37:12"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "5468:118:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5521:5:12",
														"nodeType": "YulTypedName",
														"src": "5521:5:12",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "5528:3:12",
														"nodeType": "YulTypedName",
														"src": "5528:3:12",
														"type": ""
													}
												],
												"src": "5468:118:12"
											},
											{
												"body": {
													"nativeSrc": "5690:124:12",
													"nodeType": "YulBlock",
													"src": "5690:124:12",
													"statements": [
														{
															"nativeSrc": "5700:26:12",
															"nodeType": "YulAssignment",
															"src": "5700:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5712:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "5712:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5723:2:12",
																		"nodeType": "YulLiteral",
																		"src": "5723:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5708:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "5708:3:12"
																},
																"nativeSrc": "5708:18:12",
																"nodeType": "YulFunctionCall",
																"src": "5708:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5700:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "5700:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "5780:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "5780:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5793:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "5793:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5804:1:12",
																				"nodeType": "YulLiteral",
																				"src": "5804:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5789:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "5789:3:12"
																		},
																		"nativeSrc": "5789:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "5789:17:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "5736:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "5736:43:12"
																},
																"nativeSrc": "5736:71:12",
																"nodeType": "YulFunctionCall",
																"src": "5736:71:12"
															},
															"nativeSrc": "5736:71:12",
															"nodeType": "YulExpressionStatement",
															"src": "5736:71:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "5592:222:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5662:9:12",
														"nodeType": "YulTypedName",
														"src": "5662:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5674:6:12",
														"nodeType": "YulTypedName",
														"src": "5674:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5685:4:12",
														"nodeType": "YulTypedName",
														"src": "5685:4:12",
														"type": ""
													}
												],
												"src": "5592:222:12"
											}
										]
									},
									"contents": "{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n",
									"id": 12,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b50336040518060400160405280600d81526020017f50726f70657274795368617265000000000000000000000000000000000000008152506040518060400160405280600581526020017f5348415245000000000000000000000000000000000000000000000000000000815250816003908161008c919061043b565b50806004908161009c919061043b565b5050505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361010f575f6040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016101069190610549565b60405180910390fd5b61011e8161013e60201b60201c565b505f600560146101000a81548160ff021916908315150217905550610562565b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508160055f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f81519050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f600282049050600182168061027c57607f821691505b60208210810361028f5761028e610238565b5b50919050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f600883026102f17fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff826102b6565b6102fb86836102b6565b95508019841693508086168417925050509392505050565b5f819050919050565b5f819050919050565b5f61033f61033a61033584610313565b61031c565b610313565b9050919050565b5f819050919050565b61035883610325565b61036c61036482610346565b8484546102c2565b825550505050565b5f90565b610380610374565b61038b81848461034f565b505050565b5b818110156103ae576103a35f82610378565b600181019050610391565b5050565b601f8211156103f3576103c481610295565b6103cd846102a7565b810160208510156103dc578190505b6103f06103e8856102a7565b830182610390565b50505b505050565b5f82821c905092915050565b5f6104135f19846008026103f8565b1980831691505092915050565b5f61042b8383610404565b9150826002028217905092915050565b61044482610201565b67ffffffffffffffff81111561045d5761045c61020b565b5b6104678254610265565b6104728282856103b2565b5f60209050601f8311600181146104a3575f8415610491578287015190505b61049b8582610420565b865550610502565b601f1984166104b186610295565b5f5b828110156104d8578489015182556001820191506020850194506020810190506104b3565b868310156104f557848901516104f1601f891682610404565b8355505b6001600288020188555050505b505050505050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6105338261050a565b9050919050565b61054381610529565b82525050565b5f60208201905061055c5f83018461053a565b92915050565b6125738061056f5f395ff3fe608060405234801561000f575f80fd5b50600436106101d8575f3560e01c80638456cb5911610102578063b543cf38116100a0578063dd8aa6f61161006f578063dd8aa6f614610590578063e34fc531146105ac578063f2fde38b146105dc578063ff03e8c2146105f8576101d8565b8063b543cf38146104e3578063b7b551ed146104ff578063dcd9d12d14610530578063dd62ed3e14610560576101d8565b80638da5cb5b116100dc5780638da5cb5b1461044657806395d89b4114610464578063a60ed37414610482578063a9059cbb146104b3576101d8565b80638456cb59146103f057806384b9a6e6146103fa57806385fff85814610416576101d8565b806351111b721161017a57806370a082311161014957806370a0823114610356578063715018a61461038657806375c0b9fe146103905780637f2af083146103c0576101d8565b806351111b72146102d05780635813a683146102ec5780635c975abb146103085780635dfe772114610326576101d8565b806323b872dd116101b657806323b872dd14610248578063313ce567146102785780633f4ba83a146102965780634885cf0a146102a0576101d8565b806306fdde03146101dc578063095ea7b3146101fa57806318160ddd1461022a575b5f80fd5b6101e4610628565b6040516101f19190611abc565b60405180910390f35b610214600480360381019061020f9190611b7a565b6106b8565b6040516102219190611bd2565b60405180910390f35b6102326106da565b60405161023f9190611bfa565b60405180910390f35b610262600480360381019061025d9190611c13565b6106e3565b60405161026f9190611bd2565b60405180910390f35b610280610711565b60405161028d9190611c7e565b60405180910390f35b61029e610719565b005b6102ba60048036038101906102b59190611c97565b61072b565b6040516102c79190611bfa565b60405180910390f35b6102ea60048036038101906102e59190611e02565b610740565b005b61030660048036038101906103019190611e6e565b6107c1565b005b61031061088a565b60405161031d9190611bd2565b60405180910390f35b610340600480360381019061033b9190611c97565b6108a0565b60405161034d9190611bd2565b60405180910390f35b610370600480360381019061036b9190611eac565b6108aa565b60405161037d9190611bfa565b60405180910390f35b61038e6108ef565b005b6103aa60048036038101906103a59190611e6e565b610902565b6040516103b79190611bfa565b60405180910390f35b6103da60048036038101906103d59190611c97565b61095b565b6040516103e79190611ee6565b60405180910390f35b6103f861098b565b005b610414600480360381019061040f9190611eff565b61099d565b005b610430600480360381019061042b9190611c97565b610bd0565b60405161043d9190611bfa565b60405180910390f35b61044e610bec565b60405161045b9190611ee6565b60405180910390f35b61046c610c14565b6040516104799190611abc565b60405180910390f35b61049c60048036038101906104979190611c97565b610ca4565b6040516104aa929190611f4f565b60405180910390f35b6104cd60048036038101906104c89190611b7a565b610cc4565b6040516104da9190611bd2565b60405180910390f35b6104fd60048036038101906104f89190611eff565b610ce6565b005b61051960048036038101906105149190611c97565b610e81565b604051610527929190611f4f565b60405180910390f35b61054a60048036038101906105459190611c97565b610ea1565b6040516105579190611bfa565b60405180910390f35b61057a60048036038101906105759190611f76565b610ebe565b6040516105879190611bfa565b60405180910390f35b6105aa60048036038101906105a59190611eff565b610f40565b005b6105c660048036038101906105c19190611c97565b610fd2565b6040516105d39190611ee6565b60405180910390f35b6105f660048036038101906105f19190611eac565b61100b565b005b610612600480360381019061060d9190611c97565b61108f565b60405161061f91906120b8565b60405180910390f35b60606003805461063790612105565b80601f016020809104026020016040519081016040528092919081815260200182805461066390612105565b80156106ae5780601f10610685576101008083540402835291602001916106ae565b820191905f5260205f20905b81548152906001019060200180831161069157829003601f168201915b5050505050905090565b5f806106c2611123565b90506106cf81858561112a565b600191505092915050565b5f600254905090565b5f806106ed611123565b90506106fa85828561113c565b6107058585856111ce565b60019150509392505050565b5f6012905090565b6107216112be565b610729611345565b565b6007602052805f5260405f205f915090505481565b6107486112be565b60405180606001604052808481526020018381526020018281525060065f8581526020019081526020015f205f820151815f015560208201518160010190805190602001906107989291906119c7565b50604082015181600201559050508060075f8581526020019081526020015f2081905550505050565b6107c96112be565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610837576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161082e9061217f565b60405180910390fd5b8060095f8481526020019081526020015f205f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050565b5f600560149054906101000a900460ff16905090565b5f60019050919050565b5f805f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b6108f76112be565b6109005f6113a7565b565b5f60085f8481526020019081526020015f206002015f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b6009602052805f5260405f205f915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6109936112be565b61099b61146a565b565b6109a56114cd565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610a13576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a0a906121e7565b60405180910390fd5b8060085f8581526020019081526020015f206002015f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20541015610aa5576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a9c9061224f565b60405180910390fd5b5f60085f8581526020019081526020015f20905081816002015f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f828254610b07919061229a565b9250508190555081816002015f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f828254610b5c91906122cd565b925050819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f1ba44e8b79687fed555749cae6dcccf9bc5df37a2739fbc73062f07b534cf03e8685604051610bc2929190611f4f565b60405180910390a350505050565b5f60085f8381526020019081526020015f205f01549050919050565b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b606060048054610c2390612105565b80601f0160208091040260200160405190810160405280929190818152602001828054610c4f90612105565b8015610c9a5780601f10610c7157610100808354040283529160200191610c9a565b820191905f5260205f20905b815481529060010190602001808311610c7d57829003601f168201915b5050505050905090565b6006602052805f5260405f205f91509050805f0154908060020154905082565b5f80610cce611123565b9050610cdb8185856111ce565b600191505092915050565b610cee6112be565b610cf66114cd565b5f8111610d38576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d2f9061234a565b60405180910390fd5b8060085f8581526020019081526020015f20600101541015610d8f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d86906123b2565b60405180910390fd5b5f60085f8581526020019081526020015f20905081815f015f828254610db591906122cd565b9250508190555081816001015f828254610dcf919061229a565b9250508190555081816002015f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f828254610e2491906122cd565b925050819055508273ffffffffffffffffffffffffffffffffffffffff167f6b3332210c2263e1008f810d148fc1c61a002c8f5dfcf18fe06858064bc49e698584604051610e73929190611f4f565b60405180910390a250505050565b6008602052805f5260405f205f91509050805f0154908060010154905082565b5f60085f8381526020019081526020015f20600101549050919050565b5f60015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b610f486112be565b8060075f8581526020019081526020015f20541015610f9c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f939061241a565b60405180910390fd5b610fa68282611517565b8060075f8581526020019081526020015f205f828254610fc6919061229a565b92505081905550505050565b5f60095f8381526020019081526020015f205f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b6110136112be565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603611083575f6040517f1e4fbdf700000000000000000000000000000000000000000000000000000000815260040161107a9190611ee6565b60405180910390fd5b61108c816113a7565b50565b611097611a12565b60065f8381526020019081526020015f206040518060600160405290815f82015481526020016001820180548060200260200160405190810160405280929190818152602001828054801561110957602002820191905f5260205f20905b8154815260200190600101908083116110f5575b505050505081526020016002820154815250509050919050565b5f33905090565b6111378383836001611596565b505050565b5f6111478484610ebe565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146111c857818110156111b9578281836040517ffb8f41b20000000000000000000000000000000000000000000000000000000081526004016111b093929190612438565b60405180910390fd5b6111c784848484035f611596565b5b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361123e575f6040517f96c6fd1e0000000000000000000000000000000000000000000000000000000081526004016112359190611ee6565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036112ae575f6040517fec442f050000000000000000000000000000000000000000000000000000000081526004016112a59190611ee6565b60405180910390fd5b6112b9838383611765565b505050565b6112c6611123565b73ffffffffffffffffffffffffffffffffffffffff166112e4610bec565b73ffffffffffffffffffffffffffffffffffffffff161461134357611307611123565b6040517f118cdaa700000000000000000000000000000000000000000000000000000000815260040161133a9190611ee6565b60405180910390fd5b565b61134d61197e565b5f600560146101000a81548160ff0219169083151502179055507f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa611390611123565b60405161139d9190611ee6565b60405180910390a1565b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508160055f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6114726114cd565b6001600560146101000a81548160ff0219169083151502179055507f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2586114b6611123565b6040516114c39190611ee6565b60405180910390a1565b6114d561088a565b15611515576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161150c906124b7565b60405180910390fd5b565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611587575f6040517fec442f0500000000000000000000000000000000000000000000000000000000815260040161157e9190611ee6565b60405180910390fd5b6115925f8383611765565b5050565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603611606575f6040517fe602df050000000000000000000000000000000000000000000000000000000081526004016115fd9190611ee6565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603611676575f6040517f94280d6200000000000000000000000000000000000000000000000000000000815260040161166d9190611ee6565b60405180910390fd5b8160015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550801561175f578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040516117569190611bfa565b60405180910390a35b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036117b5578060025f8282546117a991906122cd565b92505081905550611883565b5f805f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205490508181101561183e578381836040517fe450d38c00000000000000000000000000000000000000000000000000000000815260040161183593929190612438565b60405180910390fd5b8181035f808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036118ca578060025f8282540392505081905550611914565b805f808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516119719190611bfa565b60405180910390a3505050565b61198661088a565b6119c5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016119bc9061251f565b60405180910390fd5b565b828054828255905f5260205f20908101928215611a01579160200282015b82811115611a005782518255916020019190600101906119e5565b5b509050611a0e9190611a31565b5090565b60405180606001604052805f8152602001606081526020015f81525090565b5b80821115611a48575f815f905550600101611a32565b5090565b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f601f19601f8301169050919050565b5f611a8e82611a4c565b611a988185611a56565b9350611aa8818560208601611a66565b611ab181611a74565b840191505092915050565b5f6020820190508181035f830152611ad48184611a84565b905092915050565b5f604051905090565b5f80fd5b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f611b1682611aed565b9050919050565b611b2681611b0c565b8114611b30575f80fd5b50565b5f81359050611b4181611b1d565b92915050565b5f819050919050565b611b5981611b47565b8114611b63575f80fd5b50565b5f81359050611b7481611b50565b92915050565b5f8060408385031215611b9057611b8f611ae5565b5b5f611b9d85828601611b33565b9250506020611bae85828601611b66565b9150509250929050565b5f8115159050919050565b611bcc81611bb8565b82525050565b5f602082019050611be55f830184611bc3565b92915050565b611bf481611b47565b82525050565b5f602082019050611c0d5f830184611beb565b92915050565b5f805f60608486031215611c2a57611c29611ae5565b5b5f611c3786828701611b33565b9350506020611c4886828701611b33565b9250506040611c5986828701611b66565b9150509250925092565b5f60ff82169050919050565b611c7881611c63565b82525050565b5f602082019050611c915f830184611c6f565b92915050565b5f60208284031215611cac57611cab611ae5565b5b5f611cb984828501611b66565b91505092915050565b5f80fd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b611cfc82611a74565b810181811067ffffffffffffffff82111715611d1b57611d1a611cc6565b5b80604052505050565b5f611d2d611adc565b9050611d398282611cf3565b919050565b5f67ffffffffffffffff821115611d5857611d57611cc6565b5b602082029050602081019050919050565b5f80fd5b5f611d7f611d7a84611d3e565b611d24565b90508083825260208201905060208402830185811115611da257611da1611d69565b5b835b81811015611dcb5780611db78882611b66565b845260208401935050602081019050611da4565b5050509392505050565b5f82601f830112611de957611de8611cc2565b5b8135611df9848260208601611d6d565b91505092915050565b5f805f60608486031215611e1957611e18611ae5565b5b5f611e2686828701611b66565b935050602084013567ffffffffffffffff811115611e4757611e46611ae9565b5b611e5386828701611dd5565b9250506040611e6486828701611b66565b9150509250925092565b5f8060408385031215611e8457611e83611ae5565b5b5f611e9185828601611b66565b9250506020611ea285828601611b33565b9150509250929050565b5f60208284031215611ec157611ec0611ae5565b5b5f611ece84828501611b33565b91505092915050565b611ee081611b0c565b82525050565b5f602082019050611ef95f830184611ed7565b92915050565b5f805f60608486031215611f1657611f15611ae5565b5b5f611f2386828701611b66565b9350506020611f3486828701611b33565b9250506040611f4586828701611b66565b9150509250925092565b5f604082019050611f625f830185611beb565b611f6f6020830184611beb565b9392505050565b5f8060408385031215611f8c57611f8b611ae5565b5b5f611f9985828601611b33565b9250506020611faa85828601611b33565b9150509250929050565b611fbd81611b47565b82525050565b5f81519050919050565b5f82825260208201905092915050565b5f819050602082019050919050565b5f611ff78383611fb4565b60208301905092915050565b5f602082019050919050565b5f61201982611fc3565b6120238185611fcd565b935061202e83611fdd565b805f5b8381101561205e5781516120458882611fec565b975061205083612003565b925050600181019050612031565b5085935050505092915050565b5f606083015f8301516120805f860182611fb4565b5060208301518482036020860152612098828261200f565b91505060408301516120ad6040860182611fb4565b508091505092915050565b5f6020820190508181035f8301526120d0818461206b565b905092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f600282049050600182168061211c57607f821691505b60208210810361212f5761212e6120d8565b5b50919050565b7f496e76616c6964206f776e6572206164647265737300000000000000000000005f82015250565b5f612169601583611a56565b915061217482612135565b602082019050919050565b5f6020820190508181035f8301526121968161215d565b9050919050565b7f496e76616c696420726563697069656e742061646472657373000000000000005f82015250565b5f6121d1601983611a56565b91506121dc8261219d565b602082019050919050565b5f6020820190508181035f8301526121fe816121c5565b9050919050565b7f4e6f7420656e6f7567682073686172657320746f207472616e736665720000005f82015250565b5f612239601d83611a56565b915061224482612205565b602082019050919050565b5f6020820190508181035f8301526122668161222d565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f6122a482611b47565b91506122af83611b47565b92508282039050818111156122c7576122c661226d565b5b92915050565b5f6122d782611b47565b91506122e283611b47565b92508282019050808211156122fa576122f961226d565b5b92915050565b7f536861726573206d7573742062652067726561746572207468616e20300000005f82015250565b5f612334601d83611a56565b915061233f82612300565b602082019050919050565b5f6020820190508181035f83015261236181612328565b9050919050565b7f4e6f7420656e6f7567682073686172657320617661696c61626c6500000000005f82015250565b5f61239c601b83611a56565b91506123a782612368565b602082019050919050565b5f6020820190508181035f8301526123c981612390565b9050919050565b7f496e73756666696369656e742073686172657320617661696c61626c650000005f82015250565b5f612404601d83611a56565b915061240f826123d0565b602082019050919050565b5f6020820190508181035f830152612431816123f8565b9050919050565b5f60608201905061244b5f830186611ed7565b6124586020830185611beb565b6124656040830184611beb565b949350505050565b7f5061757361626c653a20706175736564000000000000000000000000000000005f82015250565b5f6124a1601083611a56565b91506124ac8261246d565b602082019050919050565b5f6020820190508181035f8301526124ce81612495565b9050919050565b7f5061757361626c653a206e6f74207061757365640000000000000000000000005f82015250565b5f612509601483611a56565b9150612514826124d5565b602082019050919050565b5f6020820190508181035f830152612536816124fd565b905091905056fea26469706673582212208a3288be81ac17034bbe1af1db02ba6a69e546275e1d6032a6813f487d83739364736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP CALLER PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xD DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x50726F7065727479536861726500000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x5 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5348415245000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 PUSH1 0x3 SWAP1 DUP2 PUSH2 0x8C SWAP2 SWAP1 PUSH2 0x43B JUMP JUMPDEST POP DUP1 PUSH1 0x4 SWAP1 DUP2 PUSH2 0x9C SWAP2 SWAP1 PUSH2 0x43B JUMP JUMPDEST POP POP POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x10F JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x106 SWAP2 SWAP1 PUSH2 0x549 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x11E DUP2 PUSH2 0x13E PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH0 PUSH1 0x5 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x562 JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x5 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x27C JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x28F JUMPI PUSH2 0x28E PUSH2 0x238 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH2 0x2F1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x2B6 JUMP JUMPDEST PUSH2 0x2FB DUP7 DUP4 PUSH2 0x2B6 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x33F PUSH2 0x33A PUSH2 0x335 DUP5 PUSH2 0x313 JUMP JUMPDEST PUSH2 0x31C JUMP JUMPDEST PUSH2 0x313 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x358 DUP4 PUSH2 0x325 JUMP JUMPDEST PUSH2 0x36C PUSH2 0x364 DUP3 PUSH2 0x346 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x2C2 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 SWAP1 JUMP JUMPDEST PUSH2 0x380 PUSH2 0x374 JUMP JUMPDEST PUSH2 0x38B DUP2 DUP5 DUP5 PUSH2 0x34F JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x3AE JUMPI PUSH2 0x3A3 PUSH0 DUP3 PUSH2 0x378 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x391 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x3F3 JUMPI PUSH2 0x3C4 DUP2 PUSH2 0x295 JUMP JUMPDEST PUSH2 0x3CD DUP5 PUSH2 0x2A7 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x3DC JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x3F0 PUSH2 0x3E8 DUP6 PUSH2 0x2A7 JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x390 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x413 PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x3F8 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x42B DUP4 DUP4 PUSH2 0x404 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x444 DUP3 PUSH2 0x201 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x45D JUMPI PUSH2 0x45C PUSH2 0x20B JUMP JUMPDEST JUMPDEST PUSH2 0x467 DUP3 SLOAD PUSH2 0x265 JUMP JUMPDEST PUSH2 0x472 DUP3 DUP3 DUP6 PUSH2 0x3B2 JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x4A3 JUMPI PUSH0 DUP5 ISZERO PUSH2 0x491 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x49B DUP6 DUP3 PUSH2 0x420 JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x502 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x4B1 DUP7 PUSH2 0x295 JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x4D8 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x4B3 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x4F5 JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x4F1 PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x404 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x533 DUP3 PUSH2 0x50A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x543 DUP2 PUSH2 0x529 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x55C PUSH0 DUP4 ADD DUP5 PUSH2 0x53A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2573 DUP1 PUSH2 0x56F PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1D8 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8456CB59 GT PUSH2 0x102 JUMPI DUP1 PUSH4 0xB543CF38 GT PUSH2 0xA0 JUMPI DUP1 PUSH4 0xDD8AA6F6 GT PUSH2 0x6F JUMPI DUP1 PUSH4 0xDD8AA6F6 EQ PUSH2 0x590 JUMPI DUP1 PUSH4 0xE34FC531 EQ PUSH2 0x5AC JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x5DC JUMPI DUP1 PUSH4 0xFF03E8C2 EQ PUSH2 0x5F8 JUMPI PUSH2 0x1D8 JUMP JUMPDEST DUP1 PUSH4 0xB543CF38 EQ PUSH2 0x4E3 JUMPI DUP1 PUSH4 0xB7B551ED EQ PUSH2 0x4FF JUMPI DUP1 PUSH4 0xDCD9D12D EQ PUSH2 0x530 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x560 JUMPI PUSH2 0x1D8 JUMP JUMPDEST DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0xDC JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x446 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x464 JUMPI DUP1 PUSH4 0xA60ED374 EQ PUSH2 0x482 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x4B3 JUMPI PUSH2 0x1D8 JUMP JUMPDEST DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x3F0 JUMPI DUP1 PUSH4 0x84B9A6E6 EQ PUSH2 0x3FA JUMPI DUP1 PUSH4 0x85FFF858 EQ PUSH2 0x416 JUMPI PUSH2 0x1D8 JUMP JUMPDEST DUP1 PUSH4 0x51111B72 GT PUSH2 0x17A JUMPI DUP1 PUSH4 0x70A08231 GT PUSH2 0x149 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x356 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x386 JUMPI DUP1 PUSH4 0x75C0B9FE EQ PUSH2 0x390 JUMPI DUP1 PUSH4 0x7F2AF083 EQ PUSH2 0x3C0 JUMPI PUSH2 0x1D8 JUMP JUMPDEST DUP1 PUSH4 0x51111B72 EQ PUSH2 0x2D0 JUMPI DUP1 PUSH4 0x5813A683 EQ PUSH2 0x2EC JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x308 JUMPI DUP1 PUSH4 0x5DFE7721 EQ PUSH2 0x326 JUMPI PUSH2 0x1D8 JUMP JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0x1B6 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x248 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x278 JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x296 JUMPI DUP1 PUSH4 0x4885CF0A EQ PUSH2 0x2A0 JUMPI PUSH2 0x1D8 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x1DC JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x1FA JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x22A JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x1E4 PUSH2 0x628 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F1 SWAP2 SWAP1 PUSH2 0x1ABC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x214 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x20F SWAP2 SWAP1 PUSH2 0x1B7A JUMP JUMPDEST PUSH2 0x6B8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x221 SWAP2 SWAP1 PUSH2 0x1BD2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x232 PUSH2 0x6DA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x23F SWAP2 SWAP1 PUSH2 0x1BFA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x262 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x25D SWAP2 SWAP1 PUSH2 0x1C13 JUMP JUMPDEST PUSH2 0x6E3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x26F SWAP2 SWAP1 PUSH2 0x1BD2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x280 PUSH2 0x711 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x28D SWAP2 SWAP1 PUSH2 0x1C7E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x29E PUSH2 0x719 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2BA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2B5 SWAP2 SWAP1 PUSH2 0x1C97 JUMP JUMPDEST PUSH2 0x72B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2C7 SWAP2 SWAP1 PUSH2 0x1BFA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2EA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2E5 SWAP2 SWAP1 PUSH2 0x1E02 JUMP JUMPDEST PUSH2 0x740 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x306 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x301 SWAP2 SWAP1 PUSH2 0x1E6E JUMP JUMPDEST PUSH2 0x7C1 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x310 PUSH2 0x88A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x31D SWAP2 SWAP1 PUSH2 0x1BD2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x340 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x33B SWAP2 SWAP1 PUSH2 0x1C97 JUMP JUMPDEST PUSH2 0x8A0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x34D SWAP2 SWAP1 PUSH2 0x1BD2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x370 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x36B SWAP2 SWAP1 PUSH2 0x1EAC JUMP JUMPDEST PUSH2 0x8AA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x37D SWAP2 SWAP1 PUSH2 0x1BFA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x38E PUSH2 0x8EF JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3AA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3A5 SWAP2 SWAP1 PUSH2 0x1E6E JUMP JUMPDEST PUSH2 0x902 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3B7 SWAP2 SWAP1 PUSH2 0x1BFA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3DA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3D5 SWAP2 SWAP1 PUSH2 0x1C97 JUMP JUMPDEST PUSH2 0x95B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3E7 SWAP2 SWAP1 PUSH2 0x1EE6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3F8 PUSH2 0x98B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x414 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x40F SWAP2 SWAP1 PUSH2 0x1EFF JUMP JUMPDEST PUSH2 0x99D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x430 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x42B SWAP2 SWAP1 PUSH2 0x1C97 JUMP JUMPDEST PUSH2 0xBD0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x43D SWAP2 SWAP1 PUSH2 0x1BFA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x44E PUSH2 0xBEC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x45B SWAP2 SWAP1 PUSH2 0x1EE6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x46C PUSH2 0xC14 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x479 SWAP2 SWAP1 PUSH2 0x1ABC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x49C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x497 SWAP2 SWAP1 PUSH2 0x1C97 JUMP JUMPDEST PUSH2 0xCA4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4AA SWAP3 SWAP2 SWAP1 PUSH2 0x1F4F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4CD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4C8 SWAP2 SWAP1 PUSH2 0x1B7A JUMP JUMPDEST PUSH2 0xCC4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4DA SWAP2 SWAP1 PUSH2 0x1BD2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4FD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4F8 SWAP2 SWAP1 PUSH2 0x1EFF JUMP JUMPDEST PUSH2 0xCE6 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x519 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x514 SWAP2 SWAP1 PUSH2 0x1C97 JUMP JUMPDEST PUSH2 0xE81 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x527 SWAP3 SWAP2 SWAP1 PUSH2 0x1F4F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x54A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x545 SWAP2 SWAP1 PUSH2 0x1C97 JUMP JUMPDEST PUSH2 0xEA1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x557 SWAP2 SWAP1 PUSH2 0x1BFA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x57A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x575 SWAP2 SWAP1 PUSH2 0x1F76 JUMP JUMPDEST PUSH2 0xEBE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x587 SWAP2 SWAP1 PUSH2 0x1BFA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x5AA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5A5 SWAP2 SWAP1 PUSH2 0x1EFF JUMP JUMPDEST PUSH2 0xF40 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x5C6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5C1 SWAP2 SWAP1 PUSH2 0x1C97 JUMP JUMPDEST PUSH2 0xFD2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5D3 SWAP2 SWAP1 PUSH2 0x1EE6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x5F6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5F1 SWAP2 SWAP1 PUSH2 0x1EAC JUMP JUMPDEST PUSH2 0x100B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x612 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x60D SWAP2 SWAP1 PUSH2 0x1C97 JUMP JUMPDEST PUSH2 0x108F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x61F SWAP2 SWAP1 PUSH2 0x20B8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x637 SWAP1 PUSH2 0x2105 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x663 SWAP1 PUSH2 0x2105 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x6AE JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x685 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x6AE JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x691 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x6C2 PUSH2 0x1123 JUMP JUMPDEST SWAP1 POP PUSH2 0x6CF DUP2 DUP6 DUP6 PUSH2 0x112A JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x6ED PUSH2 0x1123 JUMP JUMPDEST SWAP1 POP PUSH2 0x6FA DUP6 DUP3 DUP6 PUSH2 0x113C JUMP JUMPDEST PUSH2 0x705 DUP6 DUP6 DUP6 PUSH2 0x11CE JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x721 PUSH2 0x12BE JUMP JUMPDEST PUSH2 0x729 PUSH2 0x1345 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x7 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH2 0x748 PUSH2 0x12BE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE POP PUSH1 0x6 PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 ADD MLOAD DUP2 PUSH0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH2 0x798 SWAP3 SWAP2 SWAP1 PUSH2 0x19C7 JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE SWAP1 POP POP DUP1 PUSH1 0x7 PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP POP POP JUMP JUMPDEST PUSH2 0x7C9 PUSH2 0x12BE JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x837 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x82E SWAP1 PUSH2 0x217F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x9 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x1 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x8F7 PUSH2 0x12BE JUMP JUMPDEST PUSH2 0x900 PUSH0 PUSH2 0x13A7 JUMP JUMPDEST JUMP JUMPDEST PUSH0 PUSH1 0x8 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x2 ADD PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x9 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x993 PUSH2 0x12BE JUMP JUMPDEST PUSH2 0x99B PUSH2 0x146A JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x9A5 PUSH2 0x14CD JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xA13 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA0A SWAP1 PUSH2 0x21E7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x8 PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x2 ADD PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD LT ISZERO PUSH2 0xAA5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA9C SWAP1 PUSH2 0x224F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x8 PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SWAP1 POP DUP2 DUP2 PUSH1 0x2 ADD PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xB07 SWAP2 SWAP1 PUSH2 0x229A JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 DUP2 PUSH1 0x2 ADD PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xB5C SWAP2 SWAP1 PUSH2 0x22CD JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x1BA44E8B79687FED555749CAE6DCCCF9BC5DF37A2739FBC73062F07B534CF03E DUP7 DUP6 PUSH1 0x40 MLOAD PUSH2 0xBC2 SWAP3 SWAP2 SWAP1 PUSH2 0x1F4F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0xC23 SWAP1 PUSH2 0x2105 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xC4F SWAP1 PUSH2 0x2105 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xC9A JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xC71 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xC9A JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xC7D JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x6 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP DUP1 PUSH0 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 POP DUP3 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0xCCE PUSH2 0x1123 JUMP JUMPDEST SWAP1 POP PUSH2 0xCDB DUP2 DUP6 DUP6 PUSH2 0x11CE JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xCEE PUSH2 0x12BE JUMP JUMPDEST PUSH2 0xCF6 PUSH2 0x14CD JUMP JUMPDEST PUSH0 DUP2 GT PUSH2 0xD38 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD2F SWAP1 PUSH2 0x234A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x8 PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x1 ADD SLOAD LT ISZERO PUSH2 0xD8F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD86 SWAP1 PUSH2 0x23B2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x8 PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SWAP1 POP DUP2 DUP2 PUSH0 ADD PUSH0 DUP3 DUP3 SLOAD PUSH2 0xDB5 SWAP2 SWAP1 PUSH2 0x22CD JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 DUP2 PUSH1 0x1 ADD PUSH0 DUP3 DUP3 SLOAD PUSH2 0xDCF SWAP2 SWAP1 PUSH2 0x229A JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 DUP2 PUSH1 0x2 ADD PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xE24 SWAP2 SWAP1 PUSH2 0x22CD JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x6B3332210C2263E1008F810D148FC1C61A002C8F5DFCF18FE06858064BC49E69 DUP6 DUP5 PUSH1 0x40 MLOAD PUSH2 0xE73 SWAP3 SWAP2 SWAP1 PUSH2 0x1F4F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP JUMP JUMPDEST PUSH1 0x8 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP DUP1 PUSH0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 POP DUP3 JUMP JUMPDEST PUSH0 PUSH1 0x8 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xF48 PUSH2 0x12BE JUMP JUMPDEST DUP1 PUSH1 0x7 PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD LT ISZERO PUSH2 0xF9C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF93 SWAP1 PUSH2 0x241A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xFA6 DUP3 DUP3 PUSH2 0x1517 JUMP JUMPDEST DUP1 PUSH1 0x7 PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xFC6 SWAP2 SWAP1 PUSH2 0x229A JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x9 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1013 PUSH2 0x12BE JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1083 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x107A SWAP2 SWAP1 PUSH2 0x1EE6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x108C DUP2 PUSH2 0x13A7 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x1097 PUSH2 0x1A12 JUMP JUMPDEST PUSH1 0x6 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0x1109 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH2 0x10F5 JUMPI JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD SLOAD DUP2 MSTORE POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x1137 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x1596 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1147 DUP5 DUP5 PUSH2 0xEBE JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0x11C8 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x11B9 JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11B0 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2438 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x11C7 DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0x1596 JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x123E JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1235 SWAP2 SWAP1 PUSH2 0x1EE6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x12AE JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x12A5 SWAP2 SWAP1 PUSH2 0x1EE6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x12B9 DUP4 DUP4 DUP4 PUSH2 0x1765 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x12C6 PUSH2 0x1123 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x12E4 PUSH2 0xBEC JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1343 JUMPI PUSH2 0x1307 PUSH2 0x1123 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x133A SWAP2 SWAP1 PUSH2 0x1EE6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH2 0x134D PUSH2 0x197E JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA PUSH2 0x1390 PUSH2 0x1123 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x139D SWAP2 SWAP1 PUSH2 0x1EE6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x5 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x1472 PUSH2 0x14CD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x5 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 PUSH2 0x14B6 PUSH2 0x1123 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x14C3 SWAP2 SWAP1 PUSH2 0x1EE6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH2 0x14D5 PUSH2 0x88A JUMP JUMPDEST ISZERO PUSH2 0x1515 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x150C SWAP1 PUSH2 0x24B7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1587 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x157E SWAP2 SWAP1 PUSH2 0x1EE6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1592 PUSH0 DUP4 DUP4 PUSH2 0x1765 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1606 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x15FD SWAP2 SWAP1 PUSH2 0x1EE6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1676 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x166D SWAP2 SWAP1 PUSH2 0x1EE6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0x175F JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x1756 SWAP2 SWAP1 PUSH2 0x1BFA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x17B5 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x17A9 SWAP2 SWAP1 PUSH2 0x22CD JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x1883 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x183E JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1835 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2438 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x18CA JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x1914 JUMP JUMPDEST DUP1 PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x1971 SWAP2 SWAP1 PUSH2 0x1BFA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH2 0x1986 PUSH2 0x88A JUMP JUMPDEST PUSH2 0x19C5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x19BC SWAP1 PUSH2 0x251F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST DUP3 DUP1 SLOAD DUP3 DUP3 SSTORE SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 DUP2 ADD SWAP3 DUP3 ISZERO PUSH2 0x1A01 JUMPI SWAP2 PUSH1 0x20 MUL DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x1A00 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x19E5 JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH2 0x1A0E SWAP2 SWAP1 PUSH2 0x1A31 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x1A48 JUMPI PUSH0 DUP2 PUSH0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH2 0x1A32 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1A8E DUP3 PUSH2 0x1A4C JUMP JUMPDEST PUSH2 0x1A98 DUP2 DUP6 PUSH2 0x1A56 JUMP JUMPDEST SWAP4 POP PUSH2 0x1AA8 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1A66 JUMP JUMPDEST PUSH2 0x1AB1 DUP2 PUSH2 0x1A74 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1AD4 DUP2 DUP5 PUSH2 0x1A84 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1B16 DUP3 PUSH2 0x1AED JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1B26 DUP2 PUSH2 0x1B0C JUMP JUMPDEST DUP2 EQ PUSH2 0x1B30 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1B41 DUP2 PUSH2 0x1B1D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1B59 DUP2 PUSH2 0x1B47 JUMP JUMPDEST DUP2 EQ PUSH2 0x1B63 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1B74 DUP2 PUSH2 0x1B50 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1B90 JUMPI PUSH2 0x1B8F PUSH2 0x1AE5 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1B9D DUP6 DUP3 DUP7 ADD PUSH2 0x1B33 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1BAE DUP6 DUP3 DUP7 ADD PUSH2 0x1B66 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1BCC DUP2 PUSH2 0x1BB8 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1BE5 PUSH0 DUP4 ADD DUP5 PUSH2 0x1BC3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1BF4 DUP2 PUSH2 0x1B47 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1C0D PUSH0 DUP4 ADD DUP5 PUSH2 0x1BEB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1C2A JUMPI PUSH2 0x1C29 PUSH2 0x1AE5 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1C37 DUP7 DUP3 DUP8 ADD PUSH2 0x1B33 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1C48 DUP7 DUP3 DUP8 ADD PUSH2 0x1B33 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1C59 DUP7 DUP3 DUP8 ADD PUSH2 0x1B66 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1C78 DUP2 PUSH2 0x1C63 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1C91 PUSH0 DUP4 ADD DUP5 PUSH2 0x1C6F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1CAC JUMPI PUSH2 0x1CAB PUSH2 0x1AE5 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1CB9 DUP5 DUP3 DUP6 ADD PUSH2 0x1B66 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0x1CFC DUP3 PUSH2 0x1A74 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x1D1B JUMPI PUSH2 0x1D1A PUSH2 0x1CC6 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1D2D PUSH2 0x1ADC JUMP JUMPDEST SWAP1 POP PUSH2 0x1D39 DUP3 DUP3 PUSH2 0x1CF3 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1D58 JUMPI PUSH2 0x1D57 PUSH2 0x1CC6 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH2 0x1D7F PUSH2 0x1D7A DUP5 PUSH2 0x1D3E JUMP JUMPDEST PUSH2 0x1D24 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0x1DA2 JUMPI PUSH2 0x1DA1 PUSH2 0x1D69 JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1DCB JUMPI DUP1 PUSH2 0x1DB7 DUP9 DUP3 PUSH2 0x1B66 JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1DA4 JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1DE9 JUMPI PUSH2 0x1DE8 PUSH2 0x1CC2 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1DF9 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1D6D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1E19 JUMPI PUSH2 0x1E18 PUSH2 0x1AE5 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1E26 DUP7 DUP3 DUP8 ADD PUSH2 0x1B66 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1E47 JUMPI PUSH2 0x1E46 PUSH2 0x1AE9 JUMP JUMPDEST JUMPDEST PUSH2 0x1E53 DUP7 DUP3 DUP8 ADD PUSH2 0x1DD5 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1E64 DUP7 DUP3 DUP8 ADD PUSH2 0x1B66 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1E84 JUMPI PUSH2 0x1E83 PUSH2 0x1AE5 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1E91 DUP6 DUP3 DUP7 ADD PUSH2 0x1B66 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1EA2 DUP6 DUP3 DUP7 ADD PUSH2 0x1B33 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1EC1 JUMPI PUSH2 0x1EC0 PUSH2 0x1AE5 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1ECE DUP5 DUP3 DUP6 ADD PUSH2 0x1B33 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1EE0 DUP2 PUSH2 0x1B0C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1EF9 PUSH0 DUP4 ADD DUP5 PUSH2 0x1ED7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1F16 JUMPI PUSH2 0x1F15 PUSH2 0x1AE5 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1F23 DUP7 DUP3 DUP8 ADD PUSH2 0x1B66 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1F34 DUP7 DUP3 DUP8 ADD PUSH2 0x1B33 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1F45 DUP7 DUP3 DUP8 ADD PUSH2 0x1B66 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1F62 PUSH0 DUP4 ADD DUP6 PUSH2 0x1BEB JUMP JUMPDEST PUSH2 0x1F6F PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1BEB JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1F8C JUMPI PUSH2 0x1F8B PUSH2 0x1AE5 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1F99 DUP6 DUP3 DUP7 ADD PUSH2 0x1B33 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1FAA DUP6 DUP3 DUP7 ADD PUSH2 0x1B33 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x1FBD DUP2 PUSH2 0x1B47 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1FF7 DUP4 DUP4 PUSH2 0x1FB4 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2019 DUP3 PUSH2 0x1FC3 JUMP JUMPDEST PUSH2 0x2023 DUP2 DUP6 PUSH2 0x1FCD JUMP JUMPDEST SWAP4 POP PUSH2 0x202E DUP4 PUSH2 0x1FDD JUMP JUMPDEST DUP1 PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x205E JUMPI DUP2 MLOAD PUSH2 0x2045 DUP9 DUP3 PUSH2 0x1FEC JUMP JUMPDEST SWAP8 POP PUSH2 0x2050 DUP4 PUSH2 0x2003 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x2031 JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP4 ADD PUSH0 DUP4 ADD MLOAD PUSH2 0x2080 PUSH0 DUP7 ADD DUP3 PUSH2 0x1FB4 JUMP JUMPDEST POP PUSH1 0x20 DUP4 ADD MLOAD DUP5 DUP3 SUB PUSH1 0x20 DUP7 ADD MSTORE PUSH2 0x2098 DUP3 DUP3 PUSH2 0x200F JUMP JUMPDEST SWAP2 POP POP PUSH1 0x40 DUP4 ADD MLOAD PUSH2 0x20AD PUSH1 0x40 DUP7 ADD DUP3 PUSH2 0x1FB4 JUMP JUMPDEST POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x20D0 DUP2 DUP5 PUSH2 0x206B JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x211C JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x212F JUMPI PUSH2 0x212E PUSH2 0x20D8 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E76616C6964206F776E657220616464726573730000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2169 PUSH1 0x15 DUP4 PUSH2 0x1A56 JUMP JUMPDEST SWAP2 POP PUSH2 0x2174 DUP3 PUSH2 0x2135 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2196 DUP2 PUSH2 0x215D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E76616C696420726563697069656E74206164647265737300000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x21D1 PUSH1 0x19 DUP4 PUSH2 0x1A56 JUMP JUMPDEST SWAP2 POP PUSH2 0x21DC DUP3 PUSH2 0x219D JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x21FE DUP2 PUSH2 0x21C5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E6F7420656E6F7567682073686172657320746F207472616E73666572000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2239 PUSH1 0x1D DUP4 PUSH2 0x1A56 JUMP JUMPDEST SWAP2 POP PUSH2 0x2244 DUP3 PUSH2 0x2205 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2266 DUP2 PUSH2 0x222D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x22A4 DUP3 PUSH2 0x1B47 JUMP JUMPDEST SWAP2 POP PUSH2 0x22AF DUP4 PUSH2 0x1B47 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x22C7 JUMPI PUSH2 0x22C6 PUSH2 0x226D JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x22D7 DUP3 PUSH2 0x1B47 JUMP JUMPDEST SWAP2 POP PUSH2 0x22E2 DUP4 PUSH2 0x1B47 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x22FA JUMPI PUSH2 0x22F9 PUSH2 0x226D JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x536861726573206D7573742062652067726561746572207468616E2030000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2334 PUSH1 0x1D DUP4 PUSH2 0x1A56 JUMP JUMPDEST SWAP2 POP PUSH2 0x233F DUP3 PUSH2 0x2300 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2361 DUP2 PUSH2 0x2328 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E6F7420656E6F7567682073686172657320617661696C61626C650000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x239C PUSH1 0x1B DUP4 PUSH2 0x1A56 JUMP JUMPDEST SWAP2 POP PUSH2 0x23A7 DUP3 PUSH2 0x2368 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x23C9 DUP2 PUSH2 0x2390 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E742073686172657320617661696C61626C65000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2404 PUSH1 0x1D DUP4 PUSH2 0x1A56 JUMP JUMPDEST SWAP2 POP PUSH2 0x240F DUP3 PUSH2 0x23D0 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2431 DUP2 PUSH2 0x23F8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x244B PUSH0 DUP4 ADD DUP7 PUSH2 0x1ED7 JUMP JUMPDEST PUSH2 0x2458 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1BEB JUMP JUMPDEST PUSH2 0x2465 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1BEB JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x5061757361626C653A2070617573656400000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x24A1 PUSH1 0x10 DUP4 PUSH2 0x1A56 JUMP JUMPDEST SWAP2 POP PUSH2 0x24AC DUP3 PUSH2 0x246D JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x24CE DUP2 PUSH2 0x2495 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5061757361626C653A206E6F7420706175736564000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2509 PUSH1 0x14 DUP4 PUSH2 0x1A56 JUMP JUMPDEST SWAP2 POP PUSH2 0x2514 DUP3 PUSH2 0x24D5 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2536 DUP2 PUSH2 0x24FD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP11 ORIGIN DUP9 0xBE DUP2 0xAC OR SUB 0x4B 0xBE BYTE CALL 0xDB MUL 0xBA PUSH11 0x69E546275E1D6032A6813F BASEFEE PUSH30 0x83739364736F6C634300081A003300000000000000000000000000000000 ",
							"sourceMap": "343:3816:11:-:0;;;1153:73;;;;;;;;;;1207:10;1896:113:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1970:5;1962;:13;;;;;;:::i;:::-;;1995:7;1985;:17;;;;;;:::i;:::-;;1896:113;;1297:1:0;1273:26;;:12;:26;;;1269:95;;1350:1;1322:31;;;;;;;;;;;:::i;:::-;;;;;;;;1269:95;1373:32;1392:12;1373:18;;;:32;;:::i;:::-;1225:187;1006:5:2;996:7;;:15;;;;;;;;;;;;;;;;;;343:3816:11;;2912:187:0;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;7:99:12:-;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:180::-;160:77;157:1;150:88;257:4;254:1;247:15;281:4;278:1;271:15;298:180;346:77;343:1;336:88;443:4;440:1;433:15;467:4;464:1;457:15;484:320;528:6;565:1;559:4;555:12;545:22;;612:1;606:4;602:12;633:18;623:81;;689:4;681:6;677:17;667:27;;623:81;751:2;743:6;740:14;720:18;717:38;714:84;;770:18;;:::i;:::-;714:84;535:269;484:320;;;:::o;810:141::-;859:4;882:3;874:11;;905:3;902:1;895:14;939:4;936:1;926:18;918:26;;810:141;;;:::o;957:93::-;994:6;1041:2;1036;1029:5;1025:14;1021:23;1011:33;;957:93;;;:::o;1056:107::-;1100:8;1150:5;1144:4;1140:16;1119:37;;1056:107;;;;:::o;1169:393::-;1238:6;1288:1;1276:10;1272:18;1311:97;1341:66;1330:9;1311:97;:::i;:::-;1429:39;1459:8;1448:9;1429:39;:::i;:::-;1417:51;;1501:4;1497:9;1490:5;1486:21;1477:30;;1550:4;1540:8;1536:19;1529:5;1526:30;1516:40;;1245:317;;1169:393;;;;;:::o;1568:77::-;1605:7;1634:5;1623:16;;1568:77;;;:::o;1651:60::-;1679:3;1700:5;1693:12;;1651:60;;;:::o;1717:142::-;1767:9;1800:53;1818:34;1827:24;1845:5;1827:24;:::i;:::-;1818:34;:::i;:::-;1800:53;:::i;:::-;1787:66;;1717:142;;;:::o;1865:75::-;1908:3;1929:5;1922:12;;1865:75;;;:::o;1946:269::-;2056:39;2087:7;2056:39;:::i;:::-;2117:91;2166:41;2190:16;2166:41;:::i;:::-;2158:6;2151:4;2145:11;2117:91;:::i;:::-;2111:4;2104:105;2022:193;1946:269;;;:::o;2221:73::-;2266:3;2221:73;:::o;2300:189::-;2377:32;;:::i;:::-;2418:65;2476:6;2468;2462:4;2418:65;:::i;:::-;2353:136;2300:189;;:::o;2495:186::-;2555:120;2572:3;2565:5;2562:14;2555:120;;;2626:39;2663:1;2656:5;2626:39;:::i;:::-;2599:1;2592:5;2588:13;2579:22;;2555:120;;;2495:186;;:::o;2687:543::-;2788:2;2783:3;2780:11;2777:446;;;2822:38;2854:5;2822:38;:::i;:::-;2906:29;2924:10;2906:29;:::i;:::-;2896:8;2892:44;3089:2;3077:10;3074:18;3071:49;;;3110:8;3095:23;;3071:49;3133:80;3189:22;3207:3;3189:22;:::i;:::-;3179:8;3175:37;3162:11;3133:80;:::i;:::-;2792:431;;2777:446;2687:543;;;:::o;3236:117::-;3290:8;3340:5;3334:4;3330:16;3309:37;;3236:117;;;;:::o;3359:169::-;3403:6;3436:51;3484:1;3480:6;3472:5;3469:1;3465:13;3436:51;:::i;:::-;3432:56;3517:4;3511;3507:15;3497:25;;3410:118;3359:169;;;;:::o;3533:295::-;3609:4;3755:29;3780:3;3774:4;3755:29;:::i;:::-;3747:37;;3817:3;3814:1;3810:11;3804:4;3801:21;3793:29;;3533:295;;;;:::o;3833:1395::-;3950:37;3983:3;3950:37;:::i;:::-;4052:18;4044:6;4041:30;4038:56;;;4074:18;;:::i;:::-;4038:56;4118:38;4150:4;4144:11;4118:38;:::i;:::-;4203:67;4263:6;4255;4249:4;4203:67;:::i;:::-;4297:1;4321:4;4308:17;;4353:2;4345:6;4342:14;4370:1;4365:618;;;;5027:1;5044:6;5041:77;;;5093:9;5088:3;5084:19;5078:26;5069:35;;5041:77;5144:67;5204:6;5197:5;5144:67;:::i;:::-;5138:4;5131:81;5000:222;4335:887;;4365:618;4417:4;4413:9;4405:6;4401:22;4451:37;4483:4;4451:37;:::i;:::-;4510:1;4524:208;4538:7;4535:1;4532:14;4524:208;;;4617:9;4612:3;4608:19;4602:26;4594:6;4587:42;4668:1;4660:6;4656:14;4646:24;;4715:2;4704:9;4700:18;4687:31;;4561:4;4558:1;4554:12;4549:17;;4524:208;;;4760:6;4751:7;4748:19;4745:179;;;4818:9;4813:3;4809:19;4803:26;4861:48;4903:4;4895:6;4891:17;4880:9;4861:48;:::i;:::-;4853:6;4846:64;4768:156;4745:179;4970:1;4966;4958:6;4954:14;4950:22;4944:4;4937:36;4372:611;;;4335:887;;3925:1303;;;3833:1395;;:::o;5234:126::-;5271:7;5311:42;5304:5;5300:54;5289:65;;5234:126;;;:::o;5366:96::-;5403:7;5432:24;5450:5;5432:24;:::i;:::-;5421:35;;5366:96;;;:::o;5468:118::-;5555:24;5573:5;5555:24;:::i;:::-;5550:3;5543:37;5468:118;;:::o;5592:222::-;5685:4;5723:2;5712:9;5708:18;5700:26;;5736:71;5804:1;5793:9;5789:17;5780:6;5736:71;:::i;:::-;5592:222;;;;:::o;343:3816:11:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_approve_798": {
									"entryPoint": 4394,
									"id": 798,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_858": {
									"entryPoint": 5526,
									"id": 858,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_checkOwner_84": {
									"entryPoint": 4798,
									"id": 84,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_mint_747": {
									"entryPoint": 5399,
									"id": 747,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_1602": {
									"entryPoint": 4387,
									"id": 1602,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_pause_375": {
									"entryPoint": 5226,
									"id": 375,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_requireNotPaused_348": {
									"entryPoint": 5325,
									"id": 348,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_requirePaused_359": {
									"entryPoint": 6526,
									"id": 359,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_spendAllowance_906": {
									"entryPoint": 4412,
									"id": 906,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 5031,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transfer_637": {
									"entryPoint": 4558,
									"id": 637,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_unpause_391": {
									"entryPoint": 4933,
									"id": 391,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_update_714": {
									"entryPoint": 5989,
									"id": 714,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@allowance_534": {
									"entryPoint": 3774,
									"id": 534,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_558": {
									"entryPoint": 1720,
									"id": 558,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_493": {
									"entryPoint": 2218,
									"id": 493,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@basketShares_2720": {
									"entryPoint": 1835,
									"id": 2720,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@baskets_2716": {
									"entryPoint": 3236,
									"id": 2716,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@createBasket_2788": {
									"entryPoint": 1856,
									"id": 2788,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@decimals_471": {
									"entryPoint": 1809,
									"id": 471,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getAvailableShares_3007": {
									"entryPoint": 3745,
									"id": 3007,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getBasketDetails_2833": {
									"entryPoint": 4239,
									"id": 2833,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getPropertyOwner_3045": {
									"entryPoint": 4050,
									"id": 3045,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getShares_2981": {
									"entryPoint": 2306,
									"id": 2981,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@getTotalShares_2994": {
									"entryPoint": 3024,
									"id": 2994,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@integrateWithExternalSystem_3073": {
									"entryPoint": 2208,
									"id": 3073,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@issuePropertyShares_2897": {
									"entryPoint": 3302,
									"id": 2897,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@issueShares_2820": {
									"entryPoint": 3904,
									"id": 2820,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@name_453": {
									"entryPoint": 1576,
									"id": 453,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@owner_67": {
									"entryPoint": 3052,
									"id": 67,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@pause_3054": {
									"entryPoint": 2443,
									"id": 3054,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@paused_336": {
									"entryPoint": 2186,
									"id": 336,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@propertyOwners_2729": {
									"entryPoint": 2395,
									"id": 2729,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@propertyShares_2725": {
									"entryPoint": 3713,
									"id": 2725,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@renounceOwnership_98": {
									"entryPoint": 2287,
									"id": 98,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@setPropertyOwner_3033": {
									"entryPoint": 1985,
									"id": 3033,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@symbol_462": {
									"entryPoint": 3092,
									"id": 462,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@totalSupply_480": {
									"entryPoint": 1754,
									"id": 480,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_590": {
									"entryPoint": 1763,
									"id": 590,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transferOwnership_126": {
									"entryPoint": 4107,
									"id": 126,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@transferShares_2964": {
									"entryPoint": 2461,
									"id": 2964,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@transfer_517": {
									"entryPoint": 3268,
									"id": 517,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@unpause_3063": {
									"entryPoint": 1817,
									"id": 3063,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 7533,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 6963,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 7637,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 7014,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 7852,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 8054,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 7187,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 7034,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 7319,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256t_address": {
									"entryPoint": 7790,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_uint256t_addresst_uint256": {
									"entryPoint": 7935,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_uint256t_array$_t_uint256_$dyn_memory_ptrt_uint256": {
									"entryPoint": 7682,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_encodeUpdatedPos_t_uint256_to_t_uint256": {
									"entryPoint": 8172,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 7895,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 8207,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 7107,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6788,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_0857c57456ecf2726586715f2441db771764d06c344926f01279ec4ec08abc3b_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8749,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 9469,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 9365,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_854cf043fa623ebed8453fda259d33de3f6e7493e6b8ff90fcfdd906ab498ce3_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8541,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_9296ff0c00c9773aeb7dfef423d0c5484d831f800b943533b0cf1300a3d8e8df_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8645,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_c2664836f08f089a39d927da540bfbfc322ded0e69c3d2ff852ad8874067c6e6_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 9104,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_d734de04f0d687b15d55ff3d832ab64e9874494a5534ef409e8a102ba868cc4c_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 9208,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_e24294be76b1cbd498453a3d6554ab510b6a9cdded1dafd11ec001f9ab7ca039_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 9000,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_struct$_ShareBasket_$2702_memory_ptr_to_t_struct$_ShareBasket_$2702_memory_ptr_fromStack": {
									"entryPoint": 8299,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256": {
									"entryPoint": 8116,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 7147,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint8_to_t_uint8_fromStack": {
									"entryPoint": 7279,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 7910,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 9272,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 7122,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6844,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0857c57456ecf2726586715f2441db771764d06c344926f01279ec4ec08abc3b__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8783,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 9503,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 9399,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_854cf043fa623ebed8453fda259d33de3f6e7493e6b8ff90fcfdd906ab498ce3__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8575,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9296ff0c00c9773aeb7dfef423d0c5484d831f800b943533b0cf1300a3d8e8df__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8679,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_c2664836f08f089a39d927da540bfbfc322ded0e69c3d2ff852ad8874067c6e6__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 9138,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_d734de04f0d687b15d55ff3d832ab64e9874494a5534ef409e8a102ba868cc4c__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 9242,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_e24294be76b1cbd498453a3d6554ab510b6a9cdded1dafd11ec001f9ab7ca039__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 9034,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_struct$_ShareBasket_$2702_memory_ptr__to_t_struct$_ShareBasket_$2702_memory_ptr__fromStack_reversed": {
									"entryPoint": 8376,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 7162,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 8015,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": 7294,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 7460,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 6876,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 7486,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_dataslot_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 8157,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 8131,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 6732,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_nextElement_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 8195,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 8141,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 6742,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 8909,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 8858,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 6924,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 7096,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 6893,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 6983,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint8": {
									"entryPoint": 7267,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 6758,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 8453,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 7411,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"panic_error_0x11": {
									"entryPoint": 8813,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 8408,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 7366,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 7362,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef": {
									"entryPoint": 7529,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 6889,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 6885,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 6772,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"store_literal_in_memory_0857c57456ecf2726586715f2441db771764d06c344926f01279ec4ec08abc3b": {
									"entryPoint": 8709,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a": {
									"entryPoint": 9429,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a": {
									"entryPoint": 9325,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_854cf043fa623ebed8453fda259d33de3f6e7493e6b8ff90fcfdd906ab498ce3": {
									"entryPoint": 8501,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_9296ff0c00c9773aeb7dfef423d0c5484d831f800b943533b0cf1300a3d8e8df": {
									"entryPoint": 8605,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_c2664836f08f089a39d927da540bfbfc322ded0e69c3d2ff852ad8874067c6e6": {
									"entryPoint": 9064,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_d734de04f0d687b15d55ff3d832ab64e9874494a5534ef409e8a102ba868cc4c": {
									"entryPoint": 9168,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_e24294be76b1cbd498453a3d6554ab510b6a9cdded1dafd11ec001f9ab7ca039": {
									"entryPoint": 8960,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 6941,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 6992,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:23086:12",
										"nodeType": "YulBlock",
										"src": "0:23086:12",
										"statements": [
											{
												"body": {
													"nativeSrc": "66:40:12",
													"nodeType": "YulBlock",
													"src": "66:40:12",
													"statements": [
														{
															"nativeSrc": "77:22:12",
															"nodeType": "YulAssignment",
															"src": "77:22:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "93:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "93:5:12"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "87:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "87:5:12"
																},
																"nativeSrc": "87:12:12",
																"nodeType": "YulFunctionCall",
																"src": "87:12:12"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "77:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "77:6:12"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "7:99:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "49:5:12",
														"nodeType": "YulTypedName",
														"src": "49:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "59:6:12",
														"nodeType": "YulTypedName",
														"src": "59:6:12",
														"type": ""
													}
												],
												"src": "7:99:12"
											},
											{
												"body": {
													"nativeSrc": "208:73:12",
													"nodeType": "YulBlock",
													"src": "208:73:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "225:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "225:3:12"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "230:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "230:6:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "218:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "218:6:12"
																},
																"nativeSrc": "218:19:12",
																"nodeType": "YulFunctionCall",
																"src": "218:19:12"
															},
															"nativeSrc": "218:19:12",
															"nodeType": "YulExpressionStatement",
															"src": "218:19:12"
														},
														{
															"nativeSrc": "246:29:12",
															"nodeType": "YulAssignment",
															"src": "246:29:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "265:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "265:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "270:4:12",
																		"nodeType": "YulLiteral",
																		"src": "270:4:12",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "261:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "261:3:12"
																},
																"nativeSrc": "261:14:12",
																"nodeType": "YulFunctionCall",
																"src": "261:14:12"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "246:11:12",
																	"nodeType": "YulIdentifier",
																	"src": "246:11:12"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "112:169:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "180:3:12",
														"nodeType": "YulTypedName",
														"src": "180:3:12",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "185:6:12",
														"nodeType": "YulTypedName",
														"src": "185:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "196:11:12",
														"nodeType": "YulTypedName",
														"src": "196:11:12",
														"type": ""
													}
												],
												"src": "112:169:12"
											},
											{
												"body": {
													"nativeSrc": "349:77:12",
													"nodeType": "YulBlock",
													"src": "349:77:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "366:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "366:3:12"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "371:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "371:3:12"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "376:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "376:6:12"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "360:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "360:5:12"
																},
																"nativeSrc": "360:23:12",
																"nodeType": "YulFunctionCall",
																"src": "360:23:12"
															},
															"nativeSrc": "360:23:12",
															"nodeType": "YulExpressionStatement",
															"src": "360:23:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "403:3:12",
																				"nodeType": "YulIdentifier",
																				"src": "403:3:12"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "408:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "408:6:12"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "399:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "399:3:12"
																		},
																		"nativeSrc": "399:16:12",
																		"nodeType": "YulFunctionCall",
																		"src": "399:16:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "417:1:12",
																		"nodeType": "YulLiteral",
																		"src": "417:1:12",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "392:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "392:6:12"
																},
																"nativeSrc": "392:27:12",
																"nodeType": "YulFunctionCall",
																"src": "392:27:12"
															},
															"nativeSrc": "392:27:12",
															"nodeType": "YulExpressionStatement",
															"src": "392:27:12"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "287:139:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "331:3:12",
														"nodeType": "YulTypedName",
														"src": "331:3:12",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "336:3:12",
														"nodeType": "YulTypedName",
														"src": "336:3:12",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "341:6:12",
														"nodeType": "YulTypedName",
														"src": "341:6:12",
														"type": ""
													}
												],
												"src": "287:139:12"
											},
											{
												"body": {
													"nativeSrc": "480:54:12",
													"nodeType": "YulBlock",
													"src": "480:54:12",
													"statements": [
														{
															"nativeSrc": "490:38:12",
															"nodeType": "YulAssignment",
															"src": "490:38:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "508:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "508:5:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "515:2:12",
																				"nodeType": "YulLiteral",
																				"src": "515:2:12",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "504:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "504:3:12"
																		},
																		"nativeSrc": "504:14:12",
																		"nodeType": "YulFunctionCall",
																		"src": "504:14:12"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "524:2:12",
																				"nodeType": "YulLiteral",
																				"src": "524:2:12",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "520:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "520:3:12"
																		},
																		"nativeSrc": "520:7:12",
																		"nodeType": "YulFunctionCall",
																		"src": "520:7:12"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "500:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "500:3:12"
																},
																"nativeSrc": "500:28:12",
																"nodeType": "YulFunctionCall",
																"src": "500:28:12"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "490:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "490:6:12"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "432:102:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "463:5:12",
														"nodeType": "YulTypedName",
														"src": "463:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "473:6:12",
														"nodeType": "YulTypedName",
														"src": "473:6:12",
														"type": ""
													}
												],
												"src": "432:102:12"
											},
											{
												"body": {
													"nativeSrc": "632:285:12",
													"nodeType": "YulBlock",
													"src": "632:285:12",
													"statements": [
														{
															"nativeSrc": "642:53:12",
															"nodeType": "YulVariableDeclaration",
															"src": "642:53:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "689:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "689:5:12"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "656:32:12",
																	"nodeType": "YulIdentifier",
																	"src": "656:32:12"
																},
																"nativeSrc": "656:39:12",
																"nodeType": "YulFunctionCall",
																"src": "656:39:12"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "646:6:12",
																	"nodeType": "YulTypedName",
																	"src": "646:6:12",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "704:78:12",
															"nodeType": "YulAssignment",
															"src": "704:78:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "770:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "770:3:12"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "775:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "775:6:12"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "711:58:12",
																	"nodeType": "YulIdentifier",
																	"src": "711:58:12"
																},
																"nativeSrc": "711:71:12",
																"nodeType": "YulFunctionCall",
																"src": "711:71:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "704:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "704:3:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "830:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "830:5:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "837:4:12",
																				"nodeType": "YulLiteral",
																				"src": "837:4:12",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "826:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "826:3:12"
																		},
																		"nativeSrc": "826:16:12",
																		"nodeType": "YulFunctionCall",
																		"src": "826:16:12"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "844:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "844:3:12"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "849:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "849:6:12"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "791:34:12",
																	"nodeType": "YulIdentifier",
																	"src": "791:34:12"
																},
																"nativeSrc": "791:65:12",
																"nodeType": "YulFunctionCall",
																"src": "791:65:12"
															},
															"nativeSrc": "791:65:12",
															"nodeType": "YulExpressionStatement",
															"src": "791:65:12"
														},
														{
															"nativeSrc": "865:46:12",
															"nodeType": "YulAssignment",
															"src": "865:46:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "876:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "876:3:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "903:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "903:6:12"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "881:21:12",
																			"nodeType": "YulIdentifier",
																			"src": "881:21:12"
																		},
																		"nativeSrc": "881:29:12",
																		"nodeType": "YulFunctionCall",
																		"src": "881:29:12"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "872:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "872:3:12"
																},
																"nativeSrc": "872:39:12",
																"nodeType": "YulFunctionCall",
																"src": "872:39:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "865:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "865:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "540:377:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "613:5:12",
														"nodeType": "YulTypedName",
														"src": "613:5:12",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "620:3:12",
														"nodeType": "YulTypedName",
														"src": "620:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "628:3:12",
														"nodeType": "YulTypedName",
														"src": "628:3:12",
														"type": ""
													}
												],
												"src": "540:377:12"
											},
											{
												"body": {
													"nativeSrc": "1041:195:12",
													"nodeType": "YulBlock",
													"src": "1041:195:12",
													"statements": [
														{
															"nativeSrc": "1051:26:12",
															"nodeType": "YulAssignment",
															"src": "1051:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1063:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "1063:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1074:2:12",
																		"nodeType": "YulLiteral",
																		"src": "1074:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1059:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "1059:3:12"
																},
																"nativeSrc": "1059:18:12",
																"nodeType": "YulFunctionCall",
																"src": "1059:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1051:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "1051:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1098:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "1098:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1109:1:12",
																				"nodeType": "YulLiteral",
																				"src": "1109:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1094:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "1094:3:12"
																		},
																		"nativeSrc": "1094:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "1094:17:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "1117:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "1117:4:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1123:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "1123:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1113:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "1113:3:12"
																		},
																		"nativeSrc": "1113:20:12",
																		"nodeType": "YulFunctionCall",
																		"src": "1113:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1087:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "1087:6:12"
																},
																"nativeSrc": "1087:47:12",
																"nodeType": "YulFunctionCall",
																"src": "1087:47:12"
															},
															"nativeSrc": "1087:47:12",
															"nodeType": "YulExpressionStatement",
															"src": "1087:47:12"
														},
														{
															"nativeSrc": "1143:86:12",
															"nodeType": "YulAssignment",
															"src": "1143:86:12",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1215:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "1215:6:12"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "1224:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "1224:4:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "1151:63:12",
																	"nodeType": "YulIdentifier",
																	"src": "1151:63:12"
																},
																"nativeSrc": "1151:78:12",
																"nodeType": "YulFunctionCall",
																"src": "1151:78:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1143:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "1143:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "923:313:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1013:9:12",
														"nodeType": "YulTypedName",
														"src": "1013:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1025:6:12",
														"nodeType": "YulTypedName",
														"src": "1025:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1036:4:12",
														"nodeType": "YulTypedName",
														"src": "1036:4:12",
														"type": ""
													}
												],
												"src": "923:313:12"
											},
											{
												"body": {
													"nativeSrc": "1282:35:12",
													"nodeType": "YulBlock",
													"src": "1282:35:12",
													"statements": [
														{
															"nativeSrc": "1292:19:12",
															"nodeType": "YulAssignment",
															"src": "1292:19:12",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1308:2:12",
																		"nodeType": "YulLiteral",
																		"src": "1308:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1302:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "1302:5:12"
																},
																"nativeSrc": "1302:9:12",
																"nodeType": "YulFunctionCall",
																"src": "1302:9:12"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "1292:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "1292:6:12"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "1242:75:12",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "1275:6:12",
														"nodeType": "YulTypedName",
														"src": "1275:6:12",
														"type": ""
													}
												],
												"src": "1242:75:12"
											},
											{
												"body": {
													"nativeSrc": "1412:28:12",
													"nodeType": "YulBlock",
													"src": "1412:28:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1429:1:12",
																		"nodeType": "YulLiteral",
																		"src": "1429:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1432:1:12",
																		"nodeType": "YulLiteral",
																		"src": "1432:1:12",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1422:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "1422:6:12"
																},
																"nativeSrc": "1422:12:12",
																"nodeType": "YulFunctionCall",
																"src": "1422:12:12"
															},
															"nativeSrc": "1422:12:12",
															"nodeType": "YulExpressionStatement",
															"src": "1422:12:12"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "1323:117:12",
												"nodeType": "YulFunctionDefinition",
												"src": "1323:117:12"
											},
											{
												"body": {
													"nativeSrc": "1535:28:12",
													"nodeType": "YulBlock",
													"src": "1535:28:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1552:1:12",
																		"nodeType": "YulLiteral",
																		"src": "1552:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1555:1:12",
																		"nodeType": "YulLiteral",
																		"src": "1555:1:12",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1545:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "1545:6:12"
																},
																"nativeSrc": "1545:12:12",
																"nodeType": "YulFunctionCall",
																"src": "1545:12:12"
															},
															"nativeSrc": "1545:12:12",
															"nodeType": "YulExpressionStatement",
															"src": "1545:12:12"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "1446:117:12",
												"nodeType": "YulFunctionDefinition",
												"src": "1446:117:12"
											},
											{
												"body": {
													"nativeSrc": "1614:81:12",
													"nodeType": "YulBlock",
													"src": "1614:81:12",
													"statements": [
														{
															"nativeSrc": "1624:65:12",
															"nodeType": "YulAssignment",
															"src": "1624:65:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1639:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "1639:5:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1646:42:12",
																		"nodeType": "YulLiteral",
																		"src": "1646:42:12",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1635:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "1635:3:12"
																},
																"nativeSrc": "1635:54:12",
																"nodeType": "YulFunctionCall",
																"src": "1635:54:12"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1624:7:12",
																	"nodeType": "YulIdentifier",
																	"src": "1624:7:12"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "1569:126:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1596:5:12",
														"nodeType": "YulTypedName",
														"src": "1596:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1606:7:12",
														"nodeType": "YulTypedName",
														"src": "1606:7:12",
														"type": ""
													}
												],
												"src": "1569:126:12"
											},
											{
												"body": {
													"nativeSrc": "1746:51:12",
													"nodeType": "YulBlock",
													"src": "1746:51:12",
													"statements": [
														{
															"nativeSrc": "1756:35:12",
															"nodeType": "YulAssignment",
															"src": "1756:35:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1785:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "1785:5:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "1767:17:12",
																	"nodeType": "YulIdentifier",
																	"src": "1767:17:12"
																},
																"nativeSrc": "1767:24:12",
																"nodeType": "YulFunctionCall",
																"src": "1767:24:12"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1756:7:12",
																	"nodeType": "YulIdentifier",
																	"src": "1756:7:12"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "1701:96:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1728:5:12",
														"nodeType": "YulTypedName",
														"src": "1728:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1738:7:12",
														"nodeType": "YulTypedName",
														"src": "1738:7:12",
														"type": ""
													}
												],
												"src": "1701:96:12"
											},
											{
												"body": {
													"nativeSrc": "1846:79:12",
													"nodeType": "YulBlock",
													"src": "1846:79:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "1903:16:12",
																"nodeType": "YulBlock",
																"src": "1903:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1912:1:12",
																					"nodeType": "YulLiteral",
																					"src": "1912:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1915:1:12",
																					"nodeType": "YulLiteral",
																					"src": "1915:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1905:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "1905:6:12"
																			},
																			"nativeSrc": "1905:12:12",
																			"nodeType": "YulFunctionCall",
																			"src": "1905:12:12"
																		},
																		"nativeSrc": "1905:12:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "1905:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1869:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "1869:5:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1894:5:12",
																						"nodeType": "YulIdentifier",
																						"src": "1894:5:12"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "1876:17:12",
																					"nodeType": "YulIdentifier",
																					"src": "1876:17:12"
																				},
																				"nativeSrc": "1876:24:12",
																				"nodeType": "YulFunctionCall",
																				"src": "1876:24:12"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1866:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "1866:2:12"
																		},
																		"nativeSrc": "1866:35:12",
																		"nodeType": "YulFunctionCall",
																		"src": "1866:35:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1859:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "1859:6:12"
																},
																"nativeSrc": "1859:43:12",
																"nodeType": "YulFunctionCall",
																"src": "1859:43:12"
															},
															"nativeSrc": "1856:63:12",
															"nodeType": "YulIf",
															"src": "1856:63:12"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "1803:122:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1839:5:12",
														"nodeType": "YulTypedName",
														"src": "1839:5:12",
														"type": ""
													}
												],
												"src": "1803:122:12"
											},
											{
												"body": {
													"nativeSrc": "1983:87:12",
													"nodeType": "YulBlock",
													"src": "1983:87:12",
													"statements": [
														{
															"nativeSrc": "1993:29:12",
															"nodeType": "YulAssignment",
															"src": "1993:29:12",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2015:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "2015:6:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2002:12:12",
																	"nodeType": "YulIdentifier",
																	"src": "2002:12:12"
																},
																"nativeSrc": "2002:20:12",
																"nodeType": "YulFunctionCall",
																"src": "2002:20:12"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1993:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "1993:5:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2058:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "2058:5:12"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "2031:26:12",
																	"nodeType": "YulIdentifier",
																	"src": "2031:26:12"
																},
																"nativeSrc": "2031:33:12",
																"nodeType": "YulFunctionCall",
																"src": "2031:33:12"
															},
															"nativeSrc": "2031:33:12",
															"nodeType": "YulExpressionStatement",
															"src": "2031:33:12"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "1931:139:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1961:6:12",
														"nodeType": "YulTypedName",
														"src": "1961:6:12",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1969:3:12",
														"nodeType": "YulTypedName",
														"src": "1969:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1977:5:12",
														"nodeType": "YulTypedName",
														"src": "1977:5:12",
														"type": ""
													}
												],
												"src": "1931:139:12"
											},
											{
												"body": {
													"nativeSrc": "2121:32:12",
													"nodeType": "YulBlock",
													"src": "2121:32:12",
													"statements": [
														{
															"nativeSrc": "2131:16:12",
															"nodeType": "YulAssignment",
															"src": "2131:16:12",
															"value": {
																"name": "value",
																"nativeSrc": "2142:5:12",
																"nodeType": "YulIdentifier",
																"src": "2142:5:12"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2131:7:12",
																	"nodeType": "YulIdentifier",
																	"src": "2131:7:12"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "2076:77:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2103:5:12",
														"nodeType": "YulTypedName",
														"src": "2103:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2113:7:12",
														"nodeType": "YulTypedName",
														"src": "2113:7:12",
														"type": ""
													}
												],
												"src": "2076:77:12"
											},
											{
												"body": {
													"nativeSrc": "2202:79:12",
													"nodeType": "YulBlock",
													"src": "2202:79:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "2259:16:12",
																"nodeType": "YulBlock",
																"src": "2259:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2268:1:12",
																					"nodeType": "YulLiteral",
																					"src": "2268:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2271:1:12",
																					"nodeType": "YulLiteral",
																					"src": "2271:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2261:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "2261:6:12"
																			},
																			"nativeSrc": "2261:12:12",
																			"nodeType": "YulFunctionCall",
																			"src": "2261:12:12"
																		},
																		"nativeSrc": "2261:12:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "2261:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2225:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "2225:5:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2250:5:12",
																						"nodeType": "YulIdentifier",
																						"src": "2250:5:12"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "2232:17:12",
																					"nodeType": "YulIdentifier",
																					"src": "2232:17:12"
																				},
																				"nativeSrc": "2232:24:12",
																				"nodeType": "YulFunctionCall",
																				"src": "2232:24:12"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2222:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "2222:2:12"
																		},
																		"nativeSrc": "2222:35:12",
																		"nodeType": "YulFunctionCall",
																		"src": "2222:35:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2215:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "2215:6:12"
																},
																"nativeSrc": "2215:43:12",
																"nodeType": "YulFunctionCall",
																"src": "2215:43:12"
															},
															"nativeSrc": "2212:63:12",
															"nodeType": "YulIf",
															"src": "2212:63:12"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "2159:122:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2195:5:12",
														"nodeType": "YulTypedName",
														"src": "2195:5:12",
														"type": ""
													}
												],
												"src": "2159:122:12"
											},
											{
												"body": {
													"nativeSrc": "2339:87:12",
													"nodeType": "YulBlock",
													"src": "2339:87:12",
													"statements": [
														{
															"nativeSrc": "2349:29:12",
															"nodeType": "YulAssignment",
															"src": "2349:29:12",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2371:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "2371:6:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2358:12:12",
																	"nodeType": "YulIdentifier",
																	"src": "2358:12:12"
																},
																"nativeSrc": "2358:20:12",
																"nodeType": "YulFunctionCall",
																"src": "2358:20:12"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2349:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "2349:5:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2414:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "2414:5:12"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "2387:26:12",
																	"nodeType": "YulIdentifier",
																	"src": "2387:26:12"
																},
																"nativeSrc": "2387:33:12",
																"nodeType": "YulFunctionCall",
																"src": "2387:33:12"
															},
															"nativeSrc": "2387:33:12",
															"nodeType": "YulExpressionStatement",
															"src": "2387:33:12"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "2287:139:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2317:6:12",
														"nodeType": "YulTypedName",
														"src": "2317:6:12",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2325:3:12",
														"nodeType": "YulTypedName",
														"src": "2325:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "2333:5:12",
														"nodeType": "YulTypedName",
														"src": "2333:5:12",
														"type": ""
													}
												],
												"src": "2287:139:12"
											},
											{
												"body": {
													"nativeSrc": "2515:391:12",
													"nodeType": "YulBlock",
													"src": "2515:391:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "2561:83:12",
																"nodeType": "YulBlock",
																"src": "2561:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "2563:77:12",
																				"nodeType": "YulIdentifier",
																				"src": "2563:77:12"
																			},
																			"nativeSrc": "2563:79:12",
																			"nodeType": "YulFunctionCall",
																			"src": "2563:79:12"
																		},
																		"nativeSrc": "2563:79:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "2563:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2536:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "2536:7:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2545:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "2545:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2532:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "2532:3:12"
																		},
																		"nativeSrc": "2532:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "2532:23:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2557:2:12",
																		"nodeType": "YulLiteral",
																		"src": "2557:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2528:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "2528:3:12"
																},
																"nativeSrc": "2528:32:12",
																"nodeType": "YulFunctionCall",
																"src": "2528:32:12"
															},
															"nativeSrc": "2525:119:12",
															"nodeType": "YulIf",
															"src": "2525:119:12"
														},
														{
															"nativeSrc": "2654:117:12",
															"nodeType": "YulBlock",
															"src": "2654:117:12",
															"statements": [
																{
																	"nativeSrc": "2669:15:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2669:15:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2683:1:12",
																		"nodeType": "YulLiteral",
																		"src": "2683:1:12",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2673:6:12",
																			"nodeType": "YulTypedName",
																			"src": "2673:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2698:63:12",
																	"nodeType": "YulAssignment",
																	"src": "2698:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2733:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "2733:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2744:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "2744:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2729:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "2729:3:12"
																				},
																				"nativeSrc": "2729:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "2729:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2753:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "2753:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "2708:20:12",
																			"nodeType": "YulIdentifier",
																			"src": "2708:20:12"
																		},
																		"nativeSrc": "2708:53:12",
																		"nodeType": "YulFunctionCall",
																		"src": "2708:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "2698:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "2698:6:12"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "2781:118:12",
															"nodeType": "YulBlock",
															"src": "2781:118:12",
															"statements": [
																{
																	"nativeSrc": "2796:16:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2796:16:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2810:2:12",
																		"nodeType": "YulLiteral",
																		"src": "2810:2:12",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2800:6:12",
																			"nodeType": "YulTypedName",
																			"src": "2800:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2826:63:12",
																	"nodeType": "YulAssignment",
																	"src": "2826:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2861:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "2861:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2872:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "2872:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2857:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "2857:3:12"
																				},
																				"nativeSrc": "2857:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "2857:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2881:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "2881:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "2836:20:12",
																			"nodeType": "YulIdentifier",
																			"src": "2836:20:12"
																		},
																		"nativeSrc": "2836:53:12",
																		"nodeType": "YulFunctionCall",
																		"src": "2836:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "2826:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "2826:6:12"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "2432:474:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2477:9:12",
														"nodeType": "YulTypedName",
														"src": "2477:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2488:7:12",
														"nodeType": "YulTypedName",
														"src": "2488:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2500:6:12",
														"nodeType": "YulTypedName",
														"src": "2500:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2508:6:12",
														"nodeType": "YulTypedName",
														"src": "2508:6:12",
														"type": ""
													}
												],
												"src": "2432:474:12"
											},
											{
												"body": {
													"nativeSrc": "2954:48:12",
													"nodeType": "YulBlock",
													"src": "2954:48:12",
													"statements": [
														{
															"nativeSrc": "2964:32:12",
															"nodeType": "YulAssignment",
															"src": "2964:32:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2989:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "2989:5:12"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "2982:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "2982:6:12"
																		},
																		"nativeSrc": "2982:13:12",
																		"nodeType": "YulFunctionCall",
																		"src": "2982:13:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2975:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "2975:6:12"
																},
																"nativeSrc": "2975:21:12",
																"nodeType": "YulFunctionCall",
																"src": "2975:21:12"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2964:7:12",
																	"nodeType": "YulIdentifier",
																	"src": "2964:7:12"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "2912:90:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2936:5:12",
														"nodeType": "YulTypedName",
														"src": "2936:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2946:7:12",
														"nodeType": "YulTypedName",
														"src": "2946:7:12",
														"type": ""
													}
												],
												"src": "2912:90:12"
											},
											{
												"body": {
													"nativeSrc": "3067:50:12",
													"nodeType": "YulBlock",
													"src": "3067:50:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3084:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "3084:3:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3104:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "3104:5:12"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "3089:14:12",
																			"nodeType": "YulIdentifier",
																			"src": "3089:14:12"
																		},
																		"nativeSrc": "3089:21:12",
																		"nodeType": "YulFunctionCall",
																		"src": "3089:21:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3077:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "3077:6:12"
																},
																"nativeSrc": "3077:34:12",
																"nodeType": "YulFunctionCall",
																"src": "3077:34:12"
															},
															"nativeSrc": "3077:34:12",
															"nodeType": "YulExpressionStatement",
															"src": "3077:34:12"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "3008:109:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3055:5:12",
														"nodeType": "YulTypedName",
														"src": "3055:5:12",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3062:3:12",
														"nodeType": "YulTypedName",
														"src": "3062:3:12",
														"type": ""
													}
												],
												"src": "3008:109:12"
											},
											{
												"body": {
													"nativeSrc": "3215:118:12",
													"nodeType": "YulBlock",
													"src": "3215:118:12",
													"statements": [
														{
															"nativeSrc": "3225:26:12",
															"nodeType": "YulAssignment",
															"src": "3225:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3237:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "3237:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3248:2:12",
																		"nodeType": "YulLiteral",
																		"src": "3248:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3233:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "3233:3:12"
																},
																"nativeSrc": "3233:18:12",
																"nodeType": "YulFunctionCall",
																"src": "3233:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3225:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "3225:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3299:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "3299:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3312:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "3312:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3323:1:12",
																				"nodeType": "YulLiteral",
																				"src": "3323:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3308:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "3308:3:12"
																		},
																		"nativeSrc": "3308:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "3308:17:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "3261:37:12",
																	"nodeType": "YulIdentifier",
																	"src": "3261:37:12"
																},
																"nativeSrc": "3261:65:12",
																"nodeType": "YulFunctionCall",
																"src": "3261:65:12"
															},
															"nativeSrc": "3261:65:12",
															"nodeType": "YulExpressionStatement",
															"src": "3261:65:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "3123:210:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3187:9:12",
														"nodeType": "YulTypedName",
														"src": "3187:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3199:6:12",
														"nodeType": "YulTypedName",
														"src": "3199:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3210:4:12",
														"nodeType": "YulTypedName",
														"src": "3210:4:12",
														"type": ""
													}
												],
												"src": "3123:210:12"
											},
											{
												"body": {
													"nativeSrc": "3404:53:12",
													"nodeType": "YulBlock",
													"src": "3404:53:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3421:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "3421:3:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3444:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "3444:5:12"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "3426:17:12",
																			"nodeType": "YulIdentifier",
																			"src": "3426:17:12"
																		},
																		"nativeSrc": "3426:24:12",
																		"nodeType": "YulFunctionCall",
																		"src": "3426:24:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3414:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "3414:6:12"
																},
																"nativeSrc": "3414:37:12",
																"nodeType": "YulFunctionCall",
																"src": "3414:37:12"
															},
															"nativeSrc": "3414:37:12",
															"nodeType": "YulExpressionStatement",
															"src": "3414:37:12"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "3339:118:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3392:5:12",
														"nodeType": "YulTypedName",
														"src": "3392:5:12",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3399:3:12",
														"nodeType": "YulTypedName",
														"src": "3399:3:12",
														"type": ""
													}
												],
												"src": "3339:118:12"
											},
											{
												"body": {
													"nativeSrc": "3561:124:12",
													"nodeType": "YulBlock",
													"src": "3561:124:12",
													"statements": [
														{
															"nativeSrc": "3571:26:12",
															"nodeType": "YulAssignment",
															"src": "3571:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3583:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "3583:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3594:2:12",
																		"nodeType": "YulLiteral",
																		"src": "3594:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3579:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "3579:3:12"
																},
																"nativeSrc": "3579:18:12",
																"nodeType": "YulFunctionCall",
																"src": "3579:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3571:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "3571:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3651:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "3651:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3664:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "3664:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3675:1:12",
																				"nodeType": "YulLiteral",
																				"src": "3675:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3660:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "3660:3:12"
																		},
																		"nativeSrc": "3660:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "3660:17:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "3607:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "3607:43:12"
																},
																"nativeSrc": "3607:71:12",
																"nodeType": "YulFunctionCall",
																"src": "3607:71:12"
															},
															"nativeSrc": "3607:71:12",
															"nodeType": "YulExpressionStatement",
															"src": "3607:71:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "3463:222:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3533:9:12",
														"nodeType": "YulTypedName",
														"src": "3533:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3545:6:12",
														"nodeType": "YulTypedName",
														"src": "3545:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3556:4:12",
														"nodeType": "YulTypedName",
														"src": "3556:4:12",
														"type": ""
													}
												],
												"src": "3463:222:12"
											},
											{
												"body": {
													"nativeSrc": "3791:519:12",
													"nodeType": "YulBlock",
													"src": "3791:519:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "3837:83:12",
																"nodeType": "YulBlock",
																"src": "3837:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3839:77:12",
																				"nodeType": "YulIdentifier",
																				"src": "3839:77:12"
																			},
																			"nativeSrc": "3839:79:12",
																			"nodeType": "YulFunctionCall",
																			"src": "3839:79:12"
																		},
																		"nativeSrc": "3839:79:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "3839:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3812:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "3812:7:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3821:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "3821:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3808:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "3808:3:12"
																		},
																		"nativeSrc": "3808:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "3808:23:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3833:2:12",
																		"nodeType": "YulLiteral",
																		"src": "3833:2:12",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3804:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "3804:3:12"
																},
																"nativeSrc": "3804:32:12",
																"nodeType": "YulFunctionCall",
																"src": "3804:32:12"
															},
															"nativeSrc": "3801:119:12",
															"nodeType": "YulIf",
															"src": "3801:119:12"
														},
														{
															"nativeSrc": "3930:117:12",
															"nodeType": "YulBlock",
															"src": "3930:117:12",
															"statements": [
																{
																	"nativeSrc": "3945:15:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3945:15:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3959:1:12",
																		"nodeType": "YulLiteral",
																		"src": "3959:1:12",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3949:6:12",
																			"nodeType": "YulTypedName",
																			"src": "3949:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3974:63:12",
																	"nodeType": "YulAssignment",
																	"src": "3974:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4009:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "4009:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4020:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "4020:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4005:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "4005:3:12"
																				},
																				"nativeSrc": "4005:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "4005:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4029:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "4029:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "3984:20:12",
																			"nodeType": "YulIdentifier",
																			"src": "3984:20:12"
																		},
																		"nativeSrc": "3984:53:12",
																		"nodeType": "YulFunctionCall",
																		"src": "3984:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3974:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "3974:6:12"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4057:118:12",
															"nodeType": "YulBlock",
															"src": "4057:118:12",
															"statements": [
																{
																	"nativeSrc": "4072:16:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4072:16:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4086:2:12",
																		"nodeType": "YulLiteral",
																		"src": "4086:2:12",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4076:6:12",
																			"nodeType": "YulTypedName",
																			"src": "4076:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4102:63:12",
																	"nodeType": "YulAssignment",
																	"src": "4102:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4137:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "4137:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4148:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "4148:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4133:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "4133:3:12"
																				},
																				"nativeSrc": "4133:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "4133:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4157:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "4157:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "4112:20:12",
																			"nodeType": "YulIdentifier",
																			"src": "4112:20:12"
																		},
																		"nativeSrc": "4112:53:12",
																		"nodeType": "YulFunctionCall",
																		"src": "4112:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "4102:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "4102:6:12"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4185:118:12",
															"nodeType": "YulBlock",
															"src": "4185:118:12",
															"statements": [
																{
																	"nativeSrc": "4200:16:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4200:16:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4214:2:12",
																		"nodeType": "YulLiteral",
																		"src": "4214:2:12",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4204:6:12",
																			"nodeType": "YulTypedName",
																			"src": "4204:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4230:63:12",
																	"nodeType": "YulAssignment",
																	"src": "4230:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4265:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "4265:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4276:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "4276:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4261:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "4261:3:12"
																				},
																				"nativeSrc": "4261:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "4261:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4285:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "4285:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "4240:20:12",
																			"nodeType": "YulIdentifier",
																			"src": "4240:20:12"
																		},
																		"nativeSrc": "4240:53:12",
																		"nodeType": "YulFunctionCall",
																		"src": "4240:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "4230:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "4230:6:12"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nativeSrc": "3691:619:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3745:9:12",
														"nodeType": "YulTypedName",
														"src": "3745:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3756:7:12",
														"nodeType": "YulTypedName",
														"src": "3756:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3768:6:12",
														"nodeType": "YulTypedName",
														"src": "3768:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3776:6:12",
														"nodeType": "YulTypedName",
														"src": "3776:6:12",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "3784:6:12",
														"nodeType": "YulTypedName",
														"src": "3784:6:12",
														"type": ""
													}
												],
												"src": "3691:619:12"
											},
											{
												"body": {
													"nativeSrc": "4359:43:12",
													"nodeType": "YulBlock",
													"src": "4359:43:12",
													"statements": [
														{
															"nativeSrc": "4369:27:12",
															"nodeType": "YulAssignment",
															"src": "4369:27:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4384:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "4384:5:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4391:4:12",
																		"nodeType": "YulLiteral",
																		"src": "4391:4:12",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "4380:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "4380:3:12"
																},
																"nativeSrc": "4380:16:12",
																"nodeType": "YulFunctionCall",
																"src": "4380:16:12"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "4369:7:12",
																	"nodeType": "YulIdentifier",
																	"src": "4369:7:12"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nativeSrc": "4316:86:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4341:5:12",
														"nodeType": "YulTypedName",
														"src": "4341:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "4351:7:12",
														"nodeType": "YulTypedName",
														"src": "4351:7:12",
														"type": ""
													}
												],
												"src": "4316:86:12"
											},
											{
												"body": {
													"nativeSrc": "4469:51:12",
													"nodeType": "YulBlock",
													"src": "4469:51:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4486:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "4486:3:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4507:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "4507:5:12"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint8",
																			"nativeSrc": "4491:15:12",
																			"nodeType": "YulIdentifier",
																			"src": "4491:15:12"
																		},
																		"nativeSrc": "4491:22:12",
																		"nodeType": "YulFunctionCall",
																		"src": "4491:22:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4479:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "4479:6:12"
																},
																"nativeSrc": "4479:35:12",
																"nodeType": "YulFunctionCall",
																"src": "4479:35:12"
															},
															"nativeSrc": "4479:35:12",
															"nodeType": "YulExpressionStatement",
															"src": "4479:35:12"
														}
													]
												},
												"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
												"nativeSrc": "4408:112:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4457:5:12",
														"nodeType": "YulTypedName",
														"src": "4457:5:12",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "4464:3:12",
														"nodeType": "YulTypedName",
														"src": "4464:3:12",
														"type": ""
													}
												],
												"src": "4408:112:12"
											},
											{
												"body": {
													"nativeSrc": "4620:120:12",
													"nodeType": "YulBlock",
													"src": "4620:120:12",
													"statements": [
														{
															"nativeSrc": "4630:26:12",
															"nodeType": "YulAssignment",
															"src": "4630:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4642:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "4642:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4653:2:12",
																		"nodeType": "YulLiteral",
																		"src": "4653:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4638:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "4638:3:12"
																},
																"nativeSrc": "4638:18:12",
																"nodeType": "YulFunctionCall",
																"src": "4638:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4630:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "4630:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "4706:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "4706:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4719:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "4719:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4730:1:12",
																				"nodeType": "YulLiteral",
																				"src": "4730:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4715:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "4715:3:12"
																		},
																		"nativeSrc": "4715:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "4715:17:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
																	"nativeSrc": "4666:39:12",
																	"nodeType": "YulIdentifier",
																	"src": "4666:39:12"
																},
																"nativeSrc": "4666:67:12",
																"nodeType": "YulFunctionCall",
																"src": "4666:67:12"
															},
															"nativeSrc": "4666:67:12",
															"nodeType": "YulExpressionStatement",
															"src": "4666:67:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nativeSrc": "4526:214:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4592:9:12",
														"nodeType": "YulTypedName",
														"src": "4592:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4604:6:12",
														"nodeType": "YulTypedName",
														"src": "4604:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4615:4:12",
														"nodeType": "YulTypedName",
														"src": "4615:4:12",
														"type": ""
													}
												],
												"src": "4526:214:12"
											},
											{
												"body": {
													"nativeSrc": "4812:263:12",
													"nodeType": "YulBlock",
													"src": "4812:263:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "4858:83:12",
																"nodeType": "YulBlock",
																"src": "4858:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "4860:77:12",
																				"nodeType": "YulIdentifier",
																				"src": "4860:77:12"
																			},
																			"nativeSrc": "4860:79:12",
																			"nodeType": "YulFunctionCall",
																			"src": "4860:79:12"
																		},
																		"nativeSrc": "4860:79:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "4860:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4833:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "4833:7:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4842:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "4842:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4829:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "4829:3:12"
																		},
																		"nativeSrc": "4829:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "4829:23:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4854:2:12",
																		"nodeType": "YulLiteral",
																		"src": "4854:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4825:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "4825:3:12"
																},
																"nativeSrc": "4825:32:12",
																"nodeType": "YulFunctionCall",
																"src": "4825:32:12"
															},
															"nativeSrc": "4822:119:12",
															"nodeType": "YulIf",
															"src": "4822:119:12"
														},
														{
															"nativeSrc": "4951:117:12",
															"nodeType": "YulBlock",
															"src": "4951:117:12",
															"statements": [
																{
																	"nativeSrc": "4966:15:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4966:15:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4980:1:12",
																		"nodeType": "YulLiteral",
																		"src": "4980:1:12",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4970:6:12",
																			"nodeType": "YulTypedName",
																			"src": "4970:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4995:63:12",
																	"nodeType": "YulAssignment",
																	"src": "4995:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5030:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "5030:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5041:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "5041:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5026:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "5026:3:12"
																				},
																				"nativeSrc": "5026:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "5026:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5050:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "5050:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "5005:20:12",
																			"nodeType": "YulIdentifier",
																			"src": "5005:20:12"
																		},
																		"nativeSrc": "5005:53:12",
																		"nodeType": "YulFunctionCall",
																		"src": "5005:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "4995:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "4995:6:12"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "4746:329:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4782:9:12",
														"nodeType": "YulTypedName",
														"src": "4782:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4793:7:12",
														"nodeType": "YulTypedName",
														"src": "4793:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4805:6:12",
														"nodeType": "YulTypedName",
														"src": "4805:6:12",
														"type": ""
													}
												],
												"src": "4746:329:12"
											},
											{
												"body": {
													"nativeSrc": "5170:28:12",
													"nodeType": "YulBlock",
													"src": "5170:28:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5187:1:12",
																		"nodeType": "YulLiteral",
																		"src": "5187:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5190:1:12",
																		"nodeType": "YulLiteral",
																		"src": "5190:1:12",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "5180:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "5180:6:12"
																},
																"nativeSrc": "5180:12:12",
																"nodeType": "YulFunctionCall",
																"src": "5180:12:12"
															},
															"nativeSrc": "5180:12:12",
															"nodeType": "YulExpressionStatement",
															"src": "5180:12:12"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nativeSrc": "5081:117:12",
												"nodeType": "YulFunctionDefinition",
												"src": "5081:117:12"
											},
											{
												"body": {
													"nativeSrc": "5232:152:12",
													"nodeType": "YulBlock",
													"src": "5232:152:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5249:1:12",
																		"nodeType": "YulLiteral",
																		"src": "5249:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5252:77:12",
																		"nodeType": "YulLiteral",
																		"src": "5252:77:12",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5242:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "5242:6:12"
																},
																"nativeSrc": "5242:88:12",
																"nodeType": "YulFunctionCall",
																"src": "5242:88:12"
															},
															"nativeSrc": "5242:88:12",
															"nodeType": "YulExpressionStatement",
															"src": "5242:88:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5346:1:12",
																		"nodeType": "YulLiteral",
																		"src": "5346:1:12",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5349:4:12",
																		"nodeType": "YulLiteral",
																		"src": "5349:4:12",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5339:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "5339:6:12"
																},
																"nativeSrc": "5339:15:12",
																"nodeType": "YulFunctionCall",
																"src": "5339:15:12"
															},
															"nativeSrc": "5339:15:12",
															"nodeType": "YulExpressionStatement",
															"src": "5339:15:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5370:1:12",
																		"nodeType": "YulLiteral",
																		"src": "5370:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5373:4:12",
																		"nodeType": "YulLiteral",
																		"src": "5373:4:12",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "5363:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "5363:6:12"
																},
																"nativeSrc": "5363:15:12",
																"nodeType": "YulFunctionCall",
																"src": "5363:15:12"
															},
															"nativeSrc": "5363:15:12",
															"nodeType": "YulExpressionStatement",
															"src": "5363:15:12"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "5204:180:12",
												"nodeType": "YulFunctionDefinition",
												"src": "5204:180:12"
											},
											{
												"body": {
													"nativeSrc": "5433:238:12",
													"nodeType": "YulBlock",
													"src": "5433:238:12",
													"statements": [
														{
															"nativeSrc": "5443:58:12",
															"nodeType": "YulVariableDeclaration",
															"src": "5443:58:12",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "5465:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "5465:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nativeSrc": "5495:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "5495:4:12"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "5473:21:12",
																			"nodeType": "YulIdentifier",
																			"src": "5473:21:12"
																		},
																		"nativeSrc": "5473:27:12",
																		"nodeType": "YulFunctionCall",
																		"src": "5473:27:12"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5461:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "5461:3:12"
																},
																"nativeSrc": "5461:40:12",
																"nodeType": "YulFunctionCall",
																"src": "5461:40:12"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nativeSrc": "5447:10:12",
																	"nodeType": "YulTypedName",
																	"src": "5447:10:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "5612:22:12",
																"nodeType": "YulBlock",
																"src": "5612:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "5614:16:12",
																				"nodeType": "YulIdentifier",
																				"src": "5614:16:12"
																			},
																			"nativeSrc": "5614:18:12",
																			"nodeType": "YulFunctionCall",
																			"src": "5614:18:12"
																		},
																		"nativeSrc": "5614:18:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "5614:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "5555:10:12",
																				"nodeType": "YulIdentifier",
																				"src": "5555:10:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5567:18:12",
																				"nodeType": "YulLiteral",
																				"src": "5567:18:12",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "5552:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "5552:2:12"
																		},
																		"nativeSrc": "5552:34:12",
																		"nodeType": "YulFunctionCall",
																		"src": "5552:34:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "5591:10:12",
																				"nodeType": "YulIdentifier",
																				"src": "5591:10:12"
																			},
																			{
																				"name": "memPtr",
																				"nativeSrc": "5603:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "5603:6:12"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "5588:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "5588:2:12"
																		},
																		"nativeSrc": "5588:22:12",
																		"nodeType": "YulFunctionCall",
																		"src": "5588:22:12"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "5549:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "5549:2:12"
																},
																"nativeSrc": "5549:62:12",
																"nodeType": "YulFunctionCall",
																"src": "5549:62:12"
															},
															"nativeSrc": "5546:88:12",
															"nodeType": "YulIf",
															"src": "5546:88:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5650:2:12",
																		"nodeType": "YulLiteral",
																		"src": "5650:2:12",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nativeSrc": "5654:10:12",
																		"nodeType": "YulIdentifier",
																		"src": "5654:10:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5643:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "5643:6:12"
																},
																"nativeSrc": "5643:22:12",
																"nodeType": "YulFunctionCall",
																"src": "5643:22:12"
															},
															"nativeSrc": "5643:22:12",
															"nodeType": "YulExpressionStatement",
															"src": "5643:22:12"
														}
													]
												},
												"name": "finalize_allocation",
												"nativeSrc": "5390:281:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "5419:6:12",
														"nodeType": "YulTypedName",
														"src": "5419:6:12",
														"type": ""
													},
													{
														"name": "size",
														"nativeSrc": "5427:4:12",
														"nodeType": "YulTypedName",
														"src": "5427:4:12",
														"type": ""
													}
												],
												"src": "5390:281:12"
											},
											{
												"body": {
													"nativeSrc": "5718:88:12",
													"nodeType": "YulBlock",
													"src": "5718:88:12",
													"statements": [
														{
															"nativeSrc": "5728:30:12",
															"nodeType": "YulAssignment",
															"src": "5728:30:12",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nativeSrc": "5738:18:12",
																	"nodeType": "YulIdentifier",
																	"src": "5738:18:12"
																},
																"nativeSrc": "5738:20:12",
																"nodeType": "YulFunctionCall",
																"src": "5738:20:12"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "5728:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "5728:6:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "5787:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "5787:6:12"
																	},
																	{
																		"name": "size",
																		"nativeSrc": "5795:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "5795:4:12"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nativeSrc": "5767:19:12",
																	"nodeType": "YulIdentifier",
																	"src": "5767:19:12"
																},
																"nativeSrc": "5767:33:12",
																"nodeType": "YulFunctionCall",
																"src": "5767:33:12"
															},
															"nativeSrc": "5767:33:12",
															"nodeType": "YulExpressionStatement",
															"src": "5767:33:12"
														}
													]
												},
												"name": "allocate_memory",
												"nativeSrc": "5677:129:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nativeSrc": "5702:4:12",
														"nodeType": "YulTypedName",
														"src": "5702:4:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "5711:6:12",
														"nodeType": "YulTypedName",
														"src": "5711:6:12",
														"type": ""
													}
												],
												"src": "5677:129:12"
											},
											{
												"body": {
													"nativeSrc": "5894:229:12",
													"nodeType": "YulBlock",
													"src": "5894:229:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "5999:22:12",
																"nodeType": "YulBlock",
																"src": "5999:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "6001:16:12",
																				"nodeType": "YulIdentifier",
																				"src": "6001:16:12"
																			},
																			"nativeSrc": "6001:18:12",
																			"nodeType": "YulFunctionCall",
																			"src": "6001:18:12"
																		},
																		"nativeSrc": "6001:18:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "6001:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "5971:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "5971:6:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5979:18:12",
																		"nodeType": "YulLiteral",
																		"src": "5979:18:12",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "5968:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "5968:2:12"
																},
																"nativeSrc": "5968:30:12",
																"nodeType": "YulFunctionCall",
																"src": "5968:30:12"
															},
															"nativeSrc": "5965:56:12",
															"nodeType": "YulIf",
															"src": "5965:56:12"
														},
														{
															"nativeSrc": "6031:25:12",
															"nodeType": "YulAssignment",
															"src": "6031:25:12",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "6043:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "6043:6:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6051:4:12",
																		"nodeType": "YulLiteral",
																		"src": "6051:4:12",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "6039:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "6039:3:12"
																},
																"nativeSrc": "6039:17:12",
																"nodeType": "YulFunctionCall",
																"src": "6039:17:12"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "6031:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "6031:4:12"
																}
															]
														},
														{
															"nativeSrc": "6093:23:12",
															"nodeType": "YulAssignment",
															"src": "6093:23:12",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nativeSrc": "6105:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "6105:4:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6111:4:12",
																		"nodeType": "YulLiteral",
																		"src": "6111:4:12",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6101:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "6101:3:12"
																},
																"nativeSrc": "6101:15:12",
																"nodeType": "YulFunctionCall",
																"src": "6101:15:12"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "6093:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "6093:4:12"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr",
												"nativeSrc": "5812:311:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nativeSrc": "5878:6:12",
														"nodeType": "YulTypedName",
														"src": "5878:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nativeSrc": "5889:4:12",
														"nodeType": "YulTypedName",
														"src": "5889:4:12",
														"type": ""
													}
												],
												"src": "5812:311:12"
											},
											{
												"body": {
													"nativeSrc": "6218:28:12",
													"nodeType": "YulBlock",
													"src": "6218:28:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6235:1:12",
																		"nodeType": "YulLiteral",
																		"src": "6235:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6238:1:12",
																		"nodeType": "YulLiteral",
																		"src": "6238:1:12",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "6228:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "6228:6:12"
																},
																"nativeSrc": "6228:12:12",
																"nodeType": "YulFunctionCall",
																"src": "6228:12:12"
															},
															"nativeSrc": "6228:12:12",
															"nodeType": "YulExpressionStatement",
															"src": "6228:12:12"
														}
													]
												},
												"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
												"nativeSrc": "6129:117:12",
												"nodeType": "YulFunctionDefinition",
												"src": "6129:117:12"
											},
											{
												"body": {
													"nativeSrc": "6371:608:12",
													"nodeType": "YulBlock",
													"src": "6371:608:12",
													"statements": [
														{
															"nativeSrc": "6381:90:12",
															"nodeType": "YulAssignment",
															"src": "6381:90:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "6463:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "6463:6:12"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr",
																			"nativeSrc": "6406:56:12",
																			"nodeType": "YulIdentifier",
																			"src": "6406:56:12"
																		},
																		"nativeSrc": "6406:64:12",
																		"nodeType": "YulFunctionCall",
																		"src": "6406:64:12"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nativeSrc": "6390:15:12",
																	"nodeType": "YulIdentifier",
																	"src": "6390:15:12"
																},
																"nativeSrc": "6390:81:12",
																"nodeType": "YulFunctionCall",
																"src": "6390:81:12"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "6381:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "6381:5:12"
																}
															]
														},
														{
															"nativeSrc": "6480:16:12",
															"nodeType": "YulVariableDeclaration",
															"src": "6480:16:12",
															"value": {
																"name": "array",
																"nativeSrc": "6491:5:12",
																"nodeType": "YulIdentifier",
																"src": "6491:5:12"
															},
															"variables": [
																{
																	"name": "dst",
																	"nativeSrc": "6484:3:12",
																	"nodeType": "YulTypedName",
																	"src": "6484:3:12",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "6513:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "6513:5:12"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "6520:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "6520:6:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6506:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "6506:6:12"
																},
																"nativeSrc": "6506:21:12",
																"nodeType": "YulFunctionCall",
																"src": "6506:21:12"
															},
															"nativeSrc": "6506:21:12",
															"nodeType": "YulExpressionStatement",
															"src": "6506:21:12"
														},
														{
															"nativeSrc": "6536:23:12",
															"nodeType": "YulAssignment",
															"src": "6536:23:12",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "6547:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "6547:5:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6554:4:12",
																		"nodeType": "YulLiteral",
																		"src": "6554:4:12",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6543:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "6543:3:12"
																},
																"nativeSrc": "6543:16:12",
																"nodeType": "YulFunctionCall",
																"src": "6543:16:12"
															},
															"variableNames": [
																{
																	"name": "dst",
																	"nativeSrc": "6536:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "6536:3:12"
																}
															]
														},
														{
															"nativeSrc": "6569:44:12",
															"nodeType": "YulVariableDeclaration",
															"src": "6569:44:12",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "6587:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "6587:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "6599:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "6599:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6607:4:12",
																				"nodeType": "YulLiteral",
																				"src": "6607:4:12",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "6595:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "6595:3:12"
																		},
																		"nativeSrc": "6595:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "6595:17:12"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6583:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "6583:3:12"
																},
																"nativeSrc": "6583:30:12",
																"nodeType": "YulFunctionCall",
																"src": "6583:30:12"
															},
															"variables": [
																{
																	"name": "srcEnd",
																	"nativeSrc": "6573:6:12",
																	"nodeType": "YulTypedName",
																	"src": "6573:6:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "6641:103:12",
																"nodeType": "YulBlock",
																"src": "6641:103:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
																				"nativeSrc": "6655:77:12",
																				"nodeType": "YulIdentifier",
																				"src": "6655:77:12"
																			},
																			"nativeSrc": "6655:79:12",
																			"nodeType": "YulFunctionCall",
																			"src": "6655:79:12"
																		},
																		"nativeSrc": "6655:79:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "6655:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "srcEnd",
																		"nativeSrc": "6628:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "6628:6:12"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "6636:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "6636:3:12"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "6625:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "6625:2:12"
																},
																"nativeSrc": "6625:15:12",
																"nodeType": "YulFunctionCall",
																"src": "6625:15:12"
															},
															"nativeSrc": "6622:122:12",
															"nodeType": "YulIf",
															"src": "6622:122:12"
														},
														{
															"body": {
																"nativeSrc": "6829:144:12",
																"nodeType": "YulBlock",
																"src": "6829:144:12",
																"statements": [
																	{
																		"nativeSrc": "6844:21:12",
																		"nodeType": "YulVariableDeclaration",
																		"src": "6844:21:12",
																		"value": {
																			"name": "src",
																			"nativeSrc": "6862:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "6862:3:12"
																		},
																		"variables": [
																			{
																				"name": "elementPos",
																				"nativeSrc": "6848:10:12",
																				"nodeType": "YulTypedName",
																				"src": "6848:10:12",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nativeSrc": "6886:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "6886:3:12"
																				},
																				{
																					"arguments": [
																						{
																							"name": "elementPos",
																							"nativeSrc": "6912:10:12",
																							"nodeType": "YulIdentifier",
																							"src": "6912:10:12"
																						},
																						{
																							"name": "end",
																							"nativeSrc": "6924:3:12",
																							"nodeType": "YulIdentifier",
																							"src": "6924:3:12"
																						}
																					],
																					"functionName": {
																						"name": "abi_decode_t_uint256",
																						"nativeSrc": "6891:20:12",
																						"nodeType": "YulIdentifier",
																						"src": "6891:20:12"
																					},
																					"nativeSrc": "6891:37:12",
																					"nodeType": "YulFunctionCall",
																					"src": "6891:37:12"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "6879:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "6879:6:12"
																			},
																			"nativeSrc": "6879:50:12",
																			"nodeType": "YulFunctionCall",
																			"src": "6879:50:12"
																		},
																		"nativeSrc": "6879:50:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "6879:50:12"
																	},
																	{
																		"nativeSrc": "6942:21:12",
																		"nodeType": "YulAssignment",
																		"src": "6942:21:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nativeSrc": "6953:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "6953:3:12"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6958:4:12",
																					"nodeType": "YulLiteral",
																					"src": "6958:4:12",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "6949:3:12",
																				"nodeType": "YulIdentifier",
																				"src": "6949:3:12"
																			},
																			"nativeSrc": "6949:14:12",
																			"nodeType": "YulFunctionCall",
																			"src": "6949:14:12"
																		},
																		"variableNames": [
																			{
																				"name": "dst",
																				"nativeSrc": "6942:3:12",
																				"nodeType": "YulIdentifier",
																				"src": "6942:3:12"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "6782:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "6782:3:12"
																	},
																	{
																		"name": "srcEnd",
																		"nativeSrc": "6787:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "6787:6:12"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "6779:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "6779:2:12"
																},
																"nativeSrc": "6779:15:12",
																"nodeType": "YulFunctionCall",
																"src": "6779:15:12"
															},
															"nativeSrc": "6753:220:12",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "6795:25:12",
																"nodeType": "YulBlock",
																"src": "6795:25:12",
																"statements": [
																	{
																		"nativeSrc": "6797:21:12",
																		"nodeType": "YulAssignment",
																		"src": "6797:21:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nativeSrc": "6808:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "6808:3:12"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6813:4:12",
																					"nodeType": "YulLiteral",
																					"src": "6813:4:12",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "6804:3:12",
																				"nodeType": "YulIdentifier",
																				"src": "6804:3:12"
																			},
																			"nativeSrc": "6804:14:12",
																			"nodeType": "YulFunctionCall",
																			"src": "6804:14:12"
																		},
																		"variableNames": [
																			{
																				"name": "src",
																				"nativeSrc": "6797:3:12",
																				"nodeType": "YulIdentifier",
																				"src": "6797:3:12"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "6757:21:12",
																"nodeType": "YulBlock",
																"src": "6757:21:12",
																"statements": [
																	{
																		"nativeSrc": "6759:17:12",
																		"nodeType": "YulVariableDeclaration",
																		"src": "6759:17:12",
																		"value": {
																			"name": "offset",
																			"nativeSrc": "6770:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "6770:6:12"
																		},
																		"variables": [
																			{
																				"name": "src",
																				"nativeSrc": "6763:3:12",
																				"nodeType": "YulTypedName",
																				"src": "6763:3:12",
																				"type": ""
																			}
																		]
																	}
																]
															},
															"src": "6753:220:12"
														}
													]
												},
												"name": "abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr",
												"nativeSrc": "6269:710:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "6341:6:12",
														"nodeType": "YulTypedName",
														"src": "6341:6:12",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "6349:6:12",
														"nodeType": "YulTypedName",
														"src": "6349:6:12",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "6357:3:12",
														"nodeType": "YulTypedName",
														"src": "6357:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "6365:5:12",
														"nodeType": "YulTypedName",
														"src": "6365:5:12",
														"type": ""
													}
												],
												"src": "6269:710:12"
											},
											{
												"body": {
													"nativeSrc": "7079:293:12",
													"nodeType": "YulBlock",
													"src": "7079:293:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "7128:83:12",
																"nodeType": "YulBlock",
																"src": "7128:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nativeSrc": "7130:77:12",
																				"nodeType": "YulIdentifier",
																				"src": "7130:77:12"
																			},
																			"nativeSrc": "7130:79:12",
																			"nodeType": "YulFunctionCall",
																			"src": "7130:79:12"
																		},
																		"nativeSrc": "7130:79:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "7130:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "7107:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "7107:6:12"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "7115:4:12",
																						"nodeType": "YulLiteral",
																						"src": "7115:4:12",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7103:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "7103:3:12"
																				},
																				"nativeSrc": "7103:17:12",
																				"nodeType": "YulFunctionCall",
																				"src": "7103:17:12"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "7122:3:12",
																				"nodeType": "YulIdentifier",
																				"src": "7122:3:12"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "7099:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "7099:3:12"
																		},
																		"nativeSrc": "7099:27:12",
																		"nodeType": "YulFunctionCall",
																		"src": "7099:27:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "7092:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "7092:6:12"
																},
																"nativeSrc": "7092:35:12",
																"nodeType": "YulFunctionCall",
																"src": "7092:35:12"
															},
															"nativeSrc": "7089:122:12",
															"nodeType": "YulIf",
															"src": "7089:122:12"
														},
														{
															"nativeSrc": "7220:34:12",
															"nodeType": "YulVariableDeclaration",
															"src": "7220:34:12",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "7247:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "7247:6:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "7234:12:12",
																	"nodeType": "YulIdentifier",
																	"src": "7234:12:12"
																},
																"nativeSrc": "7234:20:12",
																"nodeType": "YulFunctionCall",
																"src": "7234:20:12"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "7224:6:12",
																	"nodeType": "YulTypedName",
																	"src": "7224:6:12",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "7263:103:12",
															"nodeType": "YulAssignment",
															"src": "7263:103:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "7339:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "7339:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7347:4:12",
																				"nodeType": "YulLiteral",
																				"src": "7347:4:12",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7335:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "7335:3:12"
																		},
																		"nativeSrc": "7335:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "7335:17:12"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "7354:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "7354:6:12"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "7362:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "7362:3:12"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr",
																	"nativeSrc": "7272:62:12",
																	"nodeType": "YulIdentifier",
																	"src": "7272:62:12"
																},
																"nativeSrc": "7272:94:12",
																"nodeType": "YulFunctionCall",
																"src": "7272:94:12"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "7263:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "7263:5:12"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_array$_t_uint256_$dyn_memory_ptr",
												"nativeSrc": "7002:370:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "7057:6:12",
														"nodeType": "YulTypedName",
														"src": "7057:6:12",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "7065:3:12",
														"nodeType": "YulTypedName",
														"src": "7065:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "7073:5:12",
														"nodeType": "YulTypedName",
														"src": "7073:5:12",
														"type": ""
													}
												],
												"src": "7002:370:12"
											},
											{
												"body": {
													"nativeSrc": "7503:704:12",
													"nodeType": "YulBlock",
													"src": "7503:704:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "7549:83:12",
																"nodeType": "YulBlock",
																"src": "7549:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "7551:77:12",
																				"nodeType": "YulIdentifier",
																				"src": "7551:77:12"
																			},
																			"nativeSrc": "7551:79:12",
																			"nodeType": "YulFunctionCall",
																			"src": "7551:79:12"
																		},
																		"nativeSrc": "7551:79:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "7551:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7524:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "7524:7:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "7533:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "7533:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "7520:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "7520:3:12"
																		},
																		"nativeSrc": "7520:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "7520:23:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7545:2:12",
																		"nodeType": "YulLiteral",
																		"src": "7545:2:12",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "7516:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "7516:3:12"
																},
																"nativeSrc": "7516:32:12",
																"nodeType": "YulFunctionCall",
																"src": "7516:32:12"
															},
															"nativeSrc": "7513:119:12",
															"nodeType": "YulIf",
															"src": "7513:119:12"
														},
														{
															"nativeSrc": "7642:117:12",
															"nodeType": "YulBlock",
															"src": "7642:117:12",
															"statements": [
																{
																	"nativeSrc": "7657:15:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "7657:15:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "7671:1:12",
																		"nodeType": "YulLiteral",
																		"src": "7671:1:12",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "7661:6:12",
																			"nodeType": "YulTypedName",
																			"src": "7661:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "7686:63:12",
																	"nodeType": "YulAssignment",
																	"src": "7686:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "7721:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "7721:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "7732:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "7732:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7717:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "7717:3:12"
																				},
																				"nativeSrc": "7717:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "7717:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7741:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "7741:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "7696:20:12",
																			"nodeType": "YulIdentifier",
																			"src": "7696:20:12"
																		},
																		"nativeSrc": "7696:53:12",
																		"nodeType": "YulFunctionCall",
																		"src": "7696:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "7686:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "7686:6:12"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "7769:303:12",
															"nodeType": "YulBlock",
															"src": "7769:303:12",
															"statements": [
																{
																	"nativeSrc": "7784:46:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "7784:46:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "7815:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "7815:9:12"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "7826:2:12",
																						"nodeType": "YulLiteral",
																						"src": "7826:2:12",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7811:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "7811:3:12"
																				},
																				"nativeSrc": "7811:18:12",
																				"nodeType": "YulFunctionCall",
																				"src": "7811:18:12"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "7798:12:12",
																			"nodeType": "YulIdentifier",
																			"src": "7798:12:12"
																		},
																		"nativeSrc": "7798:32:12",
																		"nodeType": "YulFunctionCall",
																		"src": "7798:32:12"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "7788:6:12",
																			"nodeType": "YulTypedName",
																			"src": "7788:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "7877:83:12",
																		"nodeType": "YulBlock",
																		"src": "7877:83:12",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "7879:77:12",
																						"nodeType": "YulIdentifier",
																						"src": "7879:77:12"
																					},
																					"nativeSrc": "7879:79:12",
																					"nodeType": "YulFunctionCall",
																					"src": "7879:79:12"
																				},
																				"nativeSrc": "7879:79:12",
																				"nodeType": "YulExpressionStatement",
																				"src": "7879:79:12"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "7849:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "7849:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7857:18:12",
																				"nodeType": "YulLiteral",
																				"src": "7857:18:12",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "7846:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "7846:2:12"
																		},
																		"nativeSrc": "7846:30:12",
																		"nodeType": "YulFunctionCall",
																		"src": "7846:30:12"
																	},
																	"nativeSrc": "7843:117:12",
																	"nodeType": "YulIf",
																	"src": "7843:117:12"
																},
																{
																	"nativeSrc": "7974:88:12",
																	"nodeType": "YulAssignment",
																	"src": "7974:88:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "8034:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "8034:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "8045:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "8045:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8030:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "8030:3:12"
																				},
																				"nativeSrc": "8030:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "8030:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8054:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "8054:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_array$_t_uint256_$dyn_memory_ptr",
																			"nativeSrc": "7984:45:12",
																			"nodeType": "YulIdentifier",
																			"src": "7984:45:12"
																		},
																		"nativeSrc": "7984:78:12",
																		"nodeType": "YulFunctionCall",
																		"src": "7984:78:12"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "7974:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "7974:6:12"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "8082:118:12",
															"nodeType": "YulBlock",
															"src": "8082:118:12",
															"statements": [
																{
																	"nativeSrc": "8097:16:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "8097:16:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "8111:2:12",
																		"nodeType": "YulLiteral",
																		"src": "8111:2:12",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "8101:6:12",
																			"nodeType": "YulTypedName",
																			"src": "8101:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "8127:63:12",
																	"nodeType": "YulAssignment",
																	"src": "8127:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "8162:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "8162:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "8173:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "8173:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8158:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "8158:3:12"
																				},
																				"nativeSrc": "8158:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "8158:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8182:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "8182:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "8137:20:12",
																			"nodeType": "YulIdentifier",
																			"src": "8137:20:12"
																		},
																		"nativeSrc": "8137:53:12",
																		"nodeType": "YulFunctionCall",
																		"src": "8137:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "8127:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "8127:6:12"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_array$_t_uint256_$dyn_memory_ptrt_uint256",
												"nativeSrc": "7378:829:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7457:9:12",
														"nodeType": "YulTypedName",
														"src": "7457:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "7468:7:12",
														"nodeType": "YulTypedName",
														"src": "7468:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "7480:6:12",
														"nodeType": "YulTypedName",
														"src": "7480:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "7488:6:12",
														"nodeType": "YulTypedName",
														"src": "7488:6:12",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "7496:6:12",
														"nodeType": "YulTypedName",
														"src": "7496:6:12",
														"type": ""
													}
												],
												"src": "7378:829:12"
											},
											{
												"body": {
													"nativeSrc": "8296:391:12",
													"nodeType": "YulBlock",
													"src": "8296:391:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "8342:83:12",
																"nodeType": "YulBlock",
																"src": "8342:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "8344:77:12",
																				"nodeType": "YulIdentifier",
																				"src": "8344:77:12"
																			},
																			"nativeSrc": "8344:79:12",
																			"nodeType": "YulFunctionCall",
																			"src": "8344:79:12"
																		},
																		"nativeSrc": "8344:79:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "8344:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8317:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "8317:7:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "8326:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "8326:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "8313:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "8313:3:12"
																		},
																		"nativeSrc": "8313:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "8313:23:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8338:2:12",
																		"nodeType": "YulLiteral",
																		"src": "8338:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "8309:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "8309:3:12"
																},
																"nativeSrc": "8309:32:12",
																"nodeType": "YulFunctionCall",
																"src": "8309:32:12"
															},
															"nativeSrc": "8306:119:12",
															"nodeType": "YulIf",
															"src": "8306:119:12"
														},
														{
															"nativeSrc": "8435:117:12",
															"nodeType": "YulBlock",
															"src": "8435:117:12",
															"statements": [
																{
																	"nativeSrc": "8450:15:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "8450:15:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "8464:1:12",
																		"nodeType": "YulLiteral",
																		"src": "8464:1:12",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "8454:6:12",
																			"nodeType": "YulTypedName",
																			"src": "8454:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "8479:63:12",
																	"nodeType": "YulAssignment",
																	"src": "8479:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "8514:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "8514:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "8525:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "8525:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8510:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "8510:3:12"
																				},
																				"nativeSrc": "8510:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "8510:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8534:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "8534:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "8489:20:12",
																			"nodeType": "YulIdentifier",
																			"src": "8489:20:12"
																		},
																		"nativeSrc": "8489:53:12",
																		"nodeType": "YulFunctionCall",
																		"src": "8489:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "8479:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "8479:6:12"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "8562:118:12",
															"nodeType": "YulBlock",
															"src": "8562:118:12",
															"statements": [
																{
																	"nativeSrc": "8577:16:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "8577:16:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "8591:2:12",
																		"nodeType": "YulLiteral",
																		"src": "8591:2:12",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "8581:6:12",
																			"nodeType": "YulTypedName",
																			"src": "8581:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "8607:63:12",
																	"nodeType": "YulAssignment",
																	"src": "8607:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "8642:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "8642:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "8653:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "8653:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8638:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "8638:3:12"
																				},
																				"nativeSrc": "8638:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "8638:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8662:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "8662:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "8617:20:12",
																			"nodeType": "YulIdentifier",
																			"src": "8617:20:12"
																		},
																		"nativeSrc": "8617:53:12",
																		"nodeType": "YulFunctionCall",
																		"src": "8617:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "8607:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "8607:6:12"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_address",
												"nativeSrc": "8213:474:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8258:9:12",
														"nodeType": "YulTypedName",
														"src": "8258:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "8269:7:12",
														"nodeType": "YulTypedName",
														"src": "8269:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "8281:6:12",
														"nodeType": "YulTypedName",
														"src": "8281:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "8289:6:12",
														"nodeType": "YulTypedName",
														"src": "8289:6:12",
														"type": ""
													}
												],
												"src": "8213:474:12"
											},
											{
												"body": {
													"nativeSrc": "8759:263:12",
													"nodeType": "YulBlock",
													"src": "8759:263:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "8805:83:12",
																"nodeType": "YulBlock",
																"src": "8805:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "8807:77:12",
																				"nodeType": "YulIdentifier",
																				"src": "8807:77:12"
																			},
																			"nativeSrc": "8807:79:12",
																			"nodeType": "YulFunctionCall",
																			"src": "8807:79:12"
																		},
																		"nativeSrc": "8807:79:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "8807:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8780:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "8780:7:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "8789:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "8789:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "8776:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "8776:3:12"
																		},
																		"nativeSrc": "8776:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "8776:23:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8801:2:12",
																		"nodeType": "YulLiteral",
																		"src": "8801:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "8772:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "8772:3:12"
																},
																"nativeSrc": "8772:32:12",
																"nodeType": "YulFunctionCall",
																"src": "8772:32:12"
															},
															"nativeSrc": "8769:119:12",
															"nodeType": "YulIf",
															"src": "8769:119:12"
														},
														{
															"nativeSrc": "8898:117:12",
															"nodeType": "YulBlock",
															"src": "8898:117:12",
															"statements": [
																{
																	"nativeSrc": "8913:15:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "8913:15:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "8927:1:12",
																		"nodeType": "YulLiteral",
																		"src": "8927:1:12",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "8917:6:12",
																			"nodeType": "YulTypedName",
																			"src": "8917:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "8942:63:12",
																	"nodeType": "YulAssignment",
																	"src": "8942:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "8977:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "8977:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "8988:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "8988:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8973:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "8973:3:12"
																				},
																				"nativeSrc": "8973:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "8973:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8997:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "8997:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "8952:20:12",
																			"nodeType": "YulIdentifier",
																			"src": "8952:20:12"
																		},
																		"nativeSrc": "8952:53:12",
																		"nodeType": "YulFunctionCall",
																		"src": "8952:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "8942:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "8942:6:12"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "8693:329:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8729:9:12",
														"nodeType": "YulTypedName",
														"src": "8729:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "8740:7:12",
														"nodeType": "YulTypedName",
														"src": "8740:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "8752:6:12",
														"nodeType": "YulTypedName",
														"src": "8752:6:12",
														"type": ""
													}
												],
												"src": "8693:329:12"
											},
											{
												"body": {
													"nativeSrc": "9093:53:12",
													"nodeType": "YulBlock",
													"src": "9093:53:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9110:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "9110:3:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "9133:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "9133:5:12"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "9115:17:12",
																			"nodeType": "YulIdentifier",
																			"src": "9115:17:12"
																		},
																		"nativeSrc": "9115:24:12",
																		"nodeType": "YulFunctionCall",
																		"src": "9115:24:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9103:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "9103:6:12"
																},
																"nativeSrc": "9103:37:12",
																"nodeType": "YulFunctionCall",
																"src": "9103:37:12"
															},
															"nativeSrc": "9103:37:12",
															"nodeType": "YulExpressionStatement",
															"src": "9103:37:12"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "9028:118:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "9081:5:12",
														"nodeType": "YulTypedName",
														"src": "9081:5:12",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "9088:3:12",
														"nodeType": "YulTypedName",
														"src": "9088:3:12",
														"type": ""
													}
												],
												"src": "9028:118:12"
											},
											{
												"body": {
													"nativeSrc": "9250:124:12",
													"nodeType": "YulBlock",
													"src": "9250:124:12",
													"statements": [
														{
															"nativeSrc": "9260:26:12",
															"nodeType": "YulAssignment",
															"src": "9260:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9272:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "9272:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9283:2:12",
																		"nodeType": "YulLiteral",
																		"src": "9283:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9268:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "9268:3:12"
																},
																"nativeSrc": "9268:18:12",
																"nodeType": "YulFunctionCall",
																"src": "9268:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9260:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "9260:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "9340:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "9340:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9353:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "9353:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9364:1:12",
																				"nodeType": "YulLiteral",
																				"src": "9364:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9349:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "9349:3:12"
																		},
																		"nativeSrc": "9349:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "9349:17:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "9296:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "9296:43:12"
																},
																"nativeSrc": "9296:71:12",
																"nodeType": "YulFunctionCall",
																"src": "9296:71:12"
															},
															"nativeSrc": "9296:71:12",
															"nodeType": "YulExpressionStatement",
															"src": "9296:71:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "9152:222:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9222:9:12",
														"nodeType": "YulTypedName",
														"src": "9222:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "9234:6:12",
														"nodeType": "YulTypedName",
														"src": "9234:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9245:4:12",
														"nodeType": "YulTypedName",
														"src": "9245:4:12",
														"type": ""
													}
												],
												"src": "9152:222:12"
											},
											{
												"body": {
													"nativeSrc": "9480:519:12",
													"nodeType": "YulBlock",
													"src": "9480:519:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "9526:83:12",
																"nodeType": "YulBlock",
																"src": "9526:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "9528:77:12",
																				"nodeType": "YulIdentifier",
																				"src": "9528:77:12"
																			},
																			"nativeSrc": "9528:79:12",
																			"nodeType": "YulFunctionCall",
																			"src": "9528:79:12"
																		},
																		"nativeSrc": "9528:79:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "9528:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9501:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "9501:7:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "9510:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "9510:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "9497:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "9497:3:12"
																		},
																		"nativeSrc": "9497:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "9497:23:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9522:2:12",
																		"nodeType": "YulLiteral",
																		"src": "9522:2:12",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "9493:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "9493:3:12"
																},
																"nativeSrc": "9493:32:12",
																"nodeType": "YulFunctionCall",
																"src": "9493:32:12"
															},
															"nativeSrc": "9490:119:12",
															"nodeType": "YulIf",
															"src": "9490:119:12"
														},
														{
															"nativeSrc": "9619:117:12",
															"nodeType": "YulBlock",
															"src": "9619:117:12",
															"statements": [
																{
																	"nativeSrc": "9634:15:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "9634:15:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "9648:1:12",
																		"nodeType": "YulLiteral",
																		"src": "9648:1:12",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "9638:6:12",
																			"nodeType": "YulTypedName",
																			"src": "9638:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "9663:63:12",
																	"nodeType": "YulAssignment",
																	"src": "9663:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "9698:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "9698:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "9709:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "9709:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "9694:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "9694:3:12"
																				},
																				"nativeSrc": "9694:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "9694:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9718:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "9718:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "9673:20:12",
																			"nodeType": "YulIdentifier",
																			"src": "9673:20:12"
																		},
																		"nativeSrc": "9673:53:12",
																		"nodeType": "YulFunctionCall",
																		"src": "9673:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "9663:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "9663:6:12"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "9746:118:12",
															"nodeType": "YulBlock",
															"src": "9746:118:12",
															"statements": [
																{
																	"nativeSrc": "9761:16:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "9761:16:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "9775:2:12",
																		"nodeType": "YulLiteral",
																		"src": "9775:2:12",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "9765:6:12",
																			"nodeType": "YulTypedName",
																			"src": "9765:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "9791:63:12",
																	"nodeType": "YulAssignment",
																	"src": "9791:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "9826:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "9826:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "9837:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "9837:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "9822:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "9822:3:12"
																				},
																				"nativeSrc": "9822:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "9822:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9846:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "9846:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "9801:20:12",
																			"nodeType": "YulIdentifier",
																			"src": "9801:20:12"
																		},
																		"nativeSrc": "9801:53:12",
																		"nodeType": "YulFunctionCall",
																		"src": "9801:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "9791:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "9791:6:12"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "9874:118:12",
															"nodeType": "YulBlock",
															"src": "9874:118:12",
															"statements": [
																{
																	"nativeSrc": "9889:16:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "9889:16:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "9903:2:12",
																		"nodeType": "YulLiteral",
																		"src": "9903:2:12",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "9893:6:12",
																			"nodeType": "YulTypedName",
																			"src": "9893:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "9919:63:12",
																	"nodeType": "YulAssignment",
																	"src": "9919:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "9954:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "9954:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "9965:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "9965:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "9950:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "9950:3:12"
																				},
																				"nativeSrc": "9950:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "9950:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9974:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "9974:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "9929:20:12",
																			"nodeType": "YulIdentifier",
																			"src": "9929:20:12"
																		},
																		"nativeSrc": "9929:53:12",
																		"nodeType": "YulFunctionCall",
																		"src": "9929:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "9919:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "9919:6:12"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_addresst_uint256",
												"nativeSrc": "9380:619:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9434:9:12",
														"nodeType": "YulTypedName",
														"src": "9434:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "9445:7:12",
														"nodeType": "YulTypedName",
														"src": "9445:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "9457:6:12",
														"nodeType": "YulTypedName",
														"src": "9457:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "9465:6:12",
														"nodeType": "YulTypedName",
														"src": "9465:6:12",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "9473:6:12",
														"nodeType": "YulTypedName",
														"src": "9473:6:12",
														"type": ""
													}
												],
												"src": "9380:619:12"
											},
											{
												"body": {
													"nativeSrc": "10131:206:12",
													"nodeType": "YulBlock",
													"src": "10131:206:12",
													"statements": [
														{
															"nativeSrc": "10141:26:12",
															"nodeType": "YulAssignment",
															"src": "10141:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10153:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "10153:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10164:2:12",
																		"nodeType": "YulLiteral",
																		"src": "10164:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10149:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "10149:3:12"
																},
																"nativeSrc": "10149:18:12",
																"nodeType": "YulFunctionCall",
																"src": "10149:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10141:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "10141:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "10221:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "10221:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10234:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "10234:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10245:1:12",
																				"nodeType": "YulLiteral",
																				"src": "10245:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10230:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "10230:3:12"
																		},
																		"nativeSrc": "10230:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "10230:17:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "10177:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "10177:43:12"
																},
																"nativeSrc": "10177:71:12",
																"nodeType": "YulFunctionCall",
																"src": "10177:71:12"
															},
															"nativeSrc": "10177:71:12",
															"nodeType": "YulExpressionStatement",
															"src": "10177:71:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "10302:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "10302:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10315:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "10315:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10326:2:12",
																				"nodeType": "YulLiteral",
																				"src": "10326:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10311:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "10311:3:12"
																		},
																		"nativeSrc": "10311:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "10311:18:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "10258:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "10258:43:12"
																},
																"nativeSrc": "10258:72:12",
																"nodeType": "YulFunctionCall",
																"src": "10258:72:12"
															},
															"nativeSrc": "10258:72:12",
															"nodeType": "YulExpressionStatement",
															"src": "10258:72:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "10005:332:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10095:9:12",
														"nodeType": "YulTypedName",
														"src": "10095:9:12",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "10107:6:12",
														"nodeType": "YulTypedName",
														"src": "10107:6:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "10115:6:12",
														"nodeType": "YulTypedName",
														"src": "10115:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10126:4:12",
														"nodeType": "YulTypedName",
														"src": "10126:4:12",
														"type": ""
													}
												],
												"src": "10005:332:12"
											},
											{
												"body": {
													"nativeSrc": "10426:391:12",
													"nodeType": "YulBlock",
													"src": "10426:391:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "10472:83:12",
																"nodeType": "YulBlock",
																"src": "10472:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "10474:77:12",
																				"nodeType": "YulIdentifier",
																				"src": "10474:77:12"
																			},
																			"nativeSrc": "10474:79:12",
																			"nodeType": "YulFunctionCall",
																			"src": "10474:79:12"
																		},
																		"nativeSrc": "10474:79:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "10474:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "10447:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "10447:7:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "10456:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "10456:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "10443:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "10443:3:12"
																		},
																		"nativeSrc": "10443:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "10443:23:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10468:2:12",
																		"nodeType": "YulLiteral",
																		"src": "10468:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "10439:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "10439:3:12"
																},
																"nativeSrc": "10439:32:12",
																"nodeType": "YulFunctionCall",
																"src": "10439:32:12"
															},
															"nativeSrc": "10436:119:12",
															"nodeType": "YulIf",
															"src": "10436:119:12"
														},
														{
															"nativeSrc": "10565:117:12",
															"nodeType": "YulBlock",
															"src": "10565:117:12",
															"statements": [
																{
																	"nativeSrc": "10580:15:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "10580:15:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "10594:1:12",
																		"nodeType": "YulLiteral",
																		"src": "10594:1:12",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "10584:6:12",
																			"nodeType": "YulTypedName",
																			"src": "10584:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "10609:63:12",
																	"nodeType": "YulAssignment",
																	"src": "10609:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "10644:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "10644:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "10655:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "10655:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "10640:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "10640:3:12"
																				},
																				"nativeSrc": "10640:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "10640:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "10664:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "10664:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "10619:20:12",
																			"nodeType": "YulIdentifier",
																			"src": "10619:20:12"
																		},
																		"nativeSrc": "10619:53:12",
																		"nodeType": "YulFunctionCall",
																		"src": "10619:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "10609:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "10609:6:12"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "10692:118:12",
															"nodeType": "YulBlock",
															"src": "10692:118:12",
															"statements": [
																{
																	"nativeSrc": "10707:16:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "10707:16:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "10721:2:12",
																		"nodeType": "YulLiteral",
																		"src": "10721:2:12",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "10711:6:12",
																			"nodeType": "YulTypedName",
																			"src": "10711:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "10737:63:12",
																	"nodeType": "YulAssignment",
																	"src": "10737:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "10772:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "10772:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "10783:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "10783:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "10768:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "10768:3:12"
																				},
																				"nativeSrc": "10768:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "10768:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "10792:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "10792:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "10747:20:12",
																			"nodeType": "YulIdentifier",
																			"src": "10747:20:12"
																		},
																		"nativeSrc": "10747:53:12",
																		"nodeType": "YulFunctionCall",
																		"src": "10747:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "10737:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "10737:6:12"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "10343:474:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10388:9:12",
														"nodeType": "YulTypedName",
														"src": "10388:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "10399:7:12",
														"nodeType": "YulTypedName",
														"src": "10399:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "10411:6:12",
														"nodeType": "YulTypedName",
														"src": "10411:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "10419:6:12",
														"nodeType": "YulTypedName",
														"src": "10419:6:12",
														"type": ""
													}
												],
												"src": "10343:474:12"
											},
											{
												"body": {
													"nativeSrc": "10878:53:12",
													"nodeType": "YulBlock",
													"src": "10878:53:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10895:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "10895:3:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "10918:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "10918:5:12"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "10900:17:12",
																			"nodeType": "YulIdentifier",
																			"src": "10900:17:12"
																		},
																		"nativeSrc": "10900:24:12",
																		"nodeType": "YulFunctionCall",
																		"src": "10900:24:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10888:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "10888:6:12"
																},
																"nativeSrc": "10888:37:12",
																"nodeType": "YulFunctionCall",
																"src": "10888:37:12"
															},
															"nativeSrc": "10888:37:12",
															"nodeType": "YulExpressionStatement",
															"src": "10888:37:12"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256",
												"nativeSrc": "10823:108:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "10866:5:12",
														"nodeType": "YulTypedName",
														"src": "10866:5:12",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "10873:3:12",
														"nodeType": "YulTypedName",
														"src": "10873:3:12",
														"type": ""
													}
												],
												"src": "10823:108:12"
											},
											{
												"body": {
													"nativeSrc": "11011:40:12",
													"nodeType": "YulBlock",
													"src": "11011:40:12",
													"statements": [
														{
															"nativeSrc": "11022:22:12",
															"nodeType": "YulAssignment",
															"src": "11022:22:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "11038:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "11038:5:12"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "11032:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "11032:5:12"
																},
																"nativeSrc": "11032:12:12",
																"nodeType": "YulFunctionCall",
																"src": "11032:12:12"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "11022:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "11022:6:12"
																}
															]
														}
													]
												},
												"name": "array_length_t_array$_t_uint256_$dyn_memory_ptr",
												"nativeSrc": "10937:114:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "10994:5:12",
														"nodeType": "YulTypedName",
														"src": "10994:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "11004:6:12",
														"nodeType": "YulTypedName",
														"src": "11004:6:12",
														"type": ""
													}
												],
												"src": "10937:114:12"
											},
											{
												"body": {
													"nativeSrc": "11158:73:12",
													"nodeType": "YulBlock",
													"src": "11158:73:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11175:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "11175:3:12"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "11180:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "11180:6:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11168:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "11168:6:12"
																},
																"nativeSrc": "11168:19:12",
																"nodeType": "YulFunctionCall",
																"src": "11168:19:12"
															},
															"nativeSrc": "11168:19:12",
															"nodeType": "YulExpressionStatement",
															"src": "11168:19:12"
														},
														{
															"nativeSrc": "11196:29:12",
															"nodeType": "YulAssignment",
															"src": "11196:29:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11215:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "11215:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11220:4:12",
																		"nodeType": "YulLiteral",
																		"src": "11220:4:12",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11211:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "11211:3:12"
																},
																"nativeSrc": "11211:14:12",
																"nodeType": "YulFunctionCall",
																"src": "11211:14:12"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "11196:11:12",
																	"nodeType": "YulIdentifier",
																	"src": "11196:11:12"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr",
												"nativeSrc": "11057:174:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "11130:3:12",
														"nodeType": "YulTypedName",
														"src": "11130:3:12",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "11135:6:12",
														"nodeType": "YulTypedName",
														"src": "11135:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "11146:11:12",
														"nodeType": "YulTypedName",
														"src": "11146:11:12",
														"type": ""
													}
												],
												"src": "11057:174:12"
											},
											{
												"body": {
													"nativeSrc": "11309:60:12",
													"nodeType": "YulBlock",
													"src": "11309:60:12",
													"statements": [
														{
															"nativeSrc": "11319:11:12",
															"nodeType": "YulAssignment",
															"src": "11319:11:12",
															"value": {
																"name": "ptr",
																"nativeSrc": "11327:3:12",
																"nodeType": "YulIdentifier",
																"src": "11327:3:12"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "11319:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "11319:4:12"
																}
															]
														},
														{
															"nativeSrc": "11340:22:12",
															"nodeType": "YulAssignment",
															"src": "11340:22:12",
															"value": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nativeSrc": "11352:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "11352:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11357:4:12",
																		"nodeType": "YulLiteral",
																		"src": "11357:4:12",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11348:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "11348:3:12"
																},
																"nativeSrc": "11348:14:12",
																"nodeType": "YulFunctionCall",
																"src": "11348:14:12"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "11340:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "11340:4:12"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_array$_t_uint256_$dyn_memory_ptr",
												"nativeSrc": "11237:132:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "11296:3:12",
														"nodeType": "YulTypedName",
														"src": "11296:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "11304:4:12",
														"nodeType": "YulTypedName",
														"src": "11304:4:12",
														"type": ""
													}
												],
												"src": "11237:132:12"
											},
											{
												"body": {
													"nativeSrc": "11455:99:12",
													"nodeType": "YulBlock",
													"src": "11455:99:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "11499:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "11499:6:12"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "11507:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "11507:3:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256",
																	"nativeSrc": "11465:33:12",
																	"nodeType": "YulIdentifier",
																	"src": "11465:33:12"
																},
																"nativeSrc": "11465:46:12",
																"nodeType": "YulFunctionCall",
																"src": "11465:46:12"
															},
															"nativeSrc": "11465:46:12",
															"nodeType": "YulExpressionStatement",
															"src": "11465:46:12"
														},
														{
															"nativeSrc": "11520:28:12",
															"nodeType": "YulAssignment",
															"src": "11520:28:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11538:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "11538:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11543:4:12",
																		"nodeType": "YulLiteral",
																		"src": "11543:4:12",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11534:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "11534:3:12"
																},
																"nativeSrc": "11534:14:12",
																"nodeType": "YulFunctionCall",
																"src": "11534:14:12"
															},
															"variableNames": [
																{
																	"name": "updatedPos",
																	"nativeSrc": "11520:10:12",
																	"nodeType": "YulIdentifier",
																	"src": "11520:10:12"
																}
															]
														}
													]
												},
												"name": "abi_encodeUpdatedPos_t_uint256_to_t_uint256",
												"nativeSrc": "11375:179:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value0",
														"nativeSrc": "11428:6:12",
														"nodeType": "YulTypedName",
														"src": "11428:6:12",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "11436:3:12",
														"nodeType": "YulTypedName",
														"src": "11436:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updatedPos",
														"nativeSrc": "11444:10:12",
														"nodeType": "YulTypedName",
														"src": "11444:10:12",
														"type": ""
													}
												],
												"src": "11375:179:12"
											},
											{
												"body": {
													"nativeSrc": "11635:38:12",
													"nodeType": "YulBlock",
													"src": "11635:38:12",
													"statements": [
														{
															"nativeSrc": "11645:22:12",
															"nodeType": "YulAssignment",
															"src": "11645:22:12",
															"value": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nativeSrc": "11657:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "11657:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11662:4:12",
																		"nodeType": "YulLiteral",
																		"src": "11662:4:12",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11653:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "11653:3:12"
																},
																"nativeSrc": "11653:14:12",
																"nodeType": "YulFunctionCall",
																"src": "11653:14:12"
															},
															"variableNames": [
																{
																	"name": "next",
																	"nativeSrc": "11645:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "11645:4:12"
																}
															]
														}
													]
												},
												"name": "array_nextElement_t_array$_t_uint256_$dyn_memory_ptr",
												"nativeSrc": "11560:113:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "11622:3:12",
														"nodeType": "YulTypedName",
														"src": "11622:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "next",
														"nativeSrc": "11630:4:12",
														"nodeType": "YulTypedName",
														"src": "11630:4:12",
														"type": ""
													}
												],
												"src": "11560:113:12"
											},
											{
												"body": {
													"nativeSrc": "11823:598:12",
													"nodeType": "YulBlock",
													"src": "11823:598:12",
													"statements": [
														{
															"nativeSrc": "11833:68:12",
															"nodeType": "YulVariableDeclaration",
															"src": "11833:68:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "11895:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "11895:5:12"
																	}
																],
																"functionName": {
																	"name": "array_length_t_array$_t_uint256_$dyn_memory_ptr",
																	"nativeSrc": "11847:47:12",
																	"nodeType": "YulIdentifier",
																	"src": "11847:47:12"
																},
																"nativeSrc": "11847:54:12",
																"nodeType": "YulFunctionCall",
																"src": "11847:54:12"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "11837:6:12",
																	"nodeType": "YulTypedName",
																	"src": "11837:6:12",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "11910:83:12",
															"nodeType": "YulAssignment",
															"src": "11910:83:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11981:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "11981:3:12"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "11986:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "11986:6:12"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr",
																	"nativeSrc": "11917:63:12",
																	"nodeType": "YulIdentifier",
																	"src": "11917:63:12"
																},
																"nativeSrc": "11917:76:12",
																"nodeType": "YulFunctionCall",
																"src": "11917:76:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "11910:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "11910:3:12"
																}
															]
														},
														{
															"nativeSrc": "12002:71:12",
															"nodeType": "YulVariableDeclaration",
															"src": "12002:71:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "12067:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "12067:5:12"
																	}
																],
																"functionName": {
																	"name": "array_dataslot_t_array$_t_uint256_$dyn_memory_ptr",
																	"nativeSrc": "12017:49:12",
																	"nodeType": "YulIdentifier",
																	"src": "12017:49:12"
																},
																"nativeSrc": "12017:56:12",
																"nodeType": "YulFunctionCall",
																"src": "12017:56:12"
															},
															"variables": [
																{
																	"name": "baseRef",
																	"nativeSrc": "12006:7:12",
																	"nodeType": "YulTypedName",
																	"src": "12006:7:12",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "12082:21:12",
															"nodeType": "YulVariableDeclaration",
															"src": "12082:21:12",
															"value": {
																"name": "baseRef",
																"nativeSrc": "12096:7:12",
																"nodeType": "YulIdentifier",
																"src": "12096:7:12"
															},
															"variables": [
																{
																	"name": "srcPtr",
																	"nativeSrc": "12086:6:12",
																	"nodeType": "YulTypedName",
																	"src": "12086:6:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "12172:224:12",
																"nodeType": "YulBlock",
																"src": "12172:224:12",
																"statements": [
																	{
																		"nativeSrc": "12186:34:12",
																		"nodeType": "YulVariableDeclaration",
																		"src": "12186:34:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nativeSrc": "12213:6:12",
																					"nodeType": "YulIdentifier",
																					"src": "12213:6:12"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "12207:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "12207:5:12"
																			},
																			"nativeSrc": "12207:13:12",
																			"nodeType": "YulFunctionCall",
																			"src": "12207:13:12"
																		},
																		"variables": [
																			{
																				"name": "elementValue0",
																				"nativeSrc": "12190:13:12",
																				"nodeType": "YulTypedName",
																				"src": "12190:13:12",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "12233:70:12",
																		"nodeType": "YulAssignment",
																		"src": "12233:70:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "elementValue0",
																					"nativeSrc": "12284:13:12",
																					"nodeType": "YulIdentifier",
																					"src": "12284:13:12"
																				},
																				{
																					"name": "pos",
																					"nativeSrc": "12299:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "12299:3:12"
																				}
																			],
																			"functionName": {
																				"name": "abi_encodeUpdatedPos_t_uint256_to_t_uint256",
																				"nativeSrc": "12240:43:12",
																				"nodeType": "YulIdentifier",
																				"src": "12240:43:12"
																			},
																			"nativeSrc": "12240:63:12",
																			"nodeType": "YulFunctionCall",
																			"src": "12240:63:12"
																		},
																		"variableNames": [
																			{
																				"name": "pos",
																				"nativeSrc": "12233:3:12",
																				"nodeType": "YulIdentifier",
																				"src": "12233:3:12"
																			}
																		]
																	},
																	{
																		"nativeSrc": "12316:70:12",
																		"nodeType": "YulAssignment",
																		"src": "12316:70:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nativeSrc": "12379:6:12",
																					"nodeType": "YulIdentifier",
																					"src": "12379:6:12"
																				}
																			],
																			"functionName": {
																				"name": "array_nextElement_t_array$_t_uint256_$dyn_memory_ptr",
																				"nativeSrc": "12326:52:12",
																				"nodeType": "YulIdentifier",
																				"src": "12326:52:12"
																			},
																			"nativeSrc": "12326:60:12",
																			"nodeType": "YulFunctionCall",
																			"src": "12326:60:12"
																		},
																		"variableNames": [
																			{
																				"name": "srcPtr",
																				"nativeSrc": "12316:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "12316:6:12"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nativeSrc": "12134:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "12134:1:12"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "12137:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "12137:6:12"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "12131:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "12131:2:12"
																},
																"nativeSrc": "12131:13:12",
																"nodeType": "YulFunctionCall",
																"src": "12131:13:12"
															},
															"nativeSrc": "12112:284:12",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "12145:18:12",
																"nodeType": "YulBlock",
																"src": "12145:18:12",
																"statements": [
																	{
																		"nativeSrc": "12147:14:12",
																		"nodeType": "YulAssignment",
																		"src": "12147:14:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nativeSrc": "12156:1:12",
																					"nodeType": "YulIdentifier",
																					"src": "12156:1:12"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "12159:1:12",
																					"nodeType": "YulLiteral",
																					"src": "12159:1:12",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "12152:3:12",
																				"nodeType": "YulIdentifier",
																				"src": "12152:3:12"
																			},
																			"nativeSrc": "12152:9:12",
																			"nodeType": "YulFunctionCall",
																			"src": "12152:9:12"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nativeSrc": "12147:1:12",
																				"nodeType": "YulIdentifier",
																				"src": "12147:1:12"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "12116:14:12",
																"nodeType": "YulBlock",
																"src": "12116:14:12",
																"statements": [
																	{
																		"nativeSrc": "12118:10:12",
																		"nodeType": "YulVariableDeclaration",
																		"src": "12118:10:12",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "12127:1:12",
																			"nodeType": "YulLiteral",
																			"src": "12127:1:12",
																			"type": "",
																			"value": "0"
																		},
																		"variables": [
																			{
																				"name": "i",
																				"nativeSrc": "12122:1:12",
																				"nodeType": "YulTypedName",
																				"src": "12122:1:12",
																				"type": ""
																			}
																		]
																	}
																]
															},
															"src": "12112:284:12"
														},
														{
															"nativeSrc": "12405:10:12",
															"nodeType": "YulAssignment",
															"src": "12405:10:12",
															"value": {
																"name": "pos",
																"nativeSrc": "12412:3:12",
																"nodeType": "YulIdentifier",
																"src": "12412:3:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "12405:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "12405:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr",
												"nativeSrc": "11709:712:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "11802:5:12",
														"nodeType": "YulTypedName",
														"src": "11802:5:12",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "11809:3:12",
														"nodeType": "YulTypedName",
														"src": "11809:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "11818:3:12",
														"nodeType": "YulTypedName",
														"src": "11818:3:12",
														"type": ""
													}
												],
												"src": "11709:712:12"
											},
											{
												"body": {
													"nativeSrc": "12621:704:12",
													"nodeType": "YulBlock",
													"src": "12621:704:12",
													"statements": [
														{
															"nativeSrc": "12631:26:12",
															"nodeType": "YulVariableDeclaration",
															"src": "12631:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12647:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "12647:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12652:4:12",
																		"nodeType": "YulLiteral",
																		"src": "12652:4:12",
																		"type": "",
																		"value": "0x60"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12643:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "12643:3:12"
																},
																"nativeSrc": "12643:14:12",
																"nodeType": "YulFunctionCall",
																"src": "12643:14:12"
															},
															"variables": [
																{
																	"name": "tail",
																	"nativeSrc": "12635:4:12",
																	"nodeType": "YulTypedName",
																	"src": "12635:4:12",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "12667:168:12",
															"nodeType": "YulBlock",
															"src": "12667:168:12",
															"statements": [
																{
																	"nativeSrc": "12706:43:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "12706:43:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "12736:5:12",
																						"nodeType": "YulIdentifier",
																						"src": "12736:5:12"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "12743:4:12",
																						"nodeType": "YulLiteral",
																						"src": "12743:4:12",
																						"type": "",
																						"value": "0x00"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "12732:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "12732:3:12"
																				},
																				"nativeSrc": "12732:16:12",
																				"nodeType": "YulFunctionCall",
																				"src": "12732:16:12"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "12726:5:12",
																			"nodeType": "YulIdentifier",
																			"src": "12726:5:12"
																		},
																		"nativeSrc": "12726:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "12726:23:12"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nativeSrc": "12710:12:12",
																			"nodeType": "YulTypedName",
																			"src": "12710:12:12",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nativeSrc": "12796:12:12",
																				"nodeType": "YulIdentifier",
																				"src": "12796:12:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "12814:3:12",
																						"nodeType": "YulIdentifier",
																						"src": "12814:3:12"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "12819:4:12",
																						"nodeType": "YulLiteral",
																						"src": "12819:4:12",
																						"type": "",
																						"value": "0x00"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "12810:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "12810:3:12"
																				},
																				"nativeSrc": "12810:14:12",
																				"nodeType": "YulFunctionCall",
																				"src": "12810:14:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint256_to_t_uint256",
																			"nativeSrc": "12762:33:12",
																			"nodeType": "YulIdentifier",
																			"src": "12762:33:12"
																		},
																		"nativeSrc": "12762:63:12",
																		"nodeType": "YulFunctionCall",
																		"src": "12762:63:12"
																	},
																	"nativeSrc": "12762:63:12",
																	"nodeType": "YulExpressionStatement",
																	"src": "12762:63:12"
																}
															]
														},
														{
															"nativeSrc": "12845:272:12",
															"nodeType": "YulBlock",
															"src": "12845:272:12",
															"statements": [
																{
																	"nativeSrc": "12887:43:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "12887:43:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "12917:5:12",
																						"nodeType": "YulIdentifier",
																						"src": "12917:5:12"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "12924:4:12",
																						"nodeType": "YulLiteral",
																						"src": "12924:4:12",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "12913:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "12913:3:12"
																				},
																				"nativeSrc": "12913:16:12",
																				"nodeType": "YulFunctionCall",
																				"src": "12913:16:12"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "12907:5:12",
																			"nodeType": "YulIdentifier",
																			"src": "12907:5:12"
																		},
																		"nativeSrc": "12907:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "12907:23:12"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nativeSrc": "12891:12:12",
																			"nodeType": "YulTypedName",
																			"src": "12891:12:12",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "12955:3:12",
																						"nodeType": "YulIdentifier",
																						"src": "12955:3:12"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "12960:4:12",
																						"nodeType": "YulLiteral",
																						"src": "12960:4:12",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "12951:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "12951:3:12"
																				},
																				"nativeSrc": "12951:14:12",
																				"nodeType": "YulFunctionCall",
																				"src": "12951:14:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "tail",
																						"nativeSrc": "12971:4:12",
																						"nodeType": "YulIdentifier",
																						"src": "12971:4:12"
																					},
																					{
																						"name": "pos",
																						"nativeSrc": "12977:3:12",
																						"nodeType": "YulIdentifier",
																						"src": "12977:3:12"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "12967:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "12967:3:12"
																				},
																				"nativeSrc": "12967:14:12",
																				"nodeType": "YulFunctionCall",
																				"src": "12967:14:12"
																			}
																		],
																		"functionName": {
																			"name": "mstore",
																			"nativeSrc": "12944:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "12944:6:12"
																		},
																		"nativeSrc": "12944:38:12",
																		"nodeType": "YulFunctionCall",
																		"src": "12944:38:12"
																	},
																	"nativeSrc": "12944:38:12",
																	"nodeType": "YulExpressionStatement",
																	"src": "12944:38:12"
																},
																{
																	"nativeSrc": "12995:111:12",
																	"nodeType": "YulAssignment",
																	"src": "12995:111:12",
																	"value": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nativeSrc": "13087:12:12",
																				"nodeType": "YulIdentifier",
																				"src": "13087:12:12"
																			},
																			{
																				"name": "tail",
																				"nativeSrc": "13101:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "13101:4:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr",
																			"nativeSrc": "13003:83:12",
																			"nodeType": "YulIdentifier",
																			"src": "13003:83:12"
																		},
																		"nativeSrc": "13003:103:12",
																		"nodeType": "YulFunctionCall",
																		"src": "13003:103:12"
																	},
																	"variableNames": [
																		{
																			"name": "tail",
																			"nativeSrc": "12995:4:12",
																			"nodeType": "YulIdentifier",
																			"src": "12995:4:12"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "13127:171:12",
															"nodeType": "YulBlock",
															"src": "13127:171:12",
															"statements": [
																{
																	"nativeSrc": "13169:43:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "13169:43:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "13199:5:12",
																						"nodeType": "YulIdentifier",
																						"src": "13199:5:12"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "13206:4:12",
																						"nodeType": "YulLiteral",
																						"src": "13206:4:12",
																						"type": "",
																						"value": "0x40"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "13195:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "13195:3:12"
																				},
																				"nativeSrc": "13195:16:12",
																				"nodeType": "YulFunctionCall",
																				"src": "13195:16:12"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "13189:5:12",
																			"nodeType": "YulIdentifier",
																			"src": "13189:5:12"
																		},
																		"nativeSrc": "13189:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "13189:23:12"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nativeSrc": "13173:12:12",
																			"nodeType": "YulTypedName",
																			"src": "13173:12:12",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nativeSrc": "13259:12:12",
																				"nodeType": "YulIdentifier",
																				"src": "13259:12:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "13277:3:12",
																						"nodeType": "YulIdentifier",
																						"src": "13277:3:12"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "13282:4:12",
																						"nodeType": "YulLiteral",
																						"src": "13282:4:12",
																						"type": "",
																						"value": "0x40"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "13273:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "13273:3:12"
																				},
																				"nativeSrc": "13273:14:12",
																				"nodeType": "YulFunctionCall",
																				"src": "13273:14:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint256_to_t_uint256",
																			"nativeSrc": "13225:33:12",
																			"nodeType": "YulIdentifier",
																			"src": "13225:33:12"
																		},
																		"nativeSrc": "13225:63:12",
																		"nodeType": "YulFunctionCall",
																		"src": "13225:63:12"
																	},
																	"nativeSrc": "13225:63:12",
																	"nodeType": "YulExpressionStatement",
																	"src": "13225:63:12"
																}
															]
														},
														{
															"nativeSrc": "13308:11:12",
															"nodeType": "YulAssignment",
															"src": "13308:11:12",
															"value": {
																"name": "tail",
																"nativeSrc": "13315:4:12",
																"nodeType": "YulIdentifier",
																"src": "13315:4:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "13308:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "13308:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_struct$_ShareBasket_$2702_memory_ptr_to_t_struct$_ShareBasket_$2702_memory_ptr_fromStack",
												"nativeSrc": "12489:836:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "12600:5:12",
														"nodeType": "YulTypedName",
														"src": "12600:5:12",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "12607:3:12",
														"nodeType": "YulTypedName",
														"src": "12607:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "12616:3:12",
														"nodeType": "YulTypedName",
														"src": "12616:3:12",
														"type": ""
													}
												],
												"src": "12489:836:12"
											},
											{
												"body": {
													"nativeSrc": "13487:233:12",
													"nodeType": "YulBlock",
													"src": "13487:233:12",
													"statements": [
														{
															"nativeSrc": "13497:26:12",
															"nodeType": "YulAssignment",
															"src": "13497:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "13509:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "13509:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13520:2:12",
																		"nodeType": "YulLiteral",
																		"src": "13520:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13505:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "13505:3:12"
																},
																"nativeSrc": "13505:18:12",
																"nodeType": "YulFunctionCall",
																"src": "13505:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13497:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "13497:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13544:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "13544:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13555:1:12",
																				"nodeType": "YulLiteral",
																				"src": "13555:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13540:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "13540:3:12"
																		},
																		"nativeSrc": "13540:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "13540:17:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "13563:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "13563:4:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "13569:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "13569:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "13559:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "13559:3:12"
																		},
																		"nativeSrc": "13559:20:12",
																		"nodeType": "YulFunctionCall",
																		"src": "13559:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13533:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "13533:6:12"
																},
																"nativeSrc": "13533:47:12",
																"nodeType": "YulFunctionCall",
																"src": "13533:47:12"
															},
															"nativeSrc": "13533:47:12",
															"nodeType": "YulExpressionStatement",
															"src": "13533:47:12"
														},
														{
															"nativeSrc": "13589:124:12",
															"nodeType": "YulAssignment",
															"src": "13589:124:12",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "13699:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "13699:6:12"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "13708:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "13708:4:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_struct$_ShareBasket_$2702_memory_ptr_to_t_struct$_ShareBasket_$2702_memory_ptr_fromStack",
																	"nativeSrc": "13597:101:12",
																	"nodeType": "YulIdentifier",
																	"src": "13597:101:12"
																},
																"nativeSrc": "13597:116:12",
																"nodeType": "YulFunctionCall",
																"src": "13597:116:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13589:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "13589:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_struct$_ShareBasket_$2702_memory_ptr__to_t_struct$_ShareBasket_$2702_memory_ptr__fromStack_reversed",
												"nativeSrc": "13331:389:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "13459:9:12",
														"nodeType": "YulTypedName",
														"src": "13459:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "13471:6:12",
														"nodeType": "YulTypedName",
														"src": "13471:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "13482:4:12",
														"nodeType": "YulTypedName",
														"src": "13482:4:12",
														"type": ""
													}
												],
												"src": "13331:389:12"
											},
											{
												"body": {
													"nativeSrc": "13754:152:12",
													"nodeType": "YulBlock",
													"src": "13754:152:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "13771:1:12",
																		"nodeType": "YulLiteral",
																		"src": "13771:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13774:77:12",
																		"nodeType": "YulLiteral",
																		"src": "13774:77:12",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13764:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "13764:6:12"
																},
																"nativeSrc": "13764:88:12",
																"nodeType": "YulFunctionCall",
																"src": "13764:88:12"
															},
															"nativeSrc": "13764:88:12",
															"nodeType": "YulExpressionStatement",
															"src": "13764:88:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "13868:1:12",
																		"nodeType": "YulLiteral",
																		"src": "13868:1:12",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13871:4:12",
																		"nodeType": "YulLiteral",
																		"src": "13871:4:12",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13861:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "13861:6:12"
																},
																"nativeSrc": "13861:15:12",
																"nodeType": "YulFunctionCall",
																"src": "13861:15:12"
															},
															"nativeSrc": "13861:15:12",
															"nodeType": "YulExpressionStatement",
															"src": "13861:15:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "13892:1:12",
																		"nodeType": "YulLiteral",
																		"src": "13892:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13895:4:12",
																		"nodeType": "YulLiteral",
																		"src": "13895:4:12",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "13885:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "13885:6:12"
																},
																"nativeSrc": "13885:15:12",
																"nodeType": "YulFunctionCall",
																"src": "13885:15:12"
															},
															"nativeSrc": "13885:15:12",
															"nodeType": "YulExpressionStatement",
															"src": "13885:15:12"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "13726:180:12",
												"nodeType": "YulFunctionDefinition",
												"src": "13726:180:12"
											},
											{
												"body": {
													"nativeSrc": "13963:269:12",
													"nodeType": "YulBlock",
													"src": "13963:269:12",
													"statements": [
														{
															"nativeSrc": "13973:22:12",
															"nodeType": "YulAssignment",
															"src": "13973:22:12",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "13987:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "13987:4:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13993:1:12",
																		"nodeType": "YulLiteral",
																		"src": "13993:1:12",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "13983:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "13983:3:12"
																},
																"nativeSrc": "13983:12:12",
																"nodeType": "YulFunctionCall",
																"src": "13983:12:12"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "13973:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "13973:6:12"
																}
															]
														},
														{
															"nativeSrc": "14004:38:12",
															"nodeType": "YulVariableDeclaration",
															"src": "14004:38:12",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "14034:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "14034:4:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14040:1:12",
																		"nodeType": "YulLiteral",
																		"src": "14040:1:12",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "14030:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "14030:3:12"
																},
																"nativeSrc": "14030:12:12",
																"nodeType": "YulFunctionCall",
																"src": "14030:12:12"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "14008:18:12",
																	"nodeType": "YulTypedName",
																	"src": "14008:18:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "14081:51:12",
																"nodeType": "YulBlock",
																"src": "14081:51:12",
																"statements": [
																	{
																		"nativeSrc": "14095:27:12",
																		"nodeType": "YulAssignment",
																		"src": "14095:27:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "14109:6:12",
																					"nodeType": "YulIdentifier",
																					"src": "14109:6:12"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "14117:4:12",
																					"nodeType": "YulLiteral",
																					"src": "14117:4:12",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "14105:3:12",
																				"nodeType": "YulIdentifier",
																				"src": "14105:3:12"
																			},
																			"nativeSrc": "14105:17:12",
																			"nodeType": "YulFunctionCall",
																			"src": "14105:17:12"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "14095:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "14095:6:12"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "14061:18:12",
																		"nodeType": "YulIdentifier",
																		"src": "14061:18:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "14054:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "14054:6:12"
																},
																"nativeSrc": "14054:26:12",
																"nodeType": "YulFunctionCall",
																"src": "14054:26:12"
															},
															"nativeSrc": "14051:81:12",
															"nodeType": "YulIf",
															"src": "14051:81:12"
														},
														{
															"body": {
																"nativeSrc": "14184:42:12",
																"nodeType": "YulBlock",
																"src": "14184:42:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "14198:16:12",
																				"nodeType": "YulIdentifier",
																				"src": "14198:16:12"
																			},
																			"nativeSrc": "14198:18:12",
																			"nodeType": "YulFunctionCall",
																			"src": "14198:18:12"
																		},
																		"nativeSrc": "14198:18:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "14198:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "14148:18:12",
																		"nodeType": "YulIdentifier",
																		"src": "14148:18:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "14171:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "14171:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14179:2:12",
																				"nodeType": "YulLiteral",
																				"src": "14179:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "14168:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "14168:2:12"
																		},
																		"nativeSrc": "14168:14:12",
																		"nodeType": "YulFunctionCall",
																		"src": "14168:14:12"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "14145:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "14145:2:12"
																},
																"nativeSrc": "14145:38:12",
																"nodeType": "YulFunctionCall",
																"src": "14145:38:12"
															},
															"nativeSrc": "14142:84:12",
															"nodeType": "YulIf",
															"src": "14142:84:12"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "13912:320:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "13947:4:12",
														"nodeType": "YulTypedName",
														"src": "13947:4:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "13956:6:12",
														"nodeType": "YulTypedName",
														"src": "13956:6:12",
														"type": ""
													}
												],
												"src": "13912:320:12"
											},
											{
												"body": {
													"nativeSrc": "14344:65:12",
													"nodeType": "YulBlock",
													"src": "14344:65:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "14366:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "14366:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14374:1:12",
																				"nodeType": "YulLiteral",
																				"src": "14374:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14362:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "14362:3:12"
																		},
																		"nativeSrc": "14362:14:12",
																		"nodeType": "YulFunctionCall",
																		"src": "14362:14:12"
																	},
																	{
																		"hexValue": "496e76616c6964206f776e65722061646472657373",
																		"kind": "string",
																		"nativeSrc": "14378:23:12",
																		"nodeType": "YulLiteral",
																		"src": "14378:23:12",
																		"type": "",
																		"value": "Invalid owner address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14355:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "14355:6:12"
																},
																"nativeSrc": "14355:47:12",
																"nodeType": "YulFunctionCall",
																"src": "14355:47:12"
															},
															"nativeSrc": "14355:47:12",
															"nodeType": "YulExpressionStatement",
															"src": "14355:47:12"
														}
													]
												},
												"name": "store_literal_in_memory_854cf043fa623ebed8453fda259d33de3f6e7493e6b8ff90fcfdd906ab498ce3",
												"nativeSrc": "14238:171:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "14336:6:12",
														"nodeType": "YulTypedName",
														"src": "14336:6:12",
														"type": ""
													}
												],
												"src": "14238:171:12"
											},
											{
												"body": {
													"nativeSrc": "14561:220:12",
													"nodeType": "YulBlock",
													"src": "14561:220:12",
													"statements": [
														{
															"nativeSrc": "14571:74:12",
															"nodeType": "YulAssignment",
															"src": "14571:74:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14637:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "14637:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14642:2:12",
																		"nodeType": "YulLiteral",
																		"src": "14642:2:12",
																		"type": "",
																		"value": "21"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "14578:58:12",
																	"nodeType": "YulIdentifier",
																	"src": "14578:58:12"
																},
																"nativeSrc": "14578:67:12",
																"nodeType": "YulFunctionCall",
																"src": "14578:67:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "14571:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "14571:3:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14743:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "14743:3:12"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_854cf043fa623ebed8453fda259d33de3f6e7493e6b8ff90fcfdd906ab498ce3",
																	"nativeSrc": "14654:88:12",
																	"nodeType": "YulIdentifier",
																	"src": "14654:88:12"
																},
																"nativeSrc": "14654:93:12",
																"nodeType": "YulFunctionCall",
																"src": "14654:93:12"
															},
															"nativeSrc": "14654:93:12",
															"nodeType": "YulExpressionStatement",
															"src": "14654:93:12"
														},
														{
															"nativeSrc": "14756:19:12",
															"nodeType": "YulAssignment",
															"src": "14756:19:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14767:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "14767:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14772:2:12",
																		"nodeType": "YulLiteral",
																		"src": "14772:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14763:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "14763:3:12"
																},
																"nativeSrc": "14763:12:12",
																"nodeType": "YulFunctionCall",
																"src": "14763:12:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "14756:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "14756:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_854cf043fa623ebed8453fda259d33de3f6e7493e6b8ff90fcfdd906ab498ce3_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "14415:366:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "14549:3:12",
														"nodeType": "YulTypedName",
														"src": "14549:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "14557:3:12",
														"nodeType": "YulTypedName",
														"src": "14557:3:12",
														"type": ""
													}
												],
												"src": "14415:366:12"
											},
											{
												"body": {
													"nativeSrc": "14958:248:12",
													"nodeType": "YulBlock",
													"src": "14958:248:12",
													"statements": [
														{
															"nativeSrc": "14968:26:12",
															"nodeType": "YulAssignment",
															"src": "14968:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "14980:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "14980:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14991:2:12",
																		"nodeType": "YulLiteral",
																		"src": "14991:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14976:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "14976:3:12"
																},
																"nativeSrc": "14976:18:12",
																"nodeType": "YulFunctionCall",
																"src": "14976:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14968:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "14968:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "15015:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "15015:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15026:1:12",
																				"nodeType": "YulLiteral",
																				"src": "15026:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15011:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "15011:3:12"
																		},
																		"nativeSrc": "15011:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "15011:17:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "15034:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "15034:4:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "15040:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "15040:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "15030:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "15030:3:12"
																		},
																		"nativeSrc": "15030:20:12",
																		"nodeType": "YulFunctionCall",
																		"src": "15030:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15004:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "15004:6:12"
																},
																"nativeSrc": "15004:47:12",
																"nodeType": "YulFunctionCall",
																"src": "15004:47:12"
															},
															"nativeSrc": "15004:47:12",
															"nodeType": "YulExpressionStatement",
															"src": "15004:47:12"
														},
														{
															"nativeSrc": "15060:139:12",
															"nodeType": "YulAssignment",
															"src": "15060:139:12",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "15194:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "15194:4:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_854cf043fa623ebed8453fda259d33de3f6e7493e6b8ff90fcfdd906ab498ce3_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "15068:124:12",
																	"nodeType": "YulIdentifier",
																	"src": "15068:124:12"
																},
																"nativeSrc": "15068:131:12",
																"nodeType": "YulFunctionCall",
																"src": "15068:131:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "15060:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "15060:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_854cf043fa623ebed8453fda259d33de3f6e7493e6b8ff90fcfdd906ab498ce3__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "14787:419:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "14938:9:12",
														"nodeType": "YulTypedName",
														"src": "14938:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "14953:4:12",
														"nodeType": "YulTypedName",
														"src": "14953:4:12",
														"type": ""
													}
												],
												"src": "14787:419:12"
											},
											{
												"body": {
													"nativeSrc": "15318:69:12",
													"nodeType": "YulBlock",
													"src": "15318:69:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "15340:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "15340:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15348:1:12",
																				"nodeType": "YulLiteral",
																				"src": "15348:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15336:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "15336:3:12"
																		},
																		"nativeSrc": "15336:14:12",
																		"nodeType": "YulFunctionCall",
																		"src": "15336:14:12"
																	},
																	{
																		"hexValue": "496e76616c696420726563697069656e742061646472657373",
																		"kind": "string",
																		"nativeSrc": "15352:27:12",
																		"nodeType": "YulLiteral",
																		"src": "15352:27:12",
																		"type": "",
																		"value": "Invalid recipient address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15329:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "15329:6:12"
																},
																"nativeSrc": "15329:51:12",
																"nodeType": "YulFunctionCall",
																"src": "15329:51:12"
															},
															"nativeSrc": "15329:51:12",
															"nodeType": "YulExpressionStatement",
															"src": "15329:51:12"
														}
													]
												},
												"name": "store_literal_in_memory_9296ff0c00c9773aeb7dfef423d0c5484d831f800b943533b0cf1300a3d8e8df",
												"nativeSrc": "15212:175:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "15310:6:12",
														"nodeType": "YulTypedName",
														"src": "15310:6:12",
														"type": ""
													}
												],
												"src": "15212:175:12"
											},
											{
												"body": {
													"nativeSrc": "15539:220:12",
													"nodeType": "YulBlock",
													"src": "15539:220:12",
													"statements": [
														{
															"nativeSrc": "15549:74:12",
															"nodeType": "YulAssignment",
															"src": "15549:74:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15615:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "15615:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15620:2:12",
																		"nodeType": "YulLiteral",
																		"src": "15620:2:12",
																		"type": "",
																		"value": "25"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "15556:58:12",
																	"nodeType": "YulIdentifier",
																	"src": "15556:58:12"
																},
																"nativeSrc": "15556:67:12",
																"nodeType": "YulFunctionCall",
																"src": "15556:67:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "15549:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "15549:3:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15721:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "15721:3:12"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_9296ff0c00c9773aeb7dfef423d0c5484d831f800b943533b0cf1300a3d8e8df",
																	"nativeSrc": "15632:88:12",
																	"nodeType": "YulIdentifier",
																	"src": "15632:88:12"
																},
																"nativeSrc": "15632:93:12",
																"nodeType": "YulFunctionCall",
																"src": "15632:93:12"
															},
															"nativeSrc": "15632:93:12",
															"nodeType": "YulExpressionStatement",
															"src": "15632:93:12"
														},
														{
															"nativeSrc": "15734:19:12",
															"nodeType": "YulAssignment",
															"src": "15734:19:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15745:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "15745:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15750:2:12",
																		"nodeType": "YulLiteral",
																		"src": "15750:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "15741:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "15741:3:12"
																},
																"nativeSrc": "15741:12:12",
																"nodeType": "YulFunctionCall",
																"src": "15741:12:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "15734:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "15734:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_9296ff0c00c9773aeb7dfef423d0c5484d831f800b943533b0cf1300a3d8e8df_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "15393:366:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "15527:3:12",
														"nodeType": "YulTypedName",
														"src": "15527:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "15535:3:12",
														"nodeType": "YulTypedName",
														"src": "15535:3:12",
														"type": ""
													}
												],
												"src": "15393:366:12"
											},
											{
												"body": {
													"nativeSrc": "15936:248:12",
													"nodeType": "YulBlock",
													"src": "15936:248:12",
													"statements": [
														{
															"nativeSrc": "15946:26:12",
															"nodeType": "YulAssignment",
															"src": "15946:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "15958:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "15958:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15969:2:12",
																		"nodeType": "YulLiteral",
																		"src": "15969:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "15954:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "15954:3:12"
																},
																"nativeSrc": "15954:18:12",
																"nodeType": "YulFunctionCall",
																"src": "15954:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "15946:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "15946:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "15993:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "15993:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16004:1:12",
																				"nodeType": "YulLiteral",
																				"src": "16004:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15989:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "15989:3:12"
																		},
																		"nativeSrc": "15989:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "15989:17:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "16012:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "16012:4:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "16018:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "16018:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "16008:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "16008:3:12"
																		},
																		"nativeSrc": "16008:20:12",
																		"nodeType": "YulFunctionCall",
																		"src": "16008:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15982:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "15982:6:12"
																},
																"nativeSrc": "15982:47:12",
																"nodeType": "YulFunctionCall",
																"src": "15982:47:12"
															},
															"nativeSrc": "15982:47:12",
															"nodeType": "YulExpressionStatement",
															"src": "15982:47:12"
														},
														{
															"nativeSrc": "16038:139:12",
															"nodeType": "YulAssignment",
															"src": "16038:139:12",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "16172:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "16172:4:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_9296ff0c00c9773aeb7dfef423d0c5484d831f800b943533b0cf1300a3d8e8df_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "16046:124:12",
																	"nodeType": "YulIdentifier",
																	"src": "16046:124:12"
																},
																"nativeSrc": "16046:131:12",
																"nodeType": "YulFunctionCall",
																"src": "16046:131:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "16038:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "16038:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9296ff0c00c9773aeb7dfef423d0c5484d831f800b943533b0cf1300a3d8e8df__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "15765:419:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "15916:9:12",
														"nodeType": "YulTypedName",
														"src": "15916:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "15931:4:12",
														"nodeType": "YulTypedName",
														"src": "15931:4:12",
														"type": ""
													}
												],
												"src": "15765:419:12"
											},
											{
												"body": {
													"nativeSrc": "16296:73:12",
													"nodeType": "YulBlock",
													"src": "16296:73:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "16318:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "16318:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16326:1:12",
																				"nodeType": "YulLiteral",
																				"src": "16326:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16314:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "16314:3:12"
																		},
																		"nativeSrc": "16314:14:12",
																		"nodeType": "YulFunctionCall",
																		"src": "16314:14:12"
																	},
																	{
																		"hexValue": "4e6f7420656e6f7567682073686172657320746f207472616e73666572",
																		"kind": "string",
																		"nativeSrc": "16330:31:12",
																		"nodeType": "YulLiteral",
																		"src": "16330:31:12",
																		"type": "",
																		"value": "Not enough shares to transfer"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16307:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "16307:6:12"
																},
																"nativeSrc": "16307:55:12",
																"nodeType": "YulFunctionCall",
																"src": "16307:55:12"
															},
															"nativeSrc": "16307:55:12",
															"nodeType": "YulExpressionStatement",
															"src": "16307:55:12"
														}
													]
												},
												"name": "store_literal_in_memory_0857c57456ecf2726586715f2441db771764d06c344926f01279ec4ec08abc3b",
												"nativeSrc": "16190:179:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "16288:6:12",
														"nodeType": "YulTypedName",
														"src": "16288:6:12",
														"type": ""
													}
												],
												"src": "16190:179:12"
											},
											{
												"body": {
													"nativeSrc": "16521:220:12",
													"nodeType": "YulBlock",
													"src": "16521:220:12",
													"statements": [
														{
															"nativeSrc": "16531:74:12",
															"nodeType": "YulAssignment",
															"src": "16531:74:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "16597:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "16597:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16602:2:12",
																		"nodeType": "YulLiteral",
																		"src": "16602:2:12",
																		"type": "",
																		"value": "29"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "16538:58:12",
																	"nodeType": "YulIdentifier",
																	"src": "16538:58:12"
																},
																"nativeSrc": "16538:67:12",
																"nodeType": "YulFunctionCall",
																"src": "16538:67:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "16531:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "16531:3:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "16703:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "16703:3:12"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_0857c57456ecf2726586715f2441db771764d06c344926f01279ec4ec08abc3b",
																	"nativeSrc": "16614:88:12",
																	"nodeType": "YulIdentifier",
																	"src": "16614:88:12"
																},
																"nativeSrc": "16614:93:12",
																"nodeType": "YulFunctionCall",
																"src": "16614:93:12"
															},
															"nativeSrc": "16614:93:12",
															"nodeType": "YulExpressionStatement",
															"src": "16614:93:12"
														},
														{
															"nativeSrc": "16716:19:12",
															"nodeType": "YulAssignment",
															"src": "16716:19:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "16727:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "16727:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16732:2:12",
																		"nodeType": "YulLiteral",
																		"src": "16732:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "16723:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "16723:3:12"
																},
																"nativeSrc": "16723:12:12",
																"nodeType": "YulFunctionCall",
																"src": "16723:12:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "16716:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "16716:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_0857c57456ecf2726586715f2441db771764d06c344926f01279ec4ec08abc3b_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "16375:366:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "16509:3:12",
														"nodeType": "YulTypedName",
														"src": "16509:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "16517:3:12",
														"nodeType": "YulTypedName",
														"src": "16517:3:12",
														"type": ""
													}
												],
												"src": "16375:366:12"
											},
											{
												"body": {
													"nativeSrc": "16918:248:12",
													"nodeType": "YulBlock",
													"src": "16918:248:12",
													"statements": [
														{
															"nativeSrc": "16928:26:12",
															"nodeType": "YulAssignment",
															"src": "16928:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "16940:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "16940:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16951:2:12",
																		"nodeType": "YulLiteral",
																		"src": "16951:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "16936:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "16936:3:12"
																},
																"nativeSrc": "16936:18:12",
																"nodeType": "YulFunctionCall",
																"src": "16936:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "16928:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "16928:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "16975:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "16975:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16986:1:12",
																				"nodeType": "YulLiteral",
																				"src": "16986:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16971:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "16971:3:12"
																		},
																		"nativeSrc": "16971:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "16971:17:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "16994:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "16994:4:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "17000:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "17000:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "16990:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "16990:3:12"
																		},
																		"nativeSrc": "16990:20:12",
																		"nodeType": "YulFunctionCall",
																		"src": "16990:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16964:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "16964:6:12"
																},
																"nativeSrc": "16964:47:12",
																"nodeType": "YulFunctionCall",
																"src": "16964:47:12"
															},
															"nativeSrc": "16964:47:12",
															"nodeType": "YulExpressionStatement",
															"src": "16964:47:12"
														},
														{
															"nativeSrc": "17020:139:12",
															"nodeType": "YulAssignment",
															"src": "17020:139:12",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "17154:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "17154:4:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_0857c57456ecf2726586715f2441db771764d06c344926f01279ec4ec08abc3b_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "17028:124:12",
																	"nodeType": "YulIdentifier",
																	"src": "17028:124:12"
																},
																"nativeSrc": "17028:131:12",
																"nodeType": "YulFunctionCall",
																"src": "17028:131:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "17020:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "17020:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0857c57456ecf2726586715f2441db771764d06c344926f01279ec4ec08abc3b__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "16747:419:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "16898:9:12",
														"nodeType": "YulTypedName",
														"src": "16898:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "16913:4:12",
														"nodeType": "YulTypedName",
														"src": "16913:4:12",
														"type": ""
													}
												],
												"src": "16747:419:12"
											},
											{
												"body": {
													"nativeSrc": "17200:152:12",
													"nodeType": "YulBlock",
													"src": "17200:152:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "17217:1:12",
																		"nodeType": "YulLiteral",
																		"src": "17217:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17220:77:12",
																		"nodeType": "YulLiteral",
																		"src": "17220:77:12",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "17210:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "17210:6:12"
																},
																"nativeSrc": "17210:88:12",
																"nodeType": "YulFunctionCall",
																"src": "17210:88:12"
															},
															"nativeSrc": "17210:88:12",
															"nodeType": "YulExpressionStatement",
															"src": "17210:88:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "17314:1:12",
																		"nodeType": "YulLiteral",
																		"src": "17314:1:12",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17317:4:12",
																		"nodeType": "YulLiteral",
																		"src": "17317:4:12",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "17307:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "17307:6:12"
																},
																"nativeSrc": "17307:15:12",
																"nodeType": "YulFunctionCall",
																"src": "17307:15:12"
															},
															"nativeSrc": "17307:15:12",
															"nodeType": "YulExpressionStatement",
															"src": "17307:15:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "17338:1:12",
																		"nodeType": "YulLiteral",
																		"src": "17338:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17341:4:12",
																		"nodeType": "YulLiteral",
																		"src": "17341:4:12",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "17331:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "17331:6:12"
																},
																"nativeSrc": "17331:15:12",
																"nodeType": "YulFunctionCall",
																"src": "17331:15:12"
															},
															"nativeSrc": "17331:15:12",
															"nodeType": "YulExpressionStatement",
															"src": "17331:15:12"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "17172:180:12",
												"nodeType": "YulFunctionDefinition",
												"src": "17172:180:12"
											},
											{
												"body": {
													"nativeSrc": "17403:149:12",
													"nodeType": "YulBlock",
													"src": "17403:149:12",
													"statements": [
														{
															"nativeSrc": "17413:25:12",
															"nodeType": "YulAssignment",
															"src": "17413:25:12",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "17436:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "17436:1:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "17418:17:12",
																	"nodeType": "YulIdentifier",
																	"src": "17418:17:12"
																},
																"nativeSrc": "17418:20:12",
																"nodeType": "YulFunctionCall",
																"src": "17418:20:12"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "17413:1:12",
																	"nodeType": "YulIdentifier",
																	"src": "17413:1:12"
																}
															]
														},
														{
															"nativeSrc": "17447:25:12",
															"nodeType": "YulAssignment",
															"src": "17447:25:12",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "17470:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "17470:1:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "17452:17:12",
																	"nodeType": "YulIdentifier",
																	"src": "17452:17:12"
																},
																"nativeSrc": "17452:20:12",
																"nodeType": "YulFunctionCall",
																"src": "17452:20:12"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "17447:1:12",
																	"nodeType": "YulIdentifier",
																	"src": "17447:1:12"
																}
															]
														},
														{
															"nativeSrc": "17481:17:12",
															"nodeType": "YulAssignment",
															"src": "17481:17:12",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "17493:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "17493:1:12"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "17496:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "17496:1:12"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "17489:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "17489:3:12"
																},
																"nativeSrc": "17489:9:12",
																"nodeType": "YulFunctionCall",
																"src": "17489:9:12"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nativeSrc": "17481:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "17481:4:12"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "17523:22:12",
																"nodeType": "YulBlock",
																"src": "17523:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "17525:16:12",
																				"nodeType": "YulIdentifier",
																				"src": "17525:16:12"
																			},
																			"nativeSrc": "17525:18:12",
																			"nodeType": "YulFunctionCall",
																			"src": "17525:18:12"
																		},
																		"nativeSrc": "17525:18:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "17525:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nativeSrc": "17514:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "17514:4:12"
																	},
																	{
																		"name": "x",
																		"nativeSrc": "17520:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "17520:1:12"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "17511:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "17511:2:12"
																},
																"nativeSrc": "17511:11:12",
																"nodeType": "YulFunctionCall",
																"src": "17511:11:12"
															},
															"nativeSrc": "17508:37:12",
															"nodeType": "YulIf",
															"src": "17508:37:12"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nativeSrc": "17358:194:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "17389:1:12",
														"nodeType": "YulTypedName",
														"src": "17389:1:12",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "17392:1:12",
														"nodeType": "YulTypedName",
														"src": "17392:1:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nativeSrc": "17398:4:12",
														"nodeType": "YulTypedName",
														"src": "17398:4:12",
														"type": ""
													}
												],
												"src": "17358:194:12"
											},
											{
												"body": {
													"nativeSrc": "17602:147:12",
													"nodeType": "YulBlock",
													"src": "17602:147:12",
													"statements": [
														{
															"nativeSrc": "17612:25:12",
															"nodeType": "YulAssignment",
															"src": "17612:25:12",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "17635:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "17635:1:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "17617:17:12",
																	"nodeType": "YulIdentifier",
																	"src": "17617:17:12"
																},
																"nativeSrc": "17617:20:12",
																"nodeType": "YulFunctionCall",
																"src": "17617:20:12"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "17612:1:12",
																	"nodeType": "YulIdentifier",
																	"src": "17612:1:12"
																}
															]
														},
														{
															"nativeSrc": "17646:25:12",
															"nodeType": "YulAssignment",
															"src": "17646:25:12",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "17669:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "17669:1:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "17651:17:12",
																	"nodeType": "YulIdentifier",
																	"src": "17651:17:12"
																},
																"nativeSrc": "17651:20:12",
																"nodeType": "YulFunctionCall",
																"src": "17651:20:12"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "17646:1:12",
																	"nodeType": "YulIdentifier",
																	"src": "17646:1:12"
																}
															]
														},
														{
															"nativeSrc": "17680:16:12",
															"nodeType": "YulAssignment",
															"src": "17680:16:12",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "17691:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "17691:1:12"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "17694:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "17694:1:12"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "17687:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "17687:3:12"
																},
																"nativeSrc": "17687:9:12",
																"nodeType": "YulFunctionCall",
																"src": "17687:9:12"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "17680:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "17680:3:12"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "17720:22:12",
																"nodeType": "YulBlock",
																"src": "17720:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "17722:16:12",
																				"nodeType": "YulIdentifier",
																				"src": "17722:16:12"
																			},
																			"nativeSrc": "17722:18:12",
																			"nodeType": "YulFunctionCall",
																			"src": "17722:18:12"
																		},
																		"nativeSrc": "17722:18:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "17722:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "17712:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "17712:1:12"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "17715:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "17715:3:12"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "17709:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "17709:2:12"
																},
																"nativeSrc": "17709:10:12",
																"nodeType": "YulFunctionCall",
																"src": "17709:10:12"
															},
															"nativeSrc": "17706:36:12",
															"nodeType": "YulIf",
															"src": "17706:36:12"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "17558:191:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "17589:1:12",
														"nodeType": "YulTypedName",
														"src": "17589:1:12",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "17592:1:12",
														"nodeType": "YulTypedName",
														"src": "17592:1:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "17598:3:12",
														"nodeType": "YulTypedName",
														"src": "17598:3:12",
														"type": ""
													}
												],
												"src": "17558:191:12"
											},
											{
												"body": {
													"nativeSrc": "17861:73:12",
													"nodeType": "YulBlock",
													"src": "17861:73:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "17883:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "17883:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17891:1:12",
																				"nodeType": "YulLiteral",
																				"src": "17891:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17879:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "17879:3:12"
																		},
																		"nativeSrc": "17879:14:12",
																		"nodeType": "YulFunctionCall",
																		"src": "17879:14:12"
																	},
																	{
																		"hexValue": "536861726573206d7573742062652067726561746572207468616e2030",
																		"kind": "string",
																		"nativeSrc": "17895:31:12",
																		"nodeType": "YulLiteral",
																		"src": "17895:31:12",
																		"type": "",
																		"value": "Shares must be greater than 0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "17872:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "17872:6:12"
																},
																"nativeSrc": "17872:55:12",
																"nodeType": "YulFunctionCall",
																"src": "17872:55:12"
															},
															"nativeSrc": "17872:55:12",
															"nodeType": "YulExpressionStatement",
															"src": "17872:55:12"
														}
													]
												},
												"name": "store_literal_in_memory_e24294be76b1cbd498453a3d6554ab510b6a9cdded1dafd11ec001f9ab7ca039",
												"nativeSrc": "17755:179:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "17853:6:12",
														"nodeType": "YulTypedName",
														"src": "17853:6:12",
														"type": ""
													}
												],
												"src": "17755:179:12"
											},
											{
												"body": {
													"nativeSrc": "18086:220:12",
													"nodeType": "YulBlock",
													"src": "18086:220:12",
													"statements": [
														{
															"nativeSrc": "18096:74:12",
															"nodeType": "YulAssignment",
															"src": "18096:74:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "18162:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "18162:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18167:2:12",
																		"nodeType": "YulLiteral",
																		"src": "18167:2:12",
																		"type": "",
																		"value": "29"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "18103:58:12",
																	"nodeType": "YulIdentifier",
																	"src": "18103:58:12"
																},
																"nativeSrc": "18103:67:12",
																"nodeType": "YulFunctionCall",
																"src": "18103:67:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "18096:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "18096:3:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "18268:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "18268:3:12"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_e24294be76b1cbd498453a3d6554ab510b6a9cdded1dafd11ec001f9ab7ca039",
																	"nativeSrc": "18179:88:12",
																	"nodeType": "YulIdentifier",
																	"src": "18179:88:12"
																},
																"nativeSrc": "18179:93:12",
																"nodeType": "YulFunctionCall",
																"src": "18179:93:12"
															},
															"nativeSrc": "18179:93:12",
															"nodeType": "YulExpressionStatement",
															"src": "18179:93:12"
														},
														{
															"nativeSrc": "18281:19:12",
															"nodeType": "YulAssignment",
															"src": "18281:19:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "18292:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "18292:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18297:2:12",
																		"nodeType": "YulLiteral",
																		"src": "18297:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "18288:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "18288:3:12"
																},
																"nativeSrc": "18288:12:12",
																"nodeType": "YulFunctionCall",
																"src": "18288:12:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "18281:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "18281:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_e24294be76b1cbd498453a3d6554ab510b6a9cdded1dafd11ec001f9ab7ca039_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "17940:366:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "18074:3:12",
														"nodeType": "YulTypedName",
														"src": "18074:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "18082:3:12",
														"nodeType": "YulTypedName",
														"src": "18082:3:12",
														"type": ""
													}
												],
												"src": "17940:366:12"
											},
											{
												"body": {
													"nativeSrc": "18483:248:12",
													"nodeType": "YulBlock",
													"src": "18483:248:12",
													"statements": [
														{
															"nativeSrc": "18493:26:12",
															"nodeType": "YulAssignment",
															"src": "18493:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "18505:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "18505:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18516:2:12",
																		"nodeType": "YulLiteral",
																		"src": "18516:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "18501:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "18501:3:12"
																},
																"nativeSrc": "18501:18:12",
																"nodeType": "YulFunctionCall",
																"src": "18501:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "18493:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "18493:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "18540:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "18540:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18551:1:12",
																				"nodeType": "YulLiteral",
																				"src": "18551:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18536:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "18536:3:12"
																		},
																		"nativeSrc": "18536:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "18536:17:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "18559:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "18559:4:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "18565:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "18565:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "18555:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "18555:3:12"
																		},
																		"nativeSrc": "18555:20:12",
																		"nodeType": "YulFunctionCall",
																		"src": "18555:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "18529:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "18529:6:12"
																},
																"nativeSrc": "18529:47:12",
																"nodeType": "YulFunctionCall",
																"src": "18529:47:12"
															},
															"nativeSrc": "18529:47:12",
															"nodeType": "YulExpressionStatement",
															"src": "18529:47:12"
														},
														{
															"nativeSrc": "18585:139:12",
															"nodeType": "YulAssignment",
															"src": "18585:139:12",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "18719:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "18719:4:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_e24294be76b1cbd498453a3d6554ab510b6a9cdded1dafd11ec001f9ab7ca039_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "18593:124:12",
																	"nodeType": "YulIdentifier",
																	"src": "18593:124:12"
																},
																"nativeSrc": "18593:131:12",
																"nodeType": "YulFunctionCall",
																"src": "18593:131:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "18585:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "18585:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_e24294be76b1cbd498453a3d6554ab510b6a9cdded1dafd11ec001f9ab7ca039__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "18312:419:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "18463:9:12",
														"nodeType": "YulTypedName",
														"src": "18463:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "18478:4:12",
														"nodeType": "YulTypedName",
														"src": "18478:4:12",
														"type": ""
													}
												],
												"src": "18312:419:12"
											},
											{
												"body": {
													"nativeSrc": "18843:71:12",
													"nodeType": "YulBlock",
													"src": "18843:71:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "18865:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "18865:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18873:1:12",
																				"nodeType": "YulLiteral",
																				"src": "18873:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18861:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "18861:3:12"
																		},
																		"nativeSrc": "18861:14:12",
																		"nodeType": "YulFunctionCall",
																		"src": "18861:14:12"
																	},
																	{
																		"hexValue": "4e6f7420656e6f7567682073686172657320617661696c61626c65",
																		"kind": "string",
																		"nativeSrc": "18877:29:12",
																		"nodeType": "YulLiteral",
																		"src": "18877:29:12",
																		"type": "",
																		"value": "Not enough shares available"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "18854:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "18854:6:12"
																},
																"nativeSrc": "18854:53:12",
																"nodeType": "YulFunctionCall",
																"src": "18854:53:12"
															},
															"nativeSrc": "18854:53:12",
															"nodeType": "YulExpressionStatement",
															"src": "18854:53:12"
														}
													]
												},
												"name": "store_literal_in_memory_c2664836f08f089a39d927da540bfbfc322ded0e69c3d2ff852ad8874067c6e6",
												"nativeSrc": "18737:177:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "18835:6:12",
														"nodeType": "YulTypedName",
														"src": "18835:6:12",
														"type": ""
													}
												],
												"src": "18737:177:12"
											},
											{
												"body": {
													"nativeSrc": "19066:220:12",
													"nodeType": "YulBlock",
													"src": "19066:220:12",
													"statements": [
														{
															"nativeSrc": "19076:74:12",
															"nodeType": "YulAssignment",
															"src": "19076:74:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "19142:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "19142:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19147:2:12",
																		"nodeType": "YulLiteral",
																		"src": "19147:2:12",
																		"type": "",
																		"value": "27"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "19083:58:12",
																	"nodeType": "YulIdentifier",
																	"src": "19083:58:12"
																},
																"nativeSrc": "19083:67:12",
																"nodeType": "YulFunctionCall",
																"src": "19083:67:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "19076:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "19076:3:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "19248:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "19248:3:12"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_c2664836f08f089a39d927da540bfbfc322ded0e69c3d2ff852ad8874067c6e6",
																	"nativeSrc": "19159:88:12",
																	"nodeType": "YulIdentifier",
																	"src": "19159:88:12"
																},
																"nativeSrc": "19159:93:12",
																"nodeType": "YulFunctionCall",
																"src": "19159:93:12"
															},
															"nativeSrc": "19159:93:12",
															"nodeType": "YulExpressionStatement",
															"src": "19159:93:12"
														},
														{
															"nativeSrc": "19261:19:12",
															"nodeType": "YulAssignment",
															"src": "19261:19:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "19272:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "19272:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19277:2:12",
																		"nodeType": "YulLiteral",
																		"src": "19277:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "19268:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "19268:3:12"
																},
																"nativeSrc": "19268:12:12",
																"nodeType": "YulFunctionCall",
																"src": "19268:12:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "19261:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "19261:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_c2664836f08f089a39d927da540bfbfc322ded0e69c3d2ff852ad8874067c6e6_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "18920:366:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "19054:3:12",
														"nodeType": "YulTypedName",
														"src": "19054:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "19062:3:12",
														"nodeType": "YulTypedName",
														"src": "19062:3:12",
														"type": ""
													}
												],
												"src": "18920:366:12"
											},
											{
												"body": {
													"nativeSrc": "19463:248:12",
													"nodeType": "YulBlock",
													"src": "19463:248:12",
													"statements": [
														{
															"nativeSrc": "19473:26:12",
															"nodeType": "YulAssignment",
															"src": "19473:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "19485:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "19485:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19496:2:12",
																		"nodeType": "YulLiteral",
																		"src": "19496:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "19481:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "19481:3:12"
																},
																"nativeSrc": "19481:18:12",
																"nodeType": "YulFunctionCall",
																"src": "19481:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "19473:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "19473:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "19520:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "19520:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "19531:1:12",
																				"nodeType": "YulLiteral",
																				"src": "19531:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "19516:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "19516:3:12"
																		},
																		"nativeSrc": "19516:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "19516:17:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "19539:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "19539:4:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "19545:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "19545:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "19535:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "19535:3:12"
																		},
																		"nativeSrc": "19535:20:12",
																		"nodeType": "YulFunctionCall",
																		"src": "19535:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "19509:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "19509:6:12"
																},
																"nativeSrc": "19509:47:12",
																"nodeType": "YulFunctionCall",
																"src": "19509:47:12"
															},
															"nativeSrc": "19509:47:12",
															"nodeType": "YulExpressionStatement",
															"src": "19509:47:12"
														},
														{
															"nativeSrc": "19565:139:12",
															"nodeType": "YulAssignment",
															"src": "19565:139:12",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "19699:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "19699:4:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_c2664836f08f089a39d927da540bfbfc322ded0e69c3d2ff852ad8874067c6e6_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "19573:124:12",
																	"nodeType": "YulIdentifier",
																	"src": "19573:124:12"
																},
																"nativeSrc": "19573:131:12",
																"nodeType": "YulFunctionCall",
																"src": "19573:131:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "19565:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "19565:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c2664836f08f089a39d927da540bfbfc322ded0e69c3d2ff852ad8874067c6e6__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "19292:419:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "19443:9:12",
														"nodeType": "YulTypedName",
														"src": "19443:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "19458:4:12",
														"nodeType": "YulTypedName",
														"src": "19458:4:12",
														"type": ""
													}
												],
												"src": "19292:419:12"
											},
											{
												"body": {
													"nativeSrc": "19823:73:12",
													"nodeType": "YulBlock",
													"src": "19823:73:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "19845:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "19845:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "19853:1:12",
																				"nodeType": "YulLiteral",
																				"src": "19853:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "19841:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "19841:3:12"
																		},
																		"nativeSrc": "19841:14:12",
																		"nodeType": "YulFunctionCall",
																		"src": "19841:14:12"
																	},
																	{
																		"hexValue": "496e73756666696369656e742073686172657320617661696c61626c65",
																		"kind": "string",
																		"nativeSrc": "19857:31:12",
																		"nodeType": "YulLiteral",
																		"src": "19857:31:12",
																		"type": "",
																		"value": "Insufficient shares available"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "19834:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "19834:6:12"
																},
																"nativeSrc": "19834:55:12",
																"nodeType": "YulFunctionCall",
																"src": "19834:55:12"
															},
															"nativeSrc": "19834:55:12",
															"nodeType": "YulExpressionStatement",
															"src": "19834:55:12"
														}
													]
												},
												"name": "store_literal_in_memory_d734de04f0d687b15d55ff3d832ab64e9874494a5534ef409e8a102ba868cc4c",
												"nativeSrc": "19717:179:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "19815:6:12",
														"nodeType": "YulTypedName",
														"src": "19815:6:12",
														"type": ""
													}
												],
												"src": "19717:179:12"
											},
											{
												"body": {
													"nativeSrc": "20048:220:12",
													"nodeType": "YulBlock",
													"src": "20048:220:12",
													"statements": [
														{
															"nativeSrc": "20058:74:12",
															"nodeType": "YulAssignment",
															"src": "20058:74:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "20124:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "20124:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20129:2:12",
																		"nodeType": "YulLiteral",
																		"src": "20129:2:12",
																		"type": "",
																		"value": "29"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "20065:58:12",
																	"nodeType": "YulIdentifier",
																	"src": "20065:58:12"
																},
																"nativeSrc": "20065:67:12",
																"nodeType": "YulFunctionCall",
																"src": "20065:67:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "20058:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "20058:3:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "20230:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "20230:3:12"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_d734de04f0d687b15d55ff3d832ab64e9874494a5534ef409e8a102ba868cc4c",
																	"nativeSrc": "20141:88:12",
																	"nodeType": "YulIdentifier",
																	"src": "20141:88:12"
																},
																"nativeSrc": "20141:93:12",
																"nodeType": "YulFunctionCall",
																"src": "20141:93:12"
															},
															"nativeSrc": "20141:93:12",
															"nodeType": "YulExpressionStatement",
															"src": "20141:93:12"
														},
														{
															"nativeSrc": "20243:19:12",
															"nodeType": "YulAssignment",
															"src": "20243:19:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "20254:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "20254:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20259:2:12",
																		"nodeType": "YulLiteral",
																		"src": "20259:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "20250:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "20250:3:12"
																},
																"nativeSrc": "20250:12:12",
																"nodeType": "YulFunctionCall",
																"src": "20250:12:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "20243:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "20243:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_d734de04f0d687b15d55ff3d832ab64e9874494a5534ef409e8a102ba868cc4c_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "19902:366:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "20036:3:12",
														"nodeType": "YulTypedName",
														"src": "20036:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "20044:3:12",
														"nodeType": "YulTypedName",
														"src": "20044:3:12",
														"type": ""
													}
												],
												"src": "19902:366:12"
											},
											{
												"body": {
													"nativeSrc": "20445:248:12",
													"nodeType": "YulBlock",
													"src": "20445:248:12",
													"statements": [
														{
															"nativeSrc": "20455:26:12",
															"nodeType": "YulAssignment",
															"src": "20455:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "20467:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "20467:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20478:2:12",
																		"nodeType": "YulLiteral",
																		"src": "20478:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "20463:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "20463:3:12"
																},
																"nativeSrc": "20463:18:12",
																"nodeType": "YulFunctionCall",
																"src": "20463:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "20455:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "20455:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "20502:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "20502:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "20513:1:12",
																				"nodeType": "YulLiteral",
																				"src": "20513:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "20498:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "20498:3:12"
																		},
																		"nativeSrc": "20498:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "20498:17:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "20521:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "20521:4:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "20527:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "20527:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "20517:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "20517:3:12"
																		},
																		"nativeSrc": "20517:20:12",
																		"nodeType": "YulFunctionCall",
																		"src": "20517:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "20491:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "20491:6:12"
																},
																"nativeSrc": "20491:47:12",
																"nodeType": "YulFunctionCall",
																"src": "20491:47:12"
															},
															"nativeSrc": "20491:47:12",
															"nodeType": "YulExpressionStatement",
															"src": "20491:47:12"
														},
														{
															"nativeSrc": "20547:139:12",
															"nodeType": "YulAssignment",
															"src": "20547:139:12",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "20681:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "20681:4:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_d734de04f0d687b15d55ff3d832ab64e9874494a5534ef409e8a102ba868cc4c_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "20555:124:12",
																	"nodeType": "YulIdentifier",
																	"src": "20555:124:12"
																},
																"nativeSrc": "20555:131:12",
																"nodeType": "YulFunctionCall",
																"src": "20555:131:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "20547:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "20547:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_d734de04f0d687b15d55ff3d832ab64e9874494a5534ef409e8a102ba868cc4c__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "20274:419:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "20425:9:12",
														"nodeType": "YulTypedName",
														"src": "20425:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "20440:4:12",
														"nodeType": "YulTypedName",
														"src": "20440:4:12",
														"type": ""
													}
												],
												"src": "20274:419:12"
											},
											{
												"body": {
													"nativeSrc": "20853:288:12",
													"nodeType": "YulBlock",
													"src": "20853:288:12",
													"statements": [
														{
															"nativeSrc": "20863:26:12",
															"nodeType": "YulAssignment",
															"src": "20863:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "20875:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "20875:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20886:2:12",
																		"nodeType": "YulLiteral",
																		"src": "20886:2:12",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "20871:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "20871:3:12"
																},
																"nativeSrc": "20871:18:12",
																"nodeType": "YulFunctionCall",
																"src": "20871:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "20863:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "20863:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "20943:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "20943:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "20956:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "20956:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "20967:1:12",
																				"nodeType": "YulLiteral",
																				"src": "20967:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "20952:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "20952:3:12"
																		},
																		"nativeSrc": "20952:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "20952:17:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "20899:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "20899:43:12"
																},
																"nativeSrc": "20899:71:12",
																"nodeType": "YulFunctionCall",
																"src": "20899:71:12"
															},
															"nativeSrc": "20899:71:12",
															"nodeType": "YulExpressionStatement",
															"src": "20899:71:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "21024:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "21024:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "21037:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "21037:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "21048:2:12",
																				"nodeType": "YulLiteral",
																				"src": "21048:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "21033:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "21033:3:12"
																		},
																		"nativeSrc": "21033:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "21033:18:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "20980:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "20980:43:12"
																},
																"nativeSrc": "20980:72:12",
																"nodeType": "YulFunctionCall",
																"src": "20980:72:12"
															},
															"nativeSrc": "20980:72:12",
															"nodeType": "YulExpressionStatement",
															"src": "20980:72:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "21106:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "21106:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "21119:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "21119:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "21130:2:12",
																				"nodeType": "YulLiteral",
																				"src": "21130:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "21115:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "21115:3:12"
																		},
																		"nativeSrc": "21115:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "21115:18:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "21062:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "21062:43:12"
																},
																"nativeSrc": "21062:72:12",
																"nodeType": "YulFunctionCall",
																"src": "21062:72:12"
															},
															"nativeSrc": "21062:72:12",
															"nodeType": "YulExpressionStatement",
															"src": "21062:72:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "20699:442:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "20809:9:12",
														"nodeType": "YulTypedName",
														"src": "20809:9:12",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "20821:6:12",
														"nodeType": "YulTypedName",
														"src": "20821:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "20829:6:12",
														"nodeType": "YulTypedName",
														"src": "20829:6:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "20837:6:12",
														"nodeType": "YulTypedName",
														"src": "20837:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "20848:4:12",
														"nodeType": "YulTypedName",
														"src": "20848:4:12",
														"type": ""
													}
												],
												"src": "20699:442:12"
											},
											{
												"body": {
													"nativeSrc": "21253:60:12",
													"nodeType": "YulBlock",
													"src": "21253:60:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "21275:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "21275:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "21283:1:12",
																				"nodeType": "YulLiteral",
																				"src": "21283:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "21271:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "21271:3:12"
																		},
																		"nativeSrc": "21271:14:12",
																		"nodeType": "YulFunctionCall",
																		"src": "21271:14:12"
																	},
																	{
																		"hexValue": "5061757361626c653a20706175736564",
																		"kind": "string",
																		"nativeSrc": "21287:18:12",
																		"nodeType": "YulLiteral",
																		"src": "21287:18:12",
																		"type": "",
																		"value": "Pausable: paused"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "21264:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "21264:6:12"
																},
																"nativeSrc": "21264:42:12",
																"nodeType": "YulFunctionCall",
																"src": "21264:42:12"
															},
															"nativeSrc": "21264:42:12",
															"nodeType": "YulExpressionStatement",
															"src": "21264:42:12"
														}
													]
												},
												"name": "store_literal_in_memory_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a",
												"nativeSrc": "21147:166:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "21245:6:12",
														"nodeType": "YulTypedName",
														"src": "21245:6:12",
														"type": ""
													}
												],
												"src": "21147:166:12"
											},
											{
												"body": {
													"nativeSrc": "21465:220:12",
													"nodeType": "YulBlock",
													"src": "21465:220:12",
													"statements": [
														{
															"nativeSrc": "21475:74:12",
															"nodeType": "YulAssignment",
															"src": "21475:74:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "21541:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "21541:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "21546:2:12",
																		"nodeType": "YulLiteral",
																		"src": "21546:2:12",
																		"type": "",
																		"value": "16"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "21482:58:12",
																	"nodeType": "YulIdentifier",
																	"src": "21482:58:12"
																},
																"nativeSrc": "21482:67:12",
																"nodeType": "YulFunctionCall",
																"src": "21482:67:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "21475:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "21475:3:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "21647:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "21647:3:12"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a",
																	"nativeSrc": "21558:88:12",
																	"nodeType": "YulIdentifier",
																	"src": "21558:88:12"
																},
																"nativeSrc": "21558:93:12",
																"nodeType": "YulFunctionCall",
																"src": "21558:93:12"
															},
															"nativeSrc": "21558:93:12",
															"nodeType": "YulExpressionStatement",
															"src": "21558:93:12"
														},
														{
															"nativeSrc": "21660:19:12",
															"nodeType": "YulAssignment",
															"src": "21660:19:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "21671:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "21671:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "21676:2:12",
																		"nodeType": "YulLiteral",
																		"src": "21676:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "21667:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "21667:3:12"
																},
																"nativeSrc": "21667:12:12",
																"nodeType": "YulFunctionCall",
																"src": "21667:12:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "21660:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "21660:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "21319:366:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "21453:3:12",
														"nodeType": "YulTypedName",
														"src": "21453:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "21461:3:12",
														"nodeType": "YulTypedName",
														"src": "21461:3:12",
														"type": ""
													}
												],
												"src": "21319:366:12"
											},
											{
												"body": {
													"nativeSrc": "21862:248:12",
													"nodeType": "YulBlock",
													"src": "21862:248:12",
													"statements": [
														{
															"nativeSrc": "21872:26:12",
															"nodeType": "YulAssignment",
															"src": "21872:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "21884:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "21884:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "21895:2:12",
																		"nodeType": "YulLiteral",
																		"src": "21895:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "21880:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "21880:3:12"
																},
																"nativeSrc": "21880:18:12",
																"nodeType": "YulFunctionCall",
																"src": "21880:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "21872:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "21872:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "21919:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "21919:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "21930:1:12",
																				"nodeType": "YulLiteral",
																				"src": "21930:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "21915:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "21915:3:12"
																		},
																		"nativeSrc": "21915:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "21915:17:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "21938:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "21938:4:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "21944:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "21944:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "21934:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "21934:3:12"
																		},
																		"nativeSrc": "21934:20:12",
																		"nodeType": "YulFunctionCall",
																		"src": "21934:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "21908:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "21908:6:12"
																},
																"nativeSrc": "21908:47:12",
																"nodeType": "YulFunctionCall",
																"src": "21908:47:12"
															},
															"nativeSrc": "21908:47:12",
															"nodeType": "YulExpressionStatement",
															"src": "21908:47:12"
														},
														{
															"nativeSrc": "21964:139:12",
															"nodeType": "YulAssignment",
															"src": "21964:139:12",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "22098:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "22098:4:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "21972:124:12",
																	"nodeType": "YulIdentifier",
																	"src": "21972:124:12"
																},
																"nativeSrc": "21972:131:12",
																"nodeType": "YulFunctionCall",
																"src": "21972:131:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "21964:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "21964:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "21691:419:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "21842:9:12",
														"nodeType": "YulTypedName",
														"src": "21842:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "21857:4:12",
														"nodeType": "YulTypedName",
														"src": "21857:4:12",
														"type": ""
													}
												],
												"src": "21691:419:12"
											},
											{
												"body": {
													"nativeSrc": "22222:64:12",
													"nodeType": "YulBlock",
													"src": "22222:64:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "22244:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "22244:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "22252:1:12",
																				"nodeType": "YulLiteral",
																				"src": "22252:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "22240:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "22240:3:12"
																		},
																		"nativeSrc": "22240:14:12",
																		"nodeType": "YulFunctionCall",
																		"src": "22240:14:12"
																	},
																	{
																		"hexValue": "5061757361626c653a206e6f7420706175736564",
																		"kind": "string",
																		"nativeSrc": "22256:22:12",
																		"nodeType": "YulLiteral",
																		"src": "22256:22:12",
																		"type": "",
																		"value": "Pausable: not paused"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "22233:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "22233:6:12"
																},
																"nativeSrc": "22233:46:12",
																"nodeType": "YulFunctionCall",
																"src": "22233:46:12"
															},
															"nativeSrc": "22233:46:12",
															"nodeType": "YulExpressionStatement",
															"src": "22233:46:12"
														}
													]
												},
												"name": "store_literal_in_memory_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a",
												"nativeSrc": "22116:170:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "22214:6:12",
														"nodeType": "YulTypedName",
														"src": "22214:6:12",
														"type": ""
													}
												],
												"src": "22116:170:12"
											},
											{
												"body": {
													"nativeSrc": "22438:220:12",
													"nodeType": "YulBlock",
													"src": "22438:220:12",
													"statements": [
														{
															"nativeSrc": "22448:74:12",
															"nodeType": "YulAssignment",
															"src": "22448:74:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "22514:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "22514:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "22519:2:12",
																		"nodeType": "YulLiteral",
																		"src": "22519:2:12",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "22455:58:12",
																	"nodeType": "YulIdentifier",
																	"src": "22455:58:12"
																},
																"nativeSrc": "22455:67:12",
																"nodeType": "YulFunctionCall",
																"src": "22455:67:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "22448:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "22448:3:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "22620:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "22620:3:12"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a",
																	"nativeSrc": "22531:88:12",
																	"nodeType": "YulIdentifier",
																	"src": "22531:88:12"
																},
																"nativeSrc": "22531:93:12",
																"nodeType": "YulFunctionCall",
																"src": "22531:93:12"
															},
															"nativeSrc": "22531:93:12",
															"nodeType": "YulExpressionStatement",
															"src": "22531:93:12"
														},
														{
															"nativeSrc": "22633:19:12",
															"nodeType": "YulAssignment",
															"src": "22633:19:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "22644:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "22644:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "22649:2:12",
																		"nodeType": "YulLiteral",
																		"src": "22649:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "22640:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "22640:3:12"
																},
																"nativeSrc": "22640:12:12",
																"nodeType": "YulFunctionCall",
																"src": "22640:12:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "22633:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "22633:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "22292:366:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "22426:3:12",
														"nodeType": "YulTypedName",
														"src": "22426:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "22434:3:12",
														"nodeType": "YulTypedName",
														"src": "22434:3:12",
														"type": ""
													}
												],
												"src": "22292:366:12"
											},
											{
												"body": {
													"nativeSrc": "22835:248:12",
													"nodeType": "YulBlock",
													"src": "22835:248:12",
													"statements": [
														{
															"nativeSrc": "22845:26:12",
															"nodeType": "YulAssignment",
															"src": "22845:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "22857:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "22857:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "22868:2:12",
																		"nodeType": "YulLiteral",
																		"src": "22868:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "22853:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "22853:3:12"
																},
																"nativeSrc": "22853:18:12",
																"nodeType": "YulFunctionCall",
																"src": "22853:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "22845:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "22845:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "22892:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "22892:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "22903:1:12",
																				"nodeType": "YulLiteral",
																				"src": "22903:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "22888:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "22888:3:12"
																		},
																		"nativeSrc": "22888:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "22888:17:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "22911:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "22911:4:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "22917:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "22917:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "22907:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "22907:3:12"
																		},
																		"nativeSrc": "22907:20:12",
																		"nodeType": "YulFunctionCall",
																		"src": "22907:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "22881:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "22881:6:12"
																},
																"nativeSrc": "22881:47:12",
																"nodeType": "YulFunctionCall",
																"src": "22881:47:12"
															},
															"nativeSrc": "22881:47:12",
															"nodeType": "YulExpressionStatement",
															"src": "22881:47:12"
														},
														{
															"nativeSrc": "22937:139:12",
															"nodeType": "YulAssignment",
															"src": "22937:139:12",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "23071:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "23071:4:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "22945:124:12",
																	"nodeType": "YulIdentifier",
																	"src": "22945:124:12"
																},
																"nativeSrc": "22945:131:12",
																"nodeType": "YulFunctionCall",
																"src": "22945:131:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "22937:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "22937:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "22664:419:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "22815:9:12",
														"nodeType": "YulTypedName",
														"src": "22815:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "22830:4:12",
														"nodeType": "YulTypedName",
														"src": "22830:4:12",
														"type": ""
													}
												],
												"src": "22664:419:12"
											}
										]
									},
									"contents": "{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n\n        mcopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := mul(length, 0x20)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() {\n        revert(0, 0)\n    }\n\n    // uint256[]\n    function abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr(offset, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr(length))\n        let dst := array\n\n        mstore(array, length)\n        dst := add(array, 0x20)\n\n        let srcEnd := add(offset, mul(length, 0x20))\n        if gt(srcEnd, end) {\n            revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef()\n        }\n        for { let src := offset } lt(src, srcEnd) { src := add(src, 0x20) }\n        {\n\n            let elementPos := src\n\n            mstore(dst, abi_decode_t_uint256(elementPos, end))\n            dst := add(dst, 0x20)\n        }\n    }\n\n    // uint256[]\n    function abi_decode_t_array$_t_uint256_$dyn_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_uint256t_array$_t_uint256_$dyn_memory_ptrt_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_array$_t_uint256_$dyn_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256t_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_uint256t_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function array_length_t_array$_t_uint256_$dyn_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_dataslot_t_array$_t_uint256_$dyn_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function abi_encodeUpdatedPos_t_uint256_to_t_uint256(value0, pos) -> updatedPos {\n        abi_encode_t_uint256_to_t_uint256(value0, pos)\n        updatedPos := add(pos, 0x20)\n    }\n\n    function array_nextElement_t_array$_t_uint256_$dyn_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    // uint256[] -> uint256[]\n    function abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr(value, pos)  -> end  {\n        let length := array_length_t_array$_t_uint256_$dyn_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr(pos, length)\n        let baseRef := array_dataslot_t_array$_t_uint256_$dyn_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            let elementValue0 := mload(srcPtr)\n            pos := abi_encodeUpdatedPos_t_uint256_to_t_uint256(elementValue0, pos)\n            srcPtr := array_nextElement_t_array$_t_uint256_$dyn_memory_ptr(srcPtr)\n        }\n        end := pos\n    }\n\n    // struct Shares.ShareBasket -> struct Shares.ShareBasket\n    function abi_encode_t_struct$_ShareBasket_$2702_memory_ptr_to_t_struct$_ShareBasket_$2702_memory_ptr_fromStack(value, pos)  -> end  {\n        let tail := add(pos, 0x60)\n\n        {\n            // basketId\n\n            let memberValue0 := mload(add(value, 0x00))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x00))\n        }\n\n        {\n            // propertyIds\n\n            let memberValue0 := mload(add(value, 0x20))\n\n            mstore(add(pos, 0x20), sub(tail, pos))\n            tail := abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr(memberValue0, tail)\n\n        }\n\n        {\n            // totalShares\n\n            let memberValue0 := mload(add(value, 0x40))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x40))\n        }\n\n        end := tail\n    }\n\n    function abi_encode_tuple_t_struct$_ShareBasket_$2702_memory_ptr__to_t_struct$_ShareBasket_$2702_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_struct$_ShareBasket_$2702_memory_ptr_to_t_struct$_ShareBasket_$2702_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function store_literal_in_memory_854cf043fa623ebed8453fda259d33de3f6e7493e6b8ff90fcfdd906ab498ce3(memPtr) {\n\n        mstore(add(memPtr, 0), \"Invalid owner address\")\n\n    }\n\n    function abi_encode_t_stringliteral_854cf043fa623ebed8453fda259d33de3f6e7493e6b8ff90fcfdd906ab498ce3_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 21)\n        store_literal_in_memory_854cf043fa623ebed8453fda259d33de3f6e7493e6b8ff90fcfdd906ab498ce3(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_854cf043fa623ebed8453fda259d33de3f6e7493e6b8ff90fcfdd906ab498ce3__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_854cf043fa623ebed8453fda259d33de3f6e7493e6b8ff90fcfdd906ab498ce3_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_9296ff0c00c9773aeb7dfef423d0c5484d831f800b943533b0cf1300a3d8e8df(memPtr) {\n\n        mstore(add(memPtr, 0), \"Invalid recipient address\")\n\n    }\n\n    function abi_encode_t_stringliteral_9296ff0c00c9773aeb7dfef423d0c5484d831f800b943533b0cf1300a3d8e8df_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 25)\n        store_literal_in_memory_9296ff0c00c9773aeb7dfef423d0c5484d831f800b943533b0cf1300a3d8e8df(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_9296ff0c00c9773aeb7dfef423d0c5484d831f800b943533b0cf1300a3d8e8df__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9296ff0c00c9773aeb7dfef423d0c5484d831f800b943533b0cf1300a3d8e8df_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_0857c57456ecf2726586715f2441db771764d06c344926f01279ec4ec08abc3b(memPtr) {\n\n        mstore(add(memPtr, 0), \"Not enough shares to transfer\")\n\n    }\n\n    function abi_encode_t_stringliteral_0857c57456ecf2726586715f2441db771764d06c344926f01279ec4ec08abc3b_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 29)\n        store_literal_in_memory_0857c57456ecf2726586715f2441db771764d06c344926f01279ec4ec08abc3b(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_0857c57456ecf2726586715f2441db771764d06c344926f01279ec4ec08abc3b__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_0857c57456ecf2726586715f2441db771764d06c344926f01279ec4ec08abc3b_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function store_literal_in_memory_e24294be76b1cbd498453a3d6554ab510b6a9cdded1dafd11ec001f9ab7ca039(memPtr) {\n\n        mstore(add(memPtr, 0), \"Shares must be greater than 0\")\n\n    }\n\n    function abi_encode_t_stringliteral_e24294be76b1cbd498453a3d6554ab510b6a9cdded1dafd11ec001f9ab7ca039_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 29)\n        store_literal_in_memory_e24294be76b1cbd498453a3d6554ab510b6a9cdded1dafd11ec001f9ab7ca039(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_e24294be76b1cbd498453a3d6554ab510b6a9cdded1dafd11ec001f9ab7ca039__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_e24294be76b1cbd498453a3d6554ab510b6a9cdded1dafd11ec001f9ab7ca039_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_c2664836f08f089a39d927da540bfbfc322ded0e69c3d2ff852ad8874067c6e6(memPtr) {\n\n        mstore(add(memPtr, 0), \"Not enough shares available\")\n\n    }\n\n    function abi_encode_t_stringliteral_c2664836f08f089a39d927da540bfbfc322ded0e69c3d2ff852ad8874067c6e6_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 27)\n        store_literal_in_memory_c2664836f08f089a39d927da540bfbfc322ded0e69c3d2ff852ad8874067c6e6(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_c2664836f08f089a39d927da540bfbfc322ded0e69c3d2ff852ad8874067c6e6__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_c2664836f08f089a39d927da540bfbfc322ded0e69c3d2ff852ad8874067c6e6_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_d734de04f0d687b15d55ff3d832ab64e9874494a5534ef409e8a102ba868cc4c(memPtr) {\n\n        mstore(add(memPtr, 0), \"Insufficient shares available\")\n\n    }\n\n    function abi_encode_t_stringliteral_d734de04f0d687b15d55ff3d832ab64e9874494a5534ef409e8a102ba868cc4c_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 29)\n        store_literal_in_memory_d734de04f0d687b15d55ff3d832ab64e9874494a5534ef409e8a102ba868cc4c(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_d734de04f0d687b15d55ff3d832ab64e9874494a5534ef409e8a102ba868cc4c__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_d734de04f0d687b15d55ff3d832ab64e9874494a5534ef409e8a102ba868cc4c_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function store_literal_in_memory_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a(memPtr) {\n\n        mstore(add(memPtr, 0), \"Pausable: paused\")\n\n    }\n\n    function abi_encode_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 16)\n        store_literal_in_memory_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a(memPtr) {\n\n        mstore(add(memPtr, 0), \"Pausable: not paused\")\n\n    }\n\n    function abi_encode_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 20)\n        store_literal_in_memory_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n",
									"id": 12,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b50600436106101d8575f3560e01c80638456cb5911610102578063b543cf38116100a0578063dd8aa6f61161006f578063dd8aa6f614610590578063e34fc531146105ac578063f2fde38b146105dc578063ff03e8c2146105f8576101d8565b8063b543cf38146104e3578063b7b551ed146104ff578063dcd9d12d14610530578063dd62ed3e14610560576101d8565b80638da5cb5b116100dc5780638da5cb5b1461044657806395d89b4114610464578063a60ed37414610482578063a9059cbb146104b3576101d8565b80638456cb59146103f057806384b9a6e6146103fa57806385fff85814610416576101d8565b806351111b721161017a57806370a082311161014957806370a0823114610356578063715018a61461038657806375c0b9fe146103905780637f2af083146103c0576101d8565b806351111b72146102d05780635813a683146102ec5780635c975abb146103085780635dfe772114610326576101d8565b806323b872dd116101b657806323b872dd14610248578063313ce567146102785780633f4ba83a146102965780634885cf0a146102a0576101d8565b806306fdde03146101dc578063095ea7b3146101fa57806318160ddd1461022a575b5f80fd5b6101e4610628565b6040516101f19190611abc565b60405180910390f35b610214600480360381019061020f9190611b7a565b6106b8565b6040516102219190611bd2565b60405180910390f35b6102326106da565b60405161023f9190611bfa565b60405180910390f35b610262600480360381019061025d9190611c13565b6106e3565b60405161026f9190611bd2565b60405180910390f35b610280610711565b60405161028d9190611c7e565b60405180910390f35b61029e610719565b005b6102ba60048036038101906102b59190611c97565b61072b565b6040516102c79190611bfa565b60405180910390f35b6102ea60048036038101906102e59190611e02565b610740565b005b61030660048036038101906103019190611e6e565b6107c1565b005b61031061088a565b60405161031d9190611bd2565b60405180910390f35b610340600480360381019061033b9190611c97565b6108a0565b60405161034d9190611bd2565b60405180910390f35b610370600480360381019061036b9190611eac565b6108aa565b60405161037d9190611bfa565b60405180910390f35b61038e6108ef565b005b6103aa60048036038101906103a59190611e6e565b610902565b6040516103b79190611bfa565b60405180910390f35b6103da60048036038101906103d59190611c97565b61095b565b6040516103e79190611ee6565b60405180910390f35b6103f861098b565b005b610414600480360381019061040f9190611eff565b61099d565b005b610430600480360381019061042b9190611c97565b610bd0565b60405161043d9190611bfa565b60405180910390f35b61044e610bec565b60405161045b9190611ee6565b60405180910390f35b61046c610c14565b6040516104799190611abc565b60405180910390f35b61049c60048036038101906104979190611c97565b610ca4565b6040516104aa929190611f4f565b60405180910390f35b6104cd60048036038101906104c89190611b7a565b610cc4565b6040516104da9190611bd2565b60405180910390f35b6104fd60048036038101906104f89190611eff565b610ce6565b005b61051960048036038101906105149190611c97565b610e81565b604051610527929190611f4f565b60405180910390f35b61054a60048036038101906105459190611c97565b610ea1565b6040516105579190611bfa565b60405180910390f35b61057a60048036038101906105759190611f76565b610ebe565b6040516105879190611bfa565b60405180910390f35b6105aa60048036038101906105a59190611eff565b610f40565b005b6105c660048036038101906105c19190611c97565b610fd2565b6040516105d39190611ee6565b60405180910390f35b6105f660048036038101906105f19190611eac565b61100b565b005b610612600480360381019061060d9190611c97565b61108f565b60405161061f91906120b8565b60405180910390f35b60606003805461063790612105565b80601f016020809104026020016040519081016040528092919081815260200182805461066390612105565b80156106ae5780601f10610685576101008083540402835291602001916106ae565b820191905f5260205f20905b81548152906001019060200180831161069157829003601f168201915b5050505050905090565b5f806106c2611123565b90506106cf81858561112a565b600191505092915050565b5f600254905090565b5f806106ed611123565b90506106fa85828561113c565b6107058585856111ce565b60019150509392505050565b5f6012905090565b6107216112be565b610729611345565b565b6007602052805f5260405f205f915090505481565b6107486112be565b60405180606001604052808481526020018381526020018281525060065f8581526020019081526020015f205f820151815f015560208201518160010190805190602001906107989291906119c7565b50604082015181600201559050508060075f8581526020019081526020015f2081905550505050565b6107c96112be565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610837576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161082e9061217f565b60405180910390fd5b8060095f8481526020019081526020015f205f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050565b5f600560149054906101000a900460ff16905090565b5f60019050919050565b5f805f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b6108f76112be565b6109005f6113a7565b565b5f60085f8481526020019081526020015f206002015f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b6009602052805f5260405f205f915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6109936112be565b61099b61146a565b565b6109a56114cd565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610a13576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a0a906121e7565b60405180910390fd5b8060085f8581526020019081526020015f206002015f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20541015610aa5576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a9c9061224f565b60405180910390fd5b5f60085f8581526020019081526020015f20905081816002015f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f828254610b07919061229a565b9250508190555081816002015f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f828254610b5c91906122cd565b925050819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f1ba44e8b79687fed555749cae6dcccf9bc5df37a2739fbc73062f07b534cf03e8685604051610bc2929190611f4f565b60405180910390a350505050565b5f60085f8381526020019081526020015f205f01549050919050565b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b606060048054610c2390612105565b80601f0160208091040260200160405190810160405280929190818152602001828054610c4f90612105565b8015610c9a5780601f10610c7157610100808354040283529160200191610c9a565b820191905f5260205f20905b815481529060010190602001808311610c7d57829003601f168201915b5050505050905090565b6006602052805f5260405f205f91509050805f0154908060020154905082565b5f80610cce611123565b9050610cdb8185856111ce565b600191505092915050565b610cee6112be565b610cf66114cd565b5f8111610d38576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d2f9061234a565b60405180910390fd5b8060085f8581526020019081526020015f20600101541015610d8f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d86906123b2565b60405180910390fd5b5f60085f8581526020019081526020015f20905081815f015f828254610db591906122cd565b9250508190555081816001015f828254610dcf919061229a565b9250508190555081816002015f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f828254610e2491906122cd565b925050819055508273ffffffffffffffffffffffffffffffffffffffff167f6b3332210c2263e1008f810d148fc1c61a002c8f5dfcf18fe06858064bc49e698584604051610e73929190611f4f565b60405180910390a250505050565b6008602052805f5260405f205f91509050805f0154908060010154905082565b5f60085f8381526020019081526020015f20600101549050919050565b5f60015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b610f486112be565b8060075f8581526020019081526020015f20541015610f9c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f939061241a565b60405180910390fd5b610fa68282611517565b8060075f8581526020019081526020015f205f828254610fc6919061229a565b92505081905550505050565b5f60095f8381526020019081526020015f205f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b6110136112be565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603611083575f6040517f1e4fbdf700000000000000000000000000000000000000000000000000000000815260040161107a9190611ee6565b60405180910390fd5b61108c816113a7565b50565b611097611a12565b60065f8381526020019081526020015f206040518060600160405290815f82015481526020016001820180548060200260200160405190810160405280929190818152602001828054801561110957602002820191905f5260205f20905b8154815260200190600101908083116110f5575b505050505081526020016002820154815250509050919050565b5f33905090565b6111378383836001611596565b505050565b5f6111478484610ebe565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146111c857818110156111b9578281836040517ffb8f41b20000000000000000000000000000000000000000000000000000000081526004016111b093929190612438565b60405180910390fd5b6111c784848484035f611596565b5b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361123e575f6040517f96c6fd1e0000000000000000000000000000000000000000000000000000000081526004016112359190611ee6565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036112ae575f6040517fec442f050000000000000000000000000000000000000000000000000000000081526004016112a59190611ee6565b60405180910390fd5b6112b9838383611765565b505050565b6112c6611123565b73ffffffffffffffffffffffffffffffffffffffff166112e4610bec565b73ffffffffffffffffffffffffffffffffffffffff161461134357611307611123565b6040517f118cdaa700000000000000000000000000000000000000000000000000000000815260040161133a9190611ee6565b60405180910390fd5b565b61134d61197e565b5f600560146101000a81548160ff0219169083151502179055507f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa611390611123565b60405161139d9190611ee6565b60405180910390a1565b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508160055f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6114726114cd565b6001600560146101000a81548160ff0219169083151502179055507f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2586114b6611123565b6040516114c39190611ee6565b60405180910390a1565b6114d561088a565b15611515576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161150c906124b7565b60405180910390fd5b565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611587575f6040517fec442f0500000000000000000000000000000000000000000000000000000000815260040161157e9190611ee6565b60405180910390fd5b6115925f8383611765565b5050565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603611606575f6040517fe602df050000000000000000000000000000000000000000000000000000000081526004016115fd9190611ee6565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603611676575f6040517f94280d6200000000000000000000000000000000000000000000000000000000815260040161166d9190611ee6565b60405180910390fd5b8160015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550801561175f578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040516117569190611bfa565b60405180910390a35b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036117b5578060025f8282546117a991906122cd565b92505081905550611883565b5f805f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205490508181101561183e578381836040517fe450d38c00000000000000000000000000000000000000000000000000000000815260040161183593929190612438565b60405180910390fd5b8181035f808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036118ca578060025f8282540392505081905550611914565b805f808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516119719190611bfa565b60405180910390a3505050565b61198661088a565b6119c5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016119bc9061251f565b60405180910390fd5b565b828054828255905f5260205f20908101928215611a01579160200282015b82811115611a005782518255916020019190600101906119e5565b5b509050611a0e9190611a31565b5090565b60405180606001604052805f8152602001606081526020015f81525090565b5b80821115611a48575f815f905550600101611a32565b5090565b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f601f19601f8301169050919050565b5f611a8e82611a4c565b611a988185611a56565b9350611aa8818560208601611a66565b611ab181611a74565b840191505092915050565b5f6020820190508181035f830152611ad48184611a84565b905092915050565b5f604051905090565b5f80fd5b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f611b1682611aed565b9050919050565b611b2681611b0c565b8114611b30575f80fd5b50565b5f81359050611b4181611b1d565b92915050565b5f819050919050565b611b5981611b47565b8114611b63575f80fd5b50565b5f81359050611b7481611b50565b92915050565b5f8060408385031215611b9057611b8f611ae5565b5b5f611b9d85828601611b33565b9250506020611bae85828601611b66565b9150509250929050565b5f8115159050919050565b611bcc81611bb8565b82525050565b5f602082019050611be55f830184611bc3565b92915050565b611bf481611b47565b82525050565b5f602082019050611c0d5f830184611beb565b92915050565b5f805f60608486031215611c2a57611c29611ae5565b5b5f611c3786828701611b33565b9350506020611c4886828701611b33565b9250506040611c5986828701611b66565b9150509250925092565b5f60ff82169050919050565b611c7881611c63565b82525050565b5f602082019050611c915f830184611c6f565b92915050565b5f60208284031215611cac57611cab611ae5565b5b5f611cb984828501611b66565b91505092915050565b5f80fd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b611cfc82611a74565b810181811067ffffffffffffffff82111715611d1b57611d1a611cc6565b5b80604052505050565b5f611d2d611adc565b9050611d398282611cf3565b919050565b5f67ffffffffffffffff821115611d5857611d57611cc6565b5b602082029050602081019050919050565b5f80fd5b5f611d7f611d7a84611d3e565b611d24565b90508083825260208201905060208402830185811115611da257611da1611d69565b5b835b81811015611dcb5780611db78882611b66565b845260208401935050602081019050611da4565b5050509392505050565b5f82601f830112611de957611de8611cc2565b5b8135611df9848260208601611d6d565b91505092915050565b5f805f60608486031215611e1957611e18611ae5565b5b5f611e2686828701611b66565b935050602084013567ffffffffffffffff811115611e4757611e46611ae9565b5b611e5386828701611dd5565b9250506040611e6486828701611b66565b9150509250925092565b5f8060408385031215611e8457611e83611ae5565b5b5f611e9185828601611b66565b9250506020611ea285828601611b33565b9150509250929050565b5f60208284031215611ec157611ec0611ae5565b5b5f611ece84828501611b33565b91505092915050565b611ee081611b0c565b82525050565b5f602082019050611ef95f830184611ed7565b92915050565b5f805f60608486031215611f1657611f15611ae5565b5b5f611f2386828701611b66565b9350506020611f3486828701611b33565b9250506040611f4586828701611b66565b9150509250925092565b5f604082019050611f625f830185611beb565b611f6f6020830184611beb565b9392505050565b5f8060408385031215611f8c57611f8b611ae5565b5b5f611f9985828601611b33565b9250506020611faa85828601611b33565b9150509250929050565b611fbd81611b47565b82525050565b5f81519050919050565b5f82825260208201905092915050565b5f819050602082019050919050565b5f611ff78383611fb4565b60208301905092915050565b5f602082019050919050565b5f61201982611fc3565b6120238185611fcd565b935061202e83611fdd565b805f5b8381101561205e5781516120458882611fec565b975061205083612003565b925050600181019050612031565b5085935050505092915050565b5f606083015f8301516120805f860182611fb4565b5060208301518482036020860152612098828261200f565b91505060408301516120ad6040860182611fb4565b508091505092915050565b5f6020820190508181035f8301526120d0818461206b565b905092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f600282049050600182168061211c57607f821691505b60208210810361212f5761212e6120d8565b5b50919050565b7f496e76616c6964206f776e6572206164647265737300000000000000000000005f82015250565b5f612169601583611a56565b915061217482612135565b602082019050919050565b5f6020820190508181035f8301526121968161215d565b9050919050565b7f496e76616c696420726563697069656e742061646472657373000000000000005f82015250565b5f6121d1601983611a56565b91506121dc8261219d565b602082019050919050565b5f6020820190508181035f8301526121fe816121c5565b9050919050565b7f4e6f7420656e6f7567682073686172657320746f207472616e736665720000005f82015250565b5f612239601d83611a56565b915061224482612205565b602082019050919050565b5f6020820190508181035f8301526122668161222d565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f6122a482611b47565b91506122af83611b47565b92508282039050818111156122c7576122c661226d565b5b92915050565b5f6122d782611b47565b91506122e283611b47565b92508282019050808211156122fa576122f961226d565b5b92915050565b7f536861726573206d7573742062652067726561746572207468616e20300000005f82015250565b5f612334601d83611a56565b915061233f82612300565b602082019050919050565b5f6020820190508181035f83015261236181612328565b9050919050565b7f4e6f7420656e6f7567682073686172657320617661696c61626c6500000000005f82015250565b5f61239c601b83611a56565b91506123a782612368565b602082019050919050565b5f6020820190508181035f8301526123c981612390565b9050919050565b7f496e73756666696369656e742073686172657320617661696c61626c650000005f82015250565b5f612404601d83611a56565b915061240f826123d0565b602082019050919050565b5f6020820190508181035f830152612431816123f8565b9050919050565b5f60608201905061244b5f830186611ed7565b6124586020830185611beb565b6124656040830184611beb565b949350505050565b7f5061757361626c653a20706175736564000000000000000000000000000000005f82015250565b5f6124a1601083611a56565b91506124ac8261246d565b602082019050919050565b5f6020820190508181035f8301526124ce81612495565b9050919050565b7f5061757361626c653a206e6f74207061757365640000000000000000000000005f82015250565b5f612509601483611a56565b9150612514826124d5565b602082019050919050565b5f6020820190508181035f830152612536816124fd565b905091905056fea26469706673582212208a3288be81ac17034bbe1af1db02ba6a69e546275e1d6032a6813f487d83739364736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1D8 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8456CB59 GT PUSH2 0x102 JUMPI DUP1 PUSH4 0xB543CF38 GT PUSH2 0xA0 JUMPI DUP1 PUSH4 0xDD8AA6F6 GT PUSH2 0x6F JUMPI DUP1 PUSH4 0xDD8AA6F6 EQ PUSH2 0x590 JUMPI DUP1 PUSH4 0xE34FC531 EQ PUSH2 0x5AC JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x5DC JUMPI DUP1 PUSH4 0xFF03E8C2 EQ PUSH2 0x5F8 JUMPI PUSH2 0x1D8 JUMP JUMPDEST DUP1 PUSH4 0xB543CF38 EQ PUSH2 0x4E3 JUMPI DUP1 PUSH4 0xB7B551ED EQ PUSH2 0x4FF JUMPI DUP1 PUSH4 0xDCD9D12D EQ PUSH2 0x530 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x560 JUMPI PUSH2 0x1D8 JUMP JUMPDEST DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0xDC JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x446 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x464 JUMPI DUP1 PUSH4 0xA60ED374 EQ PUSH2 0x482 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x4B3 JUMPI PUSH2 0x1D8 JUMP JUMPDEST DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x3F0 JUMPI DUP1 PUSH4 0x84B9A6E6 EQ PUSH2 0x3FA JUMPI DUP1 PUSH4 0x85FFF858 EQ PUSH2 0x416 JUMPI PUSH2 0x1D8 JUMP JUMPDEST DUP1 PUSH4 0x51111B72 GT PUSH2 0x17A JUMPI DUP1 PUSH4 0x70A08231 GT PUSH2 0x149 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x356 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x386 JUMPI DUP1 PUSH4 0x75C0B9FE EQ PUSH2 0x390 JUMPI DUP1 PUSH4 0x7F2AF083 EQ PUSH2 0x3C0 JUMPI PUSH2 0x1D8 JUMP JUMPDEST DUP1 PUSH4 0x51111B72 EQ PUSH2 0x2D0 JUMPI DUP1 PUSH4 0x5813A683 EQ PUSH2 0x2EC JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x308 JUMPI DUP1 PUSH4 0x5DFE7721 EQ PUSH2 0x326 JUMPI PUSH2 0x1D8 JUMP JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0x1B6 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x248 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x278 JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x296 JUMPI DUP1 PUSH4 0x4885CF0A EQ PUSH2 0x2A0 JUMPI PUSH2 0x1D8 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x1DC JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x1FA JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x22A JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x1E4 PUSH2 0x628 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F1 SWAP2 SWAP1 PUSH2 0x1ABC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x214 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x20F SWAP2 SWAP1 PUSH2 0x1B7A JUMP JUMPDEST PUSH2 0x6B8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x221 SWAP2 SWAP1 PUSH2 0x1BD2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x232 PUSH2 0x6DA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x23F SWAP2 SWAP1 PUSH2 0x1BFA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x262 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x25D SWAP2 SWAP1 PUSH2 0x1C13 JUMP JUMPDEST PUSH2 0x6E3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x26F SWAP2 SWAP1 PUSH2 0x1BD2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x280 PUSH2 0x711 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x28D SWAP2 SWAP1 PUSH2 0x1C7E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x29E PUSH2 0x719 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2BA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2B5 SWAP2 SWAP1 PUSH2 0x1C97 JUMP JUMPDEST PUSH2 0x72B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2C7 SWAP2 SWAP1 PUSH2 0x1BFA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2EA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2E5 SWAP2 SWAP1 PUSH2 0x1E02 JUMP JUMPDEST PUSH2 0x740 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x306 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x301 SWAP2 SWAP1 PUSH2 0x1E6E JUMP JUMPDEST PUSH2 0x7C1 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x310 PUSH2 0x88A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x31D SWAP2 SWAP1 PUSH2 0x1BD2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x340 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x33B SWAP2 SWAP1 PUSH2 0x1C97 JUMP JUMPDEST PUSH2 0x8A0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x34D SWAP2 SWAP1 PUSH2 0x1BD2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x370 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x36B SWAP2 SWAP1 PUSH2 0x1EAC JUMP JUMPDEST PUSH2 0x8AA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x37D SWAP2 SWAP1 PUSH2 0x1BFA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x38E PUSH2 0x8EF JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3AA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3A5 SWAP2 SWAP1 PUSH2 0x1E6E JUMP JUMPDEST PUSH2 0x902 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3B7 SWAP2 SWAP1 PUSH2 0x1BFA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3DA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3D5 SWAP2 SWAP1 PUSH2 0x1C97 JUMP JUMPDEST PUSH2 0x95B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3E7 SWAP2 SWAP1 PUSH2 0x1EE6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3F8 PUSH2 0x98B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x414 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x40F SWAP2 SWAP1 PUSH2 0x1EFF JUMP JUMPDEST PUSH2 0x99D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x430 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x42B SWAP2 SWAP1 PUSH2 0x1C97 JUMP JUMPDEST PUSH2 0xBD0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x43D SWAP2 SWAP1 PUSH2 0x1BFA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x44E PUSH2 0xBEC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x45B SWAP2 SWAP1 PUSH2 0x1EE6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x46C PUSH2 0xC14 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x479 SWAP2 SWAP1 PUSH2 0x1ABC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x49C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x497 SWAP2 SWAP1 PUSH2 0x1C97 JUMP JUMPDEST PUSH2 0xCA4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4AA SWAP3 SWAP2 SWAP1 PUSH2 0x1F4F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4CD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4C8 SWAP2 SWAP1 PUSH2 0x1B7A JUMP JUMPDEST PUSH2 0xCC4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4DA SWAP2 SWAP1 PUSH2 0x1BD2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4FD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4F8 SWAP2 SWAP1 PUSH2 0x1EFF JUMP JUMPDEST PUSH2 0xCE6 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x519 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x514 SWAP2 SWAP1 PUSH2 0x1C97 JUMP JUMPDEST PUSH2 0xE81 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x527 SWAP3 SWAP2 SWAP1 PUSH2 0x1F4F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x54A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x545 SWAP2 SWAP1 PUSH2 0x1C97 JUMP JUMPDEST PUSH2 0xEA1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x557 SWAP2 SWAP1 PUSH2 0x1BFA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x57A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x575 SWAP2 SWAP1 PUSH2 0x1F76 JUMP JUMPDEST PUSH2 0xEBE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x587 SWAP2 SWAP1 PUSH2 0x1BFA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x5AA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5A5 SWAP2 SWAP1 PUSH2 0x1EFF JUMP JUMPDEST PUSH2 0xF40 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x5C6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5C1 SWAP2 SWAP1 PUSH2 0x1C97 JUMP JUMPDEST PUSH2 0xFD2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5D3 SWAP2 SWAP1 PUSH2 0x1EE6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x5F6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5F1 SWAP2 SWAP1 PUSH2 0x1EAC JUMP JUMPDEST PUSH2 0x100B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x612 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x60D SWAP2 SWAP1 PUSH2 0x1C97 JUMP JUMPDEST PUSH2 0x108F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x61F SWAP2 SWAP1 PUSH2 0x20B8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x637 SWAP1 PUSH2 0x2105 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x663 SWAP1 PUSH2 0x2105 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x6AE JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x685 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x6AE JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x691 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x6C2 PUSH2 0x1123 JUMP JUMPDEST SWAP1 POP PUSH2 0x6CF DUP2 DUP6 DUP6 PUSH2 0x112A JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x6ED PUSH2 0x1123 JUMP JUMPDEST SWAP1 POP PUSH2 0x6FA DUP6 DUP3 DUP6 PUSH2 0x113C JUMP JUMPDEST PUSH2 0x705 DUP6 DUP6 DUP6 PUSH2 0x11CE JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x721 PUSH2 0x12BE JUMP JUMPDEST PUSH2 0x729 PUSH2 0x1345 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x7 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH2 0x748 PUSH2 0x12BE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE POP PUSH1 0x6 PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 ADD MLOAD DUP2 PUSH0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH2 0x798 SWAP3 SWAP2 SWAP1 PUSH2 0x19C7 JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE SWAP1 POP POP DUP1 PUSH1 0x7 PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP POP POP JUMP JUMPDEST PUSH2 0x7C9 PUSH2 0x12BE JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x837 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x82E SWAP1 PUSH2 0x217F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x9 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x1 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x8F7 PUSH2 0x12BE JUMP JUMPDEST PUSH2 0x900 PUSH0 PUSH2 0x13A7 JUMP JUMPDEST JUMP JUMPDEST PUSH0 PUSH1 0x8 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x2 ADD PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x9 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x993 PUSH2 0x12BE JUMP JUMPDEST PUSH2 0x99B PUSH2 0x146A JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x9A5 PUSH2 0x14CD JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xA13 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA0A SWAP1 PUSH2 0x21E7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x8 PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x2 ADD PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD LT ISZERO PUSH2 0xAA5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA9C SWAP1 PUSH2 0x224F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x8 PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SWAP1 POP DUP2 DUP2 PUSH1 0x2 ADD PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xB07 SWAP2 SWAP1 PUSH2 0x229A JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 DUP2 PUSH1 0x2 ADD PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xB5C SWAP2 SWAP1 PUSH2 0x22CD JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x1BA44E8B79687FED555749CAE6DCCCF9BC5DF37A2739FBC73062F07B534CF03E DUP7 DUP6 PUSH1 0x40 MLOAD PUSH2 0xBC2 SWAP3 SWAP2 SWAP1 PUSH2 0x1F4F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0xC23 SWAP1 PUSH2 0x2105 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xC4F SWAP1 PUSH2 0x2105 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xC9A JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xC71 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xC9A JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xC7D JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x6 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP DUP1 PUSH0 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 POP DUP3 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0xCCE PUSH2 0x1123 JUMP JUMPDEST SWAP1 POP PUSH2 0xCDB DUP2 DUP6 DUP6 PUSH2 0x11CE JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xCEE PUSH2 0x12BE JUMP JUMPDEST PUSH2 0xCF6 PUSH2 0x14CD JUMP JUMPDEST PUSH0 DUP2 GT PUSH2 0xD38 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD2F SWAP1 PUSH2 0x234A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x8 PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x1 ADD SLOAD LT ISZERO PUSH2 0xD8F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD86 SWAP1 PUSH2 0x23B2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x8 PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SWAP1 POP DUP2 DUP2 PUSH0 ADD PUSH0 DUP3 DUP3 SLOAD PUSH2 0xDB5 SWAP2 SWAP1 PUSH2 0x22CD JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 DUP2 PUSH1 0x1 ADD PUSH0 DUP3 DUP3 SLOAD PUSH2 0xDCF SWAP2 SWAP1 PUSH2 0x229A JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 DUP2 PUSH1 0x2 ADD PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xE24 SWAP2 SWAP1 PUSH2 0x22CD JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x6B3332210C2263E1008F810D148FC1C61A002C8F5DFCF18FE06858064BC49E69 DUP6 DUP5 PUSH1 0x40 MLOAD PUSH2 0xE73 SWAP3 SWAP2 SWAP1 PUSH2 0x1F4F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP JUMP JUMPDEST PUSH1 0x8 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP DUP1 PUSH0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 POP DUP3 JUMP JUMPDEST PUSH0 PUSH1 0x8 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xF48 PUSH2 0x12BE JUMP JUMPDEST DUP1 PUSH1 0x7 PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD LT ISZERO PUSH2 0xF9C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF93 SWAP1 PUSH2 0x241A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xFA6 DUP3 DUP3 PUSH2 0x1517 JUMP JUMPDEST DUP1 PUSH1 0x7 PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xFC6 SWAP2 SWAP1 PUSH2 0x229A JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x9 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1013 PUSH2 0x12BE JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1083 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x107A SWAP2 SWAP1 PUSH2 0x1EE6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x108C DUP2 PUSH2 0x13A7 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x1097 PUSH2 0x1A12 JUMP JUMPDEST PUSH1 0x6 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0x1109 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH2 0x10F5 JUMPI JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD SLOAD DUP2 MSTORE POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x1137 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x1596 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1147 DUP5 DUP5 PUSH2 0xEBE JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0x11C8 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x11B9 JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11B0 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2438 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x11C7 DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0x1596 JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x123E JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1235 SWAP2 SWAP1 PUSH2 0x1EE6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x12AE JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x12A5 SWAP2 SWAP1 PUSH2 0x1EE6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x12B9 DUP4 DUP4 DUP4 PUSH2 0x1765 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x12C6 PUSH2 0x1123 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x12E4 PUSH2 0xBEC JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1343 JUMPI PUSH2 0x1307 PUSH2 0x1123 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x133A SWAP2 SWAP1 PUSH2 0x1EE6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH2 0x134D PUSH2 0x197E JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA PUSH2 0x1390 PUSH2 0x1123 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x139D SWAP2 SWAP1 PUSH2 0x1EE6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x5 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x1472 PUSH2 0x14CD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x5 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 PUSH2 0x14B6 PUSH2 0x1123 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x14C3 SWAP2 SWAP1 PUSH2 0x1EE6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH2 0x14D5 PUSH2 0x88A JUMP JUMPDEST ISZERO PUSH2 0x1515 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x150C SWAP1 PUSH2 0x24B7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1587 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x157E SWAP2 SWAP1 PUSH2 0x1EE6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1592 PUSH0 DUP4 DUP4 PUSH2 0x1765 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1606 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x15FD SWAP2 SWAP1 PUSH2 0x1EE6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1676 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x166D SWAP2 SWAP1 PUSH2 0x1EE6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0x175F JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x1756 SWAP2 SWAP1 PUSH2 0x1BFA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x17B5 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x17A9 SWAP2 SWAP1 PUSH2 0x22CD JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x1883 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x183E JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1835 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2438 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x18CA JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x1914 JUMP JUMPDEST DUP1 PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x1971 SWAP2 SWAP1 PUSH2 0x1BFA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH2 0x1986 PUSH2 0x88A JUMP JUMPDEST PUSH2 0x19C5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x19BC SWAP1 PUSH2 0x251F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST DUP3 DUP1 SLOAD DUP3 DUP3 SSTORE SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 DUP2 ADD SWAP3 DUP3 ISZERO PUSH2 0x1A01 JUMPI SWAP2 PUSH1 0x20 MUL DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x1A00 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x19E5 JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH2 0x1A0E SWAP2 SWAP1 PUSH2 0x1A31 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x1A48 JUMPI PUSH0 DUP2 PUSH0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH2 0x1A32 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1A8E DUP3 PUSH2 0x1A4C JUMP JUMPDEST PUSH2 0x1A98 DUP2 DUP6 PUSH2 0x1A56 JUMP JUMPDEST SWAP4 POP PUSH2 0x1AA8 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1A66 JUMP JUMPDEST PUSH2 0x1AB1 DUP2 PUSH2 0x1A74 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1AD4 DUP2 DUP5 PUSH2 0x1A84 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1B16 DUP3 PUSH2 0x1AED JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1B26 DUP2 PUSH2 0x1B0C JUMP JUMPDEST DUP2 EQ PUSH2 0x1B30 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1B41 DUP2 PUSH2 0x1B1D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1B59 DUP2 PUSH2 0x1B47 JUMP JUMPDEST DUP2 EQ PUSH2 0x1B63 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1B74 DUP2 PUSH2 0x1B50 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1B90 JUMPI PUSH2 0x1B8F PUSH2 0x1AE5 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1B9D DUP6 DUP3 DUP7 ADD PUSH2 0x1B33 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1BAE DUP6 DUP3 DUP7 ADD PUSH2 0x1B66 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1BCC DUP2 PUSH2 0x1BB8 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1BE5 PUSH0 DUP4 ADD DUP5 PUSH2 0x1BC3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1BF4 DUP2 PUSH2 0x1B47 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1C0D PUSH0 DUP4 ADD DUP5 PUSH2 0x1BEB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1C2A JUMPI PUSH2 0x1C29 PUSH2 0x1AE5 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1C37 DUP7 DUP3 DUP8 ADD PUSH2 0x1B33 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1C48 DUP7 DUP3 DUP8 ADD PUSH2 0x1B33 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1C59 DUP7 DUP3 DUP8 ADD PUSH2 0x1B66 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1C78 DUP2 PUSH2 0x1C63 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1C91 PUSH0 DUP4 ADD DUP5 PUSH2 0x1C6F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1CAC JUMPI PUSH2 0x1CAB PUSH2 0x1AE5 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1CB9 DUP5 DUP3 DUP6 ADD PUSH2 0x1B66 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0x1CFC DUP3 PUSH2 0x1A74 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x1D1B JUMPI PUSH2 0x1D1A PUSH2 0x1CC6 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1D2D PUSH2 0x1ADC JUMP JUMPDEST SWAP1 POP PUSH2 0x1D39 DUP3 DUP3 PUSH2 0x1CF3 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1D58 JUMPI PUSH2 0x1D57 PUSH2 0x1CC6 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH2 0x1D7F PUSH2 0x1D7A DUP5 PUSH2 0x1D3E JUMP JUMPDEST PUSH2 0x1D24 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0x1DA2 JUMPI PUSH2 0x1DA1 PUSH2 0x1D69 JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1DCB JUMPI DUP1 PUSH2 0x1DB7 DUP9 DUP3 PUSH2 0x1B66 JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1DA4 JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1DE9 JUMPI PUSH2 0x1DE8 PUSH2 0x1CC2 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1DF9 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1D6D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1E19 JUMPI PUSH2 0x1E18 PUSH2 0x1AE5 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1E26 DUP7 DUP3 DUP8 ADD PUSH2 0x1B66 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1E47 JUMPI PUSH2 0x1E46 PUSH2 0x1AE9 JUMP JUMPDEST JUMPDEST PUSH2 0x1E53 DUP7 DUP3 DUP8 ADD PUSH2 0x1DD5 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1E64 DUP7 DUP3 DUP8 ADD PUSH2 0x1B66 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1E84 JUMPI PUSH2 0x1E83 PUSH2 0x1AE5 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1E91 DUP6 DUP3 DUP7 ADD PUSH2 0x1B66 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1EA2 DUP6 DUP3 DUP7 ADD PUSH2 0x1B33 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1EC1 JUMPI PUSH2 0x1EC0 PUSH2 0x1AE5 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1ECE DUP5 DUP3 DUP6 ADD PUSH2 0x1B33 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1EE0 DUP2 PUSH2 0x1B0C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1EF9 PUSH0 DUP4 ADD DUP5 PUSH2 0x1ED7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1F16 JUMPI PUSH2 0x1F15 PUSH2 0x1AE5 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1F23 DUP7 DUP3 DUP8 ADD PUSH2 0x1B66 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1F34 DUP7 DUP3 DUP8 ADD PUSH2 0x1B33 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1F45 DUP7 DUP3 DUP8 ADD PUSH2 0x1B66 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1F62 PUSH0 DUP4 ADD DUP6 PUSH2 0x1BEB JUMP JUMPDEST PUSH2 0x1F6F PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1BEB JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1F8C JUMPI PUSH2 0x1F8B PUSH2 0x1AE5 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1F99 DUP6 DUP3 DUP7 ADD PUSH2 0x1B33 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1FAA DUP6 DUP3 DUP7 ADD PUSH2 0x1B33 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x1FBD DUP2 PUSH2 0x1B47 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1FF7 DUP4 DUP4 PUSH2 0x1FB4 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2019 DUP3 PUSH2 0x1FC3 JUMP JUMPDEST PUSH2 0x2023 DUP2 DUP6 PUSH2 0x1FCD JUMP JUMPDEST SWAP4 POP PUSH2 0x202E DUP4 PUSH2 0x1FDD JUMP JUMPDEST DUP1 PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x205E JUMPI DUP2 MLOAD PUSH2 0x2045 DUP9 DUP3 PUSH2 0x1FEC JUMP JUMPDEST SWAP8 POP PUSH2 0x2050 DUP4 PUSH2 0x2003 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x2031 JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP4 ADD PUSH0 DUP4 ADD MLOAD PUSH2 0x2080 PUSH0 DUP7 ADD DUP3 PUSH2 0x1FB4 JUMP JUMPDEST POP PUSH1 0x20 DUP4 ADD MLOAD DUP5 DUP3 SUB PUSH1 0x20 DUP7 ADD MSTORE PUSH2 0x2098 DUP3 DUP3 PUSH2 0x200F JUMP JUMPDEST SWAP2 POP POP PUSH1 0x40 DUP4 ADD MLOAD PUSH2 0x20AD PUSH1 0x40 DUP7 ADD DUP3 PUSH2 0x1FB4 JUMP JUMPDEST POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x20D0 DUP2 DUP5 PUSH2 0x206B JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x211C JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x212F JUMPI PUSH2 0x212E PUSH2 0x20D8 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E76616C6964206F776E657220616464726573730000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2169 PUSH1 0x15 DUP4 PUSH2 0x1A56 JUMP JUMPDEST SWAP2 POP PUSH2 0x2174 DUP3 PUSH2 0x2135 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2196 DUP2 PUSH2 0x215D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E76616C696420726563697069656E74206164647265737300000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x21D1 PUSH1 0x19 DUP4 PUSH2 0x1A56 JUMP JUMPDEST SWAP2 POP PUSH2 0x21DC DUP3 PUSH2 0x219D JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x21FE DUP2 PUSH2 0x21C5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E6F7420656E6F7567682073686172657320746F207472616E73666572000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2239 PUSH1 0x1D DUP4 PUSH2 0x1A56 JUMP JUMPDEST SWAP2 POP PUSH2 0x2244 DUP3 PUSH2 0x2205 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2266 DUP2 PUSH2 0x222D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x22A4 DUP3 PUSH2 0x1B47 JUMP JUMPDEST SWAP2 POP PUSH2 0x22AF DUP4 PUSH2 0x1B47 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x22C7 JUMPI PUSH2 0x22C6 PUSH2 0x226D JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x22D7 DUP3 PUSH2 0x1B47 JUMP JUMPDEST SWAP2 POP PUSH2 0x22E2 DUP4 PUSH2 0x1B47 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x22FA JUMPI PUSH2 0x22F9 PUSH2 0x226D JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x536861726573206D7573742062652067726561746572207468616E2030000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2334 PUSH1 0x1D DUP4 PUSH2 0x1A56 JUMP JUMPDEST SWAP2 POP PUSH2 0x233F DUP3 PUSH2 0x2300 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2361 DUP2 PUSH2 0x2328 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E6F7420656E6F7567682073686172657320617661696C61626C650000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x239C PUSH1 0x1B DUP4 PUSH2 0x1A56 JUMP JUMPDEST SWAP2 POP PUSH2 0x23A7 DUP3 PUSH2 0x2368 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x23C9 DUP2 PUSH2 0x2390 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E742073686172657320617661696C61626C65000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2404 PUSH1 0x1D DUP4 PUSH2 0x1A56 JUMP JUMPDEST SWAP2 POP PUSH2 0x240F DUP3 PUSH2 0x23D0 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2431 DUP2 PUSH2 0x23F8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x244B PUSH0 DUP4 ADD DUP7 PUSH2 0x1ED7 JUMP JUMPDEST PUSH2 0x2458 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1BEB JUMP JUMPDEST PUSH2 0x2465 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1BEB JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x5061757361626C653A2070617573656400000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x24A1 PUSH1 0x10 DUP4 PUSH2 0x1A56 JUMP JUMPDEST SWAP2 POP PUSH2 0x24AC DUP3 PUSH2 0x246D JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x24CE DUP2 PUSH2 0x2495 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5061757361626C653A206E6F7420706175736564000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2509 PUSH1 0x14 DUP4 PUSH2 0x1A56 JUMP JUMPDEST SWAP2 POP PUSH2 0x2514 DUP3 PUSH2 0x24D5 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2536 DUP2 PUSH2 0x24FD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP11 ORIGIN DUP9 0xBE DUP2 0xAC OR SUB 0x4B 0xBE BYTE CALL 0xDB MUL 0xBA PUSH11 0x69E546275E1D6032A6813F BASEFEE PUSH30 0x83739364736F6C634300081A003300000000000000000000000000000000 ",
							"sourceMap": "343:3816:11:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2074:89:3;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4293:186;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3144:97;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5039:244;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3002:82;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3929:65:11;;;:::i;:::-;;771:47;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1232:324;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3528:194;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1615:84:2;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4000:157:11;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3299:116:3;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2293:101:0;;;:::i;:::-;;3058:168:11;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;886:49;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3862:61;;;:::i;:::-;;2521:531;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3232:138;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1638:85:0;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2276:93:3;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;719:46:11;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;3610:178:3;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1948:567:11;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;824:56;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;3376:146;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3846:140:3;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1562:246:11;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3728:128;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2543:215:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1814:128:11;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2074:89:3;2119:13;2151:5;2144:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2074:89;:::o;4293:186::-;4366:4;4382:13;4398:12;:10;:12::i;:::-;4382:28;;4420:31;4429:5;4436:7;4445:5;4420:8;:31::i;:::-;4468:4;4461:11;;;4293:186;;;;:::o;3144:97::-;3196:7;3222:12;;3215:19;;3144:97;:::o;5039:244::-;5126:4;5142:15;5160:12;:10;:12::i;:::-;5142:30;;5182:37;5198:4;5204:7;5213:5;5182:15;:37::i;:::-;5229:26;5239:4;5245:2;5249:5;5229:9;:26::i;:::-;5272:4;5265:11;;;5039:244;;;;;:::o;3002:82::-;3051:5;3075:2;3068:9;;3002:82;:::o;3929:65:11:-;1531:13:0;:11;:13::i;:::-;3977:10:11::1;:8;:10::i;:::-;3929:65::o:0;771:47::-;;;;;;;;;;;;;;;;;:::o;1232:324::-;1531:13:0;:11;:13::i;:::-;1372:131:11::1;;;;;;;;1408:8;1372:131;;;;1443:11;1372:131;;;;1481:11;1372:131;;::::0;1352:7:::1;:17;1360:8;1352:17;;;;;;;;;;;:151;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;1538:11;1513:12;:22;1526:8;1513:22;;;;;;;;;;;:36;;;;1232:324:::0;;;:::o;3528:194::-;1531:13:0;:11;:13::i;:::-;3643:1:11::1;3626:19;;:5;:19;;::::0;3618:53:::1;;;;;;;;;;;;:::i;:::-;;;;;;;;;3710:5;3681:14;:26;3696:10;3681:26;;;;;;;;;;;;:34;;;;;;;;;;;;;;;;;;3528:194:::0;;:::o;1615:84:2:-;1662:4;1685:7;;;;;;;;;;;1678:14;;1615:84;:::o;4000:157:11:-;4086:4;4146;4139:11;;4000:157;;;:::o;3299:116:3:-;3364:7;3390:9;:18;3400:7;3390:18;;;;;;;;;;;;;;;;3383:25;;3299:116;;;:::o;2293:101:0:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;3058:168:11:-;3141:7;3167:14;:26;3182:10;3167:26;;;;;;;;;;;:39;;:52;3207:11;3167:52;;;;;;;;;;;;;;;;3160:59;;3058:168;;;;:::o;886:49::-;;;;;;;;;;;;;;;;;;;;;;:::o;3862:61::-;1531:13:0;:11;:13::i;:::-;3908:8:11::1;:6;:8::i;:::-;3862:61::o:0;2521:531::-;1239:19:2;:17;:19::i;:::-;2648:1:11::1;2634:16;;:2;:16;;::::0;2626:54:::1;;;;;;;;;;;;:::i;:::-;;;;;;;;;2753:6;2698:14;:26;2713:10;2698:26;;;;;;;;;;;:39;;:51;2738:10;2698:51;;;;;;;;;;;;;;;;:61;;2690:103;;;;;;;;;;;;:::i;:::-;;;;;;;;;2812:33;2848:14;:26;2863:10;2848:26;;;;;;;;;;;2812:62;;2923:6;2884:10;:23;;:35;2908:10;2884:35;;;;;;;;;;;;;;;;:45;;;;;;;:::i;:::-;;;;;;;;2970:6;2939:10;:23;;:27;2963:2;2939:27;;;;;;;;;;;;;;;;:37;;;;;;;:::i;:::-;;;;;;;;3022:2;2992:53;;3010:10;2992:53;;;3026:10;3038:6;2992:53;;;;;;;:::i;:::-;;;;;;;;2616:436;2521:531:::0;;;:::o;3232:138::-;3299:7;3325:14;:26;3340:10;3325:26;;;;;;;;;;;:38;;;3318:45;;3232:138;;;:::o;1638:85:0:-;1684:7;1710:6;;;;;;;;;;;1703:13;;1638:85;:::o;2276:93:3:-;2323:13;2355:7;2348:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2276:93;:::o;719:46:11:-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;3610:178:3:-;3679:4;3695:13;3711:12;:10;:12::i;:::-;3695:28;;3733:27;3743:5;3750:2;3754:5;3733:9;:27::i;:::-;3777:4;3770:11;;;3610:178;;;;:::o;1948:567:11:-;1531:13:0;:11;:13::i;:::-;1239:19:2::1;:17;:19::i;:::-;2091:1:11::2;2082:6;:10;2074:52;;;;;;;;;;;;:::i;:::-;;;;;;;;;2190:6;2144:14;:26;2159:10;2144:26;;;;;;;;;;;:42;;;:52;;2136:92;;;;;;;;;;;;:::i;:::-;;;;;;;;;2247:33;2283:14;:26;2298:10;2283:26;;;;;;;;;;;2247:62;;2345:6;2319:10;:22;;;:32;;;;;;;:::i;:::-;;;;;;;;2391:6;2361:10;:26;;;:36;;;;;;;:::i;:::-;;;;;;;;2444:6;2407:10;:23;;:33;2431:8;2407:33;;;;;;;;;;;;;;;;:43;;;;;;;:::i;:::-;;;;;;;;2479:8;2466:42;;;2489:10;2501:6;2466:42;;;;;;;:::i;:::-;;;;;;;;2064:451;1948:567:::0;;;:::o;824:56::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;3376:146::-;3447:7;3473:14;:26;3488:10;3473:26;;;;;;;;;;;:42;;;3466:49;;3376:146;;;:::o;3846:140:3:-;3926:7;3952:11;:18;3964:5;3952:18;;;;;;;;;;;;;;;:27;3971:7;3952:27;;;;;;;;;;;;;;;;3945:34;;3846:140;;;;:::o;1562:246:11:-;1531:13:0;:11;:13::i;:::-;1692:6:11::1;1666:12;:22;1679:8;1666:22;;;;;;;;;;;;:32;;1658:74;;;;;;;;;;;;:::i;:::-;;;;;;;;;1742:17;1748:2;1752:6;1742:5;:17::i;:::-;1795:6;1769:12;:22;1782:8;1769:22;;;;;;;;;;;;:32;;;;;;;:::i;:::-;;;;;;;;1562:246:::0;;;:::o;3728:128::-;3797:7;3823:14;:26;3838:10;3823:26;;;;;;;;;;;;;;;;;;;;;3816:33;;3728:128;;;:::o;2543:215:0:-;1531:13;:11;:13::i;:::-;2647:1:::1;2627:22;;:8;:22;;::::0;2623:91:::1;;2700:1;2672:31;;;;;;;;;;;:::i;:::-;;;;;;;;2623:91;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;1814:128:11:-;1881:18;;:::i;:::-;1918:7;:17;1926:8;1918:17;;;;;;;;;;;1911:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1814:128;;;:::o;656:96:9:-;709:7;735:10;728:17;;656:96;:::o;8989:128:3:-;9073:37;9082:5;9089:7;9098:5;9105:4;9073:8;:37::i;:::-;8989:128;;;:::o;10663:477::-;10762:24;10789:25;10799:5;10806:7;10789:9;:25::i;:::-;10762:52;;10848:17;10828:16;:37;10824:310;;10904:5;10885:16;:24;10881:130;;;10963:7;10972:16;10990:5;10936:60;;;;;;;;;;;;;:::i;:::-;;;;;;;;10881:130;11052:57;11061:5;11068:7;11096:5;11077:16;:24;11103:5;11052:8;:57::i;:::-;10824:310;10752:388;10663:477;;;:::o;5656:300::-;5755:1;5739:18;;:4;:18;;;5735:86;;5807:1;5780:30;;;;;;;;;;;:::i;:::-;;;;;;;;5735:86;5848:1;5834:16;;:2;:16;;;5830:86;;5902:1;5873:32;;;;;;;;;;;:::i;:::-;;;;;;;;5830:86;5925:24;5933:4;5939:2;5943:5;5925:7;:24::i;:::-;5656:300;;;:::o;1796:162:0:-;1866:12;:10;:12::i;:::-;1855:23;;:7;:5;:7::i;:::-;:23;;;1851:101;;1928:12;:10;:12::i;:::-;1901:40;;;;;;;;;;;:::i;:::-;;;;;;;;1851:101;1796:162::o;2433:117:2:-;1486:16;:14;:16::i;:::-;2501:5:::1;2491:7;;:15;;;;;;;;;;;;;;;;;;2521:22;2530:12;:10;:12::i;:::-;2521:22;;;;;;:::i;:::-;;;;;;;;2433:117::o:0;2912:187:0:-;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;2186:115:2:-;1239:19;:17;:19::i;:::-;2255:4:::1;2245:7;;:14;;;;;;;;;;;;;;;;;;2274:20;2281:12;:10;:12::i;:::-;2274:20;;;;;;:::i;:::-;;;;;;;;2186:115::o:0;1767:106::-;1837:8;:6;:8::i;:::-;1836:9;1828:38;;;;;;;;;;;;:::i;:::-;;;;;;;;;1767:106::o;7721:208:3:-;7810:1;7791:21;;:7;:21;;;7787:91;;7864:1;7835:32;;;;;;;;;;;:::i;:::-;;;;;;;;7787:91;7887:35;7903:1;7907:7;7916:5;7887:7;:35::i;:::-;7721:208;;:::o;9949:432::-;10078:1;10061:19;;:5;:19;;;10057:89;;10132:1;10103:32;;;;;;;;;;;:::i;:::-;;;;;;;;10057:89;10178:1;10159:21;;:7;:21;;;10155:90;;10231:1;10203:31;;;;;;;;;;;:::i;:::-;;;;;;;;10155:90;10284:5;10254:11;:18;10266:5;10254:18;;;;;;;;;;;;;;;:27;10273:7;10254:27;;;;;;;;;;;;;;;:35;;;;10303:9;10299:76;;;10349:7;10333:31;;10342:5;10333:31;;;10358:5;10333:31;;;;;;:::i;:::-;;;;;;;;10299:76;9949:432;;;;:::o;6271:1107::-;6376:1;6360:18;;:4;:18;;;6356:540;;6512:5;6496:12;;:21;;;;;;;:::i;:::-;;;;;;;;6356:540;;;6548:19;6570:9;:15;6580:4;6570:15;;;;;;;;;;;;;;;;6548:37;;6617:5;6603:11;:19;6599:115;;;6674:4;6680:11;6693:5;6649:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;6599:115;6866:5;6852:11;:19;6834:9;:15;6844:4;6834:15;;;;;;;;;;;;;;;:37;;;;6534:362;6356:540;6924:1;6910:16;;:2;:16;;;6906:425;;7089:5;7073:12;;:21;;;;;;;;;;;6906:425;;;7301:5;7284:9;:13;7294:2;7284:13;;;;;;;;;;;;;;;;:22;;;;;;;;;;;6906:425;7361:2;7346:25;;7355:4;7346:25;;;7365:5;7346:25;;;;;;:::i;:::-;;;;;;;;6271:1107;;;:::o;1945:106:2:-;2011:8;:6;:8::i;:::-;2003:41;;;;;;;;;;;;:::i;:::-;;;;;;;;;1945:106::o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;7:99:12:-;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:169::-;196:11;230:6;225:3;218:19;270:4;265:3;261:14;246:29;;112:169;;;;:::o;287:139::-;376:6;371:3;366;360:23;417:1;408:6;403:3;399:16;392:27;287:139;;;:::o;432:102::-;473:6;524:2;520:7;515:2;508:5;504:14;500:28;490:38;;432:102;;;:::o;540:377::-;628:3;656:39;689:5;656:39;:::i;:::-;711:71;775:6;770:3;711:71;:::i;:::-;704:78;;791:65;849:6;844:3;837:4;830:5;826:16;791:65;:::i;:::-;881:29;903:6;881:29;:::i;:::-;876:3;872:39;865:46;;632:285;540:377;;;;:::o;923:313::-;1036:4;1074:2;1063:9;1059:18;1051:26;;1123:9;1117:4;1113:20;1109:1;1098:9;1094:17;1087:47;1151:78;1224:4;1215:6;1151:78;:::i;:::-;1143:86;;923:313;;;;:::o;1242:75::-;1275:6;1308:2;1302:9;1292:19;;1242:75;:::o;1323:117::-;1432:1;1429;1422:12;1446:117;1555:1;1552;1545:12;1569:126;1606:7;1646:42;1639:5;1635:54;1624:65;;1569:126;;;:::o;1701:96::-;1738:7;1767:24;1785:5;1767:24;:::i;:::-;1756:35;;1701:96;;;:::o;1803:122::-;1876:24;1894:5;1876:24;:::i;:::-;1869:5;1866:35;1856:63;;1915:1;1912;1905:12;1856:63;1803:122;:::o;1931:139::-;1977:5;2015:6;2002:20;1993:29;;2031:33;2058:5;2031:33;:::i;:::-;1931:139;;;;:::o;2076:77::-;2113:7;2142:5;2131:16;;2076:77;;;:::o;2159:122::-;2232:24;2250:5;2232:24;:::i;:::-;2225:5;2222:35;2212:63;;2271:1;2268;2261:12;2212:63;2159:122;:::o;2287:139::-;2333:5;2371:6;2358:20;2349:29;;2387:33;2414:5;2387:33;:::i;:::-;2287:139;;;;:::o;2432:474::-;2500:6;2508;2557:2;2545:9;2536:7;2532:23;2528:32;2525:119;;;2563:79;;:::i;:::-;2525:119;2683:1;2708:53;2753:7;2744:6;2733:9;2729:22;2708:53;:::i;:::-;2698:63;;2654:117;2810:2;2836:53;2881:7;2872:6;2861:9;2857:22;2836:53;:::i;:::-;2826:63;;2781:118;2432:474;;;;;:::o;2912:90::-;2946:7;2989:5;2982:13;2975:21;2964:32;;2912:90;;;:::o;3008:109::-;3089:21;3104:5;3089:21;:::i;:::-;3084:3;3077:34;3008:109;;:::o;3123:210::-;3210:4;3248:2;3237:9;3233:18;3225:26;;3261:65;3323:1;3312:9;3308:17;3299:6;3261:65;:::i;:::-;3123:210;;;;:::o;3339:118::-;3426:24;3444:5;3426:24;:::i;:::-;3421:3;3414:37;3339:118;;:::o;3463:222::-;3556:4;3594:2;3583:9;3579:18;3571:26;;3607:71;3675:1;3664:9;3660:17;3651:6;3607:71;:::i;:::-;3463:222;;;;:::o;3691:619::-;3768:6;3776;3784;3833:2;3821:9;3812:7;3808:23;3804:32;3801:119;;;3839:79;;:::i;:::-;3801:119;3959:1;3984:53;4029:7;4020:6;4009:9;4005:22;3984:53;:::i;:::-;3974:63;;3930:117;4086:2;4112:53;4157:7;4148:6;4137:9;4133:22;4112:53;:::i;:::-;4102:63;;4057:118;4214:2;4240:53;4285:7;4276:6;4265:9;4261:22;4240:53;:::i;:::-;4230:63;;4185:118;3691:619;;;;;:::o;4316:86::-;4351:7;4391:4;4384:5;4380:16;4369:27;;4316:86;;;:::o;4408:112::-;4491:22;4507:5;4491:22;:::i;:::-;4486:3;4479:35;4408:112;;:::o;4526:214::-;4615:4;4653:2;4642:9;4638:18;4630:26;;4666:67;4730:1;4719:9;4715:17;4706:6;4666:67;:::i;:::-;4526:214;;;;:::o;4746:329::-;4805:6;4854:2;4842:9;4833:7;4829:23;4825:32;4822:119;;;4860:79;;:::i;:::-;4822:119;4980:1;5005:53;5050:7;5041:6;5030:9;5026:22;5005:53;:::i;:::-;4995:63;;4951:117;4746:329;;;;:::o;5081:117::-;5190:1;5187;5180:12;5204:180;5252:77;5249:1;5242:88;5349:4;5346:1;5339:15;5373:4;5370:1;5363:15;5390:281;5473:27;5495:4;5473:27;:::i;:::-;5465:6;5461:40;5603:6;5591:10;5588:22;5567:18;5555:10;5552:34;5549:62;5546:88;;;5614:18;;:::i;:::-;5546:88;5654:10;5650:2;5643:22;5433:238;5390:281;;:::o;5677:129::-;5711:6;5738:20;;:::i;:::-;5728:30;;5767:33;5795:4;5787:6;5767:33;:::i;:::-;5677:129;;;:::o;5812:311::-;5889:4;5979:18;5971:6;5968:30;5965:56;;;6001:18;;:::i;:::-;5965:56;6051:4;6043:6;6039:17;6031:25;;6111:4;6105;6101:15;6093:23;;5812:311;;;:::o;6129:117::-;6238:1;6235;6228:12;6269:710;6365:5;6390:81;6406:64;6463:6;6406:64;:::i;:::-;6390:81;:::i;:::-;6381:90;;6491:5;6520:6;6513:5;6506:21;6554:4;6547:5;6543:16;6536:23;;6607:4;6599:6;6595:17;6587:6;6583:30;6636:3;6628:6;6625:15;6622:122;;;6655:79;;:::i;:::-;6622:122;6770:6;6753:220;6787:6;6782:3;6779:15;6753:220;;;6862:3;6891:37;6924:3;6912:10;6891:37;:::i;:::-;6886:3;6879:50;6958:4;6953:3;6949:14;6942:21;;6829:144;6813:4;6808:3;6804:14;6797:21;;6753:220;;;6757:21;6371:608;;6269:710;;;;;:::o;7002:370::-;7073:5;7122:3;7115:4;7107:6;7103:17;7099:27;7089:122;;7130:79;;:::i;:::-;7089:122;7247:6;7234:20;7272:94;7362:3;7354:6;7347:4;7339:6;7335:17;7272:94;:::i;:::-;7263:103;;7079:293;7002:370;;;;:::o;7378:829::-;7480:6;7488;7496;7545:2;7533:9;7524:7;7520:23;7516:32;7513:119;;;7551:79;;:::i;:::-;7513:119;7671:1;7696:53;7741:7;7732:6;7721:9;7717:22;7696:53;:::i;:::-;7686:63;;7642:117;7826:2;7815:9;7811:18;7798:32;7857:18;7849:6;7846:30;7843:117;;;7879:79;;:::i;:::-;7843:117;7984:78;8054:7;8045:6;8034:9;8030:22;7984:78;:::i;:::-;7974:88;;7769:303;8111:2;8137:53;8182:7;8173:6;8162:9;8158:22;8137:53;:::i;:::-;8127:63;;8082:118;7378:829;;;;;:::o;8213:474::-;8281:6;8289;8338:2;8326:9;8317:7;8313:23;8309:32;8306:119;;;8344:79;;:::i;:::-;8306:119;8464:1;8489:53;8534:7;8525:6;8514:9;8510:22;8489:53;:::i;:::-;8479:63;;8435:117;8591:2;8617:53;8662:7;8653:6;8642:9;8638:22;8617:53;:::i;:::-;8607:63;;8562:118;8213:474;;;;;:::o;8693:329::-;8752:6;8801:2;8789:9;8780:7;8776:23;8772:32;8769:119;;;8807:79;;:::i;:::-;8769:119;8927:1;8952:53;8997:7;8988:6;8977:9;8973:22;8952:53;:::i;:::-;8942:63;;8898:117;8693:329;;;;:::o;9028:118::-;9115:24;9133:5;9115:24;:::i;:::-;9110:3;9103:37;9028:118;;:::o;9152:222::-;9245:4;9283:2;9272:9;9268:18;9260:26;;9296:71;9364:1;9353:9;9349:17;9340:6;9296:71;:::i;:::-;9152:222;;;;:::o;9380:619::-;9457:6;9465;9473;9522:2;9510:9;9501:7;9497:23;9493:32;9490:119;;;9528:79;;:::i;:::-;9490:119;9648:1;9673:53;9718:7;9709:6;9698:9;9694:22;9673:53;:::i;:::-;9663:63;;9619:117;9775:2;9801:53;9846:7;9837:6;9826:9;9822:22;9801:53;:::i;:::-;9791:63;;9746:118;9903:2;9929:53;9974:7;9965:6;9954:9;9950:22;9929:53;:::i;:::-;9919:63;;9874:118;9380:619;;;;;:::o;10005:332::-;10126:4;10164:2;10153:9;10149:18;10141:26;;10177:71;10245:1;10234:9;10230:17;10221:6;10177:71;:::i;:::-;10258:72;10326:2;10315:9;10311:18;10302:6;10258:72;:::i;:::-;10005:332;;;;;:::o;10343:474::-;10411:6;10419;10468:2;10456:9;10447:7;10443:23;10439:32;10436:119;;;10474:79;;:::i;:::-;10436:119;10594:1;10619:53;10664:7;10655:6;10644:9;10640:22;10619:53;:::i;:::-;10609:63;;10565:117;10721:2;10747:53;10792:7;10783:6;10772:9;10768:22;10747:53;:::i;:::-;10737:63;;10692:118;10343:474;;;;;:::o;10823:108::-;10900:24;10918:5;10900:24;:::i;:::-;10895:3;10888:37;10823:108;;:::o;10937:114::-;11004:6;11038:5;11032:12;11022:22;;10937:114;;;:::o;11057:174::-;11146:11;11180:6;11175:3;11168:19;11220:4;11215:3;11211:14;11196:29;;11057:174;;;;:::o;11237:132::-;11304:4;11327:3;11319:11;;11357:4;11352:3;11348:14;11340:22;;11237:132;;;:::o;11375:179::-;11444:10;11465:46;11507:3;11499:6;11465:46;:::i;:::-;11543:4;11538:3;11534:14;11520:28;;11375:179;;;;:::o;11560:113::-;11630:4;11662;11657:3;11653:14;11645:22;;11560:113;;;:::o;11709:712::-;11818:3;11847:54;11895:5;11847:54;:::i;:::-;11917:76;11986:6;11981:3;11917:76;:::i;:::-;11910:83;;12017:56;12067:5;12017:56;:::i;:::-;12096:7;12127:1;12112:284;12137:6;12134:1;12131:13;12112:284;;;12213:6;12207:13;12240:63;12299:3;12284:13;12240:63;:::i;:::-;12233:70;;12326:60;12379:6;12326:60;:::i;:::-;12316:70;;12172:224;12159:1;12156;12152:9;12147:14;;12112:284;;;12116:14;12412:3;12405:10;;11823:598;;;11709:712;;;;:::o;12489:836::-;12616:3;12652:4;12647:3;12643:14;12743:4;12736:5;12732:16;12726:23;12762:63;12819:4;12814:3;12810:14;12796:12;12762:63;:::i;:::-;12667:168;12924:4;12917:5;12913:16;12907:23;12977:3;12971:4;12967:14;12960:4;12955:3;12951:14;12944:38;13003:103;13101:4;13087:12;13003:103;:::i;:::-;12995:111;;12845:272;13206:4;13199:5;13195:16;13189:23;13225:63;13282:4;13277:3;13273:14;13259:12;13225:63;:::i;:::-;13127:171;13315:4;13308:11;;12621:704;12489:836;;;;:::o;13331:389::-;13482:4;13520:2;13509:9;13505:18;13497:26;;13569:9;13563:4;13559:20;13555:1;13544:9;13540:17;13533:47;13597:116;13708:4;13699:6;13597:116;:::i;:::-;13589:124;;13331:389;;;;:::o;13726:180::-;13774:77;13771:1;13764:88;13871:4;13868:1;13861:15;13895:4;13892:1;13885:15;13912:320;13956:6;13993:1;13987:4;13983:12;13973:22;;14040:1;14034:4;14030:12;14061:18;14051:81;;14117:4;14109:6;14105:17;14095:27;;14051:81;14179:2;14171:6;14168:14;14148:18;14145:38;14142:84;;14198:18;;:::i;:::-;14142:84;13963:269;13912:320;;;:::o;14238:171::-;14378:23;14374:1;14366:6;14362:14;14355:47;14238:171;:::o;14415:366::-;14557:3;14578:67;14642:2;14637:3;14578:67;:::i;:::-;14571:74;;14654:93;14743:3;14654:93;:::i;:::-;14772:2;14767:3;14763:12;14756:19;;14415:366;;;:::o;14787:419::-;14953:4;14991:2;14980:9;14976:18;14968:26;;15040:9;15034:4;15030:20;15026:1;15015:9;15011:17;15004:47;15068:131;15194:4;15068:131;:::i;:::-;15060:139;;14787:419;;;:::o;15212:175::-;15352:27;15348:1;15340:6;15336:14;15329:51;15212:175;:::o;15393:366::-;15535:3;15556:67;15620:2;15615:3;15556:67;:::i;:::-;15549:74;;15632:93;15721:3;15632:93;:::i;:::-;15750:2;15745:3;15741:12;15734:19;;15393:366;;;:::o;15765:419::-;15931:4;15969:2;15958:9;15954:18;15946:26;;16018:9;16012:4;16008:20;16004:1;15993:9;15989:17;15982:47;16046:131;16172:4;16046:131;:::i;:::-;16038:139;;15765:419;;;:::o;16190:179::-;16330:31;16326:1;16318:6;16314:14;16307:55;16190:179;:::o;16375:366::-;16517:3;16538:67;16602:2;16597:3;16538:67;:::i;:::-;16531:74;;16614:93;16703:3;16614:93;:::i;:::-;16732:2;16727:3;16723:12;16716:19;;16375:366;;;:::o;16747:419::-;16913:4;16951:2;16940:9;16936:18;16928:26;;17000:9;16994:4;16990:20;16986:1;16975:9;16971:17;16964:47;17028:131;17154:4;17028:131;:::i;:::-;17020:139;;16747:419;;;:::o;17172:180::-;17220:77;17217:1;17210:88;17317:4;17314:1;17307:15;17341:4;17338:1;17331:15;17358:194;17398:4;17418:20;17436:1;17418:20;:::i;:::-;17413:25;;17452:20;17470:1;17452:20;:::i;:::-;17447:25;;17496:1;17493;17489:9;17481:17;;17520:1;17514:4;17511:11;17508:37;;;17525:18;;:::i;:::-;17508:37;17358:194;;;;:::o;17558:191::-;17598:3;17617:20;17635:1;17617:20;:::i;:::-;17612:25;;17651:20;17669:1;17651:20;:::i;:::-;17646:25;;17694:1;17691;17687:9;17680:16;;17715:3;17712:1;17709:10;17706:36;;;17722:18;;:::i;:::-;17706:36;17558:191;;;;:::o;17755:179::-;17895:31;17891:1;17883:6;17879:14;17872:55;17755:179;:::o;17940:366::-;18082:3;18103:67;18167:2;18162:3;18103:67;:::i;:::-;18096:74;;18179:93;18268:3;18179:93;:::i;:::-;18297:2;18292:3;18288:12;18281:19;;17940:366;;;:::o;18312:419::-;18478:4;18516:2;18505:9;18501:18;18493:26;;18565:9;18559:4;18555:20;18551:1;18540:9;18536:17;18529:47;18593:131;18719:4;18593:131;:::i;:::-;18585:139;;18312:419;;;:::o;18737:177::-;18877:29;18873:1;18865:6;18861:14;18854:53;18737:177;:::o;18920:366::-;19062:3;19083:67;19147:2;19142:3;19083:67;:::i;:::-;19076:74;;19159:93;19248:3;19159:93;:::i;:::-;19277:2;19272:3;19268:12;19261:19;;18920:366;;;:::o;19292:419::-;19458:4;19496:2;19485:9;19481:18;19473:26;;19545:9;19539:4;19535:20;19531:1;19520:9;19516:17;19509:47;19573:131;19699:4;19573:131;:::i;:::-;19565:139;;19292:419;;;:::o;19717:179::-;19857:31;19853:1;19845:6;19841:14;19834:55;19717:179;:::o;19902:366::-;20044:3;20065:67;20129:2;20124:3;20065:67;:::i;:::-;20058:74;;20141:93;20230:3;20141:93;:::i;:::-;20259:2;20254:3;20250:12;20243:19;;19902:366;;;:::o;20274:419::-;20440:4;20478:2;20467:9;20463:18;20455:26;;20527:9;20521:4;20517:20;20513:1;20502:9;20498:17;20491:47;20555:131;20681:4;20555:131;:::i;:::-;20547:139;;20274:419;;;:::o;20699:442::-;20848:4;20886:2;20875:9;20871:18;20863:26;;20899:71;20967:1;20956:9;20952:17;20943:6;20899:71;:::i;:::-;20980:72;21048:2;21037:9;21033:18;21024:6;20980:72;:::i;:::-;21062;21130:2;21119:9;21115:18;21106:6;21062:72;:::i;:::-;20699:442;;;;;;:::o;21147:166::-;21287:18;21283:1;21275:6;21271:14;21264:42;21147:166;:::o;21319:366::-;21461:3;21482:67;21546:2;21541:3;21482:67;:::i;:::-;21475:74;;21558:93;21647:3;21558:93;:::i;:::-;21676:2;21671:3;21667:12;21660:19;;21319:366;;;:::o;21691:419::-;21857:4;21895:2;21884:9;21880:18;21872:26;;21944:9;21938:4;21934:20;21930:1;21919:9;21915:17;21908:47;21972:131;22098:4;21972:131;:::i;:::-;21964:139;;21691:419;;;:::o;22116:170::-;22256:22;22252:1;22244:6;22240:14;22233:46;22116:170;:::o;22292:366::-;22434:3;22455:67;22519:2;22514:3;22455:67;:::i;:::-;22448:74;;22531:93;22620:3;22531:93;:::i;:::-;22649:2;22644:3;22640:12;22633:19;;22292:366;;;:::o;22664:419::-;22830:4;22868:2;22857:9;22853:18;22845:26;;22917:9;22911:4;22907:20;22903:1;22892:9;22888:17;22881:47;22945:131;23071:4;22945:131;:::i;:::-;22937:139;;22664:419;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1917400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "2874",
								"basketShares(uint256)": "infinite",
								"baskets(uint256)": "infinite",
								"createBasket(uint256,uint256[],uint256)": "infinite",
								"decimals()": "406",
								"getAvailableShares(uint256)": "infinite",
								"getBasketDetails(uint256)": "infinite",
								"getPropertyOwner(uint256)": "2918",
								"getShares(uint256,address)": "infinite",
								"getTotalShares(uint256)": "infinite",
								"integrateWithExternalSystem(uint256)": "711",
								"issuePropertyShares(uint256,address,uint256)": "infinite",
								"issueShares(uint256,address,uint256)": "infinite",
								"name()": "infinite",
								"owner()": "2560",
								"pause()": "infinite",
								"paused()": "2614",
								"propertyOwners(uint256)": "2938",
								"propertyShares(uint256)": "infinite",
								"renounceOwnership()": "infinite",
								"setPropertyOwner(uint256,address)": "infinite",
								"symbol()": "infinite",
								"totalSupply()": "2523",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite",
								"transferOwnership(address)": "infinite",
								"transferShares(uint256,address,uint256)": "infinite",
								"unpause()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 343,
									"end": 4159,
									"name": "PUSH",
									"source": 11,
									"value": "80"
								},
								{
									"begin": 343,
									"end": 4159,
									"name": "PUSH",
									"source": 11,
									"value": "40"
								},
								{
									"begin": 343,
									"end": 4159,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 1153,
									"end": 1226,
									"name": "CALLVALUE",
									"source": 11
								},
								{
									"begin": 1153,
									"end": 1226,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 1153,
									"end": 1226,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 1153,
									"end": 1226,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 1153,
									"end": 1226,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 1153,
									"end": 1226,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 1153,
									"end": 1226,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 1153,
									"end": 1226,
									"name": "REVERT",
									"source": 11
								},
								{
									"begin": 1153,
									"end": 1226,
									"name": "tag",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 1153,
									"end": 1226,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1153,
									"end": 1226,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1207,
									"end": 1217,
									"name": "CALLER",
									"source": 11
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 3,
									"value": "D"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 3,
									"value": "50726F7065727479536861726500000000000000000000000000000000000000"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 3,
									"value": "5"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 3,
									"value": "5348415245000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1970,
									"end": 1975,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1962,
									"end": 1967,
									"name": "PUSH",
									"source": 3,
									"value": "3"
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "7"
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "8"
								},
								{
									"begin": 1962,
									"end": 1975,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "tag",
									"source": 3,
									"value": "7"
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1995,
									"end": 2002,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1985,
									"end": 1992,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "9"
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "8"
								},
								{
									"begin": 1985,
									"end": 2002,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "tag",
									"source": 3,
									"value": "9"
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1297,
									"end": 1298,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1285,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1350,
									"end": 1351,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 1322,
									"end": 1353,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "tag",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "tag",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 1392,
									"end": 1404,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "tag",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1225,
									"end": 1412,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1006,
									"end": 1011,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 996,
									"end": 1003,
									"name": "PUSH",
									"source": 2,
									"value": "5"
								},
								{
									"begin": 996,
									"end": 1003,
									"name": "PUSH",
									"source": 2,
									"value": "14"
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "PUSH",
									"source": 2,
									"value": "100"
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "EXP",
									"source": 2
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "PUSH",
									"source": 2,
									"value": "FF"
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "NOT",
									"source": 2
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "OR",
									"source": 2
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 343,
									"end": 4159,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "18"
								},
								{
									"begin": 343,
									"end": 4159,
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "tag",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3001,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3029,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3083,
									"end": 3091,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3073,
									"end": 3081,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2975,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 7,
									"end": 106,
									"name": "tag",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 7,
									"end": 106,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 59,
									"end": 65,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 93,
									"end": 98,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 87,
									"end": 99,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 77,
									"end": 99,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 77,
									"end": 99,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 7,
									"end": 106,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 7,
									"end": 106,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 7,
									"end": 106,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 7,
									"end": 106,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 112,
									"end": 292,
									"name": "tag",
									"source": 12,
									"value": "21"
								},
								{
									"begin": 112,
									"end": 292,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 160,
									"end": 237,
									"name": "PUSH",
									"source": 12,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 157,
									"end": 158,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 150,
									"end": 238,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 257,
									"end": 261,
									"name": "PUSH",
									"source": 12,
									"value": "41"
								},
								{
									"begin": 254,
									"end": 255,
									"name": "PUSH",
									"source": 12,
									"value": "4"
								},
								{
									"begin": 247,
									"end": 262,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 281,
									"end": 285,
									"name": "PUSH",
									"source": 12,
									"value": "24"
								},
								{
									"begin": 278,
									"end": 279,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 271,
									"end": 286,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 298,
									"end": 478,
									"name": "tag",
									"source": 12,
									"value": "22"
								},
								{
									"begin": 298,
									"end": 478,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 346,
									"end": 423,
									"name": "PUSH",
									"source": 12,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 343,
									"end": 344,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 336,
									"end": 424,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 443,
									"end": 447,
									"name": "PUSH",
									"source": 12,
									"value": "22"
								},
								{
									"begin": 440,
									"end": 441,
									"name": "PUSH",
									"source": 12,
									"value": "4"
								},
								{
									"begin": 433,
									"end": 448,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 467,
									"end": 471,
									"name": "PUSH",
									"source": 12,
									"value": "24"
								},
								{
									"begin": 464,
									"end": 465,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 457,
									"end": 472,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 484,
									"end": 804,
									"name": "tag",
									"source": 12,
									"value": "23"
								},
								{
									"begin": 484,
									"end": 804,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 528,
									"end": 534,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 565,
									"end": 566,
									"name": "PUSH",
									"source": 12,
									"value": "2"
								},
								{
									"begin": 559,
									"end": 563,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 555,
									"end": 567,
									"name": "DIV",
									"source": 12
								},
								{
									"begin": 545,
									"end": 567,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 545,
									"end": 567,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 612,
									"end": 613,
									"name": "PUSH",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 606,
									"end": 610,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 602,
									"end": 614,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 633,
									"end": 651,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 623,
									"end": 704,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "48"
								},
								{
									"begin": 623,
									"end": 704,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 689,
									"end": 693,
									"name": "PUSH",
									"source": 12,
									"value": "7F"
								},
								{
									"begin": 681,
									"end": 687,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 677,
									"end": 694,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 667,
									"end": 694,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 667,
									"end": 694,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 623,
									"end": 704,
									"name": "tag",
									"source": 12,
									"value": "48"
								},
								{
									"begin": 623,
									"end": 704,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 751,
									"end": 753,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 743,
									"end": 749,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 740,
									"end": 754,
									"name": "LT",
									"source": 12
								},
								{
									"begin": 720,
									"end": 738,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 717,
									"end": 755,
									"name": "SUB",
									"source": 12
								},
								{
									"begin": 714,
									"end": 798,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "49"
								},
								{
									"begin": 714,
									"end": 798,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 770,
									"end": 788,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "50"
								},
								{
									"begin": 770,
									"end": 788,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "22"
								},
								{
									"begin": 770,
									"end": 788,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 770,
									"end": 788,
									"name": "tag",
									"source": 12,
									"value": "50"
								},
								{
									"begin": 770,
									"end": 788,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 714,
									"end": 798,
									"name": "tag",
									"source": 12,
									"value": "49"
								},
								{
									"begin": 714,
									"end": 798,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 535,
									"end": 804,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 484,
									"end": 804,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 484,
									"end": 804,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 484,
									"end": 804,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 484,
									"end": 804,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 810,
									"end": 951,
									"name": "tag",
									"source": 12,
									"value": "24"
								},
								{
									"begin": 810,
									"end": 951,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 859,
									"end": 863,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 882,
									"end": 885,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 874,
									"end": 885,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 874,
									"end": 885,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 905,
									"end": 908,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 902,
									"end": 903,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 895,
									"end": 909,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 939,
									"end": 943,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 936,
									"end": 937,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 926,
									"end": 944,
									"name": "KECCAK256",
									"source": 12
								},
								{
									"begin": 918,
									"end": 944,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 918,
									"end": 944,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 810,
									"end": 951,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 810,
									"end": 951,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 810,
									"end": 951,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 810,
									"end": 951,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "tag",
									"source": 12,
									"value": "25"
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 994,
									"end": 1000,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 1041,
									"end": 1043,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 1036,
									"end": 1038,
									"name": "PUSH",
									"source": 12,
									"value": "1F"
								},
								{
									"begin": 1029,
									"end": 1034,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 1025,
									"end": 1039,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 1021,
									"end": 1044,
									"name": "DIV",
									"source": 12
								},
								{
									"begin": 1011,
									"end": 1044,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 1011,
									"end": 1044,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 957,
									"end": 1050,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "tag",
									"source": 12,
									"value": "26"
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1100,
									"end": 1108,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 1150,
									"end": 1155,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 1144,
									"end": 1148,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 1140,
									"end": 1156,
									"name": "SHL",
									"source": 12
								},
								{
									"begin": 1119,
									"end": 1156,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 1119,
									"end": 1156,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1056,
									"end": 1163,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "tag",
									"source": 12,
									"value": "27"
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1238,
									"end": 1244,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 1288,
									"end": 1289,
									"name": "PUSH",
									"source": 12,
									"value": "8"
								},
								{
									"begin": 1276,
									"end": 1286,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 1272,
									"end": 1290,
									"name": "MUL",
									"source": 12
								},
								{
									"begin": 1311,
									"end": 1408,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "55"
								},
								{
									"begin": 1341,
									"end": 1407,
									"name": "PUSH",
									"source": 12,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1330,
									"end": 1339,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 1311,
									"end": 1408,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "26"
								},
								{
									"begin": 1311,
									"end": 1408,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1311,
									"end": 1408,
									"name": "tag",
									"source": 12,
									"value": "55"
								},
								{
									"begin": 1311,
									"end": 1408,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1429,
									"end": 1468,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "56"
								},
								{
									"begin": 1459,
									"end": 1467,
									"name": "DUP7",
									"source": 12
								},
								{
									"begin": 1448,
									"end": 1457,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 1429,
									"end": 1468,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "26"
								},
								{
									"begin": 1429,
									"end": 1468,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1429,
									"end": 1468,
									"name": "tag",
									"source": 12,
									"value": "56"
								},
								{
									"begin": 1429,
									"end": 1468,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1417,
									"end": 1468,
									"name": "SWAP6",
									"source": 12
								},
								{
									"begin": 1417,
									"end": 1468,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1501,
									"end": 1505,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 1497,
									"end": 1506,
									"name": "NOT",
									"source": 12
								},
								{
									"begin": 1490,
									"end": 1495,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 1486,
									"end": 1507,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 1477,
									"end": 1507,
									"name": "SWAP4",
									"source": 12
								},
								{
									"begin": 1477,
									"end": 1507,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1550,
									"end": 1554,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 1540,
									"end": 1548,
									"name": "DUP7",
									"source": 12
								},
								{
									"begin": 1536,
									"end": 1555,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 1529,
									"end": 1534,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 1526,
									"end": 1556,
									"name": "OR",
									"source": 12
								},
								{
									"begin": 1516,
									"end": 1556,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 1516,
									"end": 1556,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1245,
									"end": 1562,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1245,
									"end": 1562,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "SWAP4",
									"source": 12
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1169,
									"end": 1562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "tag",
									"source": 12,
									"value": "28"
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1605,
									"end": 1612,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 1634,
									"end": 1639,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 1623,
									"end": 1639,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 1623,
									"end": 1639,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1568,
									"end": 1645,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "tag",
									"source": 12,
									"value": "29"
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1679,
									"end": 1682,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 1700,
									"end": 1705,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 1693,
									"end": 1705,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 1693,
									"end": 1705,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1651,
									"end": 1711,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "tag",
									"source": 12,
									"value": "30"
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1767,
									"end": 1776,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 1800,
									"end": 1853,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "60"
								},
								{
									"begin": 1818,
									"end": 1852,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "61"
								},
								{
									"begin": 1827,
									"end": 1851,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "62"
								},
								{
									"begin": 1845,
									"end": 1850,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 1827,
									"end": 1851,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "28"
								},
								{
									"begin": 1827,
									"end": 1851,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1827,
									"end": 1851,
									"name": "tag",
									"source": 12,
									"value": "62"
								},
								{
									"begin": 1827,
									"end": 1851,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1818,
									"end": 1852,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "29"
								},
								{
									"begin": 1818,
									"end": 1852,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1818,
									"end": 1852,
									"name": "tag",
									"source": 12,
									"value": "61"
								},
								{
									"begin": 1818,
									"end": 1852,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1800,
									"end": 1853,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "28"
								},
								{
									"begin": 1800,
									"end": 1853,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1800,
									"end": 1853,
									"name": "tag",
									"source": 12,
									"value": "60"
								},
								{
									"begin": 1800,
									"end": 1853,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1787,
									"end": 1853,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 1787,
									"end": 1853,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1717,
									"end": 1859,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "tag",
									"source": 12,
									"value": "31"
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1908,
									"end": 1911,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 1929,
									"end": 1934,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 1922,
									"end": 1934,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 1922,
									"end": 1934,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1865,
									"end": 1940,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "tag",
									"source": 12,
									"value": "32"
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2056,
									"end": 2095,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "65"
								},
								{
									"begin": 2087,
									"end": 2094,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 2056,
									"end": 2095,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "30"
								},
								{
									"begin": 2056,
									"end": 2095,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 2056,
									"end": 2095,
									"name": "tag",
									"source": 12,
									"value": "65"
								},
								{
									"begin": 2056,
									"end": 2095,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2117,
									"end": 2208,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "66"
								},
								{
									"begin": 2166,
									"end": 2207,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "67"
								},
								{
									"begin": 2190,
									"end": 2206,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 2166,
									"end": 2207,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "31"
								},
								{
									"begin": 2166,
									"end": 2207,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 2166,
									"end": 2207,
									"name": "tag",
									"source": 12,
									"value": "67"
								},
								{
									"begin": 2166,
									"end": 2207,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2158,
									"end": 2164,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 2151,
									"end": 2155,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 2145,
									"end": 2156,
									"name": "SLOAD",
									"source": 12
								},
								{
									"begin": 2117,
									"end": 2208,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "27"
								},
								{
									"begin": 2117,
									"end": 2208,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 2117,
									"end": 2208,
									"name": "tag",
									"source": 12,
									"value": "66"
								},
								{
									"begin": 2117,
									"end": 2208,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2111,
									"end": 2115,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 2104,
									"end": 2209,
									"name": "SSTORE",
									"source": 12
								},
								{
									"begin": 2022,
									"end": 2215,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1946,
									"end": 2215,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 2221,
									"end": 2294,
									"name": "tag",
									"source": 12,
									"value": "33"
								},
								{
									"begin": 2221,
									"end": 2294,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2266,
									"end": 2269,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 2221,
									"end": 2294,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 2221,
									"end": 2294,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 2300,
									"end": 2489,
									"name": "tag",
									"source": 12,
									"value": "34"
								},
								{
									"begin": 2300,
									"end": 2489,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2377,
									"end": 2409,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "70"
								},
								{
									"begin": 2377,
									"end": 2409,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "33"
								},
								{
									"begin": 2377,
									"end": 2409,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 2377,
									"end": 2409,
									"name": "tag",
									"source": 12,
									"value": "70"
								},
								{
									"begin": 2377,
									"end": 2409,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2418,
									"end": 2483,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "71"
								},
								{
									"begin": 2476,
									"end": 2482,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 2468,
									"end": 2474,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 2462,
									"end": 2466,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 2418,
									"end": 2483,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "32"
								},
								{
									"begin": 2418,
									"end": 2483,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 2418,
									"end": 2483,
									"name": "tag",
									"source": 12,
									"value": "71"
								},
								{
									"begin": 2418,
									"end": 2483,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2353,
									"end": 2489,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2300,
									"end": 2489,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2300,
									"end": 2489,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2300,
									"end": 2489,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 2495,
									"end": 2681,
									"name": "tag",
									"source": 12,
									"value": "35"
								},
								{
									"begin": 2495,
									"end": 2681,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "tag",
									"source": 12,
									"value": "73"
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2572,
									"end": 2575,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 2565,
									"end": 2570,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 2562,
									"end": 2576,
									"name": "LT",
									"source": 12
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "75"
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 2626,
									"end": 2665,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "76"
								},
								{
									"begin": 2663,
									"end": 2664,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 2656,
									"end": 2661,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 2626,
									"end": 2665,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "34"
								},
								{
									"begin": 2626,
									"end": 2665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 2626,
									"end": 2665,
									"name": "tag",
									"source": 12,
									"value": "76"
								},
								{
									"begin": 2626,
									"end": 2665,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2599,
									"end": 2600,
									"name": "PUSH",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 2592,
									"end": 2597,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 2588,
									"end": 2601,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 2579,
									"end": 2601,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 2579,
									"end": 2601,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "73"
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "tag",
									"source": 12,
									"value": "75"
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2495,
									"end": 2681,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2495,
									"end": 2681,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2495,
									"end": 2681,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "tag",
									"source": 12,
									"value": "36"
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2788,
									"end": 2790,
									"name": "PUSH",
									"source": 12,
									"value": "1F"
								},
								{
									"begin": 2783,
									"end": 2786,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 2780,
									"end": 2791,
									"name": "GT",
									"source": 12
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "78"
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 2822,
									"end": 2860,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "79"
								},
								{
									"begin": 2854,
									"end": 2859,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 2822,
									"end": 2860,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "24"
								},
								{
									"begin": 2822,
									"end": 2860,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 2822,
									"end": 2860,
									"name": "tag",
									"source": 12,
									"value": "79"
								},
								{
									"begin": 2822,
									"end": 2860,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2906,
									"end": 2935,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "80"
								},
								{
									"begin": 2924,
									"end": 2934,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 2906,
									"end": 2935,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "25"
								},
								{
									"begin": 2906,
									"end": 2935,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 2906,
									"end": 2935,
									"name": "tag",
									"source": 12,
									"value": "80"
								},
								{
									"begin": 2906,
									"end": 2935,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2896,
									"end": 2904,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 2892,
									"end": 2936,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 3089,
									"end": 3091,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 3077,
									"end": 3087,
									"name": "DUP6",
									"source": 12
								},
								{
									"begin": 3074,
									"end": 3092,
									"name": "LT",
									"source": 12
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "81"
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 3110,
									"end": 3118,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 3095,
									"end": 3118,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 3095,
									"end": 3118,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "tag",
									"source": 12,
									"value": "81"
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 3133,
									"end": 3213,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "82"
								},
								{
									"begin": 3189,
									"end": 3211,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "83"
								},
								{
									"begin": 3207,
									"end": 3210,
									"name": "DUP6",
									"source": 12
								},
								{
									"begin": 3189,
									"end": 3211,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "25"
								},
								{
									"begin": 3189,
									"end": 3211,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 3189,
									"end": 3211,
									"name": "tag",
									"source": 12,
									"value": "83"
								},
								{
									"begin": 3189,
									"end": 3211,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 3179,
									"end": 3187,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 3175,
									"end": 3212,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 3162,
									"end": 3173,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 3133,
									"end": 3213,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "35"
								},
								{
									"begin": 3133,
									"end": 3213,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 3133,
									"end": 3213,
									"name": "tag",
									"source": 12,
									"value": "82"
								},
								{
									"begin": 3133,
									"end": 3213,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2792,
									"end": 3223,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2792,
									"end": 3223,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "tag",
									"source": 12,
									"value": "78"
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2687,
									"end": 3230,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "tag",
									"source": 12,
									"value": "37"
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 3290,
									"end": 3298,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 3340,
									"end": 3345,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 3334,
									"end": 3338,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 3330,
									"end": 3346,
									"name": "SHR",
									"source": 12
								},
								{
									"begin": 3309,
									"end": 3346,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 3309,
									"end": 3346,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3236,
									"end": 3353,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "tag",
									"source": 12,
									"value": "38"
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 3403,
									"end": 3409,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 3436,
									"end": 3487,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "86"
								},
								{
									"begin": 3484,
									"end": 3485,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 3480,
									"end": 3486,
									"name": "NOT",
									"source": 12
								},
								{
									"begin": 3472,
									"end": 3477,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 3469,
									"end": 3470,
									"name": "PUSH",
									"source": 12,
									"value": "8"
								},
								{
									"begin": 3465,
									"end": 3478,
									"name": "MUL",
									"source": 12
								},
								{
									"begin": 3436,
									"end": 3487,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "37"
								},
								{
									"begin": 3436,
									"end": 3487,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 3436,
									"end": 3487,
									"name": "tag",
									"source": 12,
									"value": "86"
								},
								{
									"begin": 3436,
									"end": 3487,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 3432,
									"end": 3488,
									"name": "NOT",
									"source": 12
								},
								{
									"begin": 3517,
									"end": 3521,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 3511,
									"end": 3515,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 3507,
									"end": 3522,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 3497,
									"end": 3522,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 3497,
									"end": 3522,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3410,
									"end": 3528,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3359,
									"end": 3528,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "tag",
									"source": 12,
									"value": "39"
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 3609,
									"end": 3613,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 3755,
									"end": 3784,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "88"
								},
								{
									"begin": 3780,
									"end": 3783,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 3774,
									"end": 3778,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 3755,
									"end": 3784,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "38"
								},
								{
									"begin": 3755,
									"end": 3784,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 3755,
									"end": 3784,
									"name": "tag",
									"source": 12,
									"value": "88"
								},
								{
									"begin": 3755,
									"end": 3784,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 3747,
									"end": 3784,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 3747,
									"end": 3784,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3817,
									"end": 3820,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 3814,
									"end": 3815,
									"name": "PUSH",
									"source": 12,
									"value": "2"
								},
								{
									"begin": 3810,
									"end": 3821,
									"name": "MUL",
									"source": 12
								},
								{
									"begin": 3804,
									"end": 3808,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 3801,
									"end": 3822,
									"name": "OR",
									"source": 12
								},
								{
									"begin": 3793,
									"end": 3822,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 3793,
									"end": 3822,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3533,
									"end": 3828,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 3833,
									"end": 5228,
									"name": "tag",
									"source": 12,
									"value": "8"
								},
								{
									"begin": 3833,
									"end": 5228,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 3950,
									"end": 3987,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "90"
								},
								{
									"begin": 3983,
									"end": 3986,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 3950,
									"end": 3987,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 3950,
									"end": 3987,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 3950,
									"end": 3987,
									"name": "tag",
									"source": 12,
									"value": "90"
								},
								{
									"begin": 3950,
									"end": 3987,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 4052,
									"end": 4070,
									"name": "PUSH",
									"source": 12,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 4044,
									"end": 4050,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 4041,
									"end": 4071,
									"name": "GT",
									"source": 12
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "91"
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 4074,
									"end": 4092,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "92"
								},
								{
									"begin": 4074,
									"end": 4092,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "21"
								},
								{
									"begin": 4074,
									"end": 4092,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 4074,
									"end": 4092,
									"name": "tag",
									"source": 12,
									"value": "92"
								},
								{
									"begin": 4074,
									"end": 4092,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "tag",
									"source": 12,
									"value": "91"
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 4118,
									"end": 4156,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "93"
								},
								{
									"begin": 4150,
									"end": 4154,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 4144,
									"end": 4155,
									"name": "SLOAD",
									"source": 12
								},
								{
									"begin": 4118,
									"end": 4156,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "23"
								},
								{
									"begin": 4118,
									"end": 4156,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 4118,
									"end": 4156,
									"name": "tag",
									"source": 12,
									"value": "93"
								},
								{
									"begin": 4118,
									"end": 4156,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 4203,
									"end": 4270,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "94"
								},
								{
									"begin": 4263,
									"end": 4269,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 4255,
									"end": 4261,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 4249,
									"end": 4253,
									"name": "DUP6",
									"source": 12
								},
								{
									"begin": 4203,
									"end": 4270,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "36"
								},
								{
									"begin": 4203,
									"end": 4270,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 4203,
									"end": 4270,
									"name": "tag",
									"source": 12,
									"value": "94"
								},
								{
									"begin": 4203,
									"end": 4270,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 4297,
									"end": 4298,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 4321,
									"end": 4325,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 4308,
									"end": 4325,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 4308,
									"end": 4325,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 4353,
									"end": 4355,
									"name": "PUSH",
									"source": 12,
									"value": "1F"
								},
								{
									"begin": 4345,
									"end": 4351,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 4342,
									"end": 4356,
									"name": "GT",
									"source": 12
								},
								{
									"begin": 4370,
									"end": 4371,
									"name": "PUSH",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "EQ",
									"source": 12
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "96"
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 5027,
									"end": 5028,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 5044,
									"end": 5050,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "97"
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 5093,
									"end": 5102,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 5088,
									"end": 5091,
									"name": "DUP8",
									"source": 12
								},
								{
									"begin": 5084,
									"end": 5103,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 5078,
									"end": 5104,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 5069,
									"end": 5104,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 5069,
									"end": 5104,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "tag",
									"source": 12,
									"value": "97"
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 5144,
									"end": 5211,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "98"
								},
								{
									"begin": 5204,
									"end": 5210,
									"name": "DUP6",
									"source": 12
								},
								{
									"begin": 5197,
									"end": 5202,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 5144,
									"end": 5211,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "39"
								},
								{
									"begin": 5144,
									"end": 5211,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 5144,
									"end": 5211,
									"name": "tag",
									"source": 12,
									"value": "98"
								},
								{
									"begin": 5144,
									"end": 5211,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 5138,
									"end": 5142,
									"name": "DUP7",
									"source": 12
								},
								{
									"begin": 5131,
									"end": 5212,
									"name": "SSTORE",
									"source": 12
								},
								{
									"begin": 5000,
									"end": 5222,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "95"
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "tag",
									"source": 12,
									"value": "96"
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 4417,
									"end": 4421,
									"name": "PUSH",
									"source": 12,
									"value": "1F"
								},
								{
									"begin": 4413,
									"end": 4422,
									"name": "NOT",
									"source": 12
								},
								{
									"begin": 4405,
									"end": 4411,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 4401,
									"end": 4423,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 4451,
									"end": 4488,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "99"
								},
								{
									"begin": 4483,
									"end": 4487,
									"name": "DUP7",
									"source": 12
								},
								{
									"begin": 4451,
									"end": 4488,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "24"
								},
								{
									"begin": 4451,
									"end": 4488,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 4451,
									"end": 4488,
									"name": "tag",
									"source": 12,
									"value": "99"
								},
								{
									"begin": 4451,
									"end": 4488,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 4510,
									"end": 4511,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "tag",
									"source": 12,
									"value": "100"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 4538,
									"end": 4545,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 4535,
									"end": 4536,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 4532,
									"end": 4546,
									"name": "LT",
									"source": 12
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "102"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 4617,
									"end": 4626,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 4612,
									"end": 4615,
									"name": "DUP10",
									"source": 12
								},
								{
									"begin": 4608,
									"end": 4627,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 4602,
									"end": 4628,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 4594,
									"end": 4600,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 4587,
									"end": 4629,
									"name": "SSTORE",
									"source": 12
								},
								{
									"begin": 4668,
									"end": 4669,
									"name": "PUSH",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 4660,
									"end": 4666,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 4656,
									"end": 4670,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 4646,
									"end": 4670,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 4646,
									"end": 4670,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 4715,
									"end": 4717,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 4704,
									"end": 4713,
									"name": "DUP6",
									"source": 12
								},
								{
									"begin": 4700,
									"end": 4718,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 4687,
									"end": 4718,
									"name": "SWAP5",
									"source": 12
								},
								{
									"begin": 4687,
									"end": 4718,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 4561,
									"end": 4565,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 4558,
									"end": 4559,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 4554,
									"end": 4566,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 4549,
									"end": 4566,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 4549,
									"end": 4566,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "100"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "tag",
									"source": 12,
									"value": "102"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 4760,
									"end": 4766,
									"name": "DUP7",
									"source": 12
								},
								{
									"begin": 4751,
									"end": 4758,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 4748,
									"end": 4767,
									"name": "LT",
									"source": 12
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "103"
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 4818,
									"end": 4827,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 4813,
									"end": 4816,
									"name": "DUP10",
									"source": 12
								},
								{
									"begin": 4809,
									"end": 4828,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 4803,
									"end": 4829,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 4861,
									"end": 4909,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "104"
								},
								{
									"begin": 4903,
									"end": 4907,
									"name": "PUSH",
									"source": 12,
									"value": "1F"
								},
								{
									"begin": 4895,
									"end": 4901,
									"name": "DUP10",
									"source": 12
								},
								{
									"begin": 4891,
									"end": 4908,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 4880,
									"end": 4889,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 4861,
									"end": 4909,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "38"
								},
								{
									"begin": 4861,
									"end": 4909,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 4861,
									"end": 4909,
									"name": "tag",
									"source": 12,
									"value": "104"
								},
								{
									"begin": 4861,
									"end": 4909,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 4853,
									"end": 4859,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 4846,
									"end": 4910,
									"name": "SSTORE",
									"source": 12
								},
								{
									"begin": 4768,
									"end": 4924,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "tag",
									"source": 12,
									"value": "103"
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 4970,
									"end": 4971,
									"name": "PUSH",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 4966,
									"end": 4967,
									"name": "PUSH",
									"source": 12,
									"value": "2"
								},
								{
									"begin": 4958,
									"end": 4964,
									"name": "DUP9",
									"source": 12
								},
								{
									"begin": 4954,
									"end": 4968,
									"name": "MUL",
									"source": 12
								},
								{
									"begin": 4950,
									"end": 4972,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 4944,
									"end": 4948,
									"name": "DUP9",
									"source": 12
								},
								{
									"begin": 4937,
									"end": 4973,
									"name": "SSTORE",
									"source": 12
								},
								{
									"begin": 4372,
									"end": 4983,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 4372,
									"end": 4983,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 4372,
									"end": 4983,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "tag",
									"source": 12,
									"value": "95"
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3925,
									"end": 5228,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3925,
									"end": 5228,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3925,
									"end": 5228,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3833,
									"end": 5228,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3833,
									"end": 5228,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3833,
									"end": 5228,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 5234,
									"end": 5360,
									"name": "tag",
									"source": 12,
									"value": "40"
								},
								{
									"begin": 5234,
									"end": 5360,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 5271,
									"end": 5278,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 5311,
									"end": 5353,
									"name": "PUSH",
									"source": 12,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 5304,
									"end": 5309,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 5300,
									"end": 5354,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 5289,
									"end": 5354,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 5289,
									"end": 5354,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 5234,
									"end": 5360,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 5234,
									"end": 5360,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 5234,
									"end": 5360,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 5234,
									"end": 5360,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 5366,
									"end": 5462,
									"name": "tag",
									"source": 12,
									"value": "41"
								},
								{
									"begin": 5366,
									"end": 5462,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 5403,
									"end": 5410,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 5432,
									"end": 5456,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "107"
								},
								{
									"begin": 5450,
									"end": 5455,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 5432,
									"end": 5456,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "40"
								},
								{
									"begin": 5432,
									"end": 5456,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 5432,
									"end": 5456,
									"name": "tag",
									"source": 12,
									"value": "107"
								},
								{
									"begin": 5432,
									"end": 5456,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 5421,
									"end": 5456,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 5421,
									"end": 5456,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 5366,
									"end": 5462,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 5366,
									"end": 5462,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 5366,
									"end": 5462,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 5366,
									"end": 5462,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 5468,
									"end": 5586,
									"name": "tag",
									"source": 12,
									"value": "42"
								},
								{
									"begin": 5468,
									"end": 5586,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 5555,
									"end": 5579,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "109"
								},
								{
									"begin": 5573,
									"end": 5578,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 5555,
									"end": 5579,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "41"
								},
								{
									"begin": 5555,
									"end": 5579,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 5555,
									"end": 5579,
									"name": "tag",
									"source": 12,
									"value": "109"
								},
								{
									"begin": 5555,
									"end": 5579,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 5550,
									"end": 5553,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 5543,
									"end": 5580,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 5468,
									"end": 5586,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 5468,
									"end": 5586,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 5468,
									"end": 5586,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 5592,
									"end": 5814,
									"name": "tag",
									"source": 12,
									"value": "13"
								},
								{
									"begin": 5592,
									"end": 5814,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 5685,
									"end": 5689,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 5723,
									"end": 5725,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 5712,
									"end": 5721,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 5708,
									"end": 5726,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 5700,
									"end": 5726,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 5700,
									"end": 5726,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 5736,
									"end": 5807,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "111"
								},
								{
									"begin": 5804,
									"end": 5805,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 5793,
									"end": 5802,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 5789,
									"end": 5806,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 5780,
									"end": 5786,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 5736,
									"end": 5807,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "42"
								},
								{
									"begin": 5736,
									"end": 5807,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 5736,
									"end": 5807,
									"name": "tag",
									"source": 12,
									"value": "111"
								},
								{
									"begin": 5736,
									"end": 5807,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 5592,
									"end": 5814,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 5592,
									"end": 5814,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 5592,
									"end": 5814,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 5592,
									"end": 5814,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 5592,
									"end": 5814,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 343,
									"end": 4159,
									"name": "tag",
									"source": 11,
									"value": "18"
								},
								{
									"begin": 343,
									"end": 4159,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 343,
									"end": 4159,
									"name": "PUSH #[$]",
									"source": 11,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 343,
									"end": 4159,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 343,
									"end": 4159,
									"name": "PUSH [$]",
									"source": 11,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 343,
									"end": 4159,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 343,
									"end": 4159,
									"name": "CODECOPY",
									"source": 11
								},
								{
									"begin": 343,
									"end": 4159,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 343,
									"end": 4159,
									"name": "RETURN",
									"source": 11
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212208a3288be81ac17034bbe1af1db02ba6a69e546275e1d6032a6813f487d83739364736f6c634300081a0033",
									".code": [
										{
											"begin": 343,
											"end": 4159,
											"name": "PUSH",
											"source": 11,
											"value": "80"
										},
										{
											"begin": 343,
											"end": 4159,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 343,
											"end": 4159,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 343,
											"end": 4159,
											"name": "CALLVALUE",
											"source": 11
										},
										{
											"begin": 343,
											"end": 4159,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 343,
											"end": 4159,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 343,
											"end": 4159,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 343,
											"end": 4159,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 343,
											"end": 4159,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 343,
											"end": 4159,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 343,
											"end": 4159,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 343,
											"end": 4159,
											"name": "tag",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 343,
											"end": 4159,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 343,
											"end": 4159,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 343,
											"end": 4159,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 343,
											"end": 4159,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 343,
											"end": 4159,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 343,
											"end": 4159,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 343,
											"end": 4159,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 343,
											"end": 4159,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 343,
											"end": 4159,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 343,
											"end": 4159,
											"name": "PUSH",
											"source": 11,
											"value": "E0"
										},
										{
											"begin": 343,
											"end": 4159,
											"name": "SHR",
											"source": 11
										},
										{
											"begin": 343,
											"end": 4159,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 343,
											"end": 4159,
											"name": "PUSH",
											"source": 11,
											"value": "8456CB59"
										},
										{
											"begin": 343,
											"end": 4159,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 343,
											"end": 4159,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "33"
										},
										{
											"begin": 343,
											"end": 4159,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 343,
											"end": 4159,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 343,
											"end": 4159,
											"name": "PUSH",
											"source": 11,
											"value": "B543CF38"
										},
										{
											"begin": 343,
											"end": 4159,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 343,
											"end": 4159,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "34"
										},
										{
											"begin": 343,
											"end": 4159,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 343,
											"end": 4159,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 343,
											"end": 4159,
											"name": "PUSH",
											"source": 11,
											"value": "DD8AA6F6"
										},
										{
											"begin": 343,
											"end": 4159,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 343,
											"end": 4159,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "35"
										},
										{
											"begin": 343,
											"end": 4159,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 343,
											"end": 4159,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 343,
											"end": 4159,
											"name": "PUSH",
											"source": 11,
											"value": "DD8AA6F6"
										},
										{
											"begin": 343,
											"end": 4159,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 343,
											"end": 4159,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "29"
										},
										{
											"begin": 343,
											"end": 4159,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 343,
											"end": 4159,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 343,
											"end": 4159,
											"name": "PUSH",
											"source": 11,
											"value": "E34FC531"
										},
										{
											"begin": 343,
											"end": 4159,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 343,
											"end": 4159,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "30"
										},
										{
											"begin": 343,
											"end": 4159,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 343,
											"end": 4159,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 343,
											"end": 4159,
											"name": "PUSH",
											"source": 11,
											"value": "F2FDE38B"
										},
										{
											"begin": 343,
											"end": 4159,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 343,
											"end": 4159,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "31"
										},
										{
											"begin": 343,
											"end": 4159,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 343,
											"end": 4159,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 343,
											"end": 4159,
											"name": "PUSH",
											"source": 11,
											"value": "FF03E8C2"
										},
										{
											"begin": 343,
											"end": 4159,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 343,
											"end": 4159,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "32"
										},
										{
											"begin": 343,
											"end": 4159,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 343,
											"end": 4159,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 343,
											"end": 4159,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 343,
											"end": 4159,
											"name": "tag",
											"source": 11,
											"value": "35"
										},
										{
											"begin": 343,
											"end": 4159,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 343,
											"end": 4159,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 343,
											"end": 4159,
											"name": "PUSH",
											"source": 11,
											"value": "B543CF38"
										},
										{
											"begin": 343,
											"end": 4159,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 343,
											"end": 4159,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "25"
										},
										{
											"begin": 343,
											"end": 4159,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 343,
											"end": 4159,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 343,
											"end": 4159,
											"name": "PUSH",
											"source": 11,
											"value": "B7B551ED"
										},
										{
											"begin": 343,
											"end": 4159,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 343,
											"end": 4159,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "26"
										},
										{
											"begin": 343,
											"end": 4159,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 343,
											"end": 4159,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 343,
											"end": 4159,
											"name": "PUSH",
											"source": 11,
											"value": "DCD9D12D"
										},
										{
											"begin": 343,
											"end": 4159,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 343,
											"end": 4159,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "27"
										},
										{
											"begin": 343,
											"end": 4159,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 343,
											"end": 4159,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 343,
											"end": 4159,
											"name": "PUSH",
											"source": 11,
											"value": "DD62ED3E"
										},
										{
											"begin": 343,
											"end": 4159,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 343,
											"end": 4159,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "28"
										},
										{
											"begin": 343,
											"end": 4159,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 343,
											"end": 4159,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 343,
											"end": 4159,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 343,
											"end": 4159,
											"name": "tag",
											"source": 11,
											"value": "34"
										},
										{
											"begin": 343,
											"end": 4159,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 343,
											"end": 4159,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 343,
											"end": 4159,
											"name": "PUSH",
											"source": 11,
											"value": "8DA5CB5B"
										},
										{
											"begin": 343,
											"end": 4159,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 343,
											"end": 4159,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "36"
										},
										{
											"begin": 343,
											"end": 4159,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 343,
											"end": 4159,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 343,
											"end": 4159,
											"name": "PUSH",
											"source": 11,
											"value": "8DA5CB5B"
										},
										{
											"begin": 343,
											"end": 4159,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 343,
											"end": 4159,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "21"
										},
										{
											"begin": 343,
											"end": 4159,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 343,
											"end": 4159,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 343,
											"end": 4159,
											"name": "PUSH",
											"source": 11,
											"value": "95D89B41"
										},
										{
											"begin": 343,
											"end": 4159,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 343,
											"end": 4159,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "22"
										},
										{
											"begin": 343,
											"end": 4159,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 343,
											"end": 4159,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 343,
											"end": 4159,
											"name": "PUSH",
											"source": 11,
											"value": "A60ED374"
										},
										{
											"begin": 343,
											"end": 4159,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 343,
											"end": 4159,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "23"
										},
										{
											"begin": 343,
											"end": 4159,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 343,
											"end": 4159,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 343,
											"end": 4159,
											"name": "PUSH",
											"source": 11,
											"value": "A9059CBB"
										},
										{
											"begin": 343,
											"end": 4159,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 343,
											"end": 4159,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 343,
											"end": 4159,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 343,
											"end": 4159,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 343,
											"end": 4159,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 343,
											"end": 4159,
											"name": "tag",
											"source": 11,
											"value": "36"
										},
										{
											"begin": 343,
											"end": 4159,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 343,
											"end": 4159,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 343,
											"end": 4159,
											"name": "PUSH",
											"source": 11,
											"value": "8456CB59"
										},
										{
											"begin": 343,
											"end": 4159,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 343,
											"end": 4159,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "18"
										},
										{
											"begin": 343,
											"end": 4159,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 343,
											"end": 4159,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 343,
											"end": 4159,
											"name": "PUSH",
											"source": 11,
											"value": "84B9A6E6"
										},
										{
											"begin": 343,
											"end": 4159,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 343,
											"end": 4159,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "19"
										},
										{
											"begin": 343,
											"end": 4159,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 343,
											"end": 4159,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 343,
											"end": 4159,
											"name": "PUSH",
											"source": 11,
											"value": "85FFF858"
										},
										{
											"begin": 343,
											"end": 4159,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 343,
											"end": 4159,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 343,
											"end": 4159,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 343,
											"end": 4159,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 343,
											"end": 4159,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 343,
											"end": 4159,
											"name": "tag",
											"source": 11,
											"value": "33"
										},
										{
											"begin": 343,
											"end": 4159,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 343,
											"end": 4159,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 343,
											"end": 4159,
											"name": "PUSH",
											"source": 11,
											"value": "51111B72"
										},
										{
											"begin": 343,
											"end": 4159,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 343,
											"end": 4159,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "37"
										},
										{
											"begin": 343,
											"end": 4159,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 343,
											"end": 4159,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 343,
											"end": 4159,
											"name": "PUSH",
											"source": 11,
											"value": "70A08231"
										},
										{
											"begin": 343,
											"end": 4159,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 343,
											"end": 4159,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "38"
										},
										{
											"begin": 343,
											"end": 4159,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 343,
											"end": 4159,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 343,
											"end": 4159,
											"name": "PUSH",
											"source": 11,
											"value": "70A08231"
										},
										{
											"begin": 343,
											"end": 4159,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 343,
											"end": 4159,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "14"
										},
										{
											"begin": 343,
											"end": 4159,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 343,
											"end": 4159,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 343,
											"end": 4159,
											"name": "PUSH",
											"source": 11,
											"value": "715018A6"
										},
										{
											"begin": 343,
											"end": 4159,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 343,
											"end": 4159,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "15"
										},
										{
											"begin": 343,
											"end": 4159,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 343,
											"end": 4159,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 343,
											"end": 4159,
											"name": "PUSH",
											"source": 11,
											"value": "75C0B9FE"
										},
										{
											"begin": 343,
											"end": 4159,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 343,
											"end": 4159,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "16"
										},
										{
											"begin": 343,
											"end": 4159,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 343,
											"end": 4159,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 343,
											"end": 4159,
											"name": "PUSH",
											"source": 11,
											"value": "7F2AF083"
										},
										{
											"begin": 343,
											"end": 4159,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 343,
											"end": 4159,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "17"
										},
										{
											"begin": 343,
											"end": 4159,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 343,
											"end": 4159,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 343,
											"end": 4159,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 343,
											"end": 4159,
											"name": "tag",
											"source": 11,
											"value": "38"
										},
										{
											"begin": 343,
											"end": 4159,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 343,
											"end": 4159,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 343,
											"end": 4159,
											"name": "PUSH",
											"source": 11,
											"value": "51111B72"
										},
										{
											"begin": 343,
											"end": 4159,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 343,
											"end": 4159,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "10"
										},
										{
											"begin": 343,
											"end": 4159,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 343,
											"end": 4159,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 343,
											"end": 4159,
											"name": "PUSH",
											"source": 11,
											"value": "5813A683"
										},
										{
											"begin": 343,
											"end": 4159,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 343,
											"end": 4159,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "11"
										},
										{
											"begin": 343,
											"end": 4159,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 343,
											"end": 4159,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 343,
											"end": 4159,
											"name": "PUSH",
											"source": 11,
											"value": "5C975ABB"
										},
										{
											"begin": 343,
											"end": 4159,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 343,
											"end": 4159,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "12"
										},
										{
											"begin": 343,
											"end": 4159,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 343,
											"end": 4159,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 343,
											"end": 4159,
											"name": "PUSH",
											"source": 11,
											"value": "5DFE7721"
										},
										{
											"begin": 343,
											"end": 4159,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 343,
											"end": 4159,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "13"
										},
										{
											"begin": 343,
											"end": 4159,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 343,
											"end": 4159,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 343,
											"end": 4159,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 343,
											"end": 4159,
											"name": "tag",
											"source": 11,
											"value": "37"
										},
										{
											"begin": 343,
											"end": 4159,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 343,
											"end": 4159,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 343,
											"end": 4159,
											"name": "PUSH",
											"source": 11,
											"value": "23B872DD"
										},
										{
											"begin": 343,
											"end": 4159,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 343,
											"end": 4159,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "39"
										},
										{
											"begin": 343,
											"end": 4159,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 343,
											"end": 4159,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 343,
											"end": 4159,
											"name": "PUSH",
											"source": 11,
											"value": "23B872DD"
										},
										{
											"begin": 343,
											"end": 4159,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 343,
											"end": 4159,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "6"
										},
										{
											"begin": 343,
											"end": 4159,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 343,
											"end": 4159,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 343,
											"end": 4159,
											"name": "PUSH",
											"source": 11,
											"value": "313CE567"
										},
										{
											"begin": 343,
											"end": 4159,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 343,
											"end": 4159,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "7"
										},
										{
											"begin": 343,
											"end": 4159,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 343,
											"end": 4159,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 343,
											"end": 4159,
											"name": "PUSH",
											"source": 11,
											"value": "3F4BA83A"
										},
										{
											"begin": 343,
											"end": 4159,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 343,
											"end": 4159,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "8"
										},
										{
											"begin": 343,
											"end": 4159,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 343,
											"end": 4159,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 343,
											"end": 4159,
											"name": "PUSH",
											"source": 11,
											"value": "4885CF0A"
										},
										{
											"begin": 343,
											"end": 4159,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 343,
											"end": 4159,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "9"
										},
										{
											"begin": 343,
											"end": 4159,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 343,
											"end": 4159,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 343,
											"end": 4159,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 343,
											"end": 4159,
											"name": "tag",
											"source": 11,
											"value": "39"
										},
										{
											"begin": 343,
											"end": 4159,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 343,
											"end": 4159,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 343,
											"end": 4159,
											"name": "PUSH",
											"source": 11,
											"value": "6FDDE03"
										},
										{
											"begin": 343,
											"end": 4159,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 343,
											"end": 4159,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "3"
										},
										{
											"begin": 343,
											"end": 4159,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 343,
											"end": 4159,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 343,
											"end": 4159,
											"name": "PUSH",
											"source": 11,
											"value": "95EA7B3"
										},
										{
											"begin": 343,
											"end": 4159,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 343,
											"end": 4159,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 343,
											"end": 4159,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 343,
											"end": 4159,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 343,
											"end": 4159,
											"name": "PUSH",
											"source": 11,
											"value": "18160DDD"
										},
										{
											"begin": 343,
											"end": 4159,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 343,
											"end": 4159,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "5"
										},
										{
											"begin": 343,
											"end": 4159,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 343,
											"end": 4159,
											"name": "tag",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 343,
											"end": 4159,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 343,
											"end": 4159,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 343,
											"end": 4159,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 343,
											"end": 4159,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "tag",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "41"
										},
										{
											"begin": 2074,
											"end": 2163,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "tag",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "42"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "43"
										},
										{
											"begin": 2074,
											"end": 2163,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "tag",
											"source": 3,
											"value": "42"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "tag",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "44"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "45"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "46"
										},
										{
											"begin": 4293,
											"end": 4479,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "tag",
											"source": 3,
											"value": "45"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "47"
										},
										{
											"begin": 4293,
											"end": 4479,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "tag",
											"source": 3,
											"value": "44"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "48"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "49"
										},
										{
											"begin": 4293,
											"end": 4479,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "tag",
											"source": 3,
											"value": "48"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "tag",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "50"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "51"
										},
										{
											"begin": 3144,
											"end": 3241,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "tag",
											"source": 3,
											"value": "50"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "52"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "53"
										},
										{
											"begin": 3144,
											"end": 3241,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "tag",
											"source": 3,
											"value": "52"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "tag",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "54"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "55"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "56"
										},
										{
											"begin": 5039,
											"end": 5283,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "tag",
											"source": 3,
											"value": "55"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "57"
										},
										{
											"begin": 5039,
											"end": 5283,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "tag",
											"source": 3,
											"value": "54"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "58"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "49"
										},
										{
											"begin": 5039,
											"end": 5283,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "tag",
											"source": 3,
											"value": "58"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "tag",
											"source": 3,
											"value": "7"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "59"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 3002,
											"end": 3084,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "tag",
											"source": 3,
											"value": "59"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "61"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "62"
										},
										{
											"begin": 3002,
											"end": 3084,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "tag",
											"source": 3,
											"value": "61"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 3929,
											"end": 3994,
											"name": "tag",
											"source": 11,
											"value": "8"
										},
										{
											"begin": 3929,
											"end": 3994,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3929,
											"end": 3994,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "63"
										},
										{
											"begin": 3929,
											"end": 3994,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "64"
										},
										{
											"begin": 3929,
											"end": 3994,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3929,
											"end": 3994,
											"name": "tag",
											"source": 11,
											"value": "63"
										},
										{
											"begin": 3929,
											"end": 3994,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3929,
											"end": 3994,
											"name": "STOP",
											"source": 11
										},
										{
											"begin": 771,
											"end": 818,
											"name": "tag",
											"source": 11,
											"value": "9"
										},
										{
											"begin": 771,
											"end": 818,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 771,
											"end": 818,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "65"
										},
										{
											"begin": 771,
											"end": 818,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 771,
											"end": 818,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 771,
											"end": 818,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 771,
											"end": 818,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 771,
											"end": 818,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 771,
											"end": 818,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 771,
											"end": 818,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 771,
											"end": 818,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "66"
										},
										{
											"begin": 771,
											"end": 818,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 771,
											"end": 818,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 771,
											"end": 818,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "67"
										},
										{
											"begin": 771,
											"end": 818,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 771,
											"end": 818,
											"name": "tag",
											"source": 11,
											"value": "66"
										},
										{
											"begin": 771,
											"end": 818,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 771,
											"end": 818,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "68"
										},
										{
											"begin": 771,
											"end": 818,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 771,
											"end": 818,
											"name": "tag",
											"source": 11,
											"value": "65"
										},
										{
											"begin": 771,
											"end": 818,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 771,
											"end": 818,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 771,
											"end": 818,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 771,
											"end": 818,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "69"
										},
										{
											"begin": 771,
											"end": 818,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 771,
											"end": 818,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 771,
											"end": 818,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "53"
										},
										{
											"begin": 771,
											"end": 818,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 771,
											"end": 818,
											"name": "tag",
											"source": 11,
											"value": "69"
										},
										{
											"begin": 771,
											"end": 818,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 771,
											"end": 818,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 771,
											"end": 818,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 771,
											"end": 818,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 771,
											"end": 818,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 771,
											"end": 818,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 771,
											"end": 818,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 771,
											"end": 818,
											"name": "RETURN",
											"source": 11
										},
										{
											"begin": 1232,
											"end": 1556,
											"name": "tag",
											"source": 11,
											"value": "10"
										},
										{
											"begin": 1232,
											"end": 1556,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1232,
											"end": 1556,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "70"
										},
										{
											"begin": 1232,
											"end": 1556,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 1232,
											"end": 1556,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1232,
											"end": 1556,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 1232,
											"end": 1556,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 1232,
											"end": 1556,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1232,
											"end": 1556,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1232,
											"end": 1556,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1232,
											"end": 1556,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "71"
										},
										{
											"begin": 1232,
											"end": 1556,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1232,
											"end": 1556,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1232,
											"end": 1556,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "72"
										},
										{
											"begin": 1232,
											"end": 1556,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1232,
											"end": 1556,
											"name": "tag",
											"source": 11,
											"value": "71"
										},
										{
											"begin": 1232,
											"end": 1556,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1232,
											"end": 1556,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "73"
										},
										{
											"begin": 1232,
											"end": 1556,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1232,
											"end": 1556,
											"name": "tag",
											"source": 11,
											"value": "70"
										},
										{
											"begin": 1232,
											"end": 1556,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1232,
											"end": 1556,
											"name": "STOP",
											"source": 11
										},
										{
											"begin": 3528,
											"end": 3722,
											"name": "tag",
											"source": 11,
											"value": "11"
										},
										{
											"begin": 3528,
											"end": 3722,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3528,
											"end": 3722,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "74"
										},
										{
											"begin": 3528,
											"end": 3722,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 3528,
											"end": 3722,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3528,
											"end": 3722,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 3528,
											"end": 3722,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 3528,
											"end": 3722,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3528,
											"end": 3722,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3528,
											"end": 3722,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3528,
											"end": 3722,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "75"
										},
										{
											"begin": 3528,
											"end": 3722,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3528,
											"end": 3722,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3528,
											"end": 3722,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "76"
										},
										{
											"begin": 3528,
											"end": 3722,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3528,
											"end": 3722,
											"name": "tag",
											"source": 11,
											"value": "75"
										},
										{
											"begin": 3528,
											"end": 3722,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3528,
											"end": 3722,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "77"
										},
										{
											"begin": 3528,
											"end": 3722,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3528,
											"end": 3722,
											"name": "tag",
											"source": 11,
											"value": "74"
										},
										{
											"begin": 3528,
											"end": 3722,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3528,
											"end": 3722,
											"name": "STOP",
											"source": 11
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "tag",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "79"
										},
										{
											"begin": 1615,
											"end": 1699,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "tag",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 1615,
											"end": 1699,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "tag",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 4000,
											"end": 4157,
											"name": "tag",
											"source": 11,
											"value": "13"
										},
										{
											"begin": 4000,
											"end": 4157,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4000,
											"end": 4157,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "81"
										},
										{
											"begin": 4000,
											"end": 4157,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 4000,
											"end": 4157,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4000,
											"end": 4157,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 4000,
											"end": 4157,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 4000,
											"end": 4157,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4000,
											"end": 4157,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4000,
											"end": 4157,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4000,
											"end": 4157,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "82"
										},
										{
											"begin": 4000,
											"end": 4157,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4000,
											"end": 4157,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4000,
											"end": 4157,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "67"
										},
										{
											"begin": 4000,
											"end": 4157,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4000,
											"end": 4157,
											"name": "tag",
											"source": 11,
											"value": "82"
										},
										{
											"begin": 4000,
											"end": 4157,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4000,
											"end": 4157,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "83"
										},
										{
											"begin": 4000,
											"end": 4157,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4000,
											"end": 4157,
											"name": "tag",
											"source": 11,
											"value": "81"
										},
										{
											"begin": 4000,
											"end": 4157,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4000,
											"end": 4157,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 4000,
											"end": 4157,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 4000,
											"end": 4157,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "84"
										},
										{
											"begin": 4000,
											"end": 4157,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4000,
											"end": 4157,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4000,
											"end": 4157,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "49"
										},
										{
											"begin": 4000,
											"end": 4157,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4000,
											"end": 4157,
											"name": "tag",
											"source": 11,
											"value": "84"
										},
										{
											"begin": 4000,
											"end": 4157,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4000,
											"end": 4157,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 4000,
											"end": 4157,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 4000,
											"end": 4157,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4000,
											"end": 4157,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4000,
											"end": 4157,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 4000,
											"end": 4157,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4000,
											"end": 4157,
											"name": "RETURN",
											"source": 11
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "tag",
											"source": 3,
											"value": "14"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "85"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "86"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "87"
										},
										{
											"begin": 3299,
											"end": 3415,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "tag",
											"source": 3,
											"value": "86"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "88"
										},
										{
											"begin": 3299,
											"end": 3415,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "tag",
											"source": 3,
											"value": "85"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "89"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "53"
										},
										{
											"begin": 3299,
											"end": 3415,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "tag",
											"source": 3,
											"value": "89"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 3058,
											"end": 3226,
											"name": "tag",
											"source": 11,
											"value": "16"
										},
										{
											"begin": 3058,
											"end": 3226,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3058,
											"end": 3226,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "92"
										},
										{
											"begin": 3058,
											"end": 3226,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 3058,
											"end": 3226,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3058,
											"end": 3226,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 3058,
											"end": 3226,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 3058,
											"end": 3226,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3058,
											"end": 3226,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3058,
											"end": 3226,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3058,
											"end": 3226,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "93"
										},
										{
											"begin": 3058,
											"end": 3226,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3058,
											"end": 3226,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3058,
											"end": 3226,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "76"
										},
										{
											"begin": 3058,
											"end": 3226,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3058,
											"end": 3226,
											"name": "tag",
											"source": 11,
											"value": "93"
										},
										{
											"begin": 3058,
											"end": 3226,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3058,
											"end": 3226,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "94"
										},
										{
											"begin": 3058,
											"end": 3226,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3058,
											"end": 3226,
											"name": "tag",
											"source": 11,
											"value": "92"
										},
										{
											"begin": 3058,
											"end": 3226,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3058,
											"end": 3226,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3058,
											"end": 3226,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 3058,
											"end": 3226,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "95"
										},
										{
											"begin": 3058,
											"end": 3226,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3058,
											"end": 3226,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3058,
											"end": 3226,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "53"
										},
										{
											"begin": 3058,
											"end": 3226,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3058,
											"end": 3226,
											"name": "tag",
											"source": 11,
											"value": "95"
										},
										{
											"begin": 3058,
											"end": 3226,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3058,
											"end": 3226,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3058,
											"end": 3226,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 3058,
											"end": 3226,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3058,
											"end": 3226,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3058,
											"end": 3226,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 3058,
											"end": 3226,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3058,
											"end": 3226,
											"name": "RETURN",
											"source": 11
										},
										{
											"begin": 886,
											"end": 935,
											"name": "tag",
											"source": 11,
											"value": "17"
										},
										{
											"begin": 886,
											"end": 935,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 886,
											"end": 935,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "96"
										},
										{
											"begin": 886,
											"end": 935,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 886,
											"end": 935,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 886,
											"end": 935,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 886,
											"end": 935,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 886,
											"end": 935,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 886,
											"end": 935,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 886,
											"end": 935,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 886,
											"end": 935,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "97"
										},
										{
											"begin": 886,
											"end": 935,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 886,
											"end": 935,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 886,
											"end": 935,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "67"
										},
										{
											"begin": 886,
											"end": 935,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 886,
											"end": 935,
											"name": "tag",
											"source": 11,
											"value": "97"
										},
										{
											"begin": 886,
											"end": 935,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 886,
											"end": 935,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "98"
										},
										{
											"begin": 886,
											"end": 935,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 886,
											"end": 935,
											"name": "tag",
											"source": 11,
											"value": "96"
										},
										{
											"begin": 886,
											"end": 935,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 886,
											"end": 935,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 886,
											"end": 935,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 886,
											"end": 935,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "99"
										},
										{
											"begin": 886,
											"end": 935,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 886,
											"end": 935,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 886,
											"end": 935,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 886,
											"end": 935,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 886,
											"end": 935,
											"name": "tag",
											"source": 11,
											"value": "99"
										},
										{
											"begin": 886,
											"end": 935,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 886,
											"end": 935,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 886,
											"end": 935,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 886,
											"end": 935,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 886,
											"end": 935,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 886,
											"end": 935,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 886,
											"end": 935,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 886,
											"end": 935,
											"name": "RETURN",
											"source": 11
										},
										{
											"begin": 3862,
											"end": 3923,
											"name": "tag",
											"source": 11,
											"value": "18"
										},
										{
											"begin": 3862,
											"end": 3923,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3862,
											"end": 3923,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "101"
										},
										{
											"begin": 3862,
											"end": 3923,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "102"
										},
										{
											"begin": 3862,
											"end": 3923,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3862,
											"end": 3923,
											"name": "tag",
											"source": 11,
											"value": "101"
										},
										{
											"begin": 3862,
											"end": 3923,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3862,
											"end": 3923,
											"name": "STOP",
											"source": 11
										},
										{
											"begin": 2521,
											"end": 3052,
											"name": "tag",
											"source": 11,
											"value": "19"
										},
										{
											"begin": 2521,
											"end": 3052,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2521,
											"end": 3052,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "103"
										},
										{
											"begin": 2521,
											"end": 3052,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 2521,
											"end": 3052,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2521,
											"end": 3052,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 2521,
											"end": 3052,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 2521,
											"end": 3052,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2521,
											"end": 3052,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2521,
											"end": 3052,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2521,
											"end": 3052,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "104"
										},
										{
											"begin": 2521,
											"end": 3052,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2521,
											"end": 3052,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2521,
											"end": 3052,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "105"
										},
										{
											"begin": 2521,
											"end": 3052,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2521,
											"end": 3052,
											"name": "tag",
											"source": 11,
											"value": "104"
										},
										{
											"begin": 2521,
											"end": 3052,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2521,
											"end": 3052,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "106"
										},
										{
											"begin": 2521,
											"end": 3052,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2521,
											"end": 3052,
											"name": "tag",
											"source": 11,
											"value": "103"
										},
										{
											"begin": 2521,
											"end": 3052,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2521,
											"end": 3052,
											"name": "STOP",
											"source": 11
										},
										{
											"begin": 3232,
											"end": 3370,
											"name": "tag",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 3232,
											"end": 3370,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3232,
											"end": 3370,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "107"
										},
										{
											"begin": 3232,
											"end": 3370,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 3232,
											"end": 3370,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3232,
											"end": 3370,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 3232,
											"end": 3370,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 3232,
											"end": 3370,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3232,
											"end": 3370,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3232,
											"end": 3370,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3232,
											"end": 3370,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "108"
										},
										{
											"begin": 3232,
											"end": 3370,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3232,
											"end": 3370,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3232,
											"end": 3370,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "67"
										},
										{
											"begin": 3232,
											"end": 3370,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3232,
											"end": 3370,
											"name": "tag",
											"source": 11,
											"value": "108"
										},
										{
											"begin": 3232,
											"end": 3370,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3232,
											"end": 3370,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "109"
										},
										{
											"begin": 3232,
											"end": 3370,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3232,
											"end": 3370,
											"name": "tag",
											"source": 11,
											"value": "107"
										},
										{
											"begin": 3232,
											"end": 3370,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3232,
											"end": 3370,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3232,
											"end": 3370,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 3232,
											"end": 3370,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "110"
										},
										{
											"begin": 3232,
											"end": 3370,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3232,
											"end": 3370,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3232,
											"end": 3370,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "53"
										},
										{
											"begin": 3232,
											"end": 3370,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3232,
											"end": 3370,
											"name": "tag",
											"source": 11,
											"value": "110"
										},
										{
											"begin": 3232,
											"end": 3370,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3232,
											"end": 3370,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3232,
											"end": 3370,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 3232,
											"end": 3370,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3232,
											"end": 3370,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3232,
											"end": 3370,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 3232,
											"end": 3370,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3232,
											"end": 3370,
											"name": "RETURN",
											"source": 11
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "tag",
											"source": 3,
											"value": "22"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "114"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "115"
										},
										{
											"begin": 2276,
											"end": 2369,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "tag",
											"source": 3,
											"value": "114"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "116"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "43"
										},
										{
											"begin": 2276,
											"end": 2369,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "tag",
											"source": 3,
											"value": "116"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 719,
											"end": 765,
											"name": "tag",
											"source": 11,
											"value": "23"
										},
										{
											"begin": 719,
											"end": 765,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 719,
											"end": 765,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "117"
										},
										{
											"begin": 719,
											"end": 765,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 719,
											"end": 765,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 719,
											"end": 765,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 719,
											"end": 765,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 719,
											"end": 765,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 719,
											"end": 765,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 719,
											"end": 765,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 719,
											"end": 765,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "118"
										},
										{
											"begin": 719,
											"end": 765,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 719,
											"end": 765,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 719,
											"end": 765,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "67"
										},
										{
											"begin": 719,
											"end": 765,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 719,
											"end": 765,
											"name": "tag",
											"source": 11,
											"value": "118"
										},
										{
											"begin": 719,
											"end": 765,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 719,
											"end": 765,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "119"
										},
										{
											"begin": 719,
											"end": 765,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 719,
											"end": 765,
											"name": "tag",
											"source": 11,
											"value": "117"
										},
										{
											"begin": 719,
											"end": 765,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 719,
											"end": 765,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 719,
											"end": 765,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 719,
											"end": 765,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "120"
										},
										{
											"begin": 719,
											"end": 765,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 719,
											"end": 765,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 719,
											"end": 765,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 719,
											"end": 765,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "121"
										},
										{
											"begin": 719,
											"end": 765,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 719,
											"end": 765,
											"name": "tag",
											"source": 11,
											"value": "120"
										},
										{
											"begin": 719,
											"end": 765,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 719,
											"end": 765,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 719,
											"end": 765,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 719,
											"end": 765,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 719,
											"end": 765,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 719,
											"end": 765,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 719,
											"end": 765,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 719,
											"end": 765,
											"name": "RETURN",
											"source": 11
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "tag",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "122"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "123"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "46"
										},
										{
											"begin": 3610,
											"end": 3788,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "tag",
											"source": 3,
											"value": "123"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "124"
										},
										{
											"begin": 3610,
											"end": 3788,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "tag",
											"source": 3,
											"value": "122"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "125"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "49"
										},
										{
											"begin": 3610,
											"end": 3788,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "tag",
											"source": 3,
											"value": "125"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 1948,
											"end": 2515,
											"name": "tag",
											"source": 11,
											"value": "25"
										},
										{
											"begin": 1948,
											"end": 2515,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1948,
											"end": 2515,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "126"
										},
										{
											"begin": 1948,
											"end": 2515,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 1948,
											"end": 2515,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1948,
											"end": 2515,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 1948,
											"end": 2515,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 1948,
											"end": 2515,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1948,
											"end": 2515,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1948,
											"end": 2515,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1948,
											"end": 2515,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "127"
										},
										{
											"begin": 1948,
											"end": 2515,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1948,
											"end": 2515,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1948,
											"end": 2515,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "105"
										},
										{
											"begin": 1948,
											"end": 2515,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1948,
											"end": 2515,
											"name": "tag",
											"source": 11,
											"value": "127"
										},
										{
											"begin": 1948,
											"end": 2515,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1948,
											"end": 2515,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "128"
										},
										{
											"begin": 1948,
											"end": 2515,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1948,
											"end": 2515,
											"name": "tag",
											"source": 11,
											"value": "126"
										},
										{
											"begin": 1948,
											"end": 2515,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1948,
											"end": 2515,
											"name": "STOP",
											"source": 11
										},
										{
											"begin": 824,
											"end": 880,
											"name": "tag",
											"source": 11,
											"value": "26"
										},
										{
											"begin": 824,
											"end": 880,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 824,
											"end": 880,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "129"
										},
										{
											"begin": 824,
											"end": 880,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 824,
											"end": 880,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 824,
											"end": 880,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 824,
											"end": 880,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 824,
											"end": 880,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 824,
											"end": 880,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 824,
											"end": 880,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 824,
											"end": 880,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "130"
										},
										{
											"begin": 824,
											"end": 880,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 824,
											"end": 880,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 824,
											"end": 880,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "67"
										},
										{
											"begin": 824,
											"end": 880,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 824,
											"end": 880,
											"name": "tag",
											"source": 11,
											"value": "130"
										},
										{
											"begin": 824,
											"end": 880,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 824,
											"end": 880,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "131"
										},
										{
											"begin": 824,
											"end": 880,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 824,
											"end": 880,
											"name": "tag",
											"source": 11,
											"value": "129"
										},
										{
											"begin": 824,
											"end": 880,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 824,
											"end": 880,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 824,
											"end": 880,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 824,
											"end": 880,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "132"
										},
										{
											"begin": 824,
											"end": 880,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 824,
											"end": 880,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 824,
											"end": 880,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 824,
											"end": 880,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "121"
										},
										{
											"begin": 824,
											"end": 880,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 824,
											"end": 880,
											"name": "tag",
											"source": 11,
											"value": "132"
										},
										{
											"begin": 824,
											"end": 880,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 824,
											"end": 880,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 824,
											"end": 880,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 824,
											"end": 880,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 824,
											"end": 880,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 824,
											"end": 880,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 824,
											"end": 880,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 824,
											"end": 880,
											"name": "RETURN",
											"source": 11
										},
										{
											"begin": 3376,
											"end": 3522,
											"name": "tag",
											"source": 11,
											"value": "27"
										},
										{
											"begin": 3376,
											"end": 3522,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3376,
											"end": 3522,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "133"
										},
										{
											"begin": 3376,
											"end": 3522,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 3376,
											"end": 3522,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3376,
											"end": 3522,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 3376,
											"end": 3522,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 3376,
											"end": 3522,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3376,
											"end": 3522,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3376,
											"end": 3522,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3376,
											"end": 3522,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "134"
										},
										{
											"begin": 3376,
											"end": 3522,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3376,
											"end": 3522,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3376,
											"end": 3522,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "67"
										},
										{
											"begin": 3376,
											"end": 3522,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3376,
											"end": 3522,
											"name": "tag",
											"source": 11,
											"value": "134"
										},
										{
											"begin": 3376,
											"end": 3522,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3376,
											"end": 3522,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "135"
										},
										{
											"begin": 3376,
											"end": 3522,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3376,
											"end": 3522,
											"name": "tag",
											"source": 11,
											"value": "133"
										},
										{
											"begin": 3376,
											"end": 3522,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3376,
											"end": 3522,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3376,
											"end": 3522,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 3376,
											"end": 3522,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "136"
										},
										{
											"begin": 3376,
											"end": 3522,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3376,
											"end": 3522,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3376,
											"end": 3522,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "53"
										},
										{
											"begin": 3376,
											"end": 3522,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3376,
											"end": 3522,
											"name": "tag",
											"source": 11,
											"value": "136"
										},
										{
											"begin": 3376,
											"end": 3522,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3376,
											"end": 3522,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3376,
											"end": 3522,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 3376,
											"end": 3522,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3376,
											"end": 3522,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3376,
											"end": 3522,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 3376,
											"end": 3522,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3376,
											"end": 3522,
											"name": "RETURN",
											"source": 11
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "tag",
											"source": 3,
											"value": "28"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "137"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "138"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "139"
										},
										{
											"begin": 3846,
											"end": 3986,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "tag",
											"source": 3,
											"value": "138"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "140"
										},
										{
											"begin": 3846,
											"end": 3986,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "tag",
											"source": 3,
											"value": "137"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "141"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "53"
										},
										{
											"begin": 3846,
											"end": 3986,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "tag",
											"source": 3,
											"value": "141"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 1562,
											"end": 1808,
											"name": "tag",
											"source": 11,
											"value": "29"
										},
										{
											"begin": 1562,
											"end": 1808,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1562,
											"end": 1808,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "142"
										},
										{
											"begin": 1562,
											"end": 1808,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 1562,
											"end": 1808,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1562,
											"end": 1808,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 1562,
											"end": 1808,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 1562,
											"end": 1808,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1562,
											"end": 1808,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1562,
											"end": 1808,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1562,
											"end": 1808,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "143"
										},
										{
											"begin": 1562,
											"end": 1808,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1562,
											"end": 1808,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1562,
											"end": 1808,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "105"
										},
										{
											"begin": 1562,
											"end": 1808,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1562,
											"end": 1808,
											"name": "tag",
											"source": 11,
											"value": "143"
										},
										{
											"begin": 1562,
											"end": 1808,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1562,
											"end": 1808,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "144"
										},
										{
											"begin": 1562,
											"end": 1808,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1562,
											"end": 1808,
											"name": "tag",
											"source": 11,
											"value": "142"
										},
										{
											"begin": 1562,
											"end": 1808,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1562,
											"end": 1808,
											"name": "STOP",
											"source": 11
										},
										{
											"begin": 3728,
											"end": 3856,
											"name": "tag",
											"source": 11,
											"value": "30"
										},
										{
											"begin": 3728,
											"end": 3856,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3728,
											"end": 3856,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "145"
										},
										{
											"begin": 3728,
											"end": 3856,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 3728,
											"end": 3856,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3728,
											"end": 3856,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 3728,
											"end": 3856,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 3728,
											"end": 3856,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3728,
											"end": 3856,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3728,
											"end": 3856,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3728,
											"end": 3856,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "146"
										},
										{
											"begin": 3728,
											"end": 3856,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3728,
											"end": 3856,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3728,
											"end": 3856,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "67"
										},
										{
											"begin": 3728,
											"end": 3856,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3728,
											"end": 3856,
											"name": "tag",
											"source": 11,
											"value": "146"
										},
										{
											"begin": 3728,
											"end": 3856,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3728,
											"end": 3856,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "147"
										},
										{
											"begin": 3728,
											"end": 3856,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3728,
											"end": 3856,
											"name": "tag",
											"source": 11,
											"value": "145"
										},
										{
											"begin": 3728,
											"end": 3856,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3728,
											"end": 3856,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3728,
											"end": 3856,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 3728,
											"end": 3856,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "148"
										},
										{
											"begin": 3728,
											"end": 3856,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3728,
											"end": 3856,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3728,
											"end": 3856,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 3728,
											"end": 3856,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3728,
											"end": 3856,
											"name": "tag",
											"source": 11,
											"value": "148"
										},
										{
											"begin": 3728,
											"end": 3856,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3728,
											"end": 3856,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3728,
											"end": 3856,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 3728,
											"end": 3856,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3728,
											"end": 3856,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3728,
											"end": 3856,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 3728,
											"end": 3856,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3728,
											"end": 3856,
											"name": "RETURN",
											"source": 11
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1814,
											"end": 1942,
											"name": "tag",
											"source": 11,
											"value": "32"
										},
										{
											"begin": 1814,
											"end": 1942,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1814,
											"end": 1942,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "152"
										},
										{
											"begin": 1814,
											"end": 1942,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 1814,
											"end": 1942,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1814,
											"end": 1942,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 1814,
											"end": 1942,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 1814,
											"end": 1942,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1814,
											"end": 1942,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1814,
											"end": 1942,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1814,
											"end": 1942,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "153"
										},
										{
											"begin": 1814,
											"end": 1942,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1814,
											"end": 1942,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1814,
											"end": 1942,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "67"
										},
										{
											"begin": 1814,
											"end": 1942,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1814,
											"end": 1942,
											"name": "tag",
											"source": 11,
											"value": "153"
										},
										{
											"begin": 1814,
											"end": 1942,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1814,
											"end": 1942,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "154"
										},
										{
											"begin": 1814,
											"end": 1942,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1814,
											"end": 1942,
											"name": "tag",
											"source": 11,
											"value": "152"
										},
										{
											"begin": 1814,
											"end": 1942,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1814,
											"end": 1942,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1814,
											"end": 1942,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1814,
											"end": 1942,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "155"
										},
										{
											"begin": 1814,
											"end": 1942,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1814,
											"end": 1942,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1814,
											"end": 1942,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "156"
										},
										{
											"begin": 1814,
											"end": 1942,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1814,
											"end": 1942,
											"name": "tag",
											"source": 11,
											"value": "155"
										},
										{
											"begin": 1814,
											"end": 1942,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1814,
											"end": 1942,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1814,
											"end": 1942,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1814,
											"end": 1942,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1814,
											"end": 1942,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1814,
											"end": 1942,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 1814,
											"end": 1942,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1814,
											"end": 1942,
											"name": "RETURN",
											"source": 11
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "tag",
											"source": 3,
											"value": "41"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2119,
											"end": 2132,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 2151,
											"end": 2156,
											"name": "PUSH",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "158"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "159"
										},
										{
											"begin": 2144,
											"end": 2156,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "tag",
											"source": 3,
											"value": "158"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "160"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "159"
										},
										{
											"begin": 2144,
											"end": 2156,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "tag",
											"source": 3,
											"value": "160"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "161"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "162"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "161"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "tag",
											"source": 3,
											"value": "162"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "tag",
											"source": 3,
											"value": "163"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "163"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "tag",
											"source": 3,
											"value": "161"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2074,
											"end": 2163,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "tag",
											"source": 3,
											"value": "47"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4366,
											"end": 4370,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4382,
											"end": 4395,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4398,
											"end": 4410,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "165"
										},
										{
											"begin": 4398,
											"end": 4408,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "166"
										},
										{
											"begin": 4398,
											"end": 4410,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4398,
											"end": 4410,
											"name": "tag",
											"source": 3,
											"value": "165"
										},
										{
											"begin": 4398,
											"end": 4410,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4382,
											"end": 4410,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4382,
											"end": 4410,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4420,
											"end": 4451,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "167"
										},
										{
											"begin": 4429,
											"end": 4434,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4436,
											"end": 4443,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 4445,
											"end": 4450,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 4420,
											"end": 4428,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "168"
										},
										{
											"begin": 4420,
											"end": 4451,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4420,
											"end": 4451,
											"name": "tag",
											"source": 3,
											"value": "167"
										},
										{
											"begin": 4420,
											"end": 4451,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4468,
											"end": 4472,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 4461,
											"end": 4472,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4461,
											"end": 4472,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4461,
											"end": 4472,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4293,
											"end": 4479,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "tag",
											"source": 3,
											"value": "51"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3196,
											"end": 3203,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3222,
											"end": 3234,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 3222,
											"end": 3234,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 3215,
											"end": 3234,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3215,
											"end": 3234,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3144,
											"end": 3241,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "tag",
											"source": 3,
											"value": "57"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5126,
											"end": 5130,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5142,
											"end": 5157,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5160,
											"end": 5172,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "171"
										},
										{
											"begin": 5160,
											"end": 5170,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "166"
										},
										{
											"begin": 5160,
											"end": 5172,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5160,
											"end": 5172,
											"name": "tag",
											"source": 3,
											"value": "171"
										},
										{
											"begin": 5160,
											"end": 5172,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5142,
											"end": 5172,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5142,
											"end": 5172,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5182,
											"end": 5219,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "172"
										},
										{
											"begin": 5198,
											"end": 5202,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 5204,
											"end": 5211,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5213,
											"end": 5218,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 5182,
											"end": 5197,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "173"
										},
										{
											"begin": 5182,
											"end": 5219,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5182,
											"end": 5219,
											"name": "tag",
											"source": 3,
											"value": "172"
										},
										{
											"begin": 5182,
											"end": 5219,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5229,
											"end": 5255,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "174"
										},
										{
											"begin": 5239,
											"end": 5243,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 5245,
											"end": 5247,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 5249,
											"end": 5254,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 5229,
											"end": 5238,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "175"
										},
										{
											"begin": 5229,
											"end": 5255,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5229,
											"end": 5255,
											"name": "tag",
											"source": 3,
											"value": "174"
										},
										{
											"begin": 5229,
											"end": 5255,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5272,
											"end": 5276,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 5265,
											"end": 5276,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5265,
											"end": 5276,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5265,
											"end": 5276,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5039,
											"end": 5283,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "tag",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3051,
											"end": 3056,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3075,
											"end": 3077,
											"name": "PUSH",
											"source": 3,
											"value": "12"
										},
										{
											"begin": 3068,
											"end": 3077,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3068,
											"end": 3077,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3002,
											"end": 3084,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3929,
											"end": 3994,
											"name": "tag",
											"source": 11,
											"value": "64"
										},
										{
											"begin": 3929,
											"end": 3994,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3977,
											"end": 3987,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "181"
										},
										{
											"begin": 3977,
											"end": 3985,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "182"
										},
										{
											"begin": 3977,
											"end": 3987,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3977,
											"end": 3987,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "181"
										},
										{
											"begin": 3977,
											"end": 3987,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3929,
											"end": 3994,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 771,
											"end": 818,
											"name": "tag",
											"source": 11,
											"value": "68"
										},
										{
											"begin": 771,
											"end": 818,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 771,
											"end": 818,
											"name": "PUSH",
											"source": 11,
											"value": "7"
										},
										{
											"begin": 771,
											"end": 818,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 771,
											"end": 818,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 771,
											"end": 818,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 771,
											"end": 818,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 771,
											"end": 818,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 771,
											"end": 818,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 771,
											"end": 818,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 771,
											"end": 818,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 771,
											"end": 818,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 771,
											"end": 818,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 771,
											"end": 818,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 771,
											"end": 818,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 771,
											"end": 818,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 771,
											"end": 818,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 771,
											"end": 818,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 771,
											"end": 818,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1232,
											"end": 1556,
											"name": "tag",
											"source": 11,
											"value": "73"
										},
										{
											"begin": 1232,
											"end": 1556,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1372,
											"end": 1503,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1372,
											"end": 1503,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1372,
											"end": 1503,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1372,
											"end": 1503,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 1372,
											"end": 1503,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1372,
											"end": 1503,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1372,
											"end": 1503,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1372,
											"end": 1503,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1408,
											"end": 1416,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 1372,
											"end": 1503,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1372,
											"end": 1503,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1372,
											"end": 1503,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1372,
											"end": 1503,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1443,
											"end": 1454,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 1372,
											"end": 1503,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1372,
											"end": 1503,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1372,
											"end": 1503,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1372,
											"end": 1503,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1481,
											"end": 1492,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1372,
											"end": 1503,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1372,
											"end": 1503,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1372,
											"end": 1503,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1352,
											"end": 1359,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "6"
										},
										{
											"begin": 1352,
											"end": 1369,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1360,
											"end": 1368,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 1352,
											"end": 1369,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1352,
											"end": 1369,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1352,
											"end": 1369,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1352,
											"end": 1369,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1352,
											"end": 1369,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1352,
											"end": 1369,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1352,
											"end": 1369,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1352,
											"end": 1369,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1352,
											"end": 1369,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1352,
											"end": 1369,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1352,
											"end": 1369,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 1352,
											"end": 1503,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1352,
											"end": 1503,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1352,
											"end": 1503,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1352,
											"end": 1503,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1352,
											"end": 1503,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1352,
											"end": 1503,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1352,
											"end": 1503,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1352,
											"end": 1503,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 1352,
											"end": 1503,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1352,
											"end": 1503,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1352,
											"end": 1503,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1352,
											"end": 1503,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1352,
											"end": 1503,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1352,
											"end": 1503,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 1352,
											"end": 1503,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1352,
											"end": 1503,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1352,
											"end": 1503,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1352,
											"end": 1503,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1352,
											"end": 1503,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1352,
											"end": 1503,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1352,
											"end": 1503,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1352,
											"end": 1503,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1352,
											"end": 1503,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "186"
										},
										{
											"begin": 1352,
											"end": 1503,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 1352,
											"end": 1503,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1352,
											"end": 1503,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1352,
											"end": 1503,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "187"
										},
										{
											"begin": 1352,
											"end": 1503,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1352,
											"end": 1503,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "186"
										},
										{
											"begin": 1352,
											"end": 1503,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1352,
											"end": 1503,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1352,
											"end": 1503,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1352,
											"end": 1503,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1352,
											"end": 1503,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1352,
											"end": 1503,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1352,
											"end": 1503,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1352,
											"end": 1503,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 1352,
											"end": 1503,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1352,
											"end": 1503,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 1352,
											"end": 1503,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1352,
											"end": 1503,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1352,
											"end": 1503,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1538,
											"end": 1549,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1513,
											"end": 1525,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "7"
										},
										{
											"begin": 1513,
											"end": 1535,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1526,
											"end": 1534,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 1513,
											"end": 1535,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1513,
											"end": 1535,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1513,
											"end": 1535,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1513,
											"end": 1535,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1513,
											"end": 1535,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1513,
											"end": 1535,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1513,
											"end": 1535,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1513,
											"end": 1535,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1513,
											"end": 1535,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1513,
											"end": 1535,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1513,
											"end": 1535,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 1513,
											"end": 1549,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1513,
											"end": 1549,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1513,
											"end": 1549,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 1513,
											"end": 1549,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1232,
											"end": 1556,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1232,
											"end": 1556,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1232,
											"end": 1556,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1232,
											"end": 1556,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3528,
											"end": 3722,
											"name": "tag",
											"source": 11,
											"value": "77"
										},
										{
											"begin": 3528,
											"end": 3722,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3643,
											"end": 3644,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3626,
											"end": 3645,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3626,
											"end": 3645,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 3626,
											"end": 3631,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3626,
											"end": 3645,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3626,
											"end": 3645,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 3626,
											"end": 3645,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 3618,
											"end": 3671,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "191"
										},
										{
											"begin": 3618,
											"end": 3671,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 3618,
											"end": 3671,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3618,
											"end": 3671,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 3618,
											"end": 3671,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3618,
											"end": 3671,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3618,
											"end": 3671,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3618,
											"end": 3671,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 3618,
											"end": 3671,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3618,
											"end": 3671,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "192"
										},
										{
											"begin": 3618,
											"end": 3671,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3618,
											"end": 3671,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "193"
										},
										{
											"begin": 3618,
											"end": 3671,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3618,
											"end": 3671,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "192"
										},
										{
											"begin": 3618,
											"end": 3671,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3618,
											"end": 3671,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3618,
											"end": 3671,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 3618,
											"end": 3671,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3618,
											"end": 3671,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3618,
											"end": 3671,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 3618,
											"end": 3671,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3618,
											"end": 3671,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 3618,
											"end": 3671,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "191"
										},
										{
											"begin": 3618,
											"end": 3671,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3710,
											"end": 3715,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3681,
											"end": 3695,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "9"
										},
										{
											"begin": 3681,
											"end": 3707,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3696,
											"end": 3706,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 3681,
											"end": 3707,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3681,
											"end": 3707,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3681,
											"end": 3707,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 3681,
											"end": 3707,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3681,
											"end": 3707,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3681,
											"end": 3707,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3681,
											"end": 3707,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3681,
											"end": 3707,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 3681,
											"end": 3707,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3681,
											"end": 3707,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3681,
											"end": 3707,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 3681,
											"end": 3707,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3681,
											"end": 3715,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 3681,
											"end": 3715,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 3681,
											"end": 3715,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3681,
											"end": 3715,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 3681,
											"end": 3715,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3681,
											"end": 3715,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3681,
											"end": 3715,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 3681,
											"end": 3715,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 11
										},
										{
											"begin": 3681,
											"end": 3715,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 3681,
											"end": 3715,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3681,
											"end": 3715,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 3681,
											"end": 3715,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3681,
											"end": 3715,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 3681,
											"end": 3715,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 3681,
											"end": 3715,
											"modifierDepth": 1,
											"name": "OR",
											"source": 11
										},
										{
											"begin": 3681,
											"end": 3715,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3681,
											"end": 3715,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 3681,
											"end": 3715,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3528,
											"end": 3722,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3528,
											"end": 3722,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3528,
											"end": 3722,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "tag",
											"source": 2,
											"value": "79"
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1662,
											"end": 1666,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "PUSH",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "PUSH",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1678,
											"end": 1692,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1678,
											"end": 1692,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1615,
											"end": 1699,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4000,
											"end": 4157,
											"name": "tag",
											"source": 11,
											"value": "83"
										},
										{
											"begin": 4000,
											"end": 4157,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4086,
											"end": 4090,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4146,
											"end": 4150,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 4139,
											"end": 4150,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4139,
											"end": 4150,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4000,
											"end": 4157,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4000,
											"end": 4157,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4000,
											"end": 4157,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4000,
											"end": 4157,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "tag",
											"source": 3,
											"value": "88"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3364,
											"end": 3371,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3390,
											"end": 3399,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3400,
											"end": 3407,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 3383,
											"end": 3408,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3383,
											"end": 3408,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3299,
											"end": 3415,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "198"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "198"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "200"
										},
										{
											"begin": 2384,
											"end": 2385,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2357,
											"end": 2375,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "201"
										},
										{
											"begin": 2357,
											"end": 2387,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "200"
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3058,
											"end": 3226,
											"name": "tag",
											"source": 11,
											"value": "94"
										},
										{
											"begin": 3058,
											"end": 3226,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3141,
											"end": 3148,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3167,
											"end": 3181,
											"name": "PUSH",
											"source": 11,
											"value": "8"
										},
										{
											"begin": 3167,
											"end": 3193,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3182,
											"end": 3192,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 3167,
											"end": 3193,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3167,
											"end": 3193,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3167,
											"end": 3193,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 3167,
											"end": 3193,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3167,
											"end": 3193,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3167,
											"end": 3193,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3167,
											"end": 3193,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3167,
											"end": 3193,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 3167,
											"end": 3193,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3167,
											"end": 3193,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3167,
											"end": 3193,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 3167,
											"end": 3206,
											"name": "PUSH",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 3167,
											"end": 3206,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3167,
											"end": 3219,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3207,
											"end": 3218,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 3167,
											"end": 3219,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3167,
											"end": 3219,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 3167,
											"end": 3219,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3167,
											"end": 3219,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 3167,
											"end": 3219,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3167,
											"end": 3219,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3167,
											"end": 3219,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 3167,
											"end": 3219,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3167,
											"end": 3219,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3167,
											"end": 3219,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3167,
											"end": 3219,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3167,
											"end": 3219,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 3167,
											"end": 3219,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3167,
											"end": 3219,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3167,
											"end": 3219,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 3167,
											"end": 3219,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 3160,
											"end": 3219,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3160,
											"end": 3219,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3058,
											"end": 3226,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 3058,
											"end": 3226,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3058,
											"end": 3226,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3058,
											"end": 3226,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3058,
											"end": 3226,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 886,
											"end": 935,
											"name": "tag",
											"source": 11,
											"value": "98"
										},
										{
											"begin": 886,
											"end": 935,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 886,
											"end": 935,
											"name": "PUSH",
											"source": 11,
											"value": "9"
										},
										{
											"begin": 886,
											"end": 935,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 886,
											"end": 935,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 886,
											"end": 935,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 886,
											"end": 935,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 886,
											"end": 935,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 886,
											"end": 935,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 886,
											"end": 935,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 886,
											"end": 935,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 886,
											"end": 935,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 886,
											"end": 935,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 886,
											"end": 935,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 886,
											"end": 935,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 886,
											"end": 935,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 886,
											"end": 935,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 886,
											"end": 935,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 886,
											"end": 935,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 886,
											"end": 935,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 886,
											"end": 935,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 886,
											"end": 935,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 886,
											"end": 935,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 886,
											"end": 935,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3862,
											"end": 3923,
											"name": "tag",
											"source": 11,
											"value": "102"
										},
										{
											"begin": 3862,
											"end": 3923,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "204"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "204"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3908,
											"end": 3916,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "206"
										},
										{
											"begin": 3908,
											"end": 3914,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "207"
										},
										{
											"begin": 3908,
											"end": 3916,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3908,
											"end": 3916,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "206"
										},
										{
											"begin": 3908,
											"end": 3916,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3862,
											"end": 3923,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2521,
											"end": 3052,
											"name": "tag",
											"source": 11,
											"value": "106"
										},
										{
											"begin": 2521,
											"end": 3052,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1239,
											"end": 1258,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "209"
										},
										{
											"begin": 1239,
											"end": 1256,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "210"
										},
										{
											"begin": 1239,
											"end": 1258,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1239,
											"end": 1258,
											"name": "tag",
											"source": 2,
											"value": "209"
										},
										{
											"begin": 1239,
											"end": 1258,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2648,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2634,
											"end": 2650,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2634,
											"end": 2650,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2634,
											"end": 2636,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2634,
											"end": 2650,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2634,
											"end": 2650,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2634,
											"end": 2650,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 2626,
											"end": 2680,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "212"
										},
										{
											"begin": 2626,
											"end": 2680,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 2626,
											"end": 2680,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2626,
											"end": 2680,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2626,
											"end": 2680,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2626,
											"end": 2680,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2626,
											"end": 2680,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2626,
											"end": 2680,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 2626,
											"end": 2680,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2626,
											"end": 2680,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "213"
										},
										{
											"begin": 2626,
											"end": 2680,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2626,
											"end": 2680,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "214"
										},
										{
											"begin": 2626,
											"end": 2680,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2626,
											"end": 2680,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "213"
										},
										{
											"begin": 2626,
											"end": 2680,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2626,
											"end": 2680,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2626,
											"end": 2680,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2626,
											"end": 2680,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2626,
											"end": 2680,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2626,
											"end": 2680,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 2626,
											"end": 2680,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2626,
											"end": 2680,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 2626,
											"end": 2680,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "212"
										},
										{
											"begin": 2626,
											"end": 2680,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2753,
											"end": 2759,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2698,
											"end": 2712,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "8"
										},
										{
											"begin": 2698,
											"end": 2724,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2713,
											"end": 2723,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 2698,
											"end": 2724,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2698,
											"end": 2724,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2698,
											"end": 2724,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 2698,
											"end": 2724,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2698,
											"end": 2724,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2698,
											"end": 2724,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2698,
											"end": 2724,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2698,
											"end": 2724,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 2698,
											"end": 2724,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2698,
											"end": 2724,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2698,
											"end": 2724,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 2698,
											"end": 2737,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 2698,
											"end": 2737,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2698,
											"end": 2749,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2738,
											"end": 2748,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 11
										},
										{
											"begin": 2698,
											"end": 2749,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2698,
											"end": 2749,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2698,
											"end": 2749,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2698,
											"end": 2749,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2698,
											"end": 2749,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2698,
											"end": 2749,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2698,
											"end": 2749,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 2698,
											"end": 2749,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2698,
											"end": 2749,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2698,
											"end": 2749,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2698,
											"end": 2749,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2698,
											"end": 2749,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 2698,
											"end": 2749,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2698,
											"end": 2749,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2698,
											"end": 2749,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 2698,
											"end": 2749,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 2698,
											"end": 2759,
											"modifierDepth": 1,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 2698,
											"end": 2759,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 2690,
											"end": 2793,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "215"
										},
										{
											"begin": 2690,
											"end": 2793,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 2690,
											"end": 2793,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2690,
											"end": 2793,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2690,
											"end": 2793,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2690,
											"end": 2793,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2690,
											"end": 2793,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2690,
											"end": 2793,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 2690,
											"end": 2793,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2690,
											"end": 2793,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "216"
										},
										{
											"begin": 2690,
											"end": 2793,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2690,
											"end": 2793,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "217"
										},
										{
											"begin": 2690,
											"end": 2793,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2690,
											"end": 2793,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "216"
										},
										{
											"begin": 2690,
											"end": 2793,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2690,
											"end": 2793,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2690,
											"end": 2793,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2690,
											"end": 2793,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2690,
											"end": 2793,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2690,
											"end": 2793,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 2690,
											"end": 2793,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2690,
											"end": 2793,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 2690,
											"end": 2793,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "215"
										},
										{
											"begin": 2690,
											"end": 2793,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2812,
											"end": 2845,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2848,
											"end": 2862,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "8"
										},
										{
											"begin": 2848,
											"end": 2874,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2863,
											"end": 2873,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 2848,
											"end": 2874,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2848,
											"end": 2874,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2848,
											"end": 2874,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 2848,
											"end": 2874,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2848,
											"end": 2874,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2848,
											"end": 2874,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2848,
											"end": 2874,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2848,
											"end": 2874,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 2848,
											"end": 2874,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2848,
											"end": 2874,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2848,
											"end": 2874,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 2812,
											"end": 2874,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2812,
											"end": 2874,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2923,
											"end": 2929,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2884,
											"end": 2894,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2884,
											"end": 2907,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 2884,
											"end": 2907,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2884,
											"end": 2919,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2908,
											"end": 2918,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 11
										},
										{
											"begin": 2884,
											"end": 2919,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2884,
											"end": 2919,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2884,
											"end": 2919,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2884,
											"end": 2919,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2884,
											"end": 2919,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2884,
											"end": 2919,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2884,
											"end": 2919,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 2884,
											"end": 2919,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2884,
											"end": 2919,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2884,
											"end": 2919,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2884,
											"end": 2919,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2884,
											"end": 2919,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 2884,
											"end": 2919,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2884,
											"end": 2919,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2884,
											"end": 2919,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 2884,
											"end": 2919,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2884,
											"end": 2929,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2884,
											"end": 2929,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2884,
											"end": 2929,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 2884,
											"end": 2929,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "218"
										},
										{
											"begin": 2884,
											"end": 2929,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2884,
											"end": 2929,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2884,
											"end": 2929,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "219"
										},
										{
											"begin": 2884,
											"end": 2929,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2884,
											"end": 2929,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "218"
										},
										{
											"begin": 2884,
											"end": 2929,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2884,
											"end": 2929,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 2884,
											"end": 2929,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2884,
											"end": 2929,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2884,
											"end": 2929,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2884,
											"end": 2929,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2884,
											"end": 2929,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 2884,
											"end": 2929,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2970,
											"end": 2976,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2939,
											"end": 2949,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2939,
											"end": 2962,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 2939,
											"end": 2962,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2939,
											"end": 2966,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2963,
											"end": 2965,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 2939,
											"end": 2966,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2939,
											"end": 2966,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2939,
											"end": 2966,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2939,
											"end": 2966,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2939,
											"end": 2966,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2939,
											"end": 2966,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2939,
											"end": 2966,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 2939,
											"end": 2966,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2939,
											"end": 2966,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2939,
											"end": 2966,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2939,
											"end": 2966,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2939,
											"end": 2966,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 2939,
											"end": 2966,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2939,
											"end": 2966,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2939,
											"end": 2966,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 2939,
											"end": 2966,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2939,
											"end": 2976,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2939,
											"end": 2976,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2939,
											"end": 2976,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 2939,
											"end": 2976,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "220"
										},
										{
											"begin": 2939,
											"end": 2976,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2939,
											"end": 2976,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2939,
											"end": 2976,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "221"
										},
										{
											"begin": 2939,
											"end": 2976,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2939,
											"end": 2976,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "220"
										},
										{
											"begin": 2939,
											"end": 2976,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2939,
											"end": 2976,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 2939,
											"end": 2976,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2939,
											"end": 2976,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2939,
											"end": 2976,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2939,
											"end": 2976,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2939,
											"end": 2976,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 2939,
											"end": 2976,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3022,
											"end": 3024,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2992,
											"end": 3045,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2992,
											"end": 3045,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 3010,
											"end": 3020,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 11
										},
										{
											"begin": 2992,
											"end": 3045,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2992,
											"end": 3045,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2992,
											"end": 3045,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "1BA44E8B79687FED555749CAE6DCCCF9BC5DF37A2739FBC73062F07B534CF03E"
										},
										{
											"begin": 3026,
											"end": 3036,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 3038,
											"end": 3044,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 2992,
											"end": 3045,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2992,
											"end": 3045,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2992,
											"end": 3045,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "222"
										},
										{
											"begin": 2992,
											"end": 3045,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 2992,
											"end": 3045,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2992,
											"end": 3045,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2992,
											"end": 3045,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "121"
										},
										{
											"begin": 2992,
											"end": 3045,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2992,
											"end": 3045,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "222"
										},
										{
											"begin": 2992,
											"end": 3045,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2992,
											"end": 3045,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2992,
											"end": 3045,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2992,
											"end": 3045,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2992,
											"end": 3045,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2992,
											"end": 3045,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 2992,
											"end": 3045,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2992,
											"end": 3045,
											"modifierDepth": 1,
											"name": "LOG3",
											"source": 11
										},
										{
											"begin": 2616,
											"end": 3052,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2521,
											"end": 3052,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2521,
											"end": 3052,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2521,
											"end": 3052,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2521,
											"end": 3052,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3232,
											"end": 3370,
											"name": "tag",
											"source": 11,
											"value": "109"
										},
										{
											"begin": 3232,
											"end": 3370,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3299,
											"end": 3306,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3325,
											"end": 3339,
											"name": "PUSH",
											"source": 11,
											"value": "8"
										},
										{
											"begin": 3325,
											"end": 3351,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3340,
											"end": 3350,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 3325,
											"end": 3351,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3325,
											"end": 3351,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3325,
											"end": 3351,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 3325,
											"end": 3351,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3325,
											"end": 3351,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3325,
											"end": 3351,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3325,
											"end": 3351,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3325,
											"end": 3351,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 3325,
											"end": 3351,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3325,
											"end": 3351,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3325,
											"end": 3351,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 3325,
											"end": 3363,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3325,
											"end": 3363,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3325,
											"end": 3363,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 3318,
											"end": 3363,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3318,
											"end": 3363,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3232,
											"end": 3370,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3232,
											"end": 3370,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3232,
											"end": 3370,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3232,
											"end": 3370,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1684,
											"end": 1691,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "tag",
											"source": 3,
											"value": "115"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2323,
											"end": 2336,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 2355,
											"end": 2362,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "226"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "159"
										},
										{
											"begin": 2348,
											"end": 2362,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "tag",
											"source": 3,
											"value": "226"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "227"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "159"
										},
										{
											"begin": 2348,
											"end": 2362,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "tag",
											"source": 3,
											"value": "227"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "228"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "229"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "228"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "tag",
											"source": 3,
											"value": "229"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "tag",
											"source": 3,
											"value": "230"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "230"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "tag",
											"source": 3,
											"value": "228"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2276,
											"end": 2369,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 719,
											"end": 765,
											"name": "tag",
											"source": 11,
											"value": "119"
										},
										{
											"begin": 719,
											"end": 765,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 719,
											"end": 765,
											"name": "PUSH",
											"source": 11,
											"value": "6"
										},
										{
											"begin": 719,
											"end": 765,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 719,
											"end": 765,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 719,
											"end": 765,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 719,
											"end": 765,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 719,
											"end": 765,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 719,
											"end": 765,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 719,
											"end": 765,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 719,
											"end": 765,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 719,
											"end": 765,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 719,
											"end": 765,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 719,
											"end": 765,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 719,
											"end": 765,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 719,
											"end": 765,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 719,
											"end": 765,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 719,
											"end": 765,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 719,
											"end": 765,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 719,
											"end": 765,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 719,
											"end": 765,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 719,
											"end": 765,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 719,
											"end": 765,
											"name": "PUSH",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 719,
											"end": 765,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 719,
											"end": 765,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 719,
											"end": 765,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 719,
											"end": 765,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 719,
											"end": 765,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 719,
											"end": 765,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "tag",
											"source": 3,
											"value": "124"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3679,
											"end": 3683,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3695,
											"end": 3708,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3711,
											"end": 3723,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "232"
										},
										{
											"begin": 3711,
											"end": 3721,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "166"
										},
										{
											"begin": 3711,
											"end": 3723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3711,
											"end": 3723,
											"name": "tag",
											"source": 3,
											"value": "232"
										},
										{
											"begin": 3711,
											"end": 3723,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3695,
											"end": 3723,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3695,
											"end": 3723,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3733,
											"end": 3760,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "233"
										},
										{
											"begin": 3743,
											"end": 3748,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3750,
											"end": 3752,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 3754,
											"end": 3759,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 3733,
											"end": 3742,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "175"
										},
										{
											"begin": 3733,
											"end": 3760,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3733,
											"end": 3760,
											"name": "tag",
											"source": 3,
											"value": "233"
										},
										{
											"begin": 3733,
											"end": 3760,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3777,
											"end": 3781,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 3770,
											"end": 3781,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3770,
											"end": 3781,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3770,
											"end": 3781,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3610,
											"end": 3788,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1948,
											"end": 2515,
											"name": "tag",
											"source": 11,
											"value": "128"
										},
										{
											"begin": 1948,
											"end": 2515,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "235"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "235"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1239,
											"end": 1258,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "237"
										},
										{
											"begin": 1239,
											"end": 1256,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "210"
										},
										{
											"begin": 1239,
											"end": 1258,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1239,
											"end": 1258,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "237"
										},
										{
											"begin": 1239,
											"end": 1258,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2091,
											"end": 2092,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2082,
											"end": 2088,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2082,
											"end": 2092,
											"modifierDepth": 2,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 2074,
											"end": 2126,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "239"
										},
										{
											"begin": 2074,
											"end": 2126,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 2074,
											"end": 2126,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2074,
											"end": 2126,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2074,
											"end": 2126,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2074,
											"end": 2126,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2074,
											"end": 2126,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2074,
											"end": 2126,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 2074,
											"end": 2126,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2074,
											"end": 2126,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "240"
										},
										{
											"begin": 2074,
											"end": 2126,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2074,
											"end": 2126,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "241"
										},
										{
											"begin": 2074,
											"end": 2126,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2074,
											"end": 2126,
											"modifierDepth": 2,
											"name": "tag",
											"source": 11,
											"value": "240"
										},
										{
											"begin": 2074,
											"end": 2126,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2074,
											"end": 2126,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2074,
											"end": 2126,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2074,
											"end": 2126,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2074,
											"end": 2126,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2074,
											"end": 2126,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 2074,
											"end": 2126,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2074,
											"end": 2126,
											"modifierDepth": 2,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 2074,
											"end": 2126,
											"modifierDepth": 2,
											"name": "tag",
											"source": 11,
											"value": "239"
										},
										{
											"begin": 2074,
											"end": 2126,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2190,
											"end": 2196,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2144,
											"end": 2158,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "8"
										},
										{
											"begin": 2144,
											"end": 2170,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2159,
											"end": 2169,
											"modifierDepth": 2,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 2144,
											"end": 2170,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2144,
											"end": 2170,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2144,
											"end": 2170,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2170,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2144,
											"end": 2170,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2144,
											"end": 2170,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2144,
											"end": 2170,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2144,
											"end": 2170,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2170,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2144,
											"end": 2170,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2144,
											"end": 2170,
											"modifierDepth": 2,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 2144,
											"end": 2186,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 2144,
											"end": 2186,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2144,
											"end": 2186,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 2144,
											"end": 2196,
											"modifierDepth": 2,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 2144,
											"end": 2196,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 2136,
											"end": 2228,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "242"
										},
										{
											"begin": 2136,
											"end": 2228,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 2136,
											"end": 2228,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2136,
											"end": 2228,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2136,
											"end": 2228,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2136,
											"end": 2228,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2136,
											"end": 2228,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2136,
											"end": 2228,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 2136,
											"end": 2228,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2136,
											"end": 2228,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "243"
										},
										{
											"begin": 2136,
											"end": 2228,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2136,
											"end": 2228,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "244"
										},
										{
											"begin": 2136,
											"end": 2228,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2136,
											"end": 2228,
											"modifierDepth": 2,
											"name": "tag",
											"source": 11,
											"value": "243"
										},
										{
											"begin": 2136,
											"end": 2228,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2136,
											"end": 2228,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2136,
											"end": 2228,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2136,
											"end": 2228,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2136,
											"end": 2228,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2136,
											"end": 2228,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 2136,
											"end": 2228,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2136,
											"end": 2228,
											"modifierDepth": 2,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 2136,
											"end": 2228,
											"modifierDepth": 2,
											"name": "tag",
											"source": 11,
											"value": "242"
										},
										{
											"begin": 2136,
											"end": 2228,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2247,
											"end": 2280,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2283,
											"end": 2297,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "8"
										},
										{
											"begin": 2283,
											"end": 2309,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2298,
											"end": 2308,
											"modifierDepth": 2,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 2283,
											"end": 2309,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2283,
											"end": 2309,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2283,
											"end": 2309,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 2283,
											"end": 2309,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2283,
											"end": 2309,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2283,
											"end": 2309,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2283,
											"end": 2309,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2283,
											"end": 2309,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 2283,
											"end": 2309,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2283,
											"end": 2309,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2283,
											"end": 2309,
											"modifierDepth": 2,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 2247,
											"end": 2309,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2247,
											"end": 2309,
											"modifierDepth": 2,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2345,
											"end": 2351,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2319,
											"end": 2329,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2319,
											"end": 2341,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2319,
											"end": 2341,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2319,
											"end": 2341,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2319,
											"end": 2351,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2319,
											"end": 2351,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2319,
											"end": 2351,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 2319,
											"end": 2351,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "245"
										},
										{
											"begin": 2319,
											"end": 2351,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2319,
											"end": 2351,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2319,
											"end": 2351,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "221"
										},
										{
											"begin": 2319,
											"end": 2351,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2319,
											"end": 2351,
											"modifierDepth": 2,
											"name": "tag",
											"source": 11,
											"value": "245"
										},
										{
											"begin": 2319,
											"end": 2351,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2319,
											"end": 2351,
											"modifierDepth": 2,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 2319,
											"end": 2351,
											"modifierDepth": 2,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2319,
											"end": 2351,
											"modifierDepth": 2,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2319,
											"end": 2351,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2319,
											"end": 2351,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2319,
											"end": 2351,
											"modifierDepth": 2,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 2319,
											"end": 2351,
											"modifierDepth": 2,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2391,
											"end": 2397,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2361,
											"end": 2371,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2361,
											"end": 2387,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 2361,
											"end": 2387,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2361,
											"end": 2387,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2361,
											"end": 2397,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2361,
											"end": 2397,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2361,
											"end": 2397,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 2361,
											"end": 2397,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "246"
										},
										{
											"begin": 2361,
											"end": 2397,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2361,
											"end": 2397,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2361,
											"end": 2397,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "219"
										},
										{
											"begin": 2361,
											"end": 2397,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2361,
											"end": 2397,
											"modifierDepth": 2,
											"name": "tag",
											"source": 11,
											"value": "246"
										},
										{
											"begin": 2361,
											"end": 2397,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2361,
											"end": 2397,
											"modifierDepth": 2,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 2361,
											"end": 2397,
											"modifierDepth": 2,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2361,
											"end": 2397,
											"modifierDepth": 2,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2361,
											"end": 2397,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2361,
											"end": 2397,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2361,
											"end": 2397,
											"modifierDepth": 2,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 2361,
											"end": 2397,
											"modifierDepth": 2,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2444,
											"end": 2450,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2407,
											"end": 2417,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2407,
											"end": 2430,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 2407,
											"end": 2430,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2407,
											"end": 2440,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2431,
											"end": 2439,
											"modifierDepth": 2,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 2407,
											"end": 2440,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2407,
											"end": 2440,
											"modifierDepth": 2,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2407,
											"end": 2440,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2407,
											"end": 2440,
											"modifierDepth": 2,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2407,
											"end": 2440,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2407,
											"end": 2440,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2407,
											"end": 2440,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 2407,
											"end": 2440,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2407,
											"end": 2440,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2407,
											"end": 2440,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2407,
											"end": 2440,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2407,
											"end": 2440,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 2407,
											"end": 2440,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2407,
											"end": 2440,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2407,
											"end": 2440,
											"modifierDepth": 2,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 2407,
											"end": 2440,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2407,
											"end": 2450,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2407,
											"end": 2450,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2407,
											"end": 2450,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 2407,
											"end": 2450,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "247"
										},
										{
											"begin": 2407,
											"end": 2450,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2407,
											"end": 2450,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2407,
											"end": 2450,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "221"
										},
										{
											"begin": 2407,
											"end": 2450,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2407,
											"end": 2450,
											"modifierDepth": 2,
											"name": "tag",
											"source": 11,
											"value": "247"
										},
										{
											"begin": 2407,
											"end": 2450,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2407,
											"end": 2450,
											"modifierDepth": 2,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 2407,
											"end": 2450,
											"modifierDepth": 2,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2407,
											"end": 2450,
											"modifierDepth": 2,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2407,
											"end": 2450,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2407,
											"end": 2450,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2407,
											"end": 2450,
											"modifierDepth": 2,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 2407,
											"end": 2450,
											"modifierDepth": 2,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2479,
											"end": 2487,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2466,
											"end": 2508,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2466,
											"end": 2508,
											"modifierDepth": 2,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2466,
											"end": 2508,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "6B3332210C2263E1008F810D148FC1C61A002C8F5DFCF18FE06858064BC49E69"
										},
										{
											"begin": 2489,
											"end": 2499,
											"modifierDepth": 2,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 2501,
											"end": 2507,
											"modifierDepth": 2,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 2466,
											"end": 2508,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2466,
											"end": 2508,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2466,
											"end": 2508,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "248"
										},
										{
											"begin": 2466,
											"end": 2508,
											"modifierDepth": 2,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 2466,
											"end": 2508,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2466,
											"end": 2508,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2466,
											"end": 2508,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "121"
										},
										{
											"begin": 2466,
											"end": 2508,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2466,
											"end": 2508,
											"modifierDepth": 2,
											"name": "tag",
											"source": 11,
											"value": "248"
										},
										{
											"begin": 2466,
											"end": 2508,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2466,
											"end": 2508,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2466,
											"end": 2508,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2466,
											"end": 2508,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2466,
											"end": 2508,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2466,
											"end": 2508,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 2466,
											"end": 2508,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2466,
											"end": 2508,
											"modifierDepth": 2,
											"name": "LOG2",
											"source": 11
										},
										{
											"begin": 2064,
											"end": 2515,
											"modifierDepth": 2,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1948,
											"end": 2515,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1948,
											"end": 2515,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1948,
											"end": 2515,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1948,
											"end": 2515,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 824,
											"end": 880,
											"name": "tag",
											"source": 11,
											"value": "131"
										},
										{
											"begin": 824,
											"end": 880,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 824,
											"end": 880,
											"name": "PUSH",
											"source": 11,
											"value": "8"
										},
										{
											"begin": 824,
											"end": 880,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 824,
											"end": 880,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 824,
											"end": 880,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 824,
											"end": 880,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 824,
											"end": 880,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 824,
											"end": 880,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 824,
											"end": 880,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 824,
											"end": 880,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 824,
											"end": 880,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 824,
											"end": 880,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 824,
											"end": 880,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 824,
											"end": 880,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 824,
											"end": 880,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 824,
											"end": 880,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 824,
											"end": 880,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 824,
											"end": 880,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 824,
											"end": 880,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 824,
											"end": 880,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 824,
											"end": 880,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 824,
											"end": 880,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 824,
											"end": 880,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 824,
											"end": 880,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 824,
											"end": 880,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 824,
											"end": 880,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 824,
											"end": 880,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 824,
											"end": 880,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3376,
											"end": 3522,
											"name": "tag",
											"source": 11,
											"value": "135"
										},
										{
											"begin": 3376,
											"end": 3522,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3447,
											"end": 3454,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3473,
											"end": 3487,
											"name": "PUSH",
											"source": 11,
											"value": "8"
										},
										{
											"begin": 3473,
											"end": 3499,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3488,
											"end": 3498,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 3473,
											"end": 3499,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3473,
											"end": 3499,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3473,
											"end": 3499,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 3473,
											"end": 3499,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3473,
											"end": 3499,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3473,
											"end": 3499,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3473,
											"end": 3499,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3473,
											"end": 3499,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 3473,
											"end": 3499,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3473,
											"end": 3499,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3473,
											"end": 3499,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 3473,
											"end": 3515,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 3473,
											"end": 3515,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3473,
											"end": 3515,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 3466,
											"end": 3515,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3466,
											"end": 3515,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3376,
											"end": 3522,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3376,
											"end": 3522,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3376,
											"end": 3522,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3376,
											"end": 3522,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "tag",
											"source": 3,
											"value": "140"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3926,
											"end": 3933,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3952,
											"end": 3963,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3964,
											"end": 3969,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3971,
											"end": 3978,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 3945,
											"end": 3979,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3945,
											"end": 3979,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3846,
											"end": 3986,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1562,
											"end": 1808,
											"name": "tag",
											"source": 11,
											"value": "144"
										},
										{
											"begin": 1562,
											"end": 1808,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "252"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "252"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1692,
											"end": 1698,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1666,
											"end": 1678,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "7"
										},
										{
											"begin": 1666,
											"end": 1688,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1679,
											"end": 1687,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 1666,
											"end": 1688,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1666,
											"end": 1688,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1666,
											"end": 1688,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1666,
											"end": 1688,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1666,
											"end": 1688,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1666,
											"end": 1688,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1666,
											"end": 1688,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1666,
											"end": 1688,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1666,
											"end": 1688,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1666,
											"end": 1688,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1666,
											"end": 1688,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 1666,
											"end": 1688,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 1666,
											"end": 1698,
											"modifierDepth": 1,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 1666,
											"end": 1698,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 1658,
											"end": 1732,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "254"
										},
										{
											"begin": 1658,
											"end": 1732,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1658,
											"end": 1732,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1658,
											"end": 1732,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1658,
											"end": 1732,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1658,
											"end": 1732,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1658,
											"end": 1732,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1658,
											"end": 1732,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 1658,
											"end": 1732,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1658,
											"end": 1732,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "255"
										},
										{
											"begin": 1658,
											"end": 1732,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1658,
											"end": 1732,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "256"
										},
										{
											"begin": 1658,
											"end": 1732,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1658,
											"end": 1732,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "255"
										},
										{
											"begin": 1658,
											"end": 1732,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1658,
											"end": 1732,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1658,
											"end": 1732,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1658,
											"end": 1732,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1658,
											"end": 1732,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1658,
											"end": 1732,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 1658,
											"end": 1732,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1658,
											"end": 1732,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 1658,
											"end": 1732,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "254"
										},
										{
											"begin": 1658,
											"end": 1732,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1742,
											"end": 1759,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "257"
										},
										{
											"begin": 1748,
											"end": 1750,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1752,
											"end": 1758,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1742,
											"end": 1747,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "258"
										},
										{
											"begin": 1742,
											"end": 1759,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1742,
											"end": 1759,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "257"
										},
										{
											"begin": 1742,
											"end": 1759,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1795,
											"end": 1801,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1769,
											"end": 1781,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "7"
										},
										{
											"begin": 1769,
											"end": 1791,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1782,
											"end": 1790,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 1769,
											"end": 1791,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1769,
											"end": 1791,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1769,
											"end": 1791,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1769,
											"end": 1791,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1769,
											"end": 1791,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1769,
											"end": 1791,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1769,
											"end": 1791,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1769,
											"end": 1791,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1769,
											"end": 1791,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1769,
											"end": 1791,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1769,
											"end": 1791,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 1769,
											"end": 1791,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1769,
											"end": 1801,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1769,
											"end": 1801,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1769,
											"end": 1801,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 1769,
											"end": 1801,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "259"
										},
										{
											"begin": 1769,
											"end": 1801,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1769,
											"end": 1801,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1769,
											"end": 1801,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "219"
										},
										{
											"begin": 1769,
											"end": 1801,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1769,
											"end": 1801,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "259"
										},
										{
											"begin": 1769,
											"end": 1801,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1769,
											"end": 1801,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 1769,
											"end": 1801,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1769,
											"end": 1801,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1769,
											"end": 1801,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1769,
											"end": 1801,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1769,
											"end": 1801,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 1769,
											"end": 1801,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1562,
											"end": 1808,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1562,
											"end": 1808,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1562,
											"end": 1808,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1562,
											"end": 1808,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3728,
											"end": 3856,
											"name": "tag",
											"source": 11,
											"value": "147"
										},
										{
											"begin": 3728,
											"end": 3856,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3797,
											"end": 3804,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3823,
											"end": 3837,
											"name": "PUSH",
											"source": 11,
											"value": "9"
										},
										{
											"begin": 3823,
											"end": 3849,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3838,
											"end": 3848,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 3823,
											"end": 3849,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3823,
											"end": 3849,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3823,
											"end": 3849,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 3823,
											"end": 3849,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3823,
											"end": 3849,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3823,
											"end": 3849,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3823,
											"end": 3849,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3823,
											"end": 3849,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 3823,
											"end": 3849,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3823,
											"end": 3849,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3823,
											"end": 3849,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 3823,
											"end": 3849,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3823,
											"end": 3849,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3823,
											"end": 3849,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 3823,
											"end": 3849,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3823,
											"end": 3849,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 3823,
											"end": 3849,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 3823,
											"end": 3849,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3823,
											"end": 3849,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 3823,
											"end": 3849,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3823,
											"end": 3849,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 3816,
											"end": 3849,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3816,
											"end": 3849,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3728,
											"end": 3856,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3728,
											"end": 3856,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3728,
											"end": 3856,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3728,
											"end": 3856,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "262"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "262"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2647,
											"end": 2648,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2635,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "264"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2700,
											"end": 2701,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "265"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2672,
											"end": 2703,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "265"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "264"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "266"
										},
										{
											"begin": 2742,
											"end": 2750,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2741,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "201"
										},
										{
											"begin": 2723,
											"end": 2751,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "266"
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1814,
											"end": 1942,
											"name": "tag",
											"source": 11,
											"value": "154"
										},
										{
											"begin": 1814,
											"end": 1942,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1881,
											"end": 1899,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "267"
										},
										{
											"begin": 1881,
											"end": 1899,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "268"
										},
										{
											"begin": 1881,
											"end": 1899,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1881,
											"end": 1899,
											"name": "tag",
											"source": 11,
											"value": "267"
										},
										{
											"begin": 1881,
											"end": 1899,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1918,
											"end": 1925,
											"name": "PUSH",
											"source": 11,
											"value": "6"
										},
										{
											"begin": 1918,
											"end": 1935,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1926,
											"end": 1934,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 1918,
											"end": 1935,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1918,
											"end": 1935,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1918,
											"end": 1935,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1918,
											"end": 1935,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1918,
											"end": 1935,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1918,
											"end": 1935,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1918,
											"end": 1935,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1918,
											"end": 1935,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1918,
											"end": 1935,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1918,
											"end": 1935,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1918,
											"end": 1935,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 1911,
											"end": 1935,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1911,
											"end": 1935,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1911,
											"end": 1935,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1911,
											"end": 1935,
											"name": "PUSH",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 1911,
											"end": 1935,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1911,
											"end": 1935,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1911,
											"end": 1935,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1911,
											"end": 1935,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1911,
											"end": 1935,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1911,
											"end": 1935,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1911,
											"end": 1935,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1911,
											"end": 1935,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1911,
											"end": 1935,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 1911,
											"end": 1935,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1911,
											"end": 1935,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1911,
											"end": 1935,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1911,
											"end": 1935,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1911,
											"end": 1935,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 1911,
											"end": 1935,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1911,
											"end": 1935,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1911,
											"end": 1935,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1911,
											"end": 1935,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 1911,
											"end": 1935,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1911,
											"end": 1935,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1911,
											"end": 1935,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 1911,
											"end": 1935,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1911,
											"end": 1935,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1911,
											"end": 1935,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1911,
											"end": 1935,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1911,
											"end": 1935,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1911,
											"end": 1935,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1911,
											"end": 1935,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1911,
											"end": 1935,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1911,
											"end": 1935,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1911,
											"end": 1935,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1911,
											"end": 1935,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 1911,
											"end": 1935,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1911,
											"end": 1935,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1911,
											"end": 1935,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1911,
											"end": 1935,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1911,
											"end": 1935,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1911,
											"end": 1935,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1911,
											"end": 1935,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1911,
											"end": 1935,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1911,
											"end": 1935,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1911,
											"end": 1935,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 1911,
											"end": 1935,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1911,
											"end": 1935,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 1911,
											"end": 1935,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "270"
										},
										{
											"begin": 1911,
											"end": 1935,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1911,
											"end": 1935,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1911,
											"end": 1935,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 1911,
											"end": 1935,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1911,
											"end": 1935,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1911,
											"end": 1935,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1911,
											"end": 1935,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1911,
											"end": 1935,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1911,
											"end": 1935,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1911,
											"end": 1935,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1911,
											"end": 1935,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1911,
											"end": 1935,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 1911,
											"end": 1935,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1911,
											"end": 1935,
											"name": "tag",
											"source": 11,
											"value": "271"
										},
										{
											"begin": 1911,
											"end": 1935,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1911,
											"end": 1935,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1911,
											"end": 1935,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 1911,
											"end": 1935,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1911,
											"end": 1935,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1911,
											"end": 1935,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1911,
											"end": 1935,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1911,
											"end": 1935,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1911,
											"end": 1935,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 1911,
											"end": 1935,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1911,
											"end": 1935,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1911,
											"end": 1935,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1911,
											"end": 1935,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 1911,
											"end": 1935,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 1911,
											"end": 1935,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "271"
										},
										{
											"begin": 1911,
											"end": 1935,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1911,
											"end": 1935,
											"name": "tag",
											"source": 11,
											"value": "270"
										},
										{
											"begin": 1911,
											"end": 1935,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1911,
											"end": 1935,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1911,
											"end": 1935,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1911,
											"end": 1935,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1911,
											"end": 1935,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1911,
											"end": 1935,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1911,
											"end": 1935,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1911,
											"end": 1935,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1911,
											"end": 1935,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1911,
											"end": 1935,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1911,
											"end": 1935,
											"name": "PUSH",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 1911,
											"end": 1935,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1911,
											"end": 1935,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1911,
											"end": 1935,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 1911,
											"end": 1935,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1911,
											"end": 1935,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1911,
											"end": 1935,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1911,
											"end": 1935,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1911,
											"end": 1935,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1911,
											"end": 1935,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1814,
											"end": 1942,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1814,
											"end": 1942,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1814,
											"end": 1942,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1814,
											"end": 1942,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 656,
											"end": 752,
											"name": "tag",
											"source": 9,
											"value": "166"
										},
										{
											"begin": 656,
											"end": 752,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 709,
											"end": 716,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 728,
											"end": 745,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 728,
											"end": 745,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 656,
											"end": 752,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 656,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8989,
											"end": 9117,
											"name": "tag",
											"source": 3,
											"value": "168"
										},
										{
											"begin": 8989,
											"end": 9117,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9073,
											"end": 9110,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "274"
										},
										{
											"begin": 9082,
											"end": 9087,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 9089,
											"end": 9096,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 9098,
											"end": 9103,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 9105,
											"end": 9109,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 9073,
											"end": 9081,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "275"
										},
										{
											"begin": 9073,
											"end": 9110,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 9073,
											"end": 9110,
											"name": "tag",
											"source": 3,
											"value": "274"
										},
										{
											"begin": 9073,
											"end": 9110,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8989,
											"end": 9117,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8989,
											"end": 9117,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8989,
											"end": 9117,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8989,
											"end": 9117,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 10663,
											"end": 11140,
											"name": "tag",
											"source": 3,
											"value": "173"
										},
										{
											"begin": 10663,
											"end": 11140,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10762,
											"end": 10786,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10789,
											"end": 10814,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "277"
										},
										{
											"begin": 10799,
											"end": 10804,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 10806,
											"end": 10813,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 10789,
											"end": 10798,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "140"
										},
										{
											"begin": 10789,
											"end": 10814,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 10789,
											"end": 10814,
											"name": "tag",
											"source": 3,
											"value": "277"
										},
										{
											"begin": 10789,
											"end": 10814,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10762,
											"end": 10814,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10762,
											"end": 10814,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10848,
											"end": 10865,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10828,
											"end": 10844,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10828,
											"end": 10865,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 10824,
											"end": 11134,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "278"
										},
										{
											"begin": 10824,
											"end": 11134,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 10904,
											"end": 10909,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10885,
											"end": 10901,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10885,
											"end": 10909,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 10881,
											"end": 11011,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 10881,
											"end": 11011,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "279"
										},
										{
											"begin": 10881,
											"end": 11011,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 10963,
											"end": 10970,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 10972,
											"end": 10988,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10990,
											"end": 10995,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "PUSH",
											"source": 3,
											"value": "FB8F41B200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "280"
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "281"
										},
										{
											"begin": 10936,
											"end": 10996,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "tag",
											"source": 3,
											"value": "280"
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 10881,
											"end": 11011,
											"name": "tag",
											"source": 3,
											"value": "279"
										},
										{
											"begin": 10881,
											"end": 11011,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 11052,
											"end": 11109,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "282"
										},
										{
											"begin": 11061,
											"end": 11066,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 11068,
											"end": 11075,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 11096,
											"end": 11101,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 11077,
											"end": 11093,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 11077,
											"end": 11101,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 11103,
											"end": 11108,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 11052,
											"end": 11060,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "275"
										},
										{
											"begin": 11052,
											"end": 11109,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 11052,
											"end": 11109,
											"name": "tag",
											"source": 3,
											"value": "282"
										},
										{
											"begin": 11052,
											"end": 11109,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10824,
											"end": 11134,
											"name": "tag",
											"source": 3,
											"value": "278"
										},
										{
											"begin": 10824,
											"end": 11134,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10752,
											"end": 11140,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10663,
											"end": 11140,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10663,
											"end": 11140,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10663,
											"end": 11140,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10663,
											"end": 11140,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5656,
											"end": 5956,
											"name": "tag",
											"source": 3,
											"value": "175"
										},
										{
											"begin": 5656,
											"end": 5956,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5755,
											"end": 5756,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5739,
											"end": 5757,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5739,
											"end": 5757,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5739,
											"end": 5743,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5739,
											"end": 5757,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5739,
											"end": 5757,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5739,
											"end": 5757,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 5735,
											"end": 5821,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "284"
										},
										{
											"begin": 5735,
											"end": 5821,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 5807,
											"end": 5808,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "PUSH",
											"source": 3,
											"value": "96C6FD1E00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "285"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 5780,
											"end": 5810,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "tag",
											"source": 3,
											"value": "285"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 5735,
											"end": 5821,
											"name": "tag",
											"source": 3,
											"value": "284"
										},
										{
											"begin": 5735,
											"end": 5821,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5848,
											"end": 5849,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5834,
											"end": 5850,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5834,
											"end": 5850,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5834,
											"end": 5836,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5834,
											"end": 5850,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5834,
											"end": 5850,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5834,
											"end": 5850,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 5830,
											"end": 5916,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "286"
										},
										{
											"begin": 5830,
											"end": 5916,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 5902,
											"end": 5903,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "PUSH",
											"source": 3,
											"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "287"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 5873,
											"end": 5905,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "tag",
											"source": 3,
											"value": "287"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 5830,
											"end": 5916,
											"name": "tag",
											"source": 3,
											"value": "286"
										},
										{
											"begin": 5830,
											"end": 5916,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5925,
											"end": 5949,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "288"
										},
										{
											"begin": 5933,
											"end": 5937,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5939,
											"end": 5941,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5943,
											"end": 5948,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5925,
											"end": 5932,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "289"
										},
										{
											"begin": 5925,
											"end": 5949,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5925,
											"end": 5949,
											"name": "tag",
											"source": 3,
											"value": "288"
										},
										{
											"begin": 5925,
											"end": 5949,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5656,
											"end": 5956,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5656,
											"end": 5956,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5656,
											"end": 5956,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5656,
											"end": 5956,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "tag",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "291"
										},
										{
											"begin": 1866,
											"end": 1876,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 1866,
											"end": 1878,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "tag",
											"source": 0,
											"value": "291"
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "292"
										},
										{
											"begin": 1855,
											"end": 1860,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 1855,
											"end": 1862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "tag",
											"source": 0,
											"value": "292"
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "293"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "294"
										},
										{
											"begin": 1928,
											"end": 1938,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 1928,
											"end": 1940,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "tag",
											"source": 0,
											"value": "294"
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "118CDAA700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "295"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1901,
											"end": 1941,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "tag",
											"source": 0,
											"value": "295"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "tag",
											"source": 0,
											"value": "293"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1958,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2433,
											"end": 2550,
											"name": "tag",
											"source": 2,
											"value": "182"
										},
										{
											"begin": 2433,
											"end": 2550,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1486,
											"end": 1502,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "297"
										},
										{
											"begin": 1486,
											"end": 1500,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "298"
										},
										{
											"begin": 1486,
											"end": 1502,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1486,
											"end": 1502,
											"name": "tag",
											"source": 2,
											"value": "297"
										},
										{
											"begin": 1486,
											"end": 1502,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2501,
											"end": 2506,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2491,
											"end": 2498,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 2491,
											"end": 2498,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 2491,
											"end": 2506,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2491,
											"end": 2506,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 2491,
											"end": 2506,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2491,
											"end": 2506,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2491,
											"end": 2506,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2491,
											"end": 2506,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 2491,
											"end": 2506,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2491,
											"end": 2506,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 2491,
											"end": 2506,
											"modifierDepth": 1,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2491,
											"end": 2506,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2491,
											"end": 2506,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2491,
											"end": 2506,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2491,
											"end": 2506,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2491,
											"end": 2506,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2491,
											"end": 2506,
											"modifierDepth": 1,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 2491,
											"end": 2506,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2491,
											"end": 2506,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 2491,
											"end": 2506,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA"
										},
										{
											"begin": 2530,
											"end": 2542,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "300"
										},
										{
											"begin": 2530,
											"end": 2540,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "166"
										},
										{
											"begin": 2530,
											"end": 2542,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2530,
											"end": 2542,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "300"
										},
										{
											"begin": 2530,
											"end": 2542,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "301"
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2521,
											"end": 2543,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "301"
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 2
										},
										{
											"begin": 2433,
											"end": 2550,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "tag",
											"source": 0,
											"value": "201"
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3001,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3029,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3083,
											"end": 3091,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3073,
											"end": 3081,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2975,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2186,
											"end": 2301,
											"name": "tag",
											"source": 2,
											"value": "207"
										},
										{
											"begin": 2186,
											"end": 2301,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1239,
											"end": 1258,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "304"
										},
										{
											"begin": 1239,
											"end": 1256,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "210"
										},
										{
											"begin": 1239,
											"end": 1258,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1239,
											"end": 1258,
											"name": "tag",
											"source": 2,
											"value": "304"
										},
										{
											"begin": 1239,
											"end": 1258,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2255,
											"end": 2259,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2245,
											"end": 2252,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 2245,
											"end": 2252,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 2245,
											"end": 2259,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2245,
											"end": 2259,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 2245,
											"end": 2259,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2245,
											"end": 2259,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2245,
											"end": 2259,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2245,
											"end": 2259,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 2245,
											"end": 2259,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2245,
											"end": 2259,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 2245,
											"end": 2259,
											"modifierDepth": 1,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2245,
											"end": 2259,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2245,
											"end": 2259,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2245,
											"end": 2259,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2245,
											"end": 2259,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2245,
											"end": 2259,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2245,
											"end": 2259,
											"modifierDepth": 1,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 2245,
											"end": 2259,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2245,
											"end": 2259,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 2245,
											"end": 2259,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2274,
											"end": 2294,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258"
										},
										{
											"begin": 2281,
											"end": 2293,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "306"
										},
										{
											"begin": 2281,
											"end": 2291,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "166"
										},
										{
											"begin": 2281,
											"end": 2293,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2281,
											"end": 2293,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "306"
										},
										{
											"begin": 2281,
											"end": 2293,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2274,
											"end": 2294,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2274,
											"end": 2294,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2274,
											"end": 2294,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "307"
										},
										{
											"begin": 2274,
											"end": 2294,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2274,
											"end": 2294,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2274,
											"end": 2294,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2274,
											"end": 2294,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2274,
											"end": 2294,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "307"
										},
										{
											"begin": 2274,
											"end": 2294,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2274,
											"end": 2294,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2274,
											"end": 2294,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2274,
											"end": 2294,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2274,
											"end": 2294,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2274,
											"end": 2294,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2274,
											"end": 2294,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2274,
											"end": 2294,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 2
										},
										{
											"begin": 2186,
											"end": 2301,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1767,
											"end": 1873,
											"name": "tag",
											"source": 2,
											"value": "210"
										},
										{
											"begin": 1767,
											"end": 1873,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1837,
											"end": 1845,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "309"
										},
										{
											"begin": 1837,
											"end": 1843,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "79"
										},
										{
											"begin": 1837,
											"end": 1845,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1837,
											"end": 1845,
											"name": "tag",
											"source": 2,
											"value": "309"
										},
										{
											"begin": 1837,
											"end": 1845,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1836,
											"end": 1845,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "310"
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "311"
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "312"
										},
										{
											"begin": 1828,
											"end": 1866,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "tag",
											"source": 2,
											"value": "311"
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "tag",
											"source": 2,
											"value": "310"
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1767,
											"end": 1873,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7721,
											"end": 7929,
											"name": "tag",
											"source": 3,
											"value": "258"
										},
										{
											"begin": 7721,
											"end": 7929,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7810,
											"end": 7811,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7791,
											"end": 7812,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7791,
											"end": 7812,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7791,
											"end": 7798,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7791,
											"end": 7812,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7791,
											"end": 7812,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7791,
											"end": 7812,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 7787,
											"end": 7878,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "314"
										},
										{
											"begin": 7787,
											"end": 7878,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 7864,
											"end": 7865,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "PUSH",
											"source": 3,
											"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "315"
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 7835,
											"end": 7867,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "tag",
											"source": 3,
											"value": "315"
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 7787,
											"end": 7878,
											"name": "tag",
											"source": 3,
											"value": "314"
										},
										{
											"begin": 7787,
											"end": 7878,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7887,
											"end": 7922,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "316"
										},
										{
											"begin": 7903,
											"end": 7904,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7907,
											"end": 7914,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7916,
											"end": 7921,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7887,
											"end": 7894,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "289"
										},
										{
											"begin": 7887,
											"end": 7922,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7887,
											"end": 7922,
											"name": "tag",
											"source": 3,
											"value": "316"
										},
										{
											"begin": 7887,
											"end": 7922,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7721,
											"end": 7929,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7721,
											"end": 7929,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7721,
											"end": 7929,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "tag",
											"source": 3,
											"value": "275"
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10078,
											"end": 10079,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10061,
											"end": 10080,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10061,
											"end": 10080,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 10061,
											"end": 10066,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 10061,
											"end": 10080,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10061,
											"end": 10080,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 10061,
											"end": 10080,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 10057,
											"end": 10146,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "318"
										},
										{
											"begin": 10057,
											"end": 10146,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 10132,
											"end": 10133,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "PUSH",
											"source": 3,
											"value": "E602DF0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "319"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 10103,
											"end": 10135,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "tag",
											"source": 3,
											"value": "319"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 10057,
											"end": 10146,
											"name": "tag",
											"source": 3,
											"value": "318"
										},
										{
											"begin": 10057,
											"end": 10146,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10178,
											"end": 10179,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10159,
											"end": 10180,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10159,
											"end": 10180,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 10159,
											"end": 10166,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 10159,
											"end": 10180,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10159,
											"end": 10180,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 10159,
											"end": 10180,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 10155,
											"end": 10245,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "320"
										},
										{
											"begin": 10155,
											"end": 10245,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 10231,
											"end": 10232,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "PUSH",
											"source": 3,
											"value": "94280D6200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "321"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 10203,
											"end": 10234,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "tag",
											"source": 3,
											"value": "321"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 10155,
											"end": 10245,
											"name": "tag",
											"source": 3,
											"value": "320"
										},
										{
											"begin": 10155,
											"end": 10245,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10284,
											"end": 10289,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10254,
											"end": 10265,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10266,
											"end": 10271,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10273,
											"end": 10280,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 10254,
											"end": 10289,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10254,
											"end": 10289,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10254,
											"end": 10289,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 10254,
											"end": 10289,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10303,
											"end": 10312,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 10299,
											"end": 10375,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 10299,
											"end": 10375,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "322"
										},
										{
											"begin": 10299,
											"end": 10375,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 10349,
											"end": 10356,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 10342,
											"end": 10347,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH",
											"source": 3,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 10358,
											"end": 10363,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "323"
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "53"
										},
										{
											"begin": 10333,
											"end": 10364,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "tag",
											"source": 3,
											"value": "323"
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "LOG3",
											"source": 3
										},
										{
											"begin": 10299,
											"end": 10375,
											"name": "tag",
											"source": 3,
											"value": "322"
										},
										{
											"begin": 10299,
											"end": 10375,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9949,
											"end": 10381,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6271,
											"end": 7378,
											"name": "tag",
											"source": 3,
											"value": "289"
										},
										{
											"begin": 6271,
											"end": 7378,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6376,
											"end": 6377,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6360,
											"end": 6378,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6360,
											"end": 6378,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6360,
											"end": 6364,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 6360,
											"end": 6378,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6360,
											"end": 6378,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6360,
											"end": 6378,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "325"
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 6512,
											"end": 6517,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6496,
											"end": 6508,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 6496,
											"end": 6508,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "326"
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "221"
										},
										{
											"begin": 6496,
											"end": 6517,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "tag",
											"source": 3,
											"value": "326"
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "327"
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "tag",
											"source": 3,
											"value": "325"
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6548,
											"end": 6567,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6570,
											"end": 6579,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6580,
											"end": 6584,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 6548,
											"end": 6585,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6548,
											"end": 6585,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6617,
											"end": 6622,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6603,
											"end": 6614,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6603,
											"end": 6622,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 6599,
											"end": 6714,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 6599,
											"end": 6714,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "328"
										},
										{
											"begin": 6599,
											"end": 6714,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 6674,
											"end": 6678,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 6680,
											"end": 6691,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6693,
											"end": 6698,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "PUSH",
											"source": 3,
											"value": "E450D38C00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "329"
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "281"
										},
										{
											"begin": 6649,
											"end": 6699,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "tag",
											"source": 3,
											"value": "329"
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 6599,
											"end": 6714,
											"name": "tag",
											"source": 3,
											"value": "328"
										},
										{
											"begin": 6599,
											"end": 6714,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6866,
											"end": 6871,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6852,
											"end": 6863,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6852,
											"end": 6871,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 6834,
											"end": 6843,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6844,
											"end": 6848,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 6834,
											"end": 6871,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6834,
											"end": 6871,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6834,
											"end": 6871,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 6834,
											"end": 6871,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6534,
											"end": 6896,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "tag",
											"source": 3,
											"value": "327"
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6924,
											"end": 6925,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6910,
											"end": 6926,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6910,
											"end": 6926,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6910,
											"end": 6912,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6910,
											"end": 6926,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6910,
											"end": 6926,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6910,
											"end": 6926,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "330"
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 7089,
											"end": 7094,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7073,
											"end": 7085,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 7073,
											"end": 7085,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "331"
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "tag",
											"source": 3,
											"value": "330"
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7301,
											"end": 7306,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7284,
											"end": 7293,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7294,
											"end": 7296,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "tag",
											"source": 3,
											"value": "331"
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7361,
											"end": 7363,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7355,
											"end": 7359,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH",
											"source": 3,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 7365,
											"end": 7370,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "332"
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "53"
										},
										{
											"begin": 7346,
											"end": 7371,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "tag",
											"source": 3,
											"value": "332"
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "LOG3",
											"source": 3
										},
										{
											"begin": 6271,
											"end": 7378,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6271,
											"end": 7378,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6271,
											"end": 7378,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6271,
											"end": 7378,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1945,
											"end": 2051,
											"name": "tag",
											"source": 2,
											"value": "298"
										},
										{
											"begin": 1945,
											"end": 2051,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2011,
											"end": 2019,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "334"
										},
										{
											"begin": 2011,
											"end": 2017,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "79"
										},
										{
											"begin": 2011,
											"end": 2019,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2011,
											"end": 2019,
											"name": "tag",
											"source": 2,
											"value": "334"
										},
										{
											"begin": 2011,
											"end": 2019,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "335"
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "336"
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "337"
										},
										{
											"begin": 2003,
											"end": 2044,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "tag",
											"source": 2,
											"value": "336"
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "tag",
											"source": 2,
											"value": "335"
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1945,
											"end": 2051,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "187"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "KECCAK256",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "338"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MUL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "339"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "GT",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "340"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "339"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "340"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "338"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "341"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "342"
										},
										{
											"begin": -1,
											"end": -1,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "341"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "268"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "342"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "343"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "GT",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "344"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "343"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "344"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 7,
											"end": 106,
											"name": "tag",
											"source": 12,
											"value": "345"
										},
										{
											"begin": 7,
											"end": 106,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 59,
											"end": 65,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 93,
											"end": 98,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 87,
											"end": 99,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 77,
											"end": 99,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 77,
											"end": 99,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7,
											"end": 106,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 7,
											"end": 106,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7,
											"end": 106,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7,
											"end": 106,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 112,
											"end": 281,
											"name": "tag",
											"source": 12,
											"value": "346"
										},
										{
											"begin": 112,
											"end": 281,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 196,
											"end": 207,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 230,
											"end": 236,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 225,
											"end": 228,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 218,
											"end": 237,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 270,
											"end": 274,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 265,
											"end": 268,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 261,
											"end": 275,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 246,
											"end": 275,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 246,
											"end": 275,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 112,
											"end": 281,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 112,
											"end": 281,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 112,
											"end": 281,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 112,
											"end": 281,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 112,
											"end": 281,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 287,
											"end": 426,
											"name": "tag",
											"source": 12,
											"value": "347"
										},
										{
											"begin": 287,
											"end": 426,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 376,
											"end": 382,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 371,
											"end": 374,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 366,
											"end": 369,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 360,
											"end": 383,
											"name": "MCOPY",
											"source": 12
										},
										{
											"begin": 417,
											"end": 418,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 408,
											"end": 414,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 403,
											"end": 406,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 399,
											"end": 415,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 392,
											"end": 419,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 287,
											"end": 426,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 287,
											"end": 426,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 287,
											"end": 426,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 287,
											"end": 426,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 432,
											"end": 534,
											"name": "tag",
											"source": 12,
											"value": "348"
										},
										{
											"begin": 432,
											"end": 534,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 473,
											"end": 479,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 524,
											"end": 526,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 520,
											"end": 527,
											"name": "NOT",
											"source": 12
										},
										{
											"begin": 515,
											"end": 517,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 508,
											"end": 513,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 504,
											"end": 518,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 500,
											"end": 528,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 490,
											"end": 528,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 490,
											"end": 528,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 432,
											"end": 534,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 432,
											"end": 534,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 432,
											"end": 534,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 432,
											"end": 534,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 540,
											"end": 917,
											"name": "tag",
											"source": 12,
											"value": "349"
										},
										{
											"begin": 540,
											"end": 917,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 628,
											"end": 631,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 656,
											"end": 695,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "406"
										},
										{
											"begin": 689,
											"end": 694,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 656,
											"end": 695,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "345"
										},
										{
											"begin": 656,
											"end": 695,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 656,
											"end": 695,
											"name": "tag",
											"source": 12,
											"value": "406"
										},
										{
											"begin": 656,
											"end": 695,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 711,
											"end": 782,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "407"
										},
										{
											"begin": 775,
											"end": 781,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 770,
											"end": 773,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 711,
											"end": 782,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "346"
										},
										{
											"begin": 711,
											"end": 782,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 711,
											"end": 782,
											"name": "tag",
											"source": 12,
											"value": "407"
										},
										{
											"begin": 711,
											"end": 782,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 704,
											"end": 782,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 704,
											"end": 782,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 791,
											"end": 856,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "408"
										},
										{
											"begin": 849,
											"end": 855,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 844,
											"end": 847,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 837,
											"end": 841,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 830,
											"end": 835,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 826,
											"end": 842,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 791,
											"end": 856,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "347"
										},
										{
											"begin": 791,
											"end": 856,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 791,
											"end": 856,
											"name": "tag",
											"source": 12,
											"value": "408"
										},
										{
											"begin": 791,
											"end": 856,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 881,
											"end": 910,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "409"
										},
										{
											"begin": 903,
											"end": 909,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 881,
											"end": 910,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "348"
										},
										{
											"begin": 881,
											"end": 910,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 881,
											"end": 910,
											"name": "tag",
											"source": 12,
											"value": "409"
										},
										{
											"begin": 881,
											"end": 910,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 876,
											"end": 879,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 872,
											"end": 911,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 865,
											"end": 911,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 865,
											"end": 911,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 632,
											"end": 917,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 540,
											"end": 917,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 540,
											"end": 917,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 540,
											"end": 917,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 540,
											"end": 917,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 540,
											"end": 917,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "tag",
											"source": 12,
											"value": "43"
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1036,
											"end": 1040,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1074,
											"end": 1076,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1063,
											"end": 1072,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1059,
											"end": 1077,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1051,
											"end": 1077,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1051,
											"end": 1077,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1123,
											"end": 1132,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1117,
											"end": 1121,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1113,
											"end": 1133,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 1109,
											"end": 1110,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1098,
											"end": 1107,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 1094,
											"end": 1111,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1087,
											"end": 1134,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1151,
											"end": 1229,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "411"
										},
										{
											"begin": 1224,
											"end": 1228,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1215,
											"end": 1221,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 1151,
											"end": 1229,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "349"
										},
										{
											"begin": 1151,
											"end": 1229,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1151,
											"end": 1229,
											"name": "tag",
											"source": 12,
											"value": "411"
										},
										{
											"begin": 1151,
											"end": 1229,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1143,
											"end": 1229,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1143,
											"end": 1229,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 923,
											"end": 1236,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1242,
											"end": 1317,
											"name": "tag",
											"source": 12,
											"value": "350"
										},
										{
											"begin": 1242,
											"end": 1317,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1275,
											"end": 1281,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1308,
											"end": 1310,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1302,
											"end": 1311,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1292,
											"end": 1311,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1292,
											"end": 1311,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1242,
											"end": 1317,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1242,
											"end": 1317,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1323,
											"end": 1440,
											"name": "tag",
											"source": 12,
											"value": "351"
										},
										{
											"begin": 1323,
											"end": 1440,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1432,
											"end": 1433,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1429,
											"end": 1430,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1422,
											"end": 1434,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 1446,
											"end": 1563,
											"name": "tag",
											"source": 12,
											"value": "352"
										},
										{
											"begin": 1446,
											"end": 1563,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1555,
											"end": 1556,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1552,
											"end": 1553,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1545,
											"end": 1557,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "tag",
											"source": 12,
											"value": "353"
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1606,
											"end": 1613,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1646,
											"end": 1688,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1639,
											"end": 1644,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1635,
											"end": 1689,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 1624,
											"end": 1689,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1624,
											"end": 1689,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1569,
											"end": 1695,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "tag",
											"source": 12,
											"value": "354"
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1738,
											"end": 1745,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1767,
											"end": 1791,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "417"
										},
										{
											"begin": 1785,
											"end": 1790,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1767,
											"end": 1791,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "353"
										},
										{
											"begin": 1767,
											"end": 1791,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1767,
											"end": 1791,
											"name": "tag",
											"source": 12,
											"value": "417"
										},
										{
											"begin": 1767,
											"end": 1791,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1756,
											"end": 1791,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1756,
											"end": 1791,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1701,
											"end": 1797,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1803,
											"end": 1925,
											"name": "tag",
											"source": 12,
											"value": "355"
										},
										{
											"begin": 1803,
											"end": 1925,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1876,
											"end": 1900,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "419"
										},
										{
											"begin": 1894,
											"end": 1899,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1876,
											"end": 1900,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "354"
										},
										{
											"begin": 1876,
											"end": 1900,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1876,
											"end": 1900,
											"name": "tag",
											"source": 12,
											"value": "419"
										},
										{
											"begin": 1876,
											"end": 1900,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1869,
											"end": 1874,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1866,
											"end": 1901,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 1856,
											"end": 1919,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "420"
										},
										{
											"begin": 1856,
											"end": 1919,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1915,
											"end": 1916,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1912,
											"end": 1913,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1905,
											"end": 1917,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 1856,
											"end": 1919,
											"name": "tag",
											"source": 12,
											"value": "420"
										},
										{
											"begin": 1856,
											"end": 1919,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1803,
											"end": 1925,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1803,
											"end": 1925,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "tag",
											"source": 12,
											"value": "356"
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1977,
											"end": 1982,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2015,
											"end": 2021,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2002,
											"end": 2022,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 1993,
											"end": 2022,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1993,
											"end": 2022,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2031,
											"end": 2064,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "422"
										},
										{
											"begin": 2058,
											"end": 2063,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2031,
											"end": 2064,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "355"
										},
										{
											"begin": 2031,
											"end": 2064,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2031,
											"end": 2064,
											"name": "tag",
											"source": 12,
											"value": "422"
										},
										{
											"begin": 2031,
											"end": 2064,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1931,
											"end": 2070,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "tag",
											"source": 12,
											"value": "357"
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2113,
											"end": 2120,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2142,
											"end": 2147,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2131,
											"end": 2147,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2131,
											"end": 2147,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2076,
											"end": 2153,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2159,
											"end": 2281,
											"name": "tag",
											"source": 12,
											"value": "358"
										},
										{
											"begin": 2159,
											"end": 2281,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2232,
											"end": 2256,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "425"
										},
										{
											"begin": 2250,
											"end": 2255,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2232,
											"end": 2256,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "357"
										},
										{
											"begin": 2232,
											"end": 2256,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2232,
											"end": 2256,
											"name": "tag",
											"source": 12,
											"value": "425"
										},
										{
											"begin": 2232,
											"end": 2256,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2225,
											"end": 2230,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2222,
											"end": 2257,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 2212,
											"end": 2275,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "426"
										},
										{
											"begin": 2212,
											"end": 2275,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 2271,
											"end": 2272,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2268,
											"end": 2269,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2261,
											"end": 2273,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 2212,
											"end": 2275,
											"name": "tag",
											"source": 12,
											"value": "426"
										},
										{
											"begin": 2212,
											"end": 2275,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2159,
											"end": 2281,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2159,
											"end": 2281,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "tag",
											"source": 12,
											"value": "359"
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2333,
											"end": 2338,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2371,
											"end": 2377,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2358,
											"end": 2378,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 2349,
											"end": 2378,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2349,
											"end": 2378,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2387,
											"end": 2420,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "428"
										},
										{
											"begin": 2414,
											"end": 2419,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2387,
											"end": 2420,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "358"
										},
										{
											"begin": 2387,
											"end": 2420,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2387,
											"end": 2420,
											"name": "tag",
											"source": 12,
											"value": "428"
										},
										{
											"begin": 2387,
											"end": 2420,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2287,
											"end": 2426,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "tag",
											"source": 12,
											"value": "46"
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2500,
											"end": 2506,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2508,
											"end": 2514,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2557,
											"end": 2559,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 2545,
											"end": 2554,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 2536,
											"end": 2543,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 2532,
											"end": 2555,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 2528,
											"end": 2560,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "430"
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 2563,
											"end": 2642,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "431"
										},
										{
											"begin": 2563,
											"end": 2642,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "351"
										},
										{
											"begin": 2563,
											"end": 2642,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2563,
											"end": 2642,
											"name": "tag",
											"source": 12,
											"value": "431"
										},
										{
											"begin": 2563,
											"end": 2642,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "tag",
											"source": 12,
											"value": "430"
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2683,
											"end": 2684,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2708,
											"end": 2761,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "432"
										},
										{
											"begin": 2753,
											"end": 2760,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 2744,
											"end": 2750,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2733,
											"end": 2742,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 2729,
											"end": 2751,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2708,
											"end": 2761,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "356"
										},
										{
											"begin": 2708,
											"end": 2761,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2708,
											"end": 2761,
											"name": "tag",
											"source": 12,
											"value": "432"
										},
										{
											"begin": 2708,
											"end": 2761,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2698,
											"end": 2761,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 2698,
											"end": 2761,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2654,
											"end": 2771,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2810,
											"end": 2812,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 2836,
											"end": 2889,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "433"
										},
										{
											"begin": 2881,
											"end": 2888,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 2872,
											"end": 2878,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2861,
											"end": 2870,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 2857,
											"end": 2879,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2836,
											"end": 2889,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "359"
										},
										{
											"begin": 2836,
											"end": 2889,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2836,
											"end": 2889,
											"name": "tag",
											"source": 12,
											"value": "433"
										},
										{
											"begin": 2836,
											"end": 2889,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2826,
											"end": 2889,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2826,
											"end": 2889,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2781,
											"end": 2899,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2432,
											"end": 2906,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "tag",
											"source": 12,
											"value": "360"
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2946,
											"end": 2953,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2989,
											"end": 2994,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2982,
											"end": 2995,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 2975,
											"end": 2996,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 2964,
											"end": 2996,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2964,
											"end": 2996,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2912,
											"end": 3002,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3008,
											"end": 3117,
											"name": "tag",
											"source": 12,
											"value": "361"
										},
										{
											"begin": 3008,
											"end": 3117,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3089,
											"end": 3110,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "436"
										},
										{
											"begin": 3104,
											"end": 3109,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3089,
											"end": 3110,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "360"
										},
										{
											"begin": 3089,
											"end": 3110,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3089,
											"end": 3110,
											"name": "tag",
											"source": 12,
											"value": "436"
										},
										{
											"begin": 3089,
											"end": 3110,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3084,
											"end": 3087,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3077,
											"end": 3111,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 3008,
											"end": 3117,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3008,
											"end": 3117,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3008,
											"end": 3117,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "tag",
											"source": 12,
											"value": "49"
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3210,
											"end": 3214,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3248,
											"end": 3250,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 3237,
											"end": 3246,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3233,
											"end": 3251,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3225,
											"end": 3251,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3225,
											"end": 3251,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3261,
											"end": 3326,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "438"
										},
										{
											"begin": 3323,
											"end": 3324,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3312,
											"end": 3321,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 3308,
											"end": 3325,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3299,
											"end": 3305,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 3261,
											"end": 3326,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "361"
										},
										{
											"begin": 3261,
											"end": 3326,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3261,
											"end": 3326,
											"name": "tag",
											"source": 12,
											"value": "438"
										},
										{
											"begin": 3261,
											"end": 3326,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3123,
											"end": 3333,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3339,
											"end": 3457,
											"name": "tag",
											"source": 12,
											"value": "362"
										},
										{
											"begin": 3339,
											"end": 3457,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3426,
											"end": 3450,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "440"
										},
										{
											"begin": 3444,
											"end": 3449,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3426,
											"end": 3450,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "357"
										},
										{
											"begin": 3426,
											"end": 3450,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3426,
											"end": 3450,
											"name": "tag",
											"source": 12,
											"value": "440"
										},
										{
											"begin": 3426,
											"end": 3450,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3421,
											"end": 3424,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3414,
											"end": 3451,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 3339,
											"end": 3457,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3339,
											"end": 3457,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3339,
											"end": 3457,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "tag",
											"source": 12,
											"value": "53"
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3556,
											"end": 3560,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3594,
											"end": 3596,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 3583,
											"end": 3592,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3579,
											"end": 3597,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3571,
											"end": 3597,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3571,
											"end": 3597,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3607,
											"end": 3678,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "442"
										},
										{
											"begin": 3675,
											"end": 3676,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3664,
											"end": 3673,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 3660,
											"end": 3677,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3651,
											"end": 3657,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 3607,
											"end": 3678,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "362"
										},
										{
											"begin": 3607,
											"end": 3678,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3607,
											"end": 3678,
											"name": "tag",
											"source": 12,
											"value": "442"
										},
										{
											"begin": 3607,
											"end": 3678,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3463,
											"end": 3685,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "tag",
											"source": 12,
											"value": "56"
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3768,
											"end": 3774,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3776,
											"end": 3782,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 3784,
											"end": 3790,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3833,
											"end": 3835,
											"name": "PUSH",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 3821,
											"end": 3830,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 3812,
											"end": 3819,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 3808,
											"end": 3831,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 3804,
											"end": 3836,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 3801,
											"end": 3920,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 3801,
											"end": 3920,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "444"
										},
										{
											"begin": 3801,
											"end": 3920,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 3839,
											"end": 3918,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "445"
										},
										{
											"begin": 3839,
											"end": 3918,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "351"
										},
										{
											"begin": 3839,
											"end": 3918,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3839,
											"end": 3918,
											"name": "tag",
											"source": 12,
											"value": "445"
										},
										{
											"begin": 3839,
											"end": 3918,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3801,
											"end": 3920,
											"name": "tag",
											"source": 12,
											"value": "444"
										},
										{
											"begin": 3801,
											"end": 3920,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3959,
											"end": 3960,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3984,
											"end": 4037,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "446"
										},
										{
											"begin": 4029,
											"end": 4036,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 4020,
											"end": 4026,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4009,
											"end": 4018,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 4005,
											"end": 4027,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3984,
											"end": 4037,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "356"
										},
										{
											"begin": 3984,
											"end": 4037,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3984,
											"end": 4037,
											"name": "tag",
											"source": 12,
											"value": "446"
										},
										{
											"begin": 3984,
											"end": 4037,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3974,
											"end": 4037,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 3974,
											"end": 4037,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3930,
											"end": 4047,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4086,
											"end": 4088,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 4112,
											"end": 4165,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "447"
										},
										{
											"begin": 4157,
											"end": 4164,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 4148,
											"end": 4154,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4137,
											"end": 4146,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 4133,
											"end": 4155,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4112,
											"end": 4165,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "356"
										},
										{
											"begin": 4112,
											"end": 4165,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4112,
											"end": 4165,
											"name": "tag",
											"source": 12,
											"value": "447"
										},
										{
											"begin": 4112,
											"end": 4165,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4102,
											"end": 4165,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 4102,
											"end": 4165,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4057,
											"end": 4175,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4214,
											"end": 4216,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 4240,
											"end": 4293,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "448"
										},
										{
											"begin": 4285,
											"end": 4292,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 4276,
											"end": 4282,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4265,
											"end": 4274,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 4261,
											"end": 4283,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4240,
											"end": 4293,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "359"
										},
										{
											"begin": 4240,
											"end": 4293,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4240,
											"end": 4293,
											"name": "tag",
											"source": 12,
											"value": "448"
										},
										{
											"begin": 4240,
											"end": 4293,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4230,
											"end": 4293,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 4230,
											"end": 4293,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4185,
											"end": 4303,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 3691,
											"end": 4310,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4316,
											"end": 4402,
											"name": "tag",
											"source": 12,
											"value": "363"
										},
										{
											"begin": 4316,
											"end": 4402,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4351,
											"end": 4358,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4391,
											"end": 4395,
											"name": "PUSH",
											"source": 12,
											"value": "FF"
										},
										{
											"begin": 4384,
											"end": 4389,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4380,
											"end": 4396,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 4369,
											"end": 4396,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4369,
											"end": 4396,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4316,
											"end": 4402,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 4316,
											"end": 4402,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4316,
											"end": 4402,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4316,
											"end": 4402,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4408,
											"end": 4520,
											"name": "tag",
											"source": 12,
											"value": "364"
										},
										{
											"begin": 4408,
											"end": 4520,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4491,
											"end": 4513,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "451"
										},
										{
											"begin": 4507,
											"end": 4512,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4491,
											"end": 4513,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "363"
										},
										{
											"begin": 4491,
											"end": 4513,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4491,
											"end": 4513,
											"name": "tag",
											"source": 12,
											"value": "451"
										},
										{
											"begin": 4491,
											"end": 4513,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4486,
											"end": 4489,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4479,
											"end": 4514,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 4408,
											"end": 4520,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4408,
											"end": 4520,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4408,
											"end": 4520,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4526,
											"end": 4740,
											"name": "tag",
											"source": 12,
											"value": "62"
										},
										{
											"begin": 4526,
											"end": 4740,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4615,
											"end": 4619,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4653,
											"end": 4655,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 4642,
											"end": 4651,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4638,
											"end": 4656,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4630,
											"end": 4656,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4630,
											"end": 4656,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4666,
											"end": 4733,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "453"
										},
										{
											"begin": 4730,
											"end": 4731,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4719,
											"end": 4728,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 4715,
											"end": 4732,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4706,
											"end": 4712,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 4666,
											"end": 4733,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "364"
										},
										{
											"begin": 4666,
											"end": 4733,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4666,
											"end": 4733,
											"name": "tag",
											"source": 12,
											"value": "453"
										},
										{
											"begin": 4666,
											"end": 4733,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4526,
											"end": 4740,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 4526,
											"end": 4740,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 4526,
											"end": 4740,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4526,
											"end": 4740,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4526,
											"end": 4740,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4746,
											"end": 5075,
											"name": "tag",
											"source": 12,
											"value": "67"
										},
										{
											"begin": 4746,
											"end": 5075,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4805,
											"end": 4811,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4854,
											"end": 4856,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 4842,
											"end": 4851,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4833,
											"end": 4840,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 4829,
											"end": 4852,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 4825,
											"end": 4857,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 4822,
											"end": 4941,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 4822,
											"end": 4941,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "455"
										},
										{
											"begin": 4822,
											"end": 4941,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 4860,
											"end": 4939,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "456"
										},
										{
											"begin": 4860,
											"end": 4939,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "351"
										},
										{
											"begin": 4860,
											"end": 4939,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4860,
											"end": 4939,
											"name": "tag",
											"source": 12,
											"value": "456"
										},
										{
											"begin": 4860,
											"end": 4939,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4822,
											"end": 4941,
											"name": "tag",
											"source": 12,
											"value": "455"
										},
										{
											"begin": 4822,
											"end": 4941,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4980,
											"end": 4981,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5005,
											"end": 5058,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "457"
										},
										{
											"begin": 5050,
											"end": 5057,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 5041,
											"end": 5047,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5030,
											"end": 5039,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 5026,
											"end": 5048,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5005,
											"end": 5058,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "359"
										},
										{
											"begin": 5005,
											"end": 5058,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5005,
											"end": 5058,
											"name": "tag",
											"source": 12,
											"value": "457"
										},
										{
											"begin": 5005,
											"end": 5058,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4995,
											"end": 5058,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 4995,
											"end": 5058,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4951,
											"end": 5068,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4746,
											"end": 5075,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 4746,
											"end": 5075,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 4746,
											"end": 5075,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4746,
											"end": 5075,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4746,
											"end": 5075,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5081,
											"end": 5198,
											"name": "tag",
											"source": 12,
											"value": "365"
										},
										{
											"begin": 5081,
											"end": 5198,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5190,
											"end": 5191,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5187,
											"end": 5188,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 5180,
											"end": 5192,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 5204,
											"end": 5384,
											"name": "tag",
											"source": 12,
											"value": "366"
										},
										{
											"begin": 5204,
											"end": 5384,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5252,
											"end": 5329,
											"name": "PUSH",
											"source": 12,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5249,
											"end": 5250,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5242,
											"end": 5330,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 5349,
											"end": 5353,
											"name": "PUSH",
											"source": 12,
											"value": "41"
										},
										{
											"begin": 5346,
											"end": 5347,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 5339,
											"end": 5354,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 5373,
											"end": 5377,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 5370,
											"end": 5371,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5363,
											"end": 5378,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 5390,
											"end": 5671,
											"name": "tag",
											"source": 12,
											"value": "367"
										},
										{
											"begin": 5390,
											"end": 5671,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5473,
											"end": 5500,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "461"
										},
										{
											"begin": 5495,
											"end": 5499,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5473,
											"end": 5500,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "348"
										},
										{
											"begin": 5473,
											"end": 5500,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5473,
											"end": 5500,
											"name": "tag",
											"source": 12,
											"value": "461"
										},
										{
											"begin": 5473,
											"end": 5500,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5465,
											"end": 5471,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5461,
											"end": 5501,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5603,
											"end": 5609,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5591,
											"end": 5601,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5588,
											"end": 5610,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 5567,
											"end": 5585,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5555,
											"end": 5565,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5552,
											"end": 5586,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 5549,
											"end": 5611,
											"name": "OR",
											"source": 12
										},
										{
											"begin": 5546,
											"end": 5634,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 5546,
											"end": 5634,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "462"
										},
										{
											"begin": 5546,
											"end": 5634,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 5614,
											"end": 5632,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "463"
										},
										{
											"begin": 5614,
											"end": 5632,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "366"
										},
										{
											"begin": 5614,
											"end": 5632,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5614,
											"end": 5632,
											"name": "tag",
											"source": 12,
											"value": "463"
										},
										{
											"begin": 5614,
											"end": 5632,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5546,
											"end": 5634,
											"name": "tag",
											"source": 12,
											"value": "462"
										},
										{
											"begin": 5546,
											"end": 5634,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5654,
											"end": 5664,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 5650,
											"end": 5652,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 5643,
											"end": 5665,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 5433,
											"end": 5671,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5390,
											"end": 5671,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5390,
											"end": 5671,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5390,
											"end": 5671,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5677,
											"end": 5806,
											"name": "tag",
											"source": 12,
											"value": "368"
										},
										{
											"begin": 5677,
											"end": 5806,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5711,
											"end": 5717,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5738,
											"end": 5758,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "465"
										},
										{
											"begin": 5738,
											"end": 5758,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "350"
										},
										{
											"begin": 5738,
											"end": 5758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5738,
											"end": 5758,
											"name": "tag",
											"source": 12,
											"value": "465"
										},
										{
											"begin": 5738,
											"end": 5758,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5728,
											"end": 5758,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5728,
											"end": 5758,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5767,
											"end": 5800,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "466"
										},
										{
											"begin": 5795,
											"end": 5799,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5787,
											"end": 5793,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5767,
											"end": 5800,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "367"
										},
										{
											"begin": 5767,
											"end": 5800,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5767,
											"end": 5800,
											"name": "tag",
											"source": 12,
											"value": "466"
										},
										{
											"begin": 5767,
											"end": 5800,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5677,
											"end": 5806,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 5677,
											"end": 5806,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5677,
											"end": 5806,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5677,
											"end": 5806,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5812,
											"end": 6123,
											"name": "tag",
											"source": 12,
											"value": "369"
										},
										{
											"begin": 5812,
											"end": 6123,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5889,
											"end": 5893,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5979,
											"end": 5997,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5971,
											"end": 5977,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5968,
											"end": 5998,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 5965,
											"end": 6021,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 5965,
											"end": 6021,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "468"
										},
										{
											"begin": 5965,
											"end": 6021,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 6001,
											"end": 6019,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "469"
										},
										{
											"begin": 6001,
											"end": 6019,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "366"
										},
										{
											"begin": 6001,
											"end": 6019,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6001,
											"end": 6019,
											"name": "tag",
											"source": 12,
											"value": "469"
										},
										{
											"begin": 6001,
											"end": 6019,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5965,
											"end": 6021,
											"name": "tag",
											"source": 12,
											"value": "468"
										},
										{
											"begin": 5965,
											"end": 6021,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6051,
											"end": 6055,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 6043,
											"end": 6049,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6039,
											"end": 6056,
											"name": "MUL",
											"source": 12
										},
										{
											"begin": 6031,
											"end": 6056,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6031,
											"end": 6056,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6111,
											"end": 6115,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 6105,
											"end": 6109,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 6101,
											"end": 6116,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6093,
											"end": 6116,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6093,
											"end": 6116,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5812,
											"end": 6123,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 5812,
											"end": 6123,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5812,
											"end": 6123,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5812,
											"end": 6123,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6129,
											"end": 6246,
											"name": "tag",
											"source": 12,
											"value": "370"
										},
										{
											"begin": 6129,
											"end": 6246,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6238,
											"end": 6239,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6235,
											"end": 6236,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 6228,
											"end": 6240,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 6269,
											"end": 6979,
											"name": "tag",
											"source": 12,
											"value": "371"
										},
										{
											"begin": 6269,
											"end": 6979,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6365,
											"end": 6370,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6390,
											"end": 6471,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "472"
										},
										{
											"begin": 6406,
											"end": 6470,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "473"
										},
										{
											"begin": 6463,
											"end": 6469,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 6406,
											"end": 6470,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "369"
										},
										{
											"begin": 6406,
											"end": 6470,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6406,
											"end": 6470,
											"name": "tag",
											"source": 12,
											"value": "473"
										},
										{
											"begin": 6406,
											"end": 6470,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6390,
											"end": 6471,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "368"
										},
										{
											"begin": 6390,
											"end": 6471,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6390,
											"end": 6471,
											"name": "tag",
											"source": 12,
											"value": "472"
										},
										{
											"begin": 6390,
											"end": 6471,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6381,
											"end": 6471,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6381,
											"end": 6471,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6491,
											"end": 6496,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 6520,
											"end": 6526,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 6513,
											"end": 6518,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6506,
											"end": 6527,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 6554,
											"end": 6558,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 6547,
											"end": 6552,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6543,
											"end": 6559,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6536,
											"end": 6559,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6536,
											"end": 6559,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6607,
											"end": 6611,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 6599,
											"end": 6605,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 6595,
											"end": 6612,
											"name": "MUL",
											"source": 12
										},
										{
											"begin": 6587,
											"end": 6593,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 6583,
											"end": 6613,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6636,
											"end": 6639,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 6628,
											"end": 6634,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 6625,
											"end": 6640,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 6622,
											"end": 6744,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 6622,
											"end": 6744,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "474"
										},
										{
											"begin": 6622,
											"end": 6744,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 6655,
											"end": 6734,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "475"
										},
										{
											"begin": 6655,
											"end": 6734,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "370"
										},
										{
											"begin": 6655,
											"end": 6734,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6655,
											"end": 6734,
											"name": "tag",
											"source": 12,
											"value": "475"
										},
										{
											"begin": 6655,
											"end": 6734,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6622,
											"end": 6744,
											"name": "tag",
											"source": 12,
											"value": "474"
										},
										{
											"begin": 6622,
											"end": 6744,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6770,
											"end": 6776,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 6753,
											"end": 6973,
											"name": "tag",
											"source": 12,
											"value": "476"
										},
										{
											"begin": 6753,
											"end": 6973,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6787,
											"end": 6793,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 6782,
											"end": 6785,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 6779,
											"end": 6794,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 6753,
											"end": 6973,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 6753,
											"end": 6973,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "478"
										},
										{
											"begin": 6753,
											"end": 6973,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 6862,
											"end": 6865,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 6891,
											"end": 6928,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "479"
										},
										{
											"begin": 6924,
											"end": 6927,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 6912,
											"end": 6922,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6891,
											"end": 6928,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "359"
										},
										{
											"begin": 6891,
											"end": 6928,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6891,
											"end": 6928,
											"name": "tag",
											"source": 12,
											"value": "479"
										},
										{
											"begin": 6891,
											"end": 6928,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6886,
											"end": 6889,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 6879,
											"end": 6929,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 6958,
											"end": 6962,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 6953,
											"end": 6956,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 6949,
											"end": 6963,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6942,
											"end": 6963,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 6942,
											"end": 6963,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6829,
											"end": 6973,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6813,
											"end": 6817,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 6808,
											"end": 6811,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 6804,
											"end": 6818,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6797,
											"end": 6818,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6797,
											"end": 6818,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6753,
											"end": 6973,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "476"
										},
										{
											"begin": 6753,
											"end": 6973,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6753,
											"end": 6973,
											"name": "tag",
											"source": 12,
											"value": "478"
										},
										{
											"begin": 6753,
											"end": 6973,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6757,
											"end": 6778,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6371,
											"end": 6979,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6371,
											"end": 6979,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6269,
											"end": 6979,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 6269,
											"end": 6979,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 6269,
											"end": 6979,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6269,
											"end": 6979,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6269,
											"end": 6979,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6269,
											"end": 6979,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7002,
											"end": 7372,
											"name": "tag",
											"source": 12,
											"value": "372"
										},
										{
											"begin": 7002,
											"end": 7372,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7073,
											"end": 7078,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7122,
											"end": 7125,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7115,
											"end": 7119,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 7107,
											"end": 7113,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 7103,
											"end": 7120,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7099,
											"end": 7126,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 7089,
											"end": 7211,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "481"
										},
										{
											"begin": 7089,
											"end": 7211,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 7130,
											"end": 7209,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "482"
										},
										{
											"begin": 7130,
											"end": 7209,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "365"
										},
										{
											"begin": 7130,
											"end": 7209,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7130,
											"end": 7209,
											"name": "tag",
											"source": 12,
											"value": "482"
										},
										{
											"begin": 7130,
											"end": 7209,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7089,
											"end": 7211,
											"name": "tag",
											"source": 12,
											"value": "481"
										},
										{
											"begin": 7089,
											"end": 7211,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7247,
											"end": 7253,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 7234,
											"end": 7254,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 7272,
											"end": 7366,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "483"
										},
										{
											"begin": 7362,
											"end": 7365,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 7354,
											"end": 7360,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7347,
											"end": 7351,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 7339,
											"end": 7345,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 7335,
											"end": 7352,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7272,
											"end": 7366,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "371"
										},
										{
											"begin": 7272,
											"end": 7366,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7272,
											"end": 7366,
											"name": "tag",
											"source": 12,
											"value": "483"
										},
										{
											"begin": 7272,
											"end": 7366,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7263,
											"end": 7366,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 7263,
											"end": 7366,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7079,
											"end": 7372,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7002,
											"end": 7372,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 7002,
											"end": 7372,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 7002,
											"end": 7372,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7002,
											"end": 7372,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7002,
											"end": 7372,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7378,
											"end": 8207,
											"name": "tag",
											"source": 12,
											"value": "72"
										},
										{
											"begin": 7378,
											"end": 8207,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7480,
											"end": 7486,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7488,
											"end": 7494,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 7496,
											"end": 7502,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7545,
											"end": 7547,
											"name": "PUSH",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 7533,
											"end": 7542,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 7524,
											"end": 7531,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 7520,
											"end": 7543,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 7516,
											"end": 7548,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 7513,
											"end": 7632,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 7513,
											"end": 7632,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "485"
										},
										{
											"begin": 7513,
											"end": 7632,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 7551,
											"end": 7630,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "486"
										},
										{
											"begin": 7551,
											"end": 7630,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "351"
										},
										{
											"begin": 7551,
											"end": 7630,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7551,
											"end": 7630,
											"name": "tag",
											"source": 12,
											"value": "486"
										},
										{
											"begin": 7551,
											"end": 7630,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7513,
											"end": 7632,
											"name": "tag",
											"source": 12,
											"value": "485"
										},
										{
											"begin": 7513,
											"end": 7632,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7671,
											"end": 7672,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7696,
											"end": 7749,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "487"
										},
										{
											"begin": 7741,
											"end": 7748,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 7732,
											"end": 7738,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7721,
											"end": 7730,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 7717,
											"end": 7739,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7696,
											"end": 7749,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "359"
										},
										{
											"begin": 7696,
											"end": 7749,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7696,
											"end": 7749,
											"name": "tag",
											"source": 12,
											"value": "487"
										},
										{
											"begin": 7696,
											"end": 7749,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7686,
											"end": 7749,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 7686,
											"end": 7749,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7642,
											"end": 7759,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7826,
											"end": 7828,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 7815,
											"end": 7824,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 7811,
											"end": 7829,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7798,
											"end": 7830,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 7857,
											"end": 7875,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7849,
											"end": 7855,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 7846,
											"end": 7876,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 7843,
											"end": 7960,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 7843,
											"end": 7960,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "488"
										},
										{
											"begin": 7843,
											"end": 7960,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 7879,
											"end": 7958,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "489"
										},
										{
											"begin": 7879,
											"end": 7958,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "352"
										},
										{
											"begin": 7879,
											"end": 7958,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7879,
											"end": 7958,
											"name": "tag",
											"source": 12,
											"value": "489"
										},
										{
											"begin": 7879,
											"end": 7958,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7843,
											"end": 7960,
											"name": "tag",
											"source": 12,
											"value": "488"
										},
										{
											"begin": 7843,
											"end": 7960,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7984,
											"end": 8062,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "490"
										},
										{
											"begin": 8054,
											"end": 8061,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 8045,
											"end": 8051,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8034,
											"end": 8043,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 8030,
											"end": 8052,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7984,
											"end": 8062,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "372"
										},
										{
											"begin": 7984,
											"end": 8062,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7984,
											"end": 8062,
											"name": "tag",
											"source": 12,
											"value": "490"
										},
										{
											"begin": 7984,
											"end": 8062,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7974,
											"end": 8062,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 7974,
											"end": 8062,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7769,
											"end": 8072,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8111,
											"end": 8113,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 8137,
											"end": 8190,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "491"
										},
										{
											"begin": 8182,
											"end": 8189,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 8173,
											"end": 8179,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8162,
											"end": 8171,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 8158,
											"end": 8180,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8137,
											"end": 8190,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "359"
										},
										{
											"begin": 8137,
											"end": 8190,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8137,
											"end": 8190,
											"name": "tag",
											"source": 12,
											"value": "491"
										},
										{
											"begin": 8137,
											"end": 8190,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8127,
											"end": 8190,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 8127,
											"end": 8190,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8082,
											"end": 8200,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7378,
											"end": 8207,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 7378,
											"end": 8207,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7378,
											"end": 8207,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 7378,
											"end": 8207,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7378,
											"end": 8207,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 7378,
											"end": 8207,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8213,
											"end": 8687,
											"name": "tag",
											"source": 12,
											"value": "76"
										},
										{
											"begin": 8213,
											"end": 8687,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8281,
											"end": 8287,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 8289,
											"end": 8295,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 8338,
											"end": 8340,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 8326,
											"end": 8335,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 8317,
											"end": 8324,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 8313,
											"end": 8336,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 8309,
											"end": 8341,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 8306,
											"end": 8425,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 8306,
											"end": 8425,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "493"
										},
										{
											"begin": 8306,
											"end": 8425,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 8344,
											"end": 8423,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "494"
										},
										{
											"begin": 8344,
											"end": 8423,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "351"
										},
										{
											"begin": 8344,
											"end": 8423,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8344,
											"end": 8423,
											"name": "tag",
											"source": 12,
											"value": "494"
										},
										{
											"begin": 8344,
											"end": 8423,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8306,
											"end": 8425,
											"name": "tag",
											"source": 12,
											"value": "493"
										},
										{
											"begin": 8306,
											"end": 8425,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8464,
											"end": 8465,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 8489,
											"end": 8542,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "495"
										},
										{
											"begin": 8534,
											"end": 8541,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 8525,
											"end": 8531,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8514,
											"end": 8523,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 8510,
											"end": 8532,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8489,
											"end": 8542,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "359"
										},
										{
											"begin": 8489,
											"end": 8542,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8489,
											"end": 8542,
											"name": "tag",
											"source": 12,
											"value": "495"
										},
										{
											"begin": 8489,
											"end": 8542,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8479,
											"end": 8542,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 8479,
											"end": 8542,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8435,
											"end": 8552,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8591,
											"end": 8593,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 8617,
											"end": 8670,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "496"
										},
										{
											"begin": 8662,
											"end": 8669,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 8653,
											"end": 8659,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8642,
											"end": 8651,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 8638,
											"end": 8660,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8617,
											"end": 8670,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "356"
										},
										{
											"begin": 8617,
											"end": 8670,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8617,
											"end": 8670,
											"name": "tag",
											"source": 12,
											"value": "496"
										},
										{
											"begin": 8617,
											"end": 8670,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8607,
											"end": 8670,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 8607,
											"end": 8670,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8562,
											"end": 8680,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8213,
											"end": 8687,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 8213,
											"end": 8687,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8213,
											"end": 8687,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 8213,
											"end": 8687,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8213,
											"end": 8687,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8213,
											"end": 8687,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8693,
											"end": 9022,
											"name": "tag",
											"source": 12,
											"value": "87"
										},
										{
											"begin": 8693,
											"end": 9022,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8752,
											"end": 8758,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 8801,
											"end": 8803,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 8789,
											"end": 8798,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8780,
											"end": 8787,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 8776,
											"end": 8799,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 8772,
											"end": 8804,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 8769,
											"end": 8888,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 8769,
											"end": 8888,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "498"
										},
										{
											"begin": 8769,
											"end": 8888,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 8807,
											"end": 8886,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "499"
										},
										{
											"begin": 8807,
											"end": 8886,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "351"
										},
										{
											"begin": 8807,
											"end": 8886,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8807,
											"end": 8886,
											"name": "tag",
											"source": 12,
											"value": "499"
										},
										{
											"begin": 8807,
											"end": 8886,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8769,
											"end": 8888,
											"name": "tag",
											"source": 12,
											"value": "498"
										},
										{
											"begin": 8769,
											"end": 8888,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8927,
											"end": 8928,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 8952,
											"end": 9005,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "500"
										},
										{
											"begin": 8997,
											"end": 9004,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 8988,
											"end": 8994,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8977,
											"end": 8986,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 8973,
											"end": 8995,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8952,
											"end": 9005,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "356"
										},
										{
											"begin": 8952,
											"end": 9005,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8952,
											"end": 9005,
											"name": "tag",
											"source": 12,
											"value": "500"
										},
										{
											"begin": 8952,
											"end": 9005,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8942,
											"end": 9005,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 8942,
											"end": 9005,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8898,
											"end": 9015,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8693,
											"end": 9022,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 8693,
											"end": 9022,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 8693,
											"end": 9022,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8693,
											"end": 9022,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8693,
											"end": 9022,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9028,
											"end": 9146,
											"name": "tag",
											"source": 12,
											"value": "373"
										},
										{
											"begin": 9028,
											"end": 9146,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9115,
											"end": 9139,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "502"
										},
										{
											"begin": 9133,
											"end": 9138,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 9115,
											"end": 9139,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "354"
										},
										{
											"begin": 9115,
											"end": 9139,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9115,
											"end": 9139,
											"name": "tag",
											"source": 12,
											"value": "502"
										},
										{
											"begin": 9115,
											"end": 9139,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9110,
											"end": 9113,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 9103,
											"end": 9140,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 9028,
											"end": 9146,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9028,
											"end": 9146,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9028,
											"end": 9146,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9152,
											"end": 9374,
											"name": "tag",
											"source": 12,
											"value": "100"
										},
										{
											"begin": 9152,
											"end": 9374,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9245,
											"end": 9249,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 9283,
											"end": 9285,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 9272,
											"end": 9281,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 9268,
											"end": 9286,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9260,
											"end": 9286,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 9260,
											"end": 9286,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9296,
											"end": 9367,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "504"
										},
										{
											"begin": 9364,
											"end": 9365,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 9353,
											"end": 9362,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 9349,
											"end": 9366,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9340,
											"end": 9346,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 9296,
											"end": 9367,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "373"
										},
										{
											"begin": 9296,
											"end": 9367,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9296,
											"end": 9367,
											"name": "tag",
											"source": 12,
											"value": "504"
										},
										{
											"begin": 9296,
											"end": 9367,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9152,
											"end": 9374,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 9152,
											"end": 9374,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 9152,
											"end": 9374,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9152,
											"end": 9374,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9152,
											"end": 9374,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9380,
											"end": 9999,
											"name": "tag",
											"source": 12,
											"value": "105"
										},
										{
											"begin": 9380,
											"end": 9999,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9457,
											"end": 9463,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 9465,
											"end": 9471,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 9473,
											"end": 9479,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 9522,
											"end": 9524,
											"name": "PUSH",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 9510,
											"end": 9519,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 9501,
											"end": 9508,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 9497,
											"end": 9520,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 9493,
											"end": 9525,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 9490,
											"end": 9609,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 9490,
											"end": 9609,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "506"
										},
										{
											"begin": 9490,
											"end": 9609,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 9528,
											"end": 9607,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "507"
										},
										{
											"begin": 9528,
											"end": 9607,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "351"
										},
										{
											"begin": 9528,
											"end": 9607,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9528,
											"end": 9607,
											"name": "tag",
											"source": 12,
											"value": "507"
										},
										{
											"begin": 9528,
											"end": 9607,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9490,
											"end": 9609,
											"name": "tag",
											"source": 12,
											"value": "506"
										},
										{
											"begin": 9490,
											"end": 9609,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9648,
											"end": 9649,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 9673,
											"end": 9726,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "508"
										},
										{
											"begin": 9718,
											"end": 9725,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 9709,
											"end": 9715,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 9698,
											"end": 9707,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 9694,
											"end": 9716,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9673,
											"end": 9726,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "359"
										},
										{
											"begin": 9673,
											"end": 9726,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9673,
											"end": 9726,
											"name": "tag",
											"source": 12,
											"value": "508"
										},
										{
											"begin": 9673,
											"end": 9726,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9663,
											"end": 9726,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 9663,
											"end": 9726,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9619,
											"end": 9736,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9775,
											"end": 9777,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 9801,
											"end": 9854,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "509"
										},
										{
											"begin": 9846,
											"end": 9853,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 9837,
											"end": 9843,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 9826,
											"end": 9835,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 9822,
											"end": 9844,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9801,
											"end": 9854,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "356"
										},
										{
											"begin": 9801,
											"end": 9854,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9801,
											"end": 9854,
											"name": "tag",
											"source": 12,
											"value": "509"
										},
										{
											"begin": 9801,
											"end": 9854,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9791,
											"end": 9854,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 9791,
											"end": 9854,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9746,
											"end": 9864,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9903,
											"end": 9905,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 9929,
											"end": 9982,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "510"
										},
										{
											"begin": 9974,
											"end": 9981,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 9965,
											"end": 9971,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 9954,
											"end": 9963,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 9950,
											"end": 9972,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9929,
											"end": 9982,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "359"
										},
										{
											"begin": 9929,
											"end": 9982,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9929,
											"end": 9982,
											"name": "tag",
											"source": 12,
											"value": "510"
										},
										{
											"begin": 9929,
											"end": 9982,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9919,
											"end": 9982,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 9919,
											"end": 9982,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9874,
											"end": 9992,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9380,
											"end": 9999,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 9380,
											"end": 9999,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9380,
											"end": 9999,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 9380,
											"end": 9999,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9380,
											"end": 9999,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 9380,
											"end": 9999,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10005,
											"end": 10337,
											"name": "tag",
											"source": 12,
											"value": "121"
										},
										{
											"begin": 10005,
											"end": 10337,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10126,
											"end": 10130,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 10164,
											"end": 10166,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 10153,
											"end": 10162,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 10149,
											"end": 10167,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 10141,
											"end": 10167,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 10141,
											"end": 10167,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10177,
											"end": 10248,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "512"
										},
										{
											"begin": 10245,
											"end": 10246,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 10234,
											"end": 10243,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 10230,
											"end": 10247,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 10221,
											"end": 10227,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 10177,
											"end": 10248,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "362"
										},
										{
											"begin": 10177,
											"end": 10248,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10177,
											"end": 10248,
											"name": "tag",
											"source": 12,
											"value": "512"
										},
										{
											"begin": 10177,
											"end": 10248,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10258,
											"end": 10330,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "513"
										},
										{
											"begin": 10326,
											"end": 10328,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 10315,
											"end": 10324,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 10311,
											"end": 10329,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 10302,
											"end": 10308,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 10258,
											"end": 10330,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "362"
										},
										{
											"begin": 10258,
											"end": 10330,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10258,
											"end": 10330,
											"name": "tag",
											"source": 12,
											"value": "513"
										},
										{
											"begin": 10258,
											"end": 10330,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10005,
											"end": 10337,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 10005,
											"end": 10337,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 10005,
											"end": 10337,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10005,
											"end": 10337,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10005,
											"end": 10337,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10005,
											"end": 10337,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10343,
											"end": 10817,
											"name": "tag",
											"source": 12,
											"value": "139"
										},
										{
											"begin": 10343,
											"end": 10817,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10411,
											"end": 10417,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 10419,
											"end": 10425,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 10468,
											"end": 10470,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 10456,
											"end": 10465,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 10447,
											"end": 10454,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 10443,
											"end": 10466,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 10439,
											"end": 10471,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 10436,
											"end": 10555,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 10436,
											"end": 10555,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "515"
										},
										{
											"begin": 10436,
											"end": 10555,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 10474,
											"end": 10553,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "516"
										},
										{
											"begin": 10474,
											"end": 10553,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "351"
										},
										{
											"begin": 10474,
											"end": 10553,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10474,
											"end": 10553,
											"name": "tag",
											"source": 12,
											"value": "516"
										},
										{
											"begin": 10474,
											"end": 10553,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10436,
											"end": 10555,
											"name": "tag",
											"source": 12,
											"value": "515"
										},
										{
											"begin": 10436,
											"end": 10555,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10594,
											"end": 10595,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 10619,
											"end": 10672,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "517"
										},
										{
											"begin": 10664,
											"end": 10671,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 10655,
											"end": 10661,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 10644,
											"end": 10653,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 10640,
											"end": 10662,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 10619,
											"end": 10672,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "356"
										},
										{
											"begin": 10619,
											"end": 10672,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10619,
											"end": 10672,
											"name": "tag",
											"source": 12,
											"value": "517"
										},
										{
											"begin": 10619,
											"end": 10672,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10609,
											"end": 10672,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 10609,
											"end": 10672,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10565,
											"end": 10682,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10721,
											"end": 10723,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 10747,
											"end": 10800,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "518"
										},
										{
											"begin": 10792,
											"end": 10799,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 10783,
											"end": 10789,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 10772,
											"end": 10781,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 10768,
											"end": 10790,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 10747,
											"end": 10800,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "356"
										},
										{
											"begin": 10747,
											"end": 10800,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10747,
											"end": 10800,
											"name": "tag",
											"source": 12,
											"value": "518"
										},
										{
											"begin": 10747,
											"end": 10800,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10737,
											"end": 10800,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 10737,
											"end": 10800,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10692,
											"end": 10810,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10343,
											"end": 10817,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 10343,
											"end": 10817,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10343,
											"end": 10817,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 10343,
											"end": 10817,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 10343,
											"end": 10817,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10343,
											"end": 10817,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10823,
											"end": 10931,
											"name": "tag",
											"source": 12,
											"value": "374"
										},
										{
											"begin": 10823,
											"end": 10931,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10900,
											"end": 10924,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "520"
										},
										{
											"begin": 10918,
											"end": 10923,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 10900,
											"end": 10924,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "357"
										},
										{
											"begin": 10900,
											"end": 10924,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10900,
											"end": 10924,
											"name": "tag",
											"source": 12,
											"value": "520"
										},
										{
											"begin": 10900,
											"end": 10924,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10895,
											"end": 10898,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 10888,
											"end": 10925,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 10823,
											"end": 10931,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10823,
											"end": 10931,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10823,
											"end": 10931,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10937,
											"end": 11051,
											"name": "tag",
											"source": 12,
											"value": "375"
										},
										{
											"begin": 10937,
											"end": 11051,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11004,
											"end": 11010,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 11038,
											"end": 11043,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 11032,
											"end": 11044,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 11022,
											"end": 11044,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 11022,
											"end": 11044,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10937,
											"end": 11051,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 10937,
											"end": 11051,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 10937,
											"end": 11051,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10937,
											"end": 11051,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 11057,
											"end": 11231,
											"name": "tag",
											"source": 12,
											"value": "376"
										},
										{
											"begin": 11057,
											"end": 11231,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11146,
											"end": 11157,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 11180,
											"end": 11186,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 11175,
											"end": 11178,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 11168,
											"end": 11187,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 11220,
											"end": 11224,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 11215,
											"end": 11218,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 11211,
											"end": 11225,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 11196,
											"end": 11225,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 11196,
											"end": 11225,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11057,
											"end": 11231,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 11057,
											"end": 11231,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 11057,
											"end": 11231,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11057,
											"end": 11231,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11057,
											"end": 11231,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 11237,
											"end": 11369,
											"name": "tag",
											"source": 12,
											"value": "377"
										},
										{
											"begin": 11237,
											"end": 11369,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11304,
											"end": 11308,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 11327,
											"end": 11330,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 11319,
											"end": 11330,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 11319,
											"end": 11330,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11357,
											"end": 11361,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 11352,
											"end": 11355,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 11348,
											"end": 11362,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 11340,
											"end": 11362,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 11340,
											"end": 11362,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11237,
											"end": 11369,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 11237,
											"end": 11369,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 11237,
											"end": 11369,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11237,
											"end": 11369,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 11375,
											"end": 11554,
											"name": "tag",
											"source": 12,
											"value": "378"
										},
										{
											"begin": 11375,
											"end": 11554,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11444,
											"end": 11454,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 11465,
											"end": 11511,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "525"
										},
										{
											"begin": 11507,
											"end": 11510,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 11499,
											"end": 11505,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 11465,
											"end": 11511,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "374"
										},
										{
											"begin": 11465,
											"end": 11511,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 11465,
											"end": 11511,
											"name": "tag",
											"source": 12,
											"value": "525"
										},
										{
											"begin": 11465,
											"end": 11511,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11543,
											"end": 11547,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 11538,
											"end": 11541,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 11534,
											"end": 11548,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 11520,
											"end": 11548,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 11520,
											"end": 11548,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11375,
											"end": 11554,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 11375,
											"end": 11554,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 11375,
											"end": 11554,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11375,
											"end": 11554,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11375,
											"end": 11554,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 11560,
											"end": 11673,
											"name": "tag",
											"source": 12,
											"value": "379"
										},
										{
											"begin": 11560,
											"end": 11673,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11630,
											"end": 11634,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 11662,
											"end": 11666,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 11657,
											"end": 11660,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 11653,
											"end": 11667,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 11645,
											"end": 11667,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 11645,
											"end": 11667,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11560,
											"end": 11673,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 11560,
											"end": 11673,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 11560,
											"end": 11673,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11560,
											"end": 11673,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 11709,
											"end": 12421,
											"name": "tag",
											"source": 12,
											"value": "380"
										},
										{
											"begin": 11709,
											"end": 12421,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11818,
											"end": 11821,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 11847,
											"end": 11901,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "528"
										},
										{
											"begin": 11895,
											"end": 11900,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 11847,
											"end": 11901,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "375"
										},
										{
											"begin": 11847,
											"end": 11901,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 11847,
											"end": 11901,
											"name": "tag",
											"source": 12,
											"value": "528"
										},
										{
											"begin": 11847,
											"end": 11901,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11917,
											"end": 11993,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "529"
										},
										{
											"begin": 11986,
											"end": 11992,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 11981,
											"end": 11984,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 11917,
											"end": 11993,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "376"
										},
										{
											"begin": 11917,
											"end": 11993,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 11917,
											"end": 11993,
											"name": "tag",
											"source": 12,
											"value": "529"
										},
										{
											"begin": 11917,
											"end": 11993,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11910,
											"end": 11993,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 11910,
											"end": 11993,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12017,
											"end": 12073,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "530"
										},
										{
											"begin": 12067,
											"end": 12072,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 12017,
											"end": 12073,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "377"
										},
										{
											"begin": 12017,
											"end": 12073,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12017,
											"end": 12073,
											"name": "tag",
											"source": 12,
											"value": "530"
										},
										{
											"begin": 12017,
											"end": 12073,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12096,
											"end": 12103,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 12127,
											"end": 12128,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 12112,
											"end": 12396,
											"name": "tag",
											"source": 12,
											"value": "531"
										},
										{
											"begin": 12112,
											"end": 12396,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12137,
											"end": 12143,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 12134,
											"end": 12135,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 12131,
											"end": 12144,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 12112,
											"end": 12396,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 12112,
											"end": 12396,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "533"
										},
										{
											"begin": 12112,
											"end": 12396,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 12213,
											"end": 12219,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 12207,
											"end": 12220,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 12240,
											"end": 12303,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "534"
										},
										{
											"begin": 12299,
											"end": 12302,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 12284,
											"end": 12297,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 12240,
											"end": 12303,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "378"
										},
										{
											"begin": 12240,
											"end": 12303,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12240,
											"end": 12303,
											"name": "tag",
											"source": 12,
											"value": "534"
										},
										{
											"begin": 12240,
											"end": 12303,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12233,
											"end": 12303,
											"name": "SWAP8",
											"source": 12
										},
										{
											"begin": 12233,
											"end": 12303,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12326,
											"end": 12386,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "535"
										},
										{
											"begin": 12379,
											"end": 12385,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 12326,
											"end": 12386,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "379"
										},
										{
											"begin": 12326,
											"end": 12386,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12326,
											"end": 12386,
											"name": "tag",
											"source": 12,
											"value": "535"
										},
										{
											"begin": 12326,
											"end": 12386,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12316,
											"end": 12386,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 12316,
											"end": 12386,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12172,
											"end": 12396,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12159,
											"end": 12160,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 12156,
											"end": 12157,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 12152,
											"end": 12161,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 12147,
											"end": 12161,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 12147,
											"end": 12161,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12112,
											"end": 12396,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "531"
										},
										{
											"begin": 12112,
											"end": 12396,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12112,
											"end": 12396,
											"name": "tag",
											"source": 12,
											"value": "533"
										},
										{
											"begin": 12112,
											"end": 12396,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12116,
											"end": 12130,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12412,
											"end": 12415,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 12405,
											"end": 12415,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 12405,
											"end": 12415,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11823,
											"end": 12421,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11823,
											"end": 12421,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11823,
											"end": 12421,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11709,
											"end": 12421,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 11709,
											"end": 12421,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 11709,
											"end": 12421,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11709,
											"end": 12421,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11709,
											"end": 12421,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12489,
											"end": 13325,
											"name": "tag",
											"source": 12,
											"value": "381"
										},
										{
											"begin": 12489,
											"end": 13325,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12616,
											"end": 12619,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 12652,
											"end": 12656,
											"name": "PUSH",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 12647,
											"end": 12650,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 12643,
											"end": 12657,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 12743,
											"end": 12747,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 12736,
											"end": 12741,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 12732,
											"end": 12748,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 12726,
											"end": 12749,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 12762,
											"end": 12825,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "537"
										},
										{
											"begin": 12819,
											"end": 12823,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 12814,
											"end": 12817,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 12810,
											"end": 12824,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 12796,
											"end": 12808,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 12762,
											"end": 12825,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "374"
										},
										{
											"begin": 12762,
											"end": 12825,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12762,
											"end": 12825,
											"name": "tag",
											"source": 12,
											"value": "537"
										},
										{
											"begin": 12762,
											"end": 12825,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12667,
											"end": 12835,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12924,
											"end": 12928,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 12917,
											"end": 12922,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 12913,
											"end": 12929,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 12907,
											"end": 12930,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 12977,
											"end": 12980,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 12971,
											"end": 12975,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 12967,
											"end": 12981,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 12960,
											"end": 12964,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 12955,
											"end": 12958,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 12951,
											"end": 12965,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 12944,
											"end": 12982,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 13003,
											"end": 13106,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "538"
										},
										{
											"begin": 13101,
											"end": 13105,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 13087,
											"end": 13099,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 13003,
											"end": 13106,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "380"
										},
										{
											"begin": 13003,
											"end": 13106,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 13003,
											"end": 13106,
											"name": "tag",
											"source": 12,
											"value": "538"
										},
										{
											"begin": 13003,
											"end": 13106,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12995,
											"end": 13106,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 12995,
											"end": 13106,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12845,
											"end": 13117,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13206,
											"end": 13210,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 13199,
											"end": 13204,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 13195,
											"end": 13211,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 13189,
											"end": 13212,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 13225,
											"end": 13288,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "539"
										},
										{
											"begin": 13282,
											"end": 13286,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 13277,
											"end": 13280,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 13273,
											"end": 13287,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 13259,
											"end": 13271,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 13225,
											"end": 13288,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "374"
										},
										{
											"begin": 13225,
											"end": 13288,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 13225,
											"end": 13288,
											"name": "tag",
											"source": 12,
											"value": "539"
										},
										{
											"begin": 13225,
											"end": 13288,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13127,
											"end": 13298,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13315,
											"end": 13319,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 13308,
											"end": 13319,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 13308,
											"end": 13319,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12621,
											"end": 13325,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12489,
											"end": 13325,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 12489,
											"end": 13325,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 12489,
											"end": 13325,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12489,
											"end": 13325,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12489,
											"end": 13325,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 13331,
											"end": 13720,
											"name": "tag",
											"source": 12,
											"value": "156"
										},
										{
											"begin": 13331,
											"end": 13720,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13482,
											"end": 13486,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 13520,
											"end": 13522,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 13509,
											"end": 13518,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 13505,
											"end": 13523,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 13497,
											"end": 13523,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 13497,
											"end": 13523,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13569,
											"end": 13578,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 13563,
											"end": 13567,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 13559,
											"end": 13579,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 13555,
											"end": 13556,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 13544,
											"end": 13553,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 13540,
											"end": 13557,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 13533,
											"end": 13580,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 13597,
											"end": 13713,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "541"
										},
										{
											"begin": 13708,
											"end": 13712,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 13699,
											"end": 13705,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 13597,
											"end": 13713,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "381"
										},
										{
											"begin": 13597,
											"end": 13713,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 13597,
											"end": 13713,
											"name": "tag",
											"source": 12,
											"value": "541"
										},
										{
											"begin": 13597,
											"end": 13713,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13589,
											"end": 13713,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 13589,
											"end": 13713,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13331,
											"end": 13720,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 13331,
											"end": 13720,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 13331,
											"end": 13720,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13331,
											"end": 13720,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13331,
											"end": 13720,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 13726,
											"end": 13906,
											"name": "tag",
											"source": 12,
											"value": "382"
										},
										{
											"begin": 13726,
											"end": 13906,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13774,
											"end": 13851,
											"name": "PUSH",
											"source": 12,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 13771,
											"end": 13772,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 13764,
											"end": 13852,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 13871,
											"end": 13875,
											"name": "PUSH",
											"source": 12,
											"value": "22"
										},
										{
											"begin": 13868,
											"end": 13869,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 13861,
											"end": 13876,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 13895,
											"end": 13899,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 13892,
											"end": 13893,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 13885,
											"end": 13900,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 13912,
											"end": 14232,
											"name": "tag",
											"source": 12,
											"value": "159"
										},
										{
											"begin": 13912,
											"end": 14232,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13956,
											"end": 13962,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 13993,
											"end": 13994,
											"name": "PUSH",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 13987,
											"end": 13991,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 13983,
											"end": 13995,
											"name": "DIV",
											"source": 12
										},
										{
											"begin": 13973,
											"end": 13995,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 13973,
											"end": 13995,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14040,
											"end": 14041,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 14034,
											"end": 14038,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 14030,
											"end": 14042,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 14061,
											"end": 14079,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 14051,
											"end": 14132,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "544"
										},
										{
											"begin": 14051,
											"end": 14132,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 14117,
											"end": 14121,
											"name": "PUSH",
											"source": 12,
											"value": "7F"
										},
										{
											"begin": 14109,
											"end": 14115,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 14105,
											"end": 14122,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 14095,
											"end": 14122,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 14095,
											"end": 14122,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14051,
											"end": 14132,
											"name": "tag",
											"source": 12,
											"value": "544"
										},
										{
											"begin": 14051,
											"end": 14132,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14179,
											"end": 14181,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 14171,
											"end": 14177,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 14168,
											"end": 14182,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 14148,
											"end": 14166,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 14145,
											"end": 14183,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 14142,
											"end": 14226,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "545"
										},
										{
											"begin": 14142,
											"end": 14226,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 14198,
											"end": 14216,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "546"
										},
										{
											"begin": 14198,
											"end": 14216,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "382"
										},
										{
											"begin": 14198,
											"end": 14216,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 14198,
											"end": 14216,
											"name": "tag",
											"source": 12,
											"value": "546"
										},
										{
											"begin": 14198,
											"end": 14216,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14142,
											"end": 14226,
											"name": "tag",
											"source": 12,
											"value": "545"
										},
										{
											"begin": 14142,
											"end": 14226,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13963,
											"end": 14232,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13912,
											"end": 14232,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 13912,
											"end": 14232,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 13912,
											"end": 14232,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13912,
											"end": 14232,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 14238,
											"end": 14409,
											"name": "tag",
											"source": 12,
											"value": "383"
										},
										{
											"begin": 14238,
											"end": 14409,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14378,
											"end": 14401,
											"name": "PUSH",
											"source": 12,
											"value": "496E76616C6964206F776E657220616464726573730000000000000000000000"
										},
										{
											"begin": 14374,
											"end": 14375,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 14366,
											"end": 14372,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 14362,
											"end": 14376,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 14355,
											"end": 14402,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 14238,
											"end": 14409,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14238,
											"end": 14409,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 14415,
											"end": 14781,
											"name": "tag",
											"source": 12,
											"value": "384"
										},
										{
											"begin": 14415,
											"end": 14781,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14557,
											"end": 14560,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 14578,
											"end": 14645,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "549"
										},
										{
											"begin": 14642,
											"end": 14644,
											"name": "PUSH",
											"source": 12,
											"value": "15"
										},
										{
											"begin": 14637,
											"end": 14640,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 14578,
											"end": 14645,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "346"
										},
										{
											"begin": 14578,
											"end": 14645,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 14578,
											"end": 14645,
											"name": "tag",
											"source": 12,
											"value": "549"
										},
										{
											"begin": 14578,
											"end": 14645,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14571,
											"end": 14645,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 14571,
											"end": 14645,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14654,
											"end": 14747,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "550"
										},
										{
											"begin": 14743,
											"end": 14746,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 14654,
											"end": 14747,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "383"
										},
										{
											"begin": 14654,
											"end": 14747,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 14654,
											"end": 14747,
											"name": "tag",
											"source": 12,
											"value": "550"
										},
										{
											"begin": 14654,
											"end": 14747,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14772,
											"end": 14774,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 14767,
											"end": 14770,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 14763,
											"end": 14775,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 14756,
											"end": 14775,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 14756,
											"end": 14775,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14415,
											"end": 14781,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 14415,
											"end": 14781,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 14415,
											"end": 14781,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14415,
											"end": 14781,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 14787,
											"end": 15206,
											"name": "tag",
											"source": 12,
											"value": "193"
										},
										{
											"begin": 14787,
											"end": 15206,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14953,
											"end": 14957,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 14991,
											"end": 14993,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 14980,
											"end": 14989,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 14976,
											"end": 14994,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 14968,
											"end": 14994,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 14968,
											"end": 14994,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15040,
											"end": 15049,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 15034,
											"end": 15038,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 15030,
											"end": 15050,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 15026,
											"end": 15027,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 15015,
											"end": 15024,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 15011,
											"end": 15028,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 15004,
											"end": 15051,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 15068,
											"end": 15199,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "552"
										},
										{
											"begin": 15194,
											"end": 15198,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 15068,
											"end": 15199,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "384"
										},
										{
											"begin": 15068,
											"end": 15199,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 15068,
											"end": 15199,
											"name": "tag",
											"source": 12,
											"value": "552"
										},
										{
											"begin": 15068,
											"end": 15199,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 15060,
											"end": 15199,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 15060,
											"end": 15199,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14787,
											"end": 15206,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 14787,
											"end": 15206,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 14787,
											"end": 15206,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14787,
											"end": 15206,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 15212,
											"end": 15387,
											"name": "tag",
											"source": 12,
											"value": "385"
										},
										{
											"begin": 15212,
											"end": 15387,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 15352,
											"end": 15379,
											"name": "PUSH",
											"source": 12,
											"value": "496E76616C696420726563697069656E74206164647265737300000000000000"
										},
										{
											"begin": 15348,
											"end": 15349,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 15340,
											"end": 15346,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 15336,
											"end": 15350,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 15329,
											"end": 15380,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 15212,
											"end": 15387,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15212,
											"end": 15387,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 15393,
											"end": 15759,
											"name": "tag",
											"source": 12,
											"value": "386"
										},
										{
											"begin": 15393,
											"end": 15759,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 15535,
											"end": 15538,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 15556,
											"end": 15623,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "555"
										},
										{
											"begin": 15620,
											"end": 15622,
											"name": "PUSH",
											"source": 12,
											"value": "19"
										},
										{
											"begin": 15615,
											"end": 15618,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 15556,
											"end": 15623,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "346"
										},
										{
											"begin": 15556,
											"end": 15623,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 15556,
											"end": 15623,
											"name": "tag",
											"source": 12,
											"value": "555"
										},
										{
											"begin": 15556,
											"end": 15623,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 15549,
											"end": 15623,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 15549,
											"end": 15623,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15632,
											"end": 15725,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "556"
										},
										{
											"begin": 15721,
											"end": 15724,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 15632,
											"end": 15725,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "385"
										},
										{
											"begin": 15632,
											"end": 15725,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 15632,
											"end": 15725,
											"name": "tag",
											"source": 12,
											"value": "556"
										},
										{
											"begin": 15632,
											"end": 15725,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 15750,
											"end": 15752,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 15745,
											"end": 15748,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 15741,
											"end": 15753,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 15734,
											"end": 15753,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 15734,
											"end": 15753,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15393,
											"end": 15759,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 15393,
											"end": 15759,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 15393,
											"end": 15759,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15393,
											"end": 15759,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 15765,
											"end": 16184,
											"name": "tag",
											"source": 12,
											"value": "214"
										},
										{
											"begin": 15765,
											"end": 16184,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 15931,
											"end": 15935,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 15969,
											"end": 15971,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 15958,
											"end": 15967,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 15954,
											"end": 15972,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 15946,
											"end": 15972,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 15946,
											"end": 15972,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 16018,
											"end": 16027,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 16012,
											"end": 16016,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 16008,
											"end": 16028,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 16004,
											"end": 16005,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 15993,
											"end": 16002,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 15989,
											"end": 16006,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 15982,
											"end": 16029,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 16046,
											"end": 16177,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "558"
										},
										{
											"begin": 16172,
											"end": 16176,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 16046,
											"end": 16177,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "386"
										},
										{
											"begin": 16046,
											"end": 16177,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 16046,
											"end": 16177,
											"name": "tag",
											"source": 12,
											"value": "558"
										},
										{
											"begin": 16046,
											"end": 16177,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 16038,
											"end": 16177,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 16038,
											"end": 16177,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15765,
											"end": 16184,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 15765,
											"end": 16184,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 15765,
											"end": 16184,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15765,
											"end": 16184,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 16190,
											"end": 16369,
											"name": "tag",
											"source": 12,
											"value": "387"
										},
										{
											"begin": 16190,
											"end": 16369,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 16330,
											"end": 16361,
											"name": "PUSH",
											"source": 12,
											"value": "4E6F7420656E6F7567682073686172657320746F207472616E73666572000000"
										},
										{
											"begin": 16326,
											"end": 16327,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 16318,
											"end": 16324,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 16314,
											"end": 16328,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 16307,
											"end": 16362,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 16190,
											"end": 16369,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 16190,
											"end": 16369,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 16375,
											"end": 16741,
											"name": "tag",
											"source": 12,
											"value": "388"
										},
										{
											"begin": 16375,
											"end": 16741,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 16517,
											"end": 16520,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 16538,
											"end": 16605,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "561"
										},
										{
											"begin": 16602,
											"end": 16604,
											"name": "PUSH",
											"source": 12,
											"value": "1D"
										},
										{
											"begin": 16597,
											"end": 16600,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 16538,
											"end": 16605,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "346"
										},
										{
											"begin": 16538,
											"end": 16605,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 16538,
											"end": 16605,
											"name": "tag",
											"source": 12,
											"value": "561"
										},
										{
											"begin": 16538,
											"end": 16605,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 16531,
											"end": 16605,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 16531,
											"end": 16605,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 16614,
											"end": 16707,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "562"
										},
										{
											"begin": 16703,
											"end": 16706,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 16614,
											"end": 16707,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "387"
										},
										{
											"begin": 16614,
											"end": 16707,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 16614,
											"end": 16707,
											"name": "tag",
											"source": 12,
											"value": "562"
										},
										{
											"begin": 16614,
											"end": 16707,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 16732,
											"end": 16734,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 16727,
											"end": 16730,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 16723,
											"end": 16735,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 16716,
											"end": 16735,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 16716,
											"end": 16735,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 16375,
											"end": 16741,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 16375,
											"end": 16741,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 16375,
											"end": 16741,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 16375,
											"end": 16741,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 16747,
											"end": 17166,
											"name": "tag",
											"source": 12,
											"value": "217"
										},
										{
											"begin": 16747,
											"end": 17166,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 16913,
											"end": 16917,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 16951,
											"end": 16953,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 16940,
											"end": 16949,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 16936,
											"end": 16954,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 16928,
											"end": 16954,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 16928,
											"end": 16954,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 17000,
											"end": 17009,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 16994,
											"end": 16998,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 16990,
											"end": 17010,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 16986,
											"end": 16987,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 16975,
											"end": 16984,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 16971,
											"end": 16988,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 16964,
											"end": 17011,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 17028,
											"end": 17159,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "564"
										},
										{
											"begin": 17154,
											"end": 17158,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 17028,
											"end": 17159,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "388"
										},
										{
											"begin": 17028,
											"end": 17159,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 17028,
											"end": 17159,
											"name": "tag",
											"source": 12,
											"value": "564"
										},
										{
											"begin": 17028,
											"end": 17159,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 17020,
											"end": 17159,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 17020,
											"end": 17159,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 16747,
											"end": 17166,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 16747,
											"end": 17166,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 16747,
											"end": 17166,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 16747,
											"end": 17166,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 17172,
											"end": 17352,
											"name": "tag",
											"source": 12,
											"value": "389"
										},
										{
											"begin": 17172,
											"end": 17352,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 17220,
											"end": 17297,
											"name": "PUSH",
											"source": 12,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 17217,
											"end": 17218,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 17210,
											"end": 17298,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 17317,
											"end": 17321,
											"name": "PUSH",
											"source": 12,
											"value": "11"
										},
										{
											"begin": 17314,
											"end": 17315,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 17307,
											"end": 17322,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 17341,
											"end": 17345,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 17338,
											"end": 17339,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 17331,
											"end": 17346,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 17358,
											"end": 17552,
											"name": "tag",
											"source": 12,
											"value": "219"
										},
										{
											"begin": 17358,
											"end": 17552,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 17398,
											"end": 17402,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 17418,
											"end": 17438,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "567"
										},
										{
											"begin": 17436,
											"end": 17437,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 17418,
											"end": 17438,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "357"
										},
										{
											"begin": 17418,
											"end": 17438,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 17418,
											"end": 17438,
											"name": "tag",
											"source": 12,
											"value": "567"
										},
										{
											"begin": 17418,
											"end": 17438,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 17413,
											"end": 17438,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 17413,
											"end": 17438,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 17452,
											"end": 17472,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "568"
										},
										{
											"begin": 17470,
											"end": 17471,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 17452,
											"end": 17472,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "357"
										},
										{
											"begin": 17452,
											"end": 17472,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 17452,
											"end": 17472,
											"name": "tag",
											"source": 12,
											"value": "568"
										},
										{
											"begin": 17452,
											"end": 17472,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 17447,
											"end": 17472,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 17447,
											"end": 17472,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 17496,
											"end": 17497,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 17493,
											"end": 17494,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 17489,
											"end": 17498,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 17481,
											"end": 17498,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 17481,
											"end": 17498,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 17520,
											"end": 17521,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 17514,
											"end": 17518,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 17511,
											"end": 17522,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 17508,
											"end": 17545,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 17508,
											"end": 17545,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "569"
										},
										{
											"begin": 17508,
											"end": 17545,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 17525,
											"end": 17543,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "570"
										},
										{
											"begin": 17525,
											"end": 17543,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "389"
										},
										{
											"begin": 17525,
											"end": 17543,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 17525,
											"end": 17543,
											"name": "tag",
											"source": 12,
											"value": "570"
										},
										{
											"begin": 17525,
											"end": 17543,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 17508,
											"end": 17545,
											"name": "tag",
											"source": 12,
											"value": "569"
										},
										{
											"begin": 17508,
											"end": 17545,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 17358,
											"end": 17552,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 17358,
											"end": 17552,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 17358,
											"end": 17552,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 17358,
											"end": 17552,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 17358,
											"end": 17552,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 17558,
											"end": 17749,
											"name": "tag",
											"source": 12,
											"value": "221"
										},
										{
											"begin": 17558,
											"end": 17749,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 17598,
											"end": 17601,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 17617,
											"end": 17637,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "572"
										},
										{
											"begin": 17635,
											"end": 17636,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 17617,
											"end": 17637,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "357"
										},
										{
											"begin": 17617,
											"end": 17637,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 17617,
											"end": 17637,
											"name": "tag",
											"source": 12,
											"value": "572"
										},
										{
											"begin": 17617,
											"end": 17637,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 17612,
											"end": 17637,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 17612,
											"end": 17637,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 17651,
											"end": 17671,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "573"
										},
										{
											"begin": 17669,
											"end": 17670,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 17651,
											"end": 17671,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "357"
										},
										{
											"begin": 17651,
											"end": 17671,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 17651,
											"end": 17671,
											"name": "tag",
											"source": 12,
											"value": "573"
										},
										{
											"begin": 17651,
											"end": 17671,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 17646,
											"end": 17671,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 17646,
											"end": 17671,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 17694,
											"end": 17695,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 17691,
											"end": 17692,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 17687,
											"end": 17696,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 17680,
											"end": 17696,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 17680,
											"end": 17696,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 17715,
											"end": 17718,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 17712,
											"end": 17713,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 17709,
											"end": 17719,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 17706,
											"end": 17742,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 17706,
											"end": 17742,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "574"
										},
										{
											"begin": 17706,
											"end": 17742,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 17722,
											"end": 17740,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "575"
										},
										{
											"begin": 17722,
											"end": 17740,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "389"
										},
										{
											"begin": 17722,
											"end": 17740,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 17722,
											"end": 17740,
											"name": "tag",
											"source": 12,
											"value": "575"
										},
										{
											"begin": 17722,
											"end": 17740,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 17706,
											"end": 17742,
											"name": "tag",
											"source": 12,
											"value": "574"
										},
										{
											"begin": 17706,
											"end": 17742,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 17558,
											"end": 17749,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 17558,
											"end": 17749,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 17558,
											"end": 17749,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 17558,
											"end": 17749,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 17558,
											"end": 17749,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 17755,
											"end": 17934,
											"name": "tag",
											"source": 12,
											"value": "390"
										},
										{
											"begin": 17755,
											"end": 17934,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 17895,
											"end": 17926,
											"name": "PUSH",
											"source": 12,
											"value": "536861726573206D7573742062652067726561746572207468616E2030000000"
										},
										{
											"begin": 17891,
											"end": 17892,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 17883,
											"end": 17889,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 17879,
											"end": 17893,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 17872,
											"end": 17927,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 17755,
											"end": 17934,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 17755,
											"end": 17934,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 17940,
											"end": 18306,
											"name": "tag",
											"source": 12,
											"value": "391"
										},
										{
											"begin": 17940,
											"end": 18306,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 18082,
											"end": 18085,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 18103,
											"end": 18170,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "578"
										},
										{
											"begin": 18167,
											"end": 18169,
											"name": "PUSH",
											"source": 12,
											"value": "1D"
										},
										{
											"begin": 18162,
											"end": 18165,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 18103,
											"end": 18170,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "346"
										},
										{
											"begin": 18103,
											"end": 18170,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 18103,
											"end": 18170,
											"name": "tag",
											"source": 12,
											"value": "578"
										},
										{
											"begin": 18103,
											"end": 18170,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 18096,
											"end": 18170,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 18096,
											"end": 18170,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 18179,
											"end": 18272,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "579"
										},
										{
											"begin": 18268,
											"end": 18271,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 18179,
											"end": 18272,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "390"
										},
										{
											"begin": 18179,
											"end": 18272,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 18179,
											"end": 18272,
											"name": "tag",
											"source": 12,
											"value": "579"
										},
										{
											"begin": 18179,
											"end": 18272,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 18297,
											"end": 18299,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 18292,
											"end": 18295,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 18288,
											"end": 18300,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 18281,
											"end": 18300,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 18281,
											"end": 18300,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 17940,
											"end": 18306,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 17940,
											"end": 18306,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 17940,
											"end": 18306,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 17940,
											"end": 18306,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 18312,
											"end": 18731,
											"name": "tag",
											"source": 12,
											"value": "241"
										},
										{
											"begin": 18312,
											"end": 18731,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 18478,
											"end": 18482,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 18516,
											"end": 18518,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 18505,
											"end": 18514,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 18501,
											"end": 18519,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 18493,
											"end": 18519,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 18493,
											"end": 18519,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 18565,
											"end": 18574,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 18559,
											"end": 18563,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 18555,
											"end": 18575,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 18551,
											"end": 18552,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 18540,
											"end": 18549,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 18536,
											"end": 18553,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 18529,
											"end": 18576,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 18593,
											"end": 18724,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "581"
										},
										{
											"begin": 18719,
											"end": 18723,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 18593,
											"end": 18724,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "391"
										},
										{
											"begin": 18593,
											"end": 18724,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 18593,
											"end": 18724,
											"name": "tag",
											"source": 12,
											"value": "581"
										},
										{
											"begin": 18593,
											"end": 18724,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 18585,
											"end": 18724,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 18585,
											"end": 18724,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 18312,
											"end": 18731,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 18312,
											"end": 18731,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 18312,
											"end": 18731,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 18312,
											"end": 18731,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 18737,
											"end": 18914,
											"name": "tag",
											"source": 12,
											"value": "392"
										},
										{
											"begin": 18737,
											"end": 18914,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 18877,
											"end": 18906,
											"name": "PUSH",
											"source": 12,
											"value": "4E6F7420656E6F7567682073686172657320617661696C61626C650000000000"
										},
										{
											"begin": 18873,
											"end": 18874,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 18865,
											"end": 18871,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 18861,
											"end": 18875,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 18854,
											"end": 18907,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 18737,
											"end": 18914,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 18737,
											"end": 18914,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 18920,
											"end": 19286,
											"name": "tag",
											"source": 12,
											"value": "393"
										},
										{
											"begin": 18920,
											"end": 19286,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 19062,
											"end": 19065,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 19083,
											"end": 19150,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "584"
										},
										{
											"begin": 19147,
											"end": 19149,
											"name": "PUSH",
											"source": 12,
											"value": "1B"
										},
										{
											"begin": 19142,
											"end": 19145,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 19083,
											"end": 19150,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "346"
										},
										{
											"begin": 19083,
											"end": 19150,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 19083,
											"end": 19150,
											"name": "tag",
											"source": 12,
											"value": "584"
										},
										{
											"begin": 19083,
											"end": 19150,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 19076,
											"end": 19150,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 19076,
											"end": 19150,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 19159,
											"end": 19252,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "585"
										},
										{
											"begin": 19248,
											"end": 19251,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 19159,
											"end": 19252,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "392"
										},
										{
											"begin": 19159,
											"end": 19252,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 19159,
											"end": 19252,
											"name": "tag",
											"source": 12,
											"value": "585"
										},
										{
											"begin": 19159,
											"end": 19252,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 19277,
											"end": 19279,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 19272,
											"end": 19275,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 19268,
											"end": 19280,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 19261,
											"end": 19280,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 19261,
											"end": 19280,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 18920,
											"end": 19286,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 18920,
											"end": 19286,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 18920,
											"end": 19286,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 18920,
											"end": 19286,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 19292,
											"end": 19711,
											"name": "tag",
											"source": 12,
											"value": "244"
										},
										{
											"begin": 19292,
											"end": 19711,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 19458,
											"end": 19462,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 19496,
											"end": 19498,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 19485,
											"end": 19494,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 19481,
											"end": 19499,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 19473,
											"end": 19499,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 19473,
											"end": 19499,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 19545,
											"end": 19554,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 19539,
											"end": 19543,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 19535,
											"end": 19555,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 19531,
											"end": 19532,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 19520,
											"end": 19529,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 19516,
											"end": 19533,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 19509,
											"end": 19556,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 19573,
											"end": 19704,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "587"
										},
										{
											"begin": 19699,
											"end": 19703,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 19573,
											"end": 19704,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "393"
										},
										{
											"begin": 19573,
											"end": 19704,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 19573,
											"end": 19704,
											"name": "tag",
											"source": 12,
											"value": "587"
										},
										{
											"begin": 19573,
											"end": 19704,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 19565,
											"end": 19704,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 19565,
											"end": 19704,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 19292,
											"end": 19711,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 19292,
											"end": 19711,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 19292,
											"end": 19711,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 19292,
											"end": 19711,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 19717,
											"end": 19896,
											"name": "tag",
											"source": 12,
											"value": "394"
										},
										{
											"begin": 19717,
											"end": 19896,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 19857,
											"end": 19888,
											"name": "PUSH",
											"source": 12,
											"value": "496E73756666696369656E742073686172657320617661696C61626C65000000"
										},
										{
											"begin": 19853,
											"end": 19854,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 19845,
											"end": 19851,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 19841,
											"end": 19855,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 19834,
											"end": 19889,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 19717,
											"end": 19896,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 19717,
											"end": 19896,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 19902,
											"end": 20268,
											"name": "tag",
											"source": 12,
											"value": "395"
										},
										{
											"begin": 19902,
											"end": 20268,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 20044,
											"end": 20047,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 20065,
											"end": 20132,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "590"
										},
										{
											"begin": 20129,
											"end": 20131,
											"name": "PUSH",
											"source": 12,
											"value": "1D"
										},
										{
											"begin": 20124,
											"end": 20127,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 20065,
											"end": 20132,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "346"
										},
										{
											"begin": 20065,
											"end": 20132,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 20065,
											"end": 20132,
											"name": "tag",
											"source": 12,
											"value": "590"
										},
										{
											"begin": 20065,
											"end": 20132,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 20058,
											"end": 20132,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 20058,
											"end": 20132,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 20141,
											"end": 20234,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "591"
										},
										{
											"begin": 20230,
											"end": 20233,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 20141,
											"end": 20234,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "394"
										},
										{
											"begin": 20141,
											"end": 20234,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 20141,
											"end": 20234,
											"name": "tag",
											"source": 12,
											"value": "591"
										},
										{
											"begin": 20141,
											"end": 20234,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 20259,
											"end": 20261,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 20254,
											"end": 20257,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 20250,
											"end": 20262,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 20243,
											"end": 20262,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 20243,
											"end": 20262,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 19902,
											"end": 20268,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 19902,
											"end": 20268,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 19902,
											"end": 20268,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 19902,
											"end": 20268,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 20274,
											"end": 20693,
											"name": "tag",
											"source": 12,
											"value": "256"
										},
										{
											"begin": 20274,
											"end": 20693,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 20440,
											"end": 20444,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 20478,
											"end": 20480,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 20467,
											"end": 20476,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 20463,
											"end": 20481,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 20455,
											"end": 20481,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 20455,
											"end": 20481,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 20527,
											"end": 20536,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 20521,
											"end": 20525,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 20517,
											"end": 20537,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 20513,
											"end": 20514,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 20502,
											"end": 20511,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 20498,
											"end": 20515,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 20491,
											"end": 20538,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 20555,
											"end": 20686,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "593"
										},
										{
											"begin": 20681,
											"end": 20685,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 20555,
											"end": 20686,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "395"
										},
										{
											"begin": 20555,
											"end": 20686,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 20555,
											"end": 20686,
											"name": "tag",
											"source": 12,
											"value": "593"
										},
										{
											"begin": 20555,
											"end": 20686,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 20547,
											"end": 20686,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 20547,
											"end": 20686,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 20274,
											"end": 20693,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 20274,
											"end": 20693,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 20274,
											"end": 20693,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 20274,
											"end": 20693,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 20699,
											"end": 21141,
											"name": "tag",
											"source": 12,
											"value": "281"
										},
										{
											"begin": 20699,
											"end": 21141,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 20848,
											"end": 20852,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 20886,
											"end": 20888,
											"name": "PUSH",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 20875,
											"end": 20884,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 20871,
											"end": 20889,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 20863,
											"end": 20889,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 20863,
											"end": 20889,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 20899,
											"end": 20970,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "595"
										},
										{
											"begin": 20967,
											"end": 20968,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 20956,
											"end": 20965,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 20952,
											"end": 20969,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 20943,
											"end": 20949,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 20899,
											"end": 20970,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "373"
										},
										{
											"begin": 20899,
											"end": 20970,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 20899,
											"end": 20970,
											"name": "tag",
											"source": 12,
											"value": "595"
										},
										{
											"begin": 20899,
											"end": 20970,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 20980,
											"end": 21052,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "596"
										},
										{
											"begin": 21048,
											"end": 21050,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 21037,
											"end": 21046,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 21033,
											"end": 21051,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 21024,
											"end": 21030,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 20980,
											"end": 21052,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "362"
										},
										{
											"begin": 20980,
											"end": 21052,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 20980,
											"end": 21052,
											"name": "tag",
											"source": 12,
											"value": "596"
										},
										{
											"begin": 20980,
											"end": 21052,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 21062,
											"end": 21134,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "597"
										},
										{
											"begin": 21130,
											"end": 21132,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 21119,
											"end": 21128,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 21115,
											"end": 21133,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 21106,
											"end": 21112,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 21062,
											"end": 21134,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "362"
										},
										{
											"begin": 21062,
											"end": 21134,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 21062,
											"end": 21134,
											"name": "tag",
											"source": 12,
											"value": "597"
										},
										{
											"begin": 21062,
											"end": 21134,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 20699,
											"end": 21141,
											"name": "SWAP5",
											"source": 12
										},
										{
											"begin": 20699,
											"end": 21141,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 20699,
											"end": 21141,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 20699,
											"end": 21141,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 20699,
											"end": 21141,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 20699,
											"end": 21141,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 20699,
											"end": 21141,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 21147,
											"end": 21313,
											"name": "tag",
											"source": 12,
											"value": "396"
										},
										{
											"begin": 21147,
											"end": 21313,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 21287,
											"end": 21305,
											"name": "PUSH",
											"source": 12,
											"value": "5061757361626C653A2070617573656400000000000000000000000000000000"
										},
										{
											"begin": 21283,
											"end": 21284,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 21275,
											"end": 21281,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 21271,
											"end": 21285,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 21264,
											"end": 21306,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 21147,
											"end": 21313,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 21147,
											"end": 21313,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 21319,
											"end": 21685,
											"name": "tag",
											"source": 12,
											"value": "397"
										},
										{
											"begin": 21319,
											"end": 21685,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 21461,
											"end": 21464,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 21482,
											"end": 21549,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "600"
										},
										{
											"begin": 21546,
											"end": 21548,
											"name": "PUSH",
											"source": 12,
											"value": "10"
										},
										{
											"begin": 21541,
											"end": 21544,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 21482,
											"end": 21549,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "346"
										},
										{
											"begin": 21482,
											"end": 21549,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 21482,
											"end": 21549,
											"name": "tag",
											"source": 12,
											"value": "600"
										},
										{
											"begin": 21482,
											"end": 21549,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 21475,
											"end": 21549,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 21475,
											"end": 21549,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 21558,
											"end": 21651,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "601"
										},
										{
											"begin": 21647,
											"end": 21650,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 21558,
											"end": 21651,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "396"
										},
										{
											"begin": 21558,
											"end": 21651,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 21558,
											"end": 21651,
											"name": "tag",
											"source": 12,
											"value": "601"
										},
										{
											"begin": 21558,
											"end": 21651,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 21676,
											"end": 21678,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 21671,
											"end": 21674,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 21667,
											"end": 21679,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 21660,
											"end": 21679,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 21660,
											"end": 21679,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 21319,
											"end": 21685,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 21319,
											"end": 21685,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 21319,
											"end": 21685,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 21319,
											"end": 21685,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 21691,
											"end": 22110,
											"name": "tag",
											"source": 12,
											"value": "312"
										},
										{
											"begin": 21691,
											"end": 22110,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 21857,
											"end": 21861,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 21895,
											"end": 21897,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 21884,
											"end": 21893,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 21880,
											"end": 21898,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 21872,
											"end": 21898,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 21872,
											"end": 21898,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 21944,
											"end": 21953,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 21938,
											"end": 21942,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 21934,
											"end": 21954,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 21930,
											"end": 21931,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 21919,
											"end": 21928,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 21915,
											"end": 21932,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 21908,
											"end": 21955,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 21972,
											"end": 22103,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "603"
										},
										{
											"begin": 22098,
											"end": 22102,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 21972,
											"end": 22103,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "397"
										},
										{
											"begin": 21972,
											"end": 22103,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 21972,
											"end": 22103,
											"name": "tag",
											"source": 12,
											"value": "603"
										},
										{
											"begin": 21972,
											"end": 22103,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 21964,
											"end": 22103,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 21964,
											"end": 22103,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 21691,
											"end": 22110,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 21691,
											"end": 22110,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 21691,
											"end": 22110,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 21691,
											"end": 22110,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 22116,
											"end": 22286,
											"name": "tag",
											"source": 12,
											"value": "398"
										},
										{
											"begin": 22116,
											"end": 22286,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 22256,
											"end": 22278,
											"name": "PUSH",
											"source": 12,
											"value": "5061757361626C653A206E6F7420706175736564000000000000000000000000"
										},
										{
											"begin": 22252,
											"end": 22253,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 22244,
											"end": 22250,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 22240,
											"end": 22254,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 22233,
											"end": 22279,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 22116,
											"end": 22286,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 22116,
											"end": 22286,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 22292,
											"end": 22658,
											"name": "tag",
											"source": 12,
											"value": "399"
										},
										{
											"begin": 22292,
											"end": 22658,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 22434,
											"end": 22437,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 22455,
											"end": 22522,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "606"
										},
										{
											"begin": 22519,
											"end": 22521,
											"name": "PUSH",
											"source": 12,
											"value": "14"
										},
										{
											"begin": 22514,
											"end": 22517,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 22455,
											"end": 22522,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "346"
										},
										{
											"begin": 22455,
											"end": 22522,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 22455,
											"end": 22522,
											"name": "tag",
											"source": 12,
											"value": "606"
										},
										{
											"begin": 22455,
											"end": 22522,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 22448,
											"end": 22522,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 22448,
											"end": 22522,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 22531,
											"end": 22624,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "607"
										},
										{
											"begin": 22620,
											"end": 22623,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 22531,
											"end": 22624,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "398"
										},
										{
											"begin": 22531,
											"end": 22624,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 22531,
											"end": 22624,
											"name": "tag",
											"source": 12,
											"value": "607"
										},
										{
											"begin": 22531,
											"end": 22624,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 22649,
											"end": 22651,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 22644,
											"end": 22647,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 22640,
											"end": 22652,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 22633,
											"end": 22652,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 22633,
											"end": 22652,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 22292,
											"end": 22658,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 22292,
											"end": 22658,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 22292,
											"end": 22658,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 22292,
											"end": 22658,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 22664,
											"end": 23083,
											"name": "tag",
											"source": 12,
											"value": "337"
										},
										{
											"begin": 22664,
											"end": 23083,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 22830,
											"end": 22834,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 22868,
											"end": 22870,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 22857,
											"end": 22866,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 22853,
											"end": 22871,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 22845,
											"end": 22871,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 22845,
											"end": 22871,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 22917,
											"end": 22926,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 22911,
											"end": 22915,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 22907,
											"end": 22927,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 22903,
											"end": 22904,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 22892,
											"end": 22901,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 22888,
											"end": 22905,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 22881,
											"end": 22928,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 22945,
											"end": 23076,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "609"
										},
										{
											"begin": 23071,
											"end": 23075,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 22945,
											"end": 23076,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "399"
										},
										{
											"begin": 22945,
											"end": 23076,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 22945,
											"end": 23076,
											"name": "tag",
											"source": 12,
											"value": "609"
										},
										{
											"begin": 22945,
											"end": 23076,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 22937,
											"end": 23076,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 22937,
											"end": 23076,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 22664,
											"end": 23083,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 22664,
											"end": 23083,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 22664,
											"end": 23083,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 22664,
											"end": 23083,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/security/Pausable.sol",
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"contracts/real-estate-marketplace/Shares.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"basketShares(uint256)": "4885cf0a",
							"baskets(uint256)": "a60ed374",
							"createBasket(uint256,uint256[],uint256)": "51111b72",
							"decimals()": "313ce567",
							"getAvailableShares(uint256)": "dcd9d12d",
							"getBasketDetails(uint256)": "ff03e8c2",
							"getPropertyOwner(uint256)": "e34fc531",
							"getShares(uint256,address)": "75c0b9fe",
							"getTotalShares(uint256)": "85fff858",
							"integrateWithExternalSystem(uint256)": "5dfe7721",
							"issuePropertyShares(uint256,address,uint256)": "b543cf38",
							"issueShares(uint256,address,uint256)": "dd8aa6f6",
							"name()": "06fdde03",
							"owner()": "8da5cb5b",
							"pause()": "8456cb59",
							"paused()": "5c975abb",
							"propertyOwners(uint256)": "7f2af083",
							"propertyShares(uint256)": "b7b551ed",
							"renounceOwnership()": "715018a6",
							"setPropertyOwner(uint256,address)": "5813a683",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferOwnership(address)": "f2fde38b",
							"transferShares(uint256,address,uint256)": "84b9a6e6",
							"unpause()": "3f4ba83a"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"investor\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"propertyId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"sharesIssued\",\"type\":\"uint256\"}],\"name\":\"SharesIssued\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"propertyId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"sharesTransferred\",\"type\":\"uint256\"}],\"name\":\"SharesTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"basketShares\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"baskets\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"basketId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalShares\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"basketId\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"propertyIds\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256\",\"name\":\"totalShares\",\"type\":\"uint256\"}],\"name\":\"createBasket\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"propertyId\",\"type\":\"uint256\"}],\"name\":\"getAvailableShares\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"basketId\",\"type\":\"uint256\"}],\"name\":\"getBasketDetails\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"basketId\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"propertyIds\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256\",\"name\":\"totalShares\",\"type\":\"uint256\"}],\"internalType\":\"struct Shares.ShareBasket\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"propertyId\",\"type\":\"uint256\"}],\"name\":\"getPropertyOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"propertyId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"shareholder\",\"type\":\"address\"}],\"name\":\"getShares\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"propertyId\",\"type\":\"uint256\"}],\"name\":\"getTotalShares\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"integrateWithExternalSystem\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"propertyId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"investor\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"}],\"name\":\"issuePropertyShares\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"basketId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"issueShares\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"propertyOwners\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"propertyShares\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"totalShares\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"availableShares\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"propertyId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"setPropertyOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"propertyId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"}],\"name\":\"transferShares\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/real-estate-marketplace/Shares.sol\":\"Shares\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/security/Pausable.sol\":{\"keccak256\":\"0x0849d93b16c9940beb286a7864ed02724b248b93e0d80ef6355af5ef15c64773\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ddabb16009cd17eaca3143feadf450ac13e72919ebe2ca50e00f61cb78bc004\",\"dweb:/ipfs/QmSPwPxX7d6TTWakN5jy5wsaGkS1y9TW8fuhGSraMkLk2B\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5703ccdeb7b1d685e375ed719117e9edf2ab4bc544f24f23b0d50ec82257229\",\"dweb:/ipfs/QmTdwkbQq7owpCiyuzE7eh5LrD2ddrBCZ5WHVsWPi1RrTS\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x6008dabfe393240d73d7dd7688033f72740d570aa422254d29a7dce8568f3aff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5196ec75139918c6c7bb4251b36395e668f1fa6d206beba7e7520e74913940d\",\"dweb:/ipfs/QmSyqjksXxmm2mCG6qRd1yuwLykypkSVBbnBnGqJRcuJMi\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x37bb49513c49c87c4642a891b13b63571bc87013dde806617aa1efb54605f386\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3036b3a83b7c48f96641f2a9002b9f2dcb6a5958dd670894ada21ae8229b3d0\",\"dweb:/ipfs/QmUNfSBdoVtjhETaUJCYcaC7pTMgbhht926tJ2uXJbiVd3\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245\",\"dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"contracts/real-estate-marketplace/Shares.sol\":{\"keccak256\":\"0x2c1396c1a1222adface6b34bb95eba63948a37565cdbf2ca8bd2599f9c90ce20\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea5321fabdf407f63032ad32c01b9094ebda1c64c37fc383ca26b52a177234e3\",\"dweb:/ipfs/Qmawrx9Z5zefALh562AE6Y42YakWoQ81wgGh4Uyz75tj5W\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 415,
								"contract": "contracts/real-estate-marketplace/Shares.sol:Shares",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 421,
								"contract": "contracts/real-estate-marketplace/Shares.sol:Shares",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 423,
								"contract": "contracts/real-estate-marketplace/Shares.sol:Shares",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 425,
								"contract": "contracts/real-estate-marketplace/Shares.sol:Shares",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 427,
								"contract": "contracts/real-estate-marketplace/Shares.sol:Shares",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							},
							{
								"astId": 8,
								"contract": "contracts/real-estate-marketplace/Shares.sol:Shares",
								"label": "_owner",
								"offset": 0,
								"slot": "5",
								"type": "t_address"
							},
							{
								"astId": 302,
								"contract": "contracts/real-estate-marketplace/Shares.sol:Shares",
								"label": "_paused",
								"offset": 20,
								"slot": "5",
								"type": "t_bool"
							},
							{
								"astId": 2716,
								"contract": "contracts/real-estate-marketplace/Shares.sol:Shares",
								"label": "baskets",
								"offset": 0,
								"slot": "6",
								"type": "t_mapping(t_uint256,t_struct(ShareBasket)2702_storage)"
							},
							{
								"astId": 2720,
								"contract": "contracts/real-estate-marketplace/Shares.sol:Shares",
								"label": "basketShares",
								"offset": 0,
								"slot": "7",
								"type": "t_mapping(t_uint256,t_uint256)"
							},
							{
								"astId": 2725,
								"contract": "contracts/real-estate-marketplace/Shares.sol:Shares",
								"label": "propertyShares",
								"offset": 0,
								"slot": "8",
								"type": "t_mapping(t_uint256,t_struct(PropertyShares)2711_storage)"
							},
							{
								"astId": 2729,
								"contract": "contracts/real-estate-marketplace/Shares.sol:Shares",
								"label": "propertyOwners",
								"offset": 0,
								"slot": "9",
								"type": "t_mapping(t_uint256,t_address)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_uint256)dyn_storage": {
								"base": "t_uint256",
								"encoding": "dynamic_array",
								"label": "uint256[]",
								"numberOfBytes": "32"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_address)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => address)",
								"numberOfBytes": "32",
								"value": "t_address"
							},
							"t_mapping(t_uint256,t_struct(PropertyShares)2711_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => struct Shares.PropertyShares)",
								"numberOfBytes": "32",
								"value": "t_struct(PropertyShares)2711_storage"
							},
							"t_mapping(t_uint256,t_struct(ShareBasket)2702_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => struct Shares.ShareBasket)",
								"numberOfBytes": "32",
								"value": "t_struct(ShareBasket)2702_storage"
							},
							"t_mapping(t_uint256,t_uint256)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_struct(PropertyShares)2711_storage": {
								"encoding": "inplace",
								"label": "struct Shares.PropertyShares",
								"members": [
									{
										"astId": 2704,
										"contract": "contracts/real-estate-marketplace/Shares.sol:Shares",
										"label": "totalShares",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 2706,
										"contract": "contracts/real-estate-marketplace/Shares.sol:Shares",
										"label": "availableShares",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									},
									{
										"astId": 2710,
										"contract": "contracts/real-estate-marketplace/Shares.sol:Shares",
										"label": "shareholders",
										"offset": 0,
										"slot": "2",
										"type": "t_mapping(t_address,t_uint256)"
									}
								],
								"numberOfBytes": "96"
							},
							"t_struct(ShareBasket)2702_storage": {
								"encoding": "inplace",
								"label": "struct Shares.ShareBasket",
								"members": [
									{
										"astId": 2696,
										"contract": "contracts/real-estate-marketplace/Shares.sol:Shares",
										"label": "basketId",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 2699,
										"contract": "contracts/real-estate-marketplace/Shares.sol:Shares",
										"label": "propertyIds",
										"offset": 0,
										"slot": "1",
										"type": "t_array(t_uint256)dyn_storage"
									},
									{
										"astId": 2701,
										"contract": "contracts/real-estate-marketplace/Shares.sol:Shares",
										"label": "totalShares",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "96"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							1620
						],
						"Ownable": [
							147
						]
					},
					"id": 148,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 148,
							"sourceUnit": 1621,
							"src": "128:45:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1620,
										"src": "136:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 5,
										"name": "Context",
										"nameLocations": [
											"692:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1620,
										"src": "692:7:0"
									},
									"id": 6,
									"nodeType": "InheritanceSpecifier",
									"src": "692:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 4,
								"nodeType": "StructuredDocumentation",
								"src": "175:487:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 147,
							"linearizedBaseContracts": [
								147,
								1620
							],
							"name": "Ownable",
							"nameLocation": "681:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 8,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "722:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 147,
									"src": "706:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 7,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "706:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 9,
										"nodeType": "StructuredDocumentation",
										"src": "735:85:0",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 13,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "831:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "866:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "858:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "858:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "857:17:0"
									},
									"src": "825:50:0"
								},
								{
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "881:82:0",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 18,
									"name": "OwnableInvalidOwner",
									"nameLocation": "974:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 16,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1002:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 18,
												"src": "994:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "994:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "993:15:0"
									},
									"src": "968:41:0"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 24,
									"name": "OwnershipTransferred",
									"nameLocation": "1021:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 20,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "1058:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1042:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 19,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1042:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 22,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1089:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1073:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 21,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1073:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1041:57:0"
									},
									"src": "1015:84:0"
								},
								{
									"body": {
										"id": 49,
										"nodeType": "Block",
										"src": "1259:153:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 35,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 30,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "1273:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 33,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1297:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 32,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1289:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 31,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1289:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 34,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1289:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1273:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 44,
												"nodeType": "IfStatement",
												"src": "1269:95:0",
												"trueBody": {
													"id": 43,
													"nodeType": "Block",
													"src": "1301:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 39,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1350:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 38,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1342:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 37,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1342:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 40,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1342:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 36,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "1322:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 41,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1322:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 42,
															"nodeType": "RevertStatement",
															"src": "1315:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 46,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 27,
															"src": "1392:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 45,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "1373:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 47,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1373:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 48,
												"nodeType": "ExpressionStatement",
												"src": "1373:32:0"
											}
										]
									},
									"documentation": {
										"id": 25,
										"nodeType": "StructuredDocumentation",
										"src": "1105:115:0",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 50,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1245:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 50,
												"src": "1237:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 26,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1237:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1236:22:0"
									},
									"returnParameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1259:0:0"
									},
									"scope": 147,
									"src": "1225:187:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 57,
										"nodeType": "Block",
										"src": "1521:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 53,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 84,
														"src": "1531:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 54,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1531:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 55,
												"nodeType": "ExpressionStatement",
												"src": "1531:13:0"
											},
											{
												"id": 56,
												"nodeType": "PlaceholderStatement",
												"src": "1554:1:0"
											}
										]
									},
									"documentation": {
										"id": 51,
										"nodeType": "StructuredDocumentation",
										"src": "1418:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 58,
									"name": "onlyOwner",
									"nameLocation": "1509:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1518:2:0"
									},
									"src": "1500:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 66,
										"nodeType": "Block",
										"src": "1693:30:0",
										"statements": [
											{
												"expression": {
													"id": 64,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "1710:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 63,
												"id": 65,
												"nodeType": "Return",
												"src": "1703:13:0"
											}
										]
									},
									"documentation": {
										"id": 59,
										"nodeType": "StructuredDocumentation",
										"src": "1568:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 67,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1647:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1652:2:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "1684:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 61,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1683:9:0"
									},
									"scope": 147,
									"src": "1638:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 83,
										"nodeType": "Block",
										"src": "1841:117:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 75,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 71,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 67,
															"src": "1855:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 72,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1855:7:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 73,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1602,
															"src": "1866:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 74,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1866:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1855:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 82,
												"nodeType": "IfStatement",
												"src": "1851:101:0",
												"trueBody": {
													"id": 81,
													"nodeType": "Block",
													"src": "1880:72:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 77,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1602,
																			"src": "1928:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 78,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1928:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 76,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 13,
																	"src": "1901:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 79,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1901:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 80,
															"nodeType": "RevertStatement",
															"src": "1894:47:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 68,
										"nodeType": "StructuredDocumentation",
										"src": "1729:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 84,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1805:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 69,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1816:2:0"
									},
									"returnParameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1841:0:0"
									},
									"scope": 147,
									"src": "1796:162:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 97,
										"nodeType": "Block",
										"src": "2347:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 93,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2384:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 92,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2376:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 91,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2376:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 94,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2376:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 90,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2357:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 95,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2357:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 96,
												"nodeType": "ExpressionStatement",
												"src": "2357:30:0"
											}
										]
									},
									"documentation": {
										"id": 85,
										"nodeType": "StructuredDocumentation",
										"src": "1964:324:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 98,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 88,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 87,
												"name": "onlyOwner",
												"nameLocations": [
													"2337:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2337:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2337:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "2302:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2319:2:0"
									},
									"returnParameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2347:0:0"
									},
									"scope": 147,
									"src": "2293:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 125,
										"nodeType": "Block",
										"src": "2613:145:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 106,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 101,
														"src": "2627:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 109,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2647:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 108,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2639:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 107,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2639:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 110,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2639:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2627:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 120,
												"nodeType": "IfStatement",
												"src": "2623:91:0",
												"trueBody": {
													"id": 119,
													"nodeType": "Block",
													"src": "2651:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 115,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2700:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 114,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2692:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 113,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2692:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 116,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2692:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 112,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "2672:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 117,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2672:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 118,
															"nodeType": "RevertStatement",
															"src": "2665:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 122,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 101,
															"src": "2742:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 121,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2723:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2723:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 124,
												"nodeType": "ExpressionStatement",
												"src": "2723:28:0"
											}
										]
									},
									"documentation": {
										"id": 99,
										"nodeType": "StructuredDocumentation",
										"src": "2400:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 126,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 104,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 103,
												"name": "onlyOwner",
												"nameLocations": [
													"2603:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2603:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2603:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2552:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2578:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "2570:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 100,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:18:0"
									},
									"returnParameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2613:0:0"
									},
									"scope": 147,
									"src": "2543:215:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 145,
										"nodeType": "Block",
										"src": "2975:124:0",
										"statements": [
											{
												"assignments": [
													133
												],
												"declarations": [
													{
														"constant": false,
														"id": 133,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2993:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 145,
														"src": "2985:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 132,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2985:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 135,
												"initialValue": {
													"id": 134,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "3004:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2985:25:0"
											},
											{
												"expression": {
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 136,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "3020:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 137,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 129,
														"src": "3029:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3020:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 139,
												"nodeType": "ExpressionStatement",
												"src": "3020:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 141,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 133,
															"src": "3073:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 142,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 129,
															"src": "3083:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 140,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 24,
														"src": "3052:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3052:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 144,
												"nodeType": "EmitStatement",
												"src": "3047:45:0"
											}
										]
									},
									"documentation": {
										"id": 127,
										"nodeType": "StructuredDocumentation",
										"src": "2764:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 146,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2921:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2948:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "2940:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 128,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2940:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2939:18:0"
									},
									"returnParameters": {
										"id": 131,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2975:0:0"
									},
									"scope": 147,
									"src": "2912:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 148,
							"src": "663:2438:0",
							"usedErrors": [
								13,
								18
							],
							"usedEvents": [
								24
							]
						}
					],
					"src": "102:3000:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
					"exportedSymbols": {
						"IERC1155Errors": [
							284
						],
						"IERC20Errors": [
							189
						],
						"IERC721Errors": [
							237
						]
					},
					"id": 285,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 149,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "112:24:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 150,
								"nodeType": "StructuredDocumentation",
								"src": "138:139:1",
								"text": " @dev Standard ERC20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens."
							},
							"fullyImplemented": true,
							"id": 189,
							"linearizedBaseContracts": [
								189
							],
							"name": "IERC20Errors",
							"nameLocation": "288:12:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 151,
										"nodeType": "StructuredDocumentation",
										"src": "307:309:1",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "e450d38c",
									"id": 159,
									"name": "ERC20InsufficientBalance",
									"nameLocation": "627:24:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 158,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 153,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "660:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "652:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 152,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "652:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 155,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "676:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "668:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 154,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "668:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 157,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "693:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "685:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 156,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "685:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "651:49:1"
									},
									"src": "621:80:1"
								},
								{
									"documentation": {
										"id": 160,
										"nodeType": "StructuredDocumentation",
										"src": "707:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "96c6fd1e",
									"id": 164,
									"name": "ERC20InvalidSender",
									"nameLocation": "870:18:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 163,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 162,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "897:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 164,
												"src": "889:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 161,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "889:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "888:16:1"
									},
									"src": "864:41:1"
								},
								{
									"documentation": {
										"id": 165,
										"nodeType": "StructuredDocumentation",
										"src": "911:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "ec442f05",
									"id": 169,
									"name": "ERC20InvalidReceiver",
									"nameLocation": "1081:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 168,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 167,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "1110:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 169,
												"src": "1102:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 166,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1102:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1101:18:1"
									},
									"src": "1075:45:1"
								},
								{
									"documentation": {
										"id": 170,
										"nodeType": "StructuredDocumentation",
										"src": "1126:345:1",
										"text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "fb8f41b2",
									"id": 178,
									"name": "ERC20InsufficientAllowance",
									"nameLocation": "1482:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 177,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 172,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1517:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1509:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 171,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1509:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 174,
												"mutability": "mutable",
												"name": "allowance",
												"nameLocation": "1534:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1526:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 173,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1526:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 176,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "1553:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1545:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 175,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1545:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1508:52:1"
									},
									"src": "1476:85:1"
								},
								{
									"documentation": {
										"id": 179,
										"nodeType": "StructuredDocumentation",
										"src": "1567:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "e602df05",
									"id": 183,
									"name": "ERC20InvalidApprover",
									"nameLocation": "1752:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 182,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 181,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "1781:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 183,
												"src": "1773:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 180,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1773:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1772:18:1"
									},
									"src": "1746:45:1"
								},
								{
									"documentation": {
										"id": 184,
										"nodeType": "StructuredDocumentation",
										"src": "1797:195:1",
										"text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "94280d62",
									"id": 188,
									"name": "ERC20InvalidSpender",
									"nameLocation": "2003:19:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 187,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 186,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2031:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 188,
												"src": "2023:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 185,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2023:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2022:17:1"
									},
									"src": "1997:43:1"
								}
							],
							"scope": 285,
							"src": "278:1764:1",
							"usedErrors": [
								159,
								164,
								169,
								178,
								183,
								188
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 190,
								"nodeType": "StructuredDocumentation",
								"src": "2044:141:1",
								"text": " @dev Standard ERC721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens."
							},
							"fullyImplemented": true,
							"id": 237,
							"linearizedBaseContracts": [
								237
							],
							"name": "IERC721Errors",
							"nameLocation": "2196:13:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 191,
										"nodeType": "StructuredDocumentation",
										"src": "2216:219:1",
										"text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "89c62b64",
									"id": 195,
									"name": "ERC721InvalidOwner",
									"nameLocation": "2446:18:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 194,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 193,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2473:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 195,
												"src": "2465:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 192,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2465:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2464:15:1"
									},
									"src": "2440:40:1"
								},
								{
									"documentation": {
										"id": 196,
										"nodeType": "StructuredDocumentation",
										"src": "2486:132:1",
										"text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "7e273289",
									"id": 200,
									"name": "ERC721NonexistentToken",
									"nameLocation": "2629:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 199,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 198,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2660:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 200,
												"src": "2652:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 197,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2652:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2651:17:1"
									},
									"src": "2623:46:1"
								},
								{
									"documentation": {
										"id": 201,
										"nodeType": "StructuredDocumentation",
										"src": "2675:289:1",
										"text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "64283d7b",
									"id": 209,
									"name": "ERC721IncorrectOwner",
									"nameLocation": "2975:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 208,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 203,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3004:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "2996:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 202,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2996:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 205,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3020:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "3012:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 204,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3012:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 207,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3037:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "3029:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 206,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3029:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2995:48:1"
									},
									"src": "2969:75:1"
								},
								{
									"documentation": {
										"id": 210,
										"nodeType": "StructuredDocumentation",
										"src": "3050:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "73c6ac6e",
									"id": 214,
									"name": "ERC721InvalidSender",
									"nameLocation": "3213:19:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 213,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 212,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3241:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 214,
												"src": "3233:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 211,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3233:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3232:16:1"
									},
									"src": "3207:42:1"
								},
								{
									"documentation": {
										"id": 215,
										"nodeType": "StructuredDocumentation",
										"src": "3255:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "64a0ae92",
									"id": 219,
									"name": "ERC721InvalidReceiver",
									"nameLocation": "3425:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 218,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 217,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "3455:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 219,
												"src": "3447:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 216,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3447:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3446:18:1"
									},
									"src": "3419:46:1"
								},
								{
									"documentation": {
										"id": 220,
										"nodeType": "StructuredDocumentation",
										"src": "3471:247:1",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "177e802f",
									"id": 226,
									"name": "ERC721InsufficientApproval",
									"nameLocation": "3729:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 225,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 222,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3764:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 226,
												"src": "3756:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 221,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3756:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 224,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3782:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 226,
												"src": "3774:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 223,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3774:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3755:35:1"
									},
									"src": "3723:68:1"
								},
								{
									"documentation": {
										"id": 227,
										"nodeType": "StructuredDocumentation",
										"src": "3797:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "a9fbf51f",
									"id": 231,
									"name": "ERC721InvalidApprover",
									"nameLocation": "3982:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 230,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 229,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "4012:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 231,
												"src": "4004:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 228,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4004:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4003:18:1"
									},
									"src": "3976:46:1"
								},
								{
									"documentation": {
										"id": 232,
										"nodeType": "StructuredDocumentation",
										"src": "4028:197:1",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "5b08ba18",
									"id": 236,
									"name": "ERC721InvalidOperator",
									"nameLocation": "4236:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 235,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 234,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4266:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 236,
												"src": "4258:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 233,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4258:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4257:18:1"
									},
									"src": "4230:46:1"
								}
							],
							"scope": 285,
							"src": "2186:2092:1",
							"usedErrors": [
								195,
								200,
								209,
								214,
								219,
								226,
								231,
								236
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1155Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 238,
								"nodeType": "StructuredDocumentation",
								"src": "4280:143:1",
								"text": " @dev Standard ERC1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens."
							},
							"fullyImplemented": true,
							"id": 284,
							"linearizedBaseContracts": [
								284
							],
							"name": "IERC1155Errors",
							"nameLocation": "4434:14:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 239,
										"nodeType": "StructuredDocumentation",
										"src": "4455:361:1",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "03dee4c5",
									"id": 249,
									"name": "ERC1155InsufficientBalance",
									"nameLocation": "4827:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 248,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 241,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4862:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4854:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 240,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4854:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 243,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "4878:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4870:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 242,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4870:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 245,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "4895:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4887:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 244,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4887:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 247,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4911:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4903:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 246,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4903:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4853:66:1"
									},
									"src": "4821:99:1"
								},
								{
									"documentation": {
										"id": 250,
										"nodeType": "StructuredDocumentation",
										"src": "4926:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "01a83514",
									"id": 254,
									"name": "ERC1155InvalidSender",
									"nameLocation": "5089:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 253,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 252,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5118:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 254,
												"src": "5110:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 251,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5110:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5109:16:1"
									},
									"src": "5083:43:1"
								},
								{
									"documentation": {
										"id": 255,
										"nodeType": "StructuredDocumentation",
										"src": "5132:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "57f447ce",
									"id": 259,
									"name": "ERC1155InvalidReceiver",
									"nameLocation": "5302:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 258,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 257,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "5333:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 259,
												"src": "5325:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 256,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5325:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5324:18:1"
									},
									"src": "5296:47:1"
								},
								{
									"documentation": {
										"id": 260,
										"nodeType": "StructuredDocumentation",
										"src": "5349:256:1",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "e237d922",
									"id": 266,
									"name": "ERC1155MissingApprovalForAll",
									"nameLocation": "5616:28:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 265,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 262,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5653:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 266,
												"src": "5645:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 261,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5645:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 264,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5671:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 266,
												"src": "5663:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 263,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5663:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5644:33:1"
									},
									"src": "5610:68:1"
								},
								{
									"documentation": {
										"id": 267,
										"nodeType": "StructuredDocumentation",
										"src": "5684:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "3e31884e",
									"id": 271,
									"name": "ERC1155InvalidApprover",
									"nameLocation": "5869:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 270,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 269,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "5900:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 271,
												"src": "5892:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 268,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5892:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5891:18:1"
									},
									"src": "5863:47:1"
								},
								{
									"documentation": {
										"id": 272,
										"nodeType": "StructuredDocumentation",
										"src": "5916:197:1",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "ced3e100",
									"id": 276,
									"name": "ERC1155InvalidOperator",
									"nameLocation": "6124:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 275,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 274,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "6155:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 276,
												"src": "6147:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 273,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6147:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6146:18:1"
									},
									"src": "6118:47:1"
								},
								{
									"documentation": {
										"id": 277,
										"nodeType": "StructuredDocumentation",
										"src": "6171:280:1",
										"text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
									},
									"errorSelector": "5b059991",
									"id": 283,
									"name": "ERC1155InvalidArrayLength",
									"nameLocation": "6462:25:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 282,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 279,
												"mutability": "mutable",
												"name": "idsLength",
												"nameLocation": "6496:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "6488:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 278,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6488:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 281,
												"mutability": "mutable",
												"name": "valuesLength",
												"nameLocation": "6515:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "6507:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 280,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6507:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6487:41:1"
									},
									"src": "6456:73:1"
								}
							],
							"scope": 285,
							"src": "4424:2107:1",
							"usedErrors": [
								249,
								254,
								259,
								266,
								271,
								276,
								283
							],
							"usedEvents": []
						}
					],
					"src": "112:6420:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/security/Pausable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/security/Pausable.sol",
					"exportedSymbols": {
						"Context": [
							1620
						],
						"Pausable": [
							392
						]
					},
					"id": 393,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 286,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "105:23:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 287,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 393,
							"sourceUnit": 1621,
							"src": "130:30:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 289,
										"name": "Context",
										"nameLocations": [
											"632:7:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1620,
										"src": "632:7:2"
									},
									"id": 290,
									"nodeType": "InheritanceSpecifier",
									"src": "632:7:2"
								}
							],
							"canonicalName": "Pausable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 288,
								"nodeType": "StructuredDocumentation",
								"src": "162:439:2",
								"text": " @dev Contract module which allows children to implement an emergency stop\n mechanism that can be triggered by an authorized account.\n This module is used through inheritance. It will make available the\n modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n the functions of your contract. Note that they will not be pausable by\n simply including this module, only once the modifiers are put in place."
							},
							"fullyImplemented": true,
							"id": 392,
							"linearizedBaseContracts": [
								392,
								1620
							],
							"name": "Pausable",
							"nameLocation": "620:8:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 291,
										"nodeType": "StructuredDocumentation",
										"src": "646:73:2",
										"text": " @dev Emitted when the pause is triggered by `account`."
									},
									"eventSelector": "62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258",
									"id": 295,
									"name": "Paused",
									"nameLocation": "730:6:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 294,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 293,
												"indexed": false,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "745:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 295,
												"src": "737:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 292,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "737:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "736:17:2"
									},
									"src": "724:30:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 296,
										"nodeType": "StructuredDocumentation",
										"src": "760:70:2",
										"text": " @dev Emitted when the pause is lifted by `account`."
									},
									"eventSelector": "5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa",
									"id": 300,
									"name": "Unpaused",
									"nameLocation": "841:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 299,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 298,
												"indexed": false,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "858:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 300,
												"src": "850:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 297,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "850:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "849:17:2"
									},
									"src": "835:32:2"
								},
								{
									"constant": false,
									"id": 302,
									"mutability": "mutable",
									"name": "_paused",
									"nameLocation": "886:7:2",
									"nodeType": "VariableDeclaration",
									"scope": 392,
									"src": "873:20:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 301,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "873:4:2",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 310,
										"nodeType": "Block",
										"src": "986:32:2",
										"statements": [
											{
												"expression": {
													"id": 308,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 306,
														"name": "_paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 302,
														"src": "996:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 307,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1006:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "996:15:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 309,
												"nodeType": "ExpressionStatement",
												"src": "996:15:2"
											}
										]
									},
									"documentation": {
										"id": 303,
										"nodeType": "StructuredDocumentation",
										"src": "900:67:2",
										"text": " @dev Initializes the contract in unpaused state."
									},
									"id": 311,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 304,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "983:2:2"
									},
									"returnParameters": {
										"id": 305,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "986:0:2"
									},
									"scope": 392,
									"src": "972:46:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 318,
										"nodeType": "Block",
										"src": "1229:47:2",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 314,
														"name": "_requireNotPaused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 348,
														"src": "1239:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 315,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1239:19:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 316,
												"nodeType": "ExpressionStatement",
												"src": "1239:19:2"
											},
											{
												"id": 317,
												"nodeType": "PlaceholderStatement",
												"src": "1268:1:2"
											}
										]
									},
									"documentation": {
										"id": 312,
										"nodeType": "StructuredDocumentation",
										"src": "1024:175:2",
										"text": " @dev Modifier to make a function callable only when the contract is not paused.\n Requirements:\n - The contract must not be paused."
									},
									"id": 319,
									"name": "whenNotPaused",
									"nameLocation": "1213:13:2",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 313,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1226:2:2"
									},
									"src": "1204:72:2",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 326,
										"nodeType": "Block",
										"src": "1476:44:2",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 322,
														"name": "_requirePaused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 359,
														"src": "1486:14:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 323,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1486:16:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 324,
												"nodeType": "ExpressionStatement",
												"src": "1486:16:2"
											},
											{
												"id": 325,
												"nodeType": "PlaceholderStatement",
												"src": "1512:1:2"
											}
										]
									},
									"documentation": {
										"id": 320,
										"nodeType": "StructuredDocumentation",
										"src": "1282:167:2",
										"text": " @dev Modifier to make a function callable only when the contract is paused.\n Requirements:\n - The contract must be paused."
									},
									"id": 327,
									"name": "whenPaused",
									"nameLocation": "1463:10:2",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 321,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1473:2:2"
									},
									"src": "1454:66:2",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 335,
										"nodeType": "Block",
										"src": "1668:31:2",
										"statements": [
											{
												"expression": {
													"id": 333,
													"name": "_paused",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 302,
													"src": "1685:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 332,
												"id": 334,
												"nodeType": "Return",
												"src": "1678:14:2"
											}
										]
									},
									"documentation": {
										"id": 328,
										"nodeType": "StructuredDocumentation",
										"src": "1526:84:2",
										"text": " @dev Returns true if the contract is paused, and false otherwise."
									},
									"functionSelector": "5c975abb",
									"id": 336,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "paused",
									"nameLocation": "1624:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 329,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1630:2:2"
									},
									"returnParameters": {
										"id": 332,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 331,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "1662:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 330,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1662:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1661:6:2"
									},
									"scope": 392,
									"src": "1615:84:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 347,
										"nodeType": "Block",
										"src": "1818:55:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 343,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "1836:9:2",
															"subExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 341,
																	"name": "paused",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 336,
																	"src": "1837:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
																		"typeString": "function () view returns (bool)"
																	}
																},
																"id": 342,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1837:8:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5061757361626c653a20706175736564",
															"id": 344,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1847:18:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a",
																"typeString": "literal_string \"Pausable: paused\""
															},
															"value": "Pausable: paused"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a",
																"typeString": "literal_string \"Pausable: paused\""
															}
														],
														"id": 340,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1828:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 345,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1828:38:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 346,
												"nodeType": "ExpressionStatement",
												"src": "1828:38:2"
											}
										]
									},
									"documentation": {
										"id": 337,
										"nodeType": "StructuredDocumentation",
										"src": "1705:57:2",
										"text": " @dev Throws if the contract is paused."
									},
									"id": 348,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_requireNotPaused",
									"nameLocation": "1776:17:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 338,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1793:2:2"
									},
									"returnParameters": {
										"id": 339,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1818:0:2"
									},
									"scope": 392,
									"src": "1767:106:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 358,
										"nodeType": "Block",
										"src": "1993:58:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 353,
																"name": "paused",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 336,
																"src": "2011:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
																	"typeString": "function () view returns (bool)"
																}
															},
															"id": 354,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2011:8:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5061757361626c653a206e6f7420706175736564",
															"id": 355,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2021:22:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a",
																"typeString": "literal_string \"Pausable: not paused\""
															},
															"value": "Pausable: not paused"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a",
																"typeString": "literal_string \"Pausable: not paused\""
															}
														],
														"id": 352,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2003:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 356,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2003:41:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 357,
												"nodeType": "ExpressionStatement",
												"src": "2003:41:2"
											}
										]
									},
									"documentation": {
										"id": 349,
										"nodeType": "StructuredDocumentation",
										"src": "1879:61:2",
										"text": " @dev Throws if the contract is not paused."
									},
									"id": 359,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_requirePaused",
									"nameLocation": "1954:14:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 350,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1968:2:2"
									},
									"returnParameters": {
										"id": 351,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1993:0:2"
									},
									"scope": 392,
									"src": "1945:106:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 374,
										"nodeType": "Block",
										"src": "2235:66:2",
										"statements": [
											{
												"expression": {
													"id": 367,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 365,
														"name": "_paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 302,
														"src": "2245:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 366,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2255:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "2245:14:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 368,
												"nodeType": "ExpressionStatement",
												"src": "2245:14:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 370,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1602,
																"src": "2281:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 371,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2281:12:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 369,
														"name": "Paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 295,
														"src": "2274:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 372,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2274:20:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 373,
												"nodeType": "EmitStatement",
												"src": "2269:25:2"
											}
										]
									},
									"documentation": {
										"id": 360,
										"nodeType": "StructuredDocumentation",
										"src": "2057:124:2",
										"text": " @dev Triggers stopped state.\n Requirements:\n - The contract must not be paused."
									},
									"id": 375,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 363,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 362,
												"name": "whenNotPaused",
												"nameLocations": [
													"2221:13:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 319,
												"src": "2221:13:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "2221:13:2"
										}
									],
									"name": "_pause",
									"nameLocation": "2195:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 361,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2201:2:2"
									},
									"returnParameters": {
										"id": 364,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2235:0:2"
									},
									"scope": 392,
									"src": "2186:115:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 390,
										"nodeType": "Block",
										"src": "2481:69:2",
										"statements": [
											{
												"expression": {
													"id": 383,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 381,
														"name": "_paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 302,
														"src": "2491:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 382,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2501:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "2491:15:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 384,
												"nodeType": "ExpressionStatement",
												"src": "2491:15:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 386,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1602,
																"src": "2530:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 387,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2530:12:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 385,
														"name": "Unpaused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 300,
														"src": "2521:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 388,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2521:22:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 389,
												"nodeType": "EmitStatement",
												"src": "2516:27:2"
											}
										]
									},
									"documentation": {
										"id": 376,
										"nodeType": "StructuredDocumentation",
										"src": "2307:121:2",
										"text": " @dev Returns to normal state.\n Requirements:\n - The contract must be paused."
									},
									"id": 391,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 379,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 378,
												"name": "whenPaused",
												"nameLocations": [
													"2470:10:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 327,
												"src": "2470:10:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "2470:10:2"
										}
									],
									"name": "_unpause",
									"nameLocation": "2442:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 377,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2450:2:2"
									},
									"returnParameters": {
										"id": 380,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2481:0:2"
									},
									"scope": 392,
									"src": "2433:117:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 393,
							"src": "602:1950:2",
							"usedErrors": [],
							"usedEvents": [
								295,
								300
							]
						}
					],
					"src": "105:2448:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
					"exportedSymbols": {
						"Context": [
							1620
						],
						"ERC20": [
							907
						],
						"IERC20": [
							985
						],
						"IERC20Errors": [
							189
						],
						"IERC20Metadata": [
							1011
						]
					},
					"id": 908,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 394,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "105:24:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 396,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 908,
							"sourceUnit": 986,
							"src": "131:36:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 395,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 985,
										"src": "139:6:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
							"file": "./extensions/IERC20Metadata.sol",
							"id": 398,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 908,
							"sourceUnit": 1012,
							"src": "168:63:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 397,
										"name": "IERC20Metadata",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1011,
										"src": "176:14:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 400,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 908,
							"sourceUnit": 1621,
							"src": "232:48:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 399,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1620,
										"src": "240:7:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
							"file": "../../interfaces/draft-IERC6093.sol",
							"id": 402,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 908,
							"sourceUnit": 285,
							"src": "281:65:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 401,
										"name": "IERC20Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 189,
										"src": "289:12:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 404,
										"name": "Context",
										"nameLocations": [
											"1428:7:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1620,
										"src": "1428:7:3"
									},
									"id": 405,
									"nodeType": "InheritanceSpecifier",
									"src": "1428:7:3"
								},
								{
									"baseName": {
										"id": 406,
										"name": "IERC20",
										"nameLocations": [
											"1437:6:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 985,
										"src": "1437:6:3"
									},
									"id": 407,
									"nodeType": "InheritanceSpecifier",
									"src": "1437:6:3"
								},
								{
									"baseName": {
										"id": 408,
										"name": "IERC20Metadata",
										"nameLocations": [
											"1445:14:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1011,
										"src": "1445:14:3"
									},
									"id": 409,
									"nodeType": "InheritanceSpecifier",
									"src": "1445:14:3"
								},
								{
									"baseName": {
										"id": 410,
										"name": "IERC20Errors",
										"nameLocations": [
											"1461:12:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 189,
										"src": "1461:12:3"
									},
									"id": 411,
									"nodeType": "InheritanceSpecifier",
									"src": "1461:12:3"
								}
							],
							"canonicalName": "ERC20",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 403,
								"nodeType": "StructuredDocumentation",
								"src": "348:1052:3",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC20\n applications.\n Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n This allows applications to reconstruct the allowance for all accounts just\n by listening to said events. Other implementations of the EIP may not emit\n these events, as it isn't required by the specification."
							},
							"fullyImplemented": true,
							"id": 907,
							"linearizedBaseContracts": [
								907,
								189,
								1011,
								985,
								1620
							],
							"name": "ERC20",
							"nameLocation": "1419:5:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 415,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "1524:9:3",
									"nodeType": "VariableDeclaration",
									"scope": 907,
									"src": "1480:53:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 414,
										"keyName": "account",
										"keyNameLocation": "1496:7:3",
										"keyType": {
											"id": 412,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1488:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1480:35:3",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 413,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1507:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 421,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "1612:11:3",
									"nodeType": "VariableDeclaration",
									"scope": 907,
									"src": "1540:83:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 420,
										"keyName": "account",
										"keyNameLocation": "1556:7:3",
										"keyType": {
											"id": 416,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1548:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1540:63:3",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 419,
											"keyName": "spender",
											"keyNameLocation": "1583:7:3",
											"keyType": {
												"id": 417,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1575:7:3",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1567:35:3",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 418,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1594:7:3",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 423,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "1646:12:3",
									"nodeType": "VariableDeclaration",
									"scope": 907,
									"src": "1630:28:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 422,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1630:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 425,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "1680:5:3",
									"nodeType": "VariableDeclaration",
									"scope": 907,
									"src": "1665:20:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 424,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1665:6:3",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 427,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "1706:7:3",
									"nodeType": "VariableDeclaration",
									"scope": 907,
									"src": "1691:22:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 426,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1691:6:3",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 443,
										"nodeType": "Block",
										"src": "1952:57:3",
										"statements": [
											{
												"expression": {
													"id": 437,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 435,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 425,
														"src": "1962:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 436,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 430,
														"src": "1970:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1962:13:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 438,
												"nodeType": "ExpressionStatement",
												"src": "1962:13:3"
											},
											{
												"expression": {
													"id": 441,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 439,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 427,
														"src": "1985:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 440,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 432,
														"src": "1995:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1985:17:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 442,
												"nodeType": "ExpressionStatement",
												"src": "1985:17:3"
											}
										]
									},
									"documentation": {
										"id": 428,
										"nodeType": "StructuredDocumentation",
										"src": "1720:171:3",
										"text": " @dev Sets the values for {name} and {symbol}.\n All two of these values are immutable: they can only be set once during\n construction."
									},
									"id": 444,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 433,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 430,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "1922:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 444,
												"src": "1908:19:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 429,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1908:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 432,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "1943:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 444,
												"src": "1929:21:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 431,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1929:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1907:44:3"
									},
									"returnParameters": {
										"id": 434,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1952:0:3"
									},
									"scope": 907,
									"src": "1896:113:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										998
									],
									"body": {
										"id": 452,
										"nodeType": "Block",
										"src": "2134:29:3",
										"statements": [
											{
												"expression": {
													"id": 450,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 425,
													"src": "2151:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 449,
												"id": 451,
												"nodeType": "Return",
												"src": "2144:12:3"
											}
										]
									},
									"documentation": {
										"id": 445,
										"nodeType": "StructuredDocumentation",
										"src": "2015:54:3",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 453,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "2083:4:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 446,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2087:2:3"
									},
									"returnParameters": {
										"id": 449,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 448,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 453,
												"src": "2119:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 447,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2119:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2118:15:3"
									},
									"scope": 907,
									"src": "2074:89:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1004
									],
									"body": {
										"id": 461,
										"nodeType": "Block",
										"src": "2338:31:3",
										"statements": [
											{
												"expression": {
													"id": 459,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 427,
													"src": "2355:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 458,
												"id": 460,
												"nodeType": "Return",
												"src": "2348:14:3"
											}
										]
									},
									"documentation": {
										"id": 454,
										"nodeType": "StructuredDocumentation",
										"src": "2169:102:3",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 462,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "2285:6:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 455,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2291:2:3"
									},
									"returnParameters": {
										"id": 458,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 457,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 462,
												"src": "2323:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 456,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2323:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2322:15:3"
									},
									"scope": 907,
									"src": "2276:93:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1010
									],
									"body": {
										"id": 470,
										"nodeType": "Block",
										"src": "3058:26:3",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 468,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3075:2:3",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 467,
												"id": 469,
												"nodeType": "Return",
												"src": "3068:9:3"
											}
										]
									},
									"documentation": {
										"id": 463,
										"nodeType": "StructuredDocumentation",
										"src": "2375:622:3",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 471,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "3011:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 464,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3019:2:3"
									},
									"returnParameters": {
										"id": 467,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 466,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 471,
												"src": "3051:5:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 465,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "3051:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3050:7:3"
									},
									"scope": 907,
									"src": "3002:82:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										934
									],
									"body": {
										"id": 479,
										"nodeType": "Block",
										"src": "3205:36:3",
										"statements": [
											{
												"expression": {
													"id": 477,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 423,
													"src": "3222:12:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 476,
												"id": 478,
												"nodeType": "Return",
												"src": "3215:19:3"
											}
										]
									},
									"documentation": {
										"id": 472,
										"nodeType": "StructuredDocumentation",
										"src": "3090:49:3",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 480,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "3153:11:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 473,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3164:2:3"
									},
									"returnParameters": {
										"id": 476,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 475,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 480,
												"src": "3196:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 474,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3196:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3195:9:3"
									},
									"scope": 907,
									"src": "3144:97:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										942
									],
									"body": {
										"id": 492,
										"nodeType": "Block",
										"src": "3373:42:3",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 488,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 415,
														"src": "3390:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 490,
													"indexExpression": {
														"id": 489,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 483,
														"src": "3400:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3390:18:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 487,
												"id": 491,
												"nodeType": "Return",
												"src": "3383:25:3"
											}
										]
									},
									"documentation": {
										"id": 481,
										"nodeType": "StructuredDocumentation",
										"src": "3247:47:3",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 493,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "3308:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 484,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 483,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3326:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 493,
												"src": "3318:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 482,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3318:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3317:17:3"
									},
									"returnParameters": {
										"id": 487,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 486,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 493,
												"src": "3364:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 485,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3364:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3363:9:3"
									},
									"scope": 907,
									"src": "3299:116:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										952
									],
									"body": {
										"id": 516,
										"nodeType": "Block",
										"src": "3685:103:3",
										"statements": [
											{
												"assignments": [
													504
												],
												"declarations": [
													{
														"constant": false,
														"id": 504,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "3703:5:3",
														"nodeType": "VariableDeclaration",
														"scope": 516,
														"src": "3695:13:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 503,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3695:7:3",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 507,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 505,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1602,
														"src": "3711:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 506,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3711:12:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3695:28:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 509,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 504,
															"src": "3743:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 510,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 496,
															"src": "3750:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 511,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 498,
															"src": "3754:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 508,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 637,
														"src": "3733:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 512,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3733:27:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 513,
												"nodeType": "ExpressionStatement",
												"src": "3733:27:3"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 514,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3777:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 502,
												"id": 515,
												"nodeType": "Return",
												"src": "3770:11:3"
											}
										]
									},
									"documentation": {
										"id": 494,
										"nodeType": "StructuredDocumentation",
										"src": "3421:184:3",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."
									},
									"functionSelector": "a9059cbb",
									"id": 517,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "3619:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 499,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 496,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3636:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 517,
												"src": "3628:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 495,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3628:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 498,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3648:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 517,
												"src": "3640:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 497,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3640:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3627:27:3"
									},
									"returnParameters": {
										"id": 502,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 501,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 517,
												"src": "3679:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 500,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3679:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3678:6:3"
									},
									"scope": 907,
									"src": "3610:178:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										962
									],
									"body": {
										"id": 533,
										"nodeType": "Block",
										"src": "3935:51:3",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 527,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 421,
															"src": "3952:11:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 529,
														"indexExpression": {
															"id": 528,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 520,
															"src": "3964:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3952:18:3",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 531,
													"indexExpression": {
														"id": 530,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 522,
														"src": "3971:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3952:27:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 526,
												"id": 532,
												"nodeType": "Return",
												"src": "3945:34:3"
											}
										]
									},
									"documentation": {
										"id": 518,
										"nodeType": "StructuredDocumentation",
										"src": "3794:47:3",
										"text": " @dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 534,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "3855:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 523,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 520,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3873:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 534,
												"src": "3865:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 519,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3865:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 522,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3888:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 534,
												"src": "3880:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 521,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3880:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3864:32:3"
									},
									"returnParameters": {
										"id": 526,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 525,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 534,
												"src": "3926:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 524,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3926:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3925:9:3"
									},
									"scope": 907,
									"src": "3846:140:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										972
									],
									"body": {
										"id": 557,
										"nodeType": "Block",
										"src": "4372:107:3",
										"statements": [
											{
												"assignments": [
													545
												],
												"declarations": [
													{
														"constant": false,
														"id": 545,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "4390:5:3",
														"nodeType": "VariableDeclaration",
														"scope": 557,
														"src": "4382:13:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 544,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4382:7:3",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 548,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 546,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1602,
														"src": "4398:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 547,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4398:12:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4382:28:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 550,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 545,
															"src": "4429:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 551,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 537,
															"src": "4436:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 552,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 539,
															"src": "4445:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 549,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															798,
															858
														],
														"referencedDeclaration": 798,
														"src": "4420:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 553,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4420:31:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 554,
												"nodeType": "ExpressionStatement",
												"src": "4420:31:3"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 555,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4468:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 543,
												"id": 556,
												"nodeType": "Return",
												"src": "4461:11:3"
											}
										]
									},
									"documentation": {
										"id": 535,
										"nodeType": "StructuredDocumentation",
										"src": "3992:296:3",
										"text": " @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 558,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "4302:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 540,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 537,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4318:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 558,
												"src": "4310:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 536,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4310:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 539,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4335:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 558,
												"src": "4327:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 538,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4327:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4309:32:3"
									},
									"returnParameters": {
										"id": 543,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 542,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 558,
												"src": "4366:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 541,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4366:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4365:6:3"
									},
									"scope": 907,
									"src": "4293:186:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										984
									],
									"body": {
										"id": 589,
										"nodeType": "Block",
										"src": "5132:151:3",
										"statements": [
											{
												"assignments": [
													571
												],
												"declarations": [
													{
														"constant": false,
														"id": 571,
														"mutability": "mutable",
														"name": "spender",
														"nameLocation": "5150:7:3",
														"nodeType": "VariableDeclaration",
														"scope": 589,
														"src": "5142:15:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 570,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "5142:7:3",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 574,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 572,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1602,
														"src": "5160:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 573,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5160:12:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5142:30:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 576,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 561,
															"src": "5198:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 577,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 571,
															"src": "5204:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 578,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 565,
															"src": "5213:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 575,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 906,
														"src": "5182:15:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 579,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5182:37:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 580,
												"nodeType": "ExpressionStatement",
												"src": "5182:37:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 582,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 561,
															"src": "5239:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 583,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 563,
															"src": "5245:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 584,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 565,
															"src": "5249:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 581,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 637,
														"src": "5229:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 585,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5229:26:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 586,
												"nodeType": "ExpressionStatement",
												"src": "5229:26:3"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 587,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5272:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 569,
												"id": 588,
												"nodeType": "Return",
												"src": "5265:11:3"
											}
										]
									},
									"documentation": {
										"id": 559,
										"nodeType": "StructuredDocumentation",
										"src": "4485:549:3",
										"text": " @dev See {IERC20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {ERC20}.\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."
									},
									"functionSelector": "23b872dd",
									"id": 590,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "5048:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 566,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 561,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5069:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 590,
												"src": "5061:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 560,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5061:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 563,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5083:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 590,
												"src": "5075:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 562,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5075:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 565,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5095:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 590,
												"src": "5087:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 564,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5087:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5060:41:3"
									},
									"returnParameters": {
										"id": 569,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 568,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 590,
												"src": "5126:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 567,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5126:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5125:6:3"
									},
									"scope": 907,
									"src": "5039:244:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 636,
										"nodeType": "Block",
										"src": "5725:231:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 605,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 600,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 593,
														"src": "5739:4:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 603,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5755:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 602,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5747:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 601,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5747:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 604,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5747:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5739:18:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 614,
												"nodeType": "IfStatement",
												"src": "5735:86:3",
												"trueBody": {
													"id": 613,
													"nodeType": "Block",
													"src": "5759:62:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 609,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5807:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 608,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5799:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 607,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5799:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 610,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5799:10:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 606,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 164,
																	"src": "5780:18:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 611,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5780:30:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 612,
															"nodeType": "RevertStatement",
															"src": "5773:37:3"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 620,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 615,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 595,
														"src": "5834:2:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 618,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5848:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 617,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5840:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 616,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5840:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 619,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5840:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5834:16:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 629,
												"nodeType": "IfStatement",
												"src": "5830:86:3",
												"trueBody": {
													"id": 628,
													"nodeType": "Block",
													"src": "5852:64:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 624,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5902:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 623,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5894:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 622,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5894:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 625,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5894:10:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 621,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 169,
																	"src": "5873:20:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 626,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5873:32:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 627,
															"nodeType": "RevertStatement",
															"src": "5866:39:3"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 631,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 593,
															"src": "5933:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 632,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 595,
															"src": "5939:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 633,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 597,
															"src": "5943:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 630,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 714,
														"src": "5925:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 634,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5925:24:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 635,
												"nodeType": "ExpressionStatement",
												"src": "5925:24:3"
											}
										]
									},
									"documentation": {
										"id": 591,
										"nodeType": "StructuredDocumentation",
										"src": "5289:362:3",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 637,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "5665:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 598,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 593,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5683:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 637,
												"src": "5675:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 592,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5675:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 595,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5697:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 637,
												"src": "5689:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 594,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5689:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 597,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5709:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 637,
												"src": "5701:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 596,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5701:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5674:41:3"
									},
									"returnParameters": {
										"id": 599,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5725:0:3"
									},
									"scope": 907,
									"src": "5656:300:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 713,
										"nodeType": "Block",
										"src": "6346:1032:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 652,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 647,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 640,
														"src": "6360:4:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 650,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6376:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 649,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6368:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 648,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6368:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 651,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6368:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6360:18:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 684,
													"nodeType": "Block",
													"src": "6534:362:3",
													"statements": [
														{
															"assignments": [
																659
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 659,
																	"mutability": "mutable",
																	"name": "fromBalance",
																	"nameLocation": "6556:11:3",
																	"nodeType": "VariableDeclaration",
																	"scope": 684,
																	"src": "6548:19:3",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 658,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "6548:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 663,
															"initialValue": {
																"baseExpression": {
																	"id": 660,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 415,
																	"src": "6570:9:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 662,
																"indexExpression": {
																	"id": 661,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 640,
																	"src": "6580:4:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6570:15:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6548:37:3"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 666,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 664,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 659,
																	"src": "6603:11:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 665,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 644,
																	"src": "6617:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6603:19:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 674,
															"nodeType": "IfStatement",
															"src": "6599:115:3",
															"trueBody": {
																"id": 673,
																"nodeType": "Block",
																"src": "6624:90:3",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 668,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 640,
																					"src": "6674:4:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 669,
																					"name": "fromBalance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 659,
																					"src": "6680:11:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 670,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 644,
																					"src": "6693:5:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 667,
																				"name": "ERC20InsufficientBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 159,
																				"src": "6649:24:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 671,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6649:50:3",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 672,
																		"nodeType": "RevertStatement",
																		"src": "6642:57:3"
																	}
																]
															}
														},
														{
															"id": 683,
															"nodeType": "UncheckedBlock",
															"src": "6727:159:3",
															"statements": [
																{
																	"expression": {
																		"id": 681,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 675,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 415,
																				"src": "6834:9:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 677,
																			"indexExpression": {
																				"id": 676,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 640,
																				"src": "6844:4:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "6834:15:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 680,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 678,
																				"name": "fromBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 659,
																				"src": "6852:11:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 679,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 644,
																				"src": "6866:5:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "6852:19:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6834:37:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 682,
																	"nodeType": "ExpressionStatement",
																	"src": "6834:37:3"
																}
															]
														}
													]
												},
												"id": 685,
												"nodeType": "IfStatement",
												"src": "6356:540:3",
												"trueBody": {
													"id": 657,
													"nodeType": "Block",
													"src": "6380:148:3",
													"statements": [
														{
															"expression": {
																"id": 655,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 653,
																	"name": "_totalSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 423,
																	"src": "6496:12:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 654,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 644,
																	"src": "6512:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6496:21:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 656,
															"nodeType": "ExpressionStatement",
															"src": "6496:21:3"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 691,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 686,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 642,
														"src": "6910:2:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 689,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6924:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 688,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6916:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 687,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6916:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 690,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6916:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6910:16:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 705,
													"nodeType": "Block",
													"src": "7125:206:3",
													"statements": [
														{
															"id": 704,
															"nodeType": "UncheckedBlock",
															"src": "7139:182:3",
															"statements": [
																{
																	"expression": {
																		"id": 702,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 698,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 415,
																				"src": "7284:9:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 700,
																			"indexExpression": {
																				"id": 699,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 642,
																				"src": "7294:2:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "7284:13:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"id": 701,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 644,
																			"src": "7301:5:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7284:22:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 703,
																	"nodeType": "ExpressionStatement",
																	"src": "7284:22:3"
																}
															]
														}
													]
												},
												"id": 706,
												"nodeType": "IfStatement",
												"src": "6906:425:3",
												"trueBody": {
													"id": 697,
													"nodeType": "Block",
													"src": "6928:191:3",
													"statements": [
														{
															"id": 696,
															"nodeType": "UncheckedBlock",
															"src": "6942:167:3",
															"statements": [
																{
																	"expression": {
																		"id": 694,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 692,
																			"name": "_totalSupply",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 423,
																			"src": "7073:12:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "-=",
																		"rightHandSide": {
																			"id": 693,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 644,
																			"src": "7089:5:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7073:21:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 695,
																	"nodeType": "ExpressionStatement",
																	"src": "7073:21:3"
																}
															]
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 708,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 640,
															"src": "7355:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 709,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 642,
															"src": "7361:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 710,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 644,
															"src": "7365:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 707,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 919,
														"src": "7346:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 711,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7346:25:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 712,
												"nodeType": "EmitStatement",
												"src": "7341:30:3"
											}
										]
									},
									"documentation": {
										"id": 638,
										"nodeType": "StructuredDocumentation",
										"src": "5962:304:3",
										"text": " @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."
									},
									"id": 714,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "6280:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 645,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 640,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6296:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 714,
												"src": "6288:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 639,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6288:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 642,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6310:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 714,
												"src": "6302:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 641,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6302:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 644,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6322:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 714,
												"src": "6314:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 643,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6314:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6287:41:3"
									},
									"returnParameters": {
										"id": 646,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6346:0:3"
									},
									"scope": 907,
									"src": "6271:1107:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 746,
										"nodeType": "Block",
										"src": "7777:152:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 727,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 722,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 717,
														"src": "7791:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 725,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7810:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 724,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7802:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 723,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7802:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 726,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7802:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7791:21:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 736,
												"nodeType": "IfStatement",
												"src": "7787:91:3",
												"trueBody": {
													"id": 735,
													"nodeType": "Block",
													"src": "7814:64:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 731,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "7864:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 730,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "7856:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 729,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "7856:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 732,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7856:10:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 728,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 169,
																	"src": "7835:20:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 733,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7835:32:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 734,
															"nodeType": "RevertStatement",
															"src": "7828:39:3"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 740,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7903:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 739,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7895:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 738,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "7895:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 741,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7895:10:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 742,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 717,
															"src": "7907:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 743,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 719,
															"src": "7916:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 737,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 714,
														"src": "7887:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 744,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7887:35:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 745,
												"nodeType": "ExpressionStatement",
												"src": "7887:35:3"
											}
										]
									},
									"documentation": {
										"id": 715,
										"nodeType": "StructuredDocumentation",
										"src": "7384:332:3",
										"text": " @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 747,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "7730:5:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 720,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 717,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7744:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 747,
												"src": "7736:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 716,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7736:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 719,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7761:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 747,
												"src": "7753:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 718,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7753:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7735:32:3"
									},
									"returnParameters": {
										"id": 721,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7777:0:3"
									},
									"scope": 907,
									"src": "7721:208:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 779,
										"nodeType": "Block",
										"src": "8303:150:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 760,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 755,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 750,
														"src": "8317:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 758,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8336:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 757,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "8328:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 756,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "8328:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 759,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8328:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "8317:21:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 769,
												"nodeType": "IfStatement",
												"src": "8313:89:3",
												"trueBody": {
													"id": 768,
													"nodeType": "Block",
													"src": "8340:62:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 764,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "8388:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 763,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "8380:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 762,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "8380:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 765,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8380:10:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 761,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 164,
																	"src": "8361:18:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 766,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8361:30:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 767,
															"nodeType": "RevertStatement",
															"src": "8354:37:3"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 771,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 750,
															"src": "8419:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 774,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8436:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 773,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8428:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 772,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8428:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 775,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8428:10:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 776,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 752,
															"src": "8440:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 770,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 714,
														"src": "8411:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 777,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8411:35:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 778,
												"nodeType": "ExpressionStatement",
												"src": "8411:35:3"
											}
										]
									},
									"documentation": {
										"id": 748,
										"nodeType": "StructuredDocumentation",
										"src": "7935:307:3",
										"text": " @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"
									},
									"id": 780,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "8256:5:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 753,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 750,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "8270:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 780,
												"src": "8262:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 749,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8262:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 752,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8287:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 780,
												"src": "8279:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 751,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8279:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8261:32:3"
									},
									"returnParameters": {
										"id": 754,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8303:0:3"
									},
									"scope": 907,
									"src": "8247:206:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 797,
										"nodeType": "Block",
										"src": "9063:54:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 791,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 783,
															"src": "9082:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 792,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 785,
															"src": "9089:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 793,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 787,
															"src": "9098:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "74727565",
															"id": 794,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9105:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 790,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															798,
															858
														],
														"referencedDeclaration": 858,
														"src": "9073:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (address,address,uint256,bool)"
														}
													},
													"id": 795,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9073:37:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 796,
												"nodeType": "ExpressionStatement",
												"src": "9073:37:3"
											}
										]
									},
									"documentation": {
										"id": 781,
										"nodeType": "StructuredDocumentation",
										"src": "8459:525:3",
										"text": " @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."
									},
									"id": 798,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "8998:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 788,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 783,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "9015:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 798,
												"src": "9007:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 782,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9007:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 785,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "9030:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 798,
												"src": "9022:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 784,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9022:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 787,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9047:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 798,
												"src": "9039:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 786,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9039:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9006:47:3"
									},
									"returnParameters": {
										"id": 789,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9063:0:3"
									},
									"scope": 907,
									"src": "8989:128:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 857,
										"nodeType": "Block",
										"src": "10047:334:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 815,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 810,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 801,
														"src": "10061:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 813,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10078:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 812,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "10070:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 811,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "10070:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 814,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10070:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10061:19:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 824,
												"nodeType": "IfStatement",
												"src": "10057:89:3",
												"trueBody": {
													"id": 823,
													"nodeType": "Block",
													"src": "10082:64:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 819,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10132:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 818,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "10124:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 817,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "10124:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 820,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10124:10:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 816,
																	"name": "ERC20InvalidApprover",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 183,
																	"src": "10103:20:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 821,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10103:32:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 822,
															"nodeType": "RevertStatement",
															"src": "10096:39:3"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 830,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 825,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 803,
														"src": "10159:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 828,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10178:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 827,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "10170:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 826,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "10170:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 829,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10170:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10159:21:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 839,
												"nodeType": "IfStatement",
												"src": "10155:90:3",
												"trueBody": {
													"id": 838,
													"nodeType": "Block",
													"src": "10182:63:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 834,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10231:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 833,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "10223:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 832,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "10223:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 835,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10223:10:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 831,
																	"name": "ERC20InvalidSpender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 188,
																	"src": "10203:19:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 836,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10203:31:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 837,
															"nodeType": "RevertStatement",
															"src": "10196:38:3"
														}
													]
												}
											},
											{
												"expression": {
													"id": 846,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 840,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 421,
																"src": "10254:11:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 843,
															"indexExpression": {
																"id": 841,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 801,
																"src": "10266:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "10254:18:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 844,
														"indexExpression": {
															"id": 842,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 803,
															"src": "10273:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "10254:27:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 845,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 805,
														"src": "10284:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10254:35:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 847,
												"nodeType": "ExpressionStatement",
												"src": "10254:35:3"
											},
											{
												"condition": {
													"id": 848,
													"name": "emitEvent",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 807,
													"src": "10303:9:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 856,
												"nodeType": "IfStatement",
												"src": "10299:76:3",
												"trueBody": {
													"id": 855,
													"nodeType": "Block",
													"src": "10314:61:3",
													"statements": [
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 850,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 801,
																		"src": "10342:5:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 851,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 803,
																		"src": "10349:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 852,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 805,
																		"src": "10358:5:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 849,
																	"name": "Approval",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 928,
																	"src": "10333:8:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 853,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10333:31:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 854,
															"nodeType": "EmitStatement",
															"src": "10328:36:3"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 799,
										"nodeType": "StructuredDocumentation",
										"src": "9123:821:3",
										"text": " @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."
									},
									"id": 858,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "9958:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 808,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 801,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "9975:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 858,
												"src": "9967:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 800,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9967:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 803,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "9990:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 858,
												"src": "9982:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 802,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9982:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 805,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10007:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 858,
												"src": "9999:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 804,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9999:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 807,
												"mutability": "mutable",
												"name": "emitEvent",
												"nameLocation": "10019:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 858,
												"src": "10014:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 806,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "10014:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9966:63:3"
									},
									"returnParameters": {
										"id": 809,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10047:0:3"
									},
									"scope": 907,
									"src": "9949:432:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 905,
										"nodeType": "Block",
										"src": "10752:388:3",
										"statements": [
											{
												"assignments": [
													869
												],
												"declarations": [
													{
														"constant": false,
														"id": 869,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "10770:16:3",
														"nodeType": "VariableDeclaration",
														"scope": 905,
														"src": "10762:24:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 868,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10762:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 874,
												"initialValue": {
													"arguments": [
														{
															"id": 871,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 861,
															"src": "10799:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 872,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 863,
															"src": "10806:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 870,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 534,
														"src": "10789:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 873,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10789:25:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10762:52:3"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 881,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 875,
														"name": "currentAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 869,
														"src": "10828:16:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 878,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10853:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 877,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "10853:7:3",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 876,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "10848:4:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 879,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10848:13:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 880,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "10862:3:3",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "10848:17:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10828:37:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 904,
												"nodeType": "IfStatement",
												"src": "10824:310:3",
												"trueBody": {
													"id": 903,
													"nodeType": "Block",
													"src": "10867:267:3",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 884,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 882,
																	"name": "currentAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 869,
																	"src": "10885:16:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 883,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 865,
																	"src": "10904:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10885:24:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 892,
															"nodeType": "IfStatement",
															"src": "10881:130:3",
															"trueBody": {
																"id": 891,
																"nodeType": "Block",
																"src": "10911:100:3",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 886,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 863,
																					"src": "10963:7:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 887,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 869,
																					"src": "10972:16:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 888,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 865,
																					"src": "10990:5:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 885,
																				"name": "ERC20InsufficientAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 178,
																				"src": "10936:26:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 889,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "10936:60:3",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 890,
																		"nodeType": "RevertStatement",
																		"src": "10929:67:3"
																	}
																]
															}
														},
														{
															"id": 902,
															"nodeType": "UncheckedBlock",
															"src": "11024:100:3",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 894,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 861,
																				"src": "11061:5:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 895,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 863,
																				"src": "11068:7:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 898,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 896,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 869,
																					"src": "11077:16:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 897,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 865,
																					"src": "11096:5:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "11077:24:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"hexValue": "66616c7365",
																				"id": 899,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "bool",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "11103:5:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"value": "false"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			],
																			"id": 893,
																			"name": "_approve",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [
																				798,
																				858
																			],
																			"referencedDeclaration": 858,
																			"src": "11052:8:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
																				"typeString": "function (address,address,uint256,bool)"
																			}
																		},
																		"id": 900,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "11052:57:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 901,
																	"nodeType": "ExpressionStatement",
																	"src": "11052:57:3"
																}
															]
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 859,
										"nodeType": "StructuredDocumentation",
										"src": "10387:271:3",
										"text": " @dev Updates `owner` s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."
									},
									"id": 906,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_spendAllowance",
									"nameLocation": "10672:15:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 866,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 861,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "10696:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 906,
												"src": "10688:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 860,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10688:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 863,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "10711:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 906,
												"src": "10703:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 862,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10703:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 865,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10728:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 906,
												"src": "10720:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 864,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10720:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10687:47:3"
									},
									"returnParameters": {
										"id": 867,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10752:0:3"
									},
									"scope": 907,
									"src": "10663:477:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 908,
							"src": "1401:9741:3",
							"usedErrors": [
								159,
								164,
								169,
								178,
								183,
								188
							],
							"usedEvents": [
								919,
								928
							]
						}
					],
					"src": "105:11038:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							985
						]
					},
					"id": 986,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 909,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:4"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 910,
								"nodeType": "StructuredDocumentation",
								"src": "132:70:4",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 985,
							"linearizedBaseContracts": [
								985
							],
							"name": "IERC20",
							"nameLocation": "213:6:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 911,
										"nodeType": "StructuredDocumentation",
										"src": "226:158:4",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 919,
									"name": "Transfer",
									"nameLocation": "395:8:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 918,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 913,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "420:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 919,
												"src": "404:20:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 912,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "404:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 915,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "442:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 919,
												"src": "426:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 914,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "426:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 917,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "454:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 919,
												"src": "446:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 916,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "446:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "403:57:4"
									},
									"src": "389:72:4"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 920,
										"nodeType": "StructuredDocumentation",
										"src": "467:148:4",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 928,
									"name": "Approval",
									"nameLocation": "626:8:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 927,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 922,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "651:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 928,
												"src": "635:21:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 921,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "635:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 924,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "674:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 928,
												"src": "658:23:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 923,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "658:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 926,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "691:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 928,
												"src": "683:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 925,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "683:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "634:63:4"
									},
									"src": "620:78:4"
								},
								{
									"documentation": {
										"id": 929,
										"nodeType": "StructuredDocumentation",
										"src": "704:65:4",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 934,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "783:11:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 930,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "794:2:4"
									},
									"returnParameters": {
										"id": 933,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 932,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 934,
												"src": "820:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 931,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "819:9:4"
									},
									"scope": 985,
									"src": "774:55:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 935,
										"nodeType": "StructuredDocumentation",
										"src": "835:71:4",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 942,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "920:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 938,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 937,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "938:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 942,
												"src": "930:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 936,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "930:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "929:17:4"
									},
									"returnParameters": {
										"id": 941,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 940,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 942,
												"src": "970:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 939,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "970:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "969:9:4"
									},
									"scope": 985,
									"src": "911:68:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 943,
										"nodeType": "StructuredDocumentation",
										"src": "985:213:4",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 952,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1212:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 948,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 945,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1229:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 952,
												"src": "1221:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 944,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1221:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 947,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1241:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 952,
												"src": "1233:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 946,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1233:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1220:27:4"
									},
									"returnParameters": {
										"id": 951,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 950,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 952,
												"src": "1266:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 949,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1266:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1265:6:4"
									},
									"scope": 985,
									"src": "1203:69:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 953,
										"nodeType": "StructuredDocumentation",
										"src": "1278:264:4",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 962,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1556:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 958,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 955,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1574:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 962,
												"src": "1566:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 954,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1566:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 957,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1589:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 962,
												"src": "1581:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 956,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1581:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1565:32:4"
									},
									"returnParameters": {
										"id": 961,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 960,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 962,
												"src": "1621:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 959,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1621:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1620:9:4"
									},
									"scope": 985,
									"src": "1547:83:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 963,
										"nodeType": "StructuredDocumentation",
										"src": "1636:667:4",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 972,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2317:7:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 968,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 965,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2333:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 972,
												"src": "2325:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 964,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2325:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 967,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2350:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 972,
												"src": "2342:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 966,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2342:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2324:32:4"
									},
									"returnParameters": {
										"id": 971,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 970,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 972,
												"src": "2375:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 969,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2375:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2374:6:4"
									},
									"scope": 985,
									"src": "2308:73:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 973,
										"nodeType": "StructuredDocumentation",
										"src": "2387:297:4",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 984,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2698:12:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 980,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 975,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2719:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 984,
												"src": "2711:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 974,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2711:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 977,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2733:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 984,
												"src": "2725:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 976,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2725:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 979,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2745:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 984,
												"src": "2737:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 978,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2737:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2710:41:4"
									},
									"returnParameters": {
										"id": 983,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 982,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 984,
												"src": "2770:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 981,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2770:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2769:6:4"
									},
									"scope": 985,
									"src": "2689:87:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 986,
							"src": "203:2575:4",
							"usedErrors": [],
							"usedEvents": [
								919,
								928
							]
						}
					],
					"src": "106:2673:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
					"exportedSymbols": {
						"IERC20": [
							985
						],
						"IERC20Metadata": [
							1011
						]
					},
					"id": 1012,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 987,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "125:24:5"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 989,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1012,
							"sourceUnit": 986,
							"src": "151:37:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 988,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 985,
										"src": "159:6:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 991,
										"name": "IERC20",
										"nameLocations": [
											"305:6:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 985,
										"src": "305:6:5"
									},
									"id": 992,
									"nodeType": "InheritanceSpecifier",
									"src": "305:6:5"
								}
							],
							"canonicalName": "IERC20Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 990,
								"nodeType": "StructuredDocumentation",
								"src": "190:86:5",
								"text": " @dev Interface for the optional metadata functions from the ERC20 standard."
							},
							"fullyImplemented": false,
							"id": 1011,
							"linearizedBaseContracts": [
								1011,
								985
							],
							"name": "IERC20Metadata",
							"nameLocation": "287:14:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 993,
										"nodeType": "StructuredDocumentation",
										"src": "318:54:5",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 998,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "386:4:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 994,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "390:2:5"
									},
									"returnParameters": {
										"id": 997,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 996,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 998,
												"src": "416:13:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 995,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "416:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "415:15:5"
									},
									"scope": 1011,
									"src": "377:54:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 999,
										"nodeType": "StructuredDocumentation",
										"src": "437:56:5",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 1004,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "507:6:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1000,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "513:2:5"
									},
									"returnParameters": {
										"id": 1003,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1002,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1004,
												"src": "539:13:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1001,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "539:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "538:15:5"
									},
									"scope": 1011,
									"src": "498:56:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1005,
										"nodeType": "StructuredDocumentation",
										"src": "560:65:5",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 1010,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "639:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1006,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "647:2:5"
									},
									"returnParameters": {
										"id": 1009,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1008,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1010,
												"src": "673:5:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1007,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "673:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "672:7:5"
									},
									"scope": 1011,
									"src": "630:50:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1012,
							"src": "277:405:5",
							"usedErrors": [],
							"usedEvents": [
								919,
								928
							]
						}
					],
					"src": "125:558:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
					"exportedSymbols": {
						"IERC20Permit": [
							1047
						]
					},
					"id": 1048,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1013,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "123:24:6"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Permit",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1014,
								"nodeType": "StructuredDocumentation",
								"src": "149:1963:6",
								"text": " @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n need to send a transaction, and thus is not required to hold Ether at all.\n ==== Security Considerations\n There are two important considerations concerning the use of `permit`. The first is that a valid permit signature\n expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be\n considered as an intention to spend the allowance in any specific way. The second is that because permits have\n built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should\n take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be\n generally recommended is:\n ```solidity\n function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {\n     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}\n     doThing(..., value);\n }\n function doThing(..., uint256 value) public {\n     token.safeTransferFrom(msg.sender, address(this), value);\n     ...\n }\n ```\n Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of\n `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also\n {SafeERC20-safeTransferFrom}).\n Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so\n contracts should have entry points that don't rely on permit."
							},
							"fullyImplemented": false,
							"id": 1047,
							"linearizedBaseContracts": [
								1047
							],
							"name": "IERC20Permit",
							"nameLocation": "2123:12:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1015,
										"nodeType": "StructuredDocumentation",
										"src": "2142:850:6",
										"text": " @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n given ``owner``'s signed approval.\n IMPORTANT: The same issues {IERC20-approve} has related to transaction\n ordering also apply here.\n Emits an {Approval} event.\n Requirements:\n - `spender` cannot be the zero address.\n - `deadline` must be a timestamp in the future.\n - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n over the EIP712-formatted function arguments.\n - the signature must use ``owner``'s current nonce (see {nonces}).\n For more information on the signature format, see the\n https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n section].\n CAUTION: See Security Considerations above."
									},
									"functionSelector": "d505accf",
									"id": 1032,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "permit",
									"nameLocation": "3006:6:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1030,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1017,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3030:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1032,
												"src": "3022:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1016,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3022:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1019,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3053:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1032,
												"src": "3045:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1018,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3045:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1021,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3078:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1032,
												"src": "3070:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1020,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3070:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1023,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "3101:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1032,
												"src": "3093:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1022,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3093:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1025,
												"mutability": "mutable",
												"name": "v",
												"nameLocation": "3125:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1032,
												"src": "3119:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1024,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "3119:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1027,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "3144:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1032,
												"src": "3136:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1026,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3136:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1029,
												"mutability": "mutable",
												"name": "s",
												"nameLocation": "3163:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1032,
												"src": "3155:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1028,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3155:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3012:158:6"
									},
									"returnParameters": {
										"id": 1031,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3179:0:6"
									},
									"scope": 1047,
									"src": "2997:183:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1033,
										"nodeType": "StructuredDocumentation",
										"src": "3186:294:6",
										"text": " @dev Returns the current nonce for `owner`. This value must be\n included whenever a signature is generated for {permit}.\n Every successful call to {permit} increases ``owner``'s nonce by one. This\n prevents a signature from being used multiple times."
									},
									"functionSelector": "7ecebe00",
									"id": 1040,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "nonces",
									"nameLocation": "3494:6:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1036,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1035,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3509:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1040,
												"src": "3501:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1034,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3501:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3500:15:6"
									},
									"returnParameters": {
										"id": 1039,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1038,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1040,
												"src": "3539:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1037,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3539:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3538:9:6"
									},
									"scope": 1047,
									"src": "3485:63:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1041,
										"nodeType": "StructuredDocumentation",
										"src": "3554:128:6",
										"text": " @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}."
									},
									"functionSelector": "3644e515",
									"id": 1046,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "DOMAIN_SEPARATOR",
									"nameLocation": "3749:16:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1042,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3765:2:6"
									},
									"returnParameters": {
										"id": 1045,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1044,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1046,
												"src": "3791:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1043,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3791:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3790:9:6"
									},
									"scope": 1047,
									"src": "3740:60:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1048,
							"src": "2113:1689:6",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "123:3680:6"
				},
				"id": 6
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
					"exportedSymbols": {
						"Address": [
							1590
						],
						"IERC20": [
							985
						],
						"IERC20Permit": [
							1047
						],
						"SafeERC20": [
							1337
						]
					},
					"id": 1338,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1049,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "115:24:7"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 1051,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1338,
							"sourceUnit": 986,
							"src": "141:37:7",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1050,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 985,
										"src": "149:6:7",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
							"file": "../extensions/IERC20Permit.sol",
							"id": 1053,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1338,
							"sourceUnit": 1048,
							"src": "179:60:7",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1052,
										"name": "IERC20Permit",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1047,
										"src": "187:12:7",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
							"file": "../../../utils/Address.sol",
							"id": 1055,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1338,
							"sourceUnit": 1591,
							"src": "240:51:7",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1054,
										"name": "Address",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1590,
										"src": "248:7:7",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeERC20",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1056,
								"nodeType": "StructuredDocumentation",
								"src": "293:457:7",
								"text": " @title SafeERC20\n @dev Wrappers around ERC20 operations that throw on failure (when the token\n contract returns false). Tokens that return no value (and instead revert or\n throw on failure) are also supported, non-reverting calls are assumed to be\n successful.\n To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n which allows you to call the safe operations as `token.safeTransfer(...)`, etc."
							},
							"fullyImplemented": true,
							"id": 1337,
							"linearizedBaseContracts": [
								1337
							],
							"name": "SafeERC20",
							"nameLocation": "759:9:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 1059,
									"libraryName": {
										"id": 1057,
										"name": "Address",
										"nameLocations": [
											"781:7:7"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1590,
										"src": "781:7:7"
									},
									"nodeType": "UsingForDirective",
									"src": "775:26:7",
									"typeName": {
										"id": 1058,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "793:7:7",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									}
								},
								{
									"documentation": {
										"id": 1060,
										"nodeType": "StructuredDocumentation",
										"src": "807:64:7",
										"text": " @dev An operation with an ERC20 token failed."
									},
									"errorSelector": "5274afe7",
									"id": 1064,
									"name": "SafeERC20FailedOperation",
									"nameLocation": "882:24:7",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1063,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1062,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "915:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1064,
												"src": "907:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1061,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "907:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "906:15:7"
									},
									"src": "876:46:7"
								},
								{
									"documentation": {
										"id": 1065,
										"nodeType": "StructuredDocumentation",
										"src": "928:71:7",
										"text": " @dev Indicates a failed `decreaseAllowance` request."
									},
									"errorSelector": "e570110f",
									"id": 1073,
									"name": "SafeERC20FailedDecreaseAllowance",
									"nameLocation": "1010:32:7",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1072,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1067,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1051:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1073,
												"src": "1043:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1066,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1043:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1069,
												"mutability": "mutable",
												"name": "currentAllowance",
												"nameLocation": "1068:16:7",
												"nodeType": "VariableDeclaration",
												"scope": 1073,
												"src": "1060:24:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1068,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1060:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1071,
												"mutability": "mutable",
												"name": "requestedDecrease",
												"nameLocation": "1094:17:7",
												"nodeType": "VariableDeclaration",
												"scope": 1073,
												"src": "1086:25:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1070,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1086:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1042:70:7"
									},
									"src": "1004:109:7"
								},
								{
									"body": {
										"id": 1096,
										"nodeType": "Block",
										"src": "1375:88:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1085,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1077,
															"src": "1405:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$985",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 1088,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1077,
																		"src": "1427:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$985",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 1089,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1433:8:7",
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 952,
																	"src": "1427:14:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	}
																},
																{
																	"components": [
																		{
																			"id": 1090,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1079,
																			"src": "1444:2:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 1091,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1081,
																			"src": "1448:5:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1092,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "1443:11:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,uint256)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	},
																	{
																		"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,uint256)"
																	}
																],
																"expression": {
																	"id": 1086,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1412:3:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 1087,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1416:10:7",
																"memberName": "encodeCall",
																"nodeType": "MemberAccess",
																"src": "1412:14:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 1093,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1412:43:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$985",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1084,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1287,
														"src": "1385:19:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$985_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 1094,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1385:71:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1095,
												"nodeType": "ExpressionStatement",
												"src": "1385:71:7"
											}
										]
									},
									"documentation": {
										"id": 1074,
										"nodeType": "StructuredDocumentation",
										"src": "1119:179:7",
										"text": " @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n non-reverting calls are assumed to be successful."
									},
									"id": 1097,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransfer",
									"nameLocation": "1312:12:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1082,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1077,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1332:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1097,
												"src": "1325:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$985",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 1076,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1075,
														"name": "IERC20",
														"nameLocations": [
															"1325:6:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 985,
														"src": "1325:6:7"
													},
													"referencedDeclaration": 985,
													"src": "1325:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$985",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1079,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1347:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 1097,
												"src": "1339:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1078,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1339:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1081,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1359:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1097,
												"src": "1351:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1080,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1351:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1324:41:7"
									},
									"returnParameters": {
										"id": 1083,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1375:0:7"
									},
									"scope": 1337,
									"src": "1303:160:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1123,
										"nodeType": "Block",
										"src": "1792:98:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1111,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1101,
															"src": "1822:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$985",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 1114,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1101,
																		"src": "1844:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$985",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 1115,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1850:12:7",
																	"memberName": "transferFrom",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 984,
																	"src": "1844:18:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	}
																},
																{
																	"components": [
																		{
																			"id": 1116,
																			"name": "from",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1103,
																			"src": "1865:4:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 1117,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1105,
																			"src": "1871:2:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 1118,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1107,
																			"src": "1875:5:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1119,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "1864:17:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,address,uint256)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	},
																	{
																		"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,address,uint256)"
																	}
																],
																"expression": {
																	"id": 1112,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1829:3:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 1113,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1833:10:7",
																"memberName": "encodeCall",
																"nodeType": "MemberAccess",
																"src": "1829:14:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 1120,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1829:53:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$985",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1110,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1287,
														"src": "1802:19:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$985_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 1121,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1802:81:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1122,
												"nodeType": "ExpressionStatement",
												"src": "1802:81:7"
											}
										]
									},
									"documentation": {
										"id": 1098,
										"nodeType": "StructuredDocumentation",
										"src": "1469:228:7",
										"text": " @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n calling contract. If `token` returns no value, non-reverting calls are assumed to be successful."
									},
									"id": 1124,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "1711:16:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1108,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1101,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1735:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1124,
												"src": "1728:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$985",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 1100,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1099,
														"name": "IERC20",
														"nameLocations": [
															"1728:6:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 985,
														"src": "1728:6:7"
													},
													"referencedDeclaration": 985,
													"src": "1728:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$985",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1103,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1750:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1124,
												"src": "1742:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1102,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1742:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1105,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1764:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 1124,
												"src": "1756:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1104,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1756:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1107,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1776:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1124,
												"src": "1768:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1106,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1768:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1727:55:7"
									},
									"returnParameters": {
										"id": 1109,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1792:0:7"
									},
									"scope": 1337,
									"src": "1702:188:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1154,
										"nodeType": "Block",
										"src": "2167:139:7",
										"statements": [
											{
												"assignments": [
													1136
												],
												"declarations": [
													{
														"constant": false,
														"id": 1136,
														"mutability": "mutable",
														"name": "oldAllowance",
														"nameLocation": "2185:12:7",
														"nodeType": "VariableDeclaration",
														"scope": 1154,
														"src": "2177:20:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1135,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2177:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1145,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1141,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "2224:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_SafeERC20_$1337",
																		"typeString": "library SafeERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_SafeERC20_$1337",
																		"typeString": "library SafeERC20"
																	}
																],
																"id": 1140,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2216:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1139,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2216:7:7",
																	"typeDescriptions": {}
																}
															},
															"id": 1142,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2216:13:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1143,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1130,
															"src": "2231:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 1137,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1128,
															"src": "2200:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$985",
																"typeString": "contract IERC20"
															}
														},
														"id": 1138,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2206:9:7",
														"memberName": "allowance",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 962,
														"src": "2200:15:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view external returns (uint256)"
														}
													},
													"id": 1144,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2200:39:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2177:62:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1147,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1128,
															"src": "2262:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$985",
																"typeString": "contract IERC20"
															}
														},
														{
															"id": 1148,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1130,
															"src": "2269:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1151,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1149,
																"name": "oldAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1136,
																"src": "2278:12:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 1150,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1132,
																"src": "2293:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2278:20:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$985",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1146,
														"name": "forceApprove",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1245,
														"src": "2249:12:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$985_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 1152,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2249:50:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1153,
												"nodeType": "ExpressionStatement",
												"src": "2249:50:7"
											}
										]
									},
									"documentation": {
										"id": 1125,
										"nodeType": "StructuredDocumentation",
										"src": "1896:180:7",
										"text": " @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful."
									},
									"id": 1155,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeIncreaseAllowance",
									"nameLocation": "2090:21:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1133,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1128,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2119:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1155,
												"src": "2112:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$985",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 1127,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1126,
														"name": "IERC20",
														"nameLocations": [
															"2112:6:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 985,
														"src": "2112:6:7"
													},
													"referencedDeclaration": 985,
													"src": "2112:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$985",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1130,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2134:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1155,
												"src": "2126:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1129,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2126:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1132,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2151:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1155,
												"src": "2143:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1131,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2143:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2111:46:7"
									},
									"returnParameters": {
										"id": 1134,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2167:0:7"
									},
									"scope": 1337,
									"src": "2081:225:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1197,
										"nodeType": "Block",
										"src": "2607:370:7",
										"statements": [
											{
												"id": 1196,
												"nodeType": "UncheckedBlock",
												"src": "2617:354:7",
												"statements": [
													{
														"assignments": [
															1167
														],
														"declarations": [
															{
																"constant": false,
																"id": 1167,
																"mutability": "mutable",
																"name": "currentAllowance",
																"nameLocation": "2649:16:7",
																"nodeType": "VariableDeclaration",
																"scope": 1196,
																"src": "2641:24:7",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1166,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2641:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1176,
														"initialValue": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 1172,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2692:4:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_SafeERC20_$1337",
																				"typeString": "library SafeERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_SafeERC20_$1337",
																				"typeString": "library SafeERC20"
																			}
																		],
																		"id": 1171,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2684:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1170,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2684:7:7",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1173,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2684:13:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1174,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1161,
																	"src": "2699:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 1168,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1159,
																	"src": "2668:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$985",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 1169,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2674:9:7",
																"memberName": "allowance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 962,
																"src": "2668:15:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address,address) view external returns (uint256)"
																}
															},
															"id": 1175,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2668:39:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "2641:66:7"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1179,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1177,
																"name": "currentAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1167,
																"src": "2725:16:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 1178,
																"name": "requestedDecrease",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1163,
																"src": "2744:17:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2725:36:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1187,
														"nodeType": "IfStatement",
														"src": "2721:160:7",
														"trueBody": {
															"id": 1186,
															"nodeType": "Block",
															"src": "2763:118:7",
															"statements": [
																{
																	"errorCall": {
																		"arguments": [
																			{
																				"id": 1181,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1161,
																				"src": "2821:7:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 1182,
																				"name": "currentAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1167,
																				"src": "2830:16:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"id": 1183,
																				"name": "requestedDecrease",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1163,
																				"src": "2848:17:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 1180,
																			"name": "SafeERC20FailedDecreaseAllowance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1073,
																			"src": "2788:32:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																				"typeString": "function (address,uint256,uint256) pure returns (error)"
																			}
																		},
																		"id": 1184,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2788:78:7",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_error",
																			"typeString": "error"
																		}
																	},
																	"id": 1185,
																	"nodeType": "RevertStatement",
																	"src": "2781:85:7"
																}
															]
														}
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 1189,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1159,
																	"src": "2907:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$985",
																		"typeString": "contract IERC20"
																	}
																},
																{
																	"id": 1190,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1161,
																	"src": "2914:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1193,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1191,
																		"name": "currentAllowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1167,
																		"src": "2923:16:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 1192,
																		"name": "requestedDecrease",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1163,
																		"src": "2942:17:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2923:36:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$985",
																		"typeString": "contract IERC20"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1188,
																"name": "forceApprove",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1245,
																"src": "2894:12:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$985_$_t_address_$_t_uint256_$returns$__$",
																	"typeString": "function (contract IERC20,address,uint256)"
																}
															},
															"id": 1194,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2894:66:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 1195,
														"nodeType": "ExpressionStatement",
														"src": "2894:66:7"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1156,
										"nodeType": "StructuredDocumentation",
										"src": "2312:192:7",
										"text": " @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\n value, non-reverting calls are assumed to be successful."
									},
									"id": 1198,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeDecreaseAllowance",
									"nameLocation": "2518:21:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1164,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1159,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2547:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1198,
												"src": "2540:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$985",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 1158,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1157,
														"name": "IERC20",
														"nameLocations": [
															"2540:6:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 985,
														"src": "2540:6:7"
													},
													"referencedDeclaration": 985,
													"src": "2540:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$985",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1161,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2562:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1198,
												"src": "2554:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1160,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2554:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1163,
												"mutability": "mutable",
												"name": "requestedDecrease",
												"nameLocation": "2579:17:7",
												"nodeType": "VariableDeclaration",
												"scope": 1198,
												"src": "2571:25:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1162,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2571:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2539:58:7"
									},
									"returnParameters": {
										"id": 1165,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2607:0:7"
									},
									"scope": 1337,
									"src": "2509:468:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1244,
										"nodeType": "Block",
										"src": "3373:303:7",
										"statements": [
											{
												"assignments": [
													1210
												],
												"declarations": [
													{
														"constant": false,
														"id": 1210,
														"mutability": "mutable",
														"name": "approvalCall",
														"nameLocation": "3396:12:7",
														"nodeType": "VariableDeclaration",
														"scope": 1244,
														"src": "3383:25:7",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1209,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3383:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1219,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 1213,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1202,
																"src": "3426:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$985",
																	"typeString": "contract IERC20"
																}
															},
															"id": 1214,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3432:7:7",
															"memberName": "approve",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 972,
															"src": "3426:13:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (address,uint256) external returns (bool)"
															}
														},
														{
															"components": [
																{
																	"id": 1215,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1204,
																	"src": "3442:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1216,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1206,
																	"src": "3451:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1217,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "3441:16:7",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																"typeString": "tuple(address,uint256)"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (address,uint256) external returns (bool)"
															},
															{
																"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																"typeString": "tuple(address,uint256)"
															}
														],
														"expression": {
															"id": 1211,
															"name": "abi",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967295,
															"src": "3411:3:7",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_abi",
																"typeString": "abi"
															}
														},
														"id": 1212,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "3415:10:7",
														"memberName": "encodeCall",
														"nodeType": "MemberAccess",
														"src": "3411:14:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
															"typeString": "function () pure returns (bytes memory)"
														}
													},
													"id": 1218,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3411:47:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3383:75:7"
											},
											{
												"condition": {
													"id": 1224,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "3473:45:7",
													"subExpression": {
														"arguments": [
															{
																"id": 1221,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1202,
																"src": "3498:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$985",
																	"typeString": "contract IERC20"
																}
															},
															{
																"id": 1222,
																"name": "approvalCall",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1210,
																"src": "3505:12:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_IERC20_$985",
																	"typeString": "contract IERC20"
																},
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 1220,
															"name": "_callOptionalReturnBool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1336,
															"src": "3474:23:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$985_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																"typeString": "function (contract IERC20,bytes memory) returns (bool)"
															}
														},
														"id": 1223,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3474:44:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1243,
												"nodeType": "IfStatement",
												"src": "3469:201:7",
												"trueBody": {
													"id": 1242,
													"nodeType": "Block",
													"src": "3520:150:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1226,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1202,
																		"src": "3554:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$985",
																			"typeString": "contract IERC20"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"expression": {
																					"id": 1229,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1202,
																					"src": "3576:5:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$985",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 1230,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "3582:7:7",
																				"memberName": "approve",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 972,
																				"src": "3576:13:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,uint256) external returns (bool)"
																				}
																			},
																			{
																				"components": [
																					{
																						"id": 1231,
																						"name": "spender",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1204,
																						"src": "3592:7:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					{
																						"hexValue": "30",
																						"id": 1232,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "3601:1:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_0_by_1",
																							"typeString": "int_const 0"
																						},
																						"value": "0"
																					}
																				],
																				"id": 1233,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "3591:12:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_tuple$_t_address_$_t_rational_0_by_1_$",
																					"typeString": "tuple(address,int_const 0)"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,uint256) external returns (bool)"
																				},
																				{
																					"typeIdentifier": "t_tuple$_t_address_$_t_rational_0_by_1_$",
																					"typeString": "tuple(address,int_const 0)"
																				}
																			],
																			"expression": {
																				"id": 1227,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967295,
																				"src": "3561:3:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 1228,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberLocation": "3565:10:7",
																			"memberName": "encodeCall",
																			"nodeType": "MemberAccess",
																			"src": "3561:14:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																				"typeString": "function () pure returns (bytes memory)"
																			}
																		},
																		"id": 1234,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3561:43:7",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20_$985",
																			"typeString": "contract IERC20"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 1225,
																	"name": "_callOptionalReturn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1287,
																	"src": "3534:19:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$985_$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (contract IERC20,bytes memory)"
																	}
																},
																"id": 1235,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3534:71:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1236,
															"nodeType": "ExpressionStatement",
															"src": "3534:71:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1238,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1202,
																		"src": "3639:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$985",
																			"typeString": "contract IERC20"
																		}
																	},
																	{
																		"id": 1239,
																		"name": "approvalCall",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1210,
																		"src": "3646:12:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20_$985",
																			"typeString": "contract IERC20"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 1237,
																	"name": "_callOptionalReturn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1287,
																	"src": "3619:19:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$985_$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (contract IERC20,bytes memory)"
																	}
																},
																"id": 1240,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3619:40:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1241,
															"nodeType": "ExpressionStatement",
															"src": "3619:40:7"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1199,
										"nodeType": "StructuredDocumentation",
										"src": "2983:308:7",
										"text": " @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n to be set to zero before setting it to a non-zero value, such as USDT."
									},
									"id": 1245,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "forceApprove",
									"nameLocation": "3305:12:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1207,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1202,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "3325:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1245,
												"src": "3318:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$985",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 1201,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1200,
														"name": "IERC20",
														"nameLocations": [
															"3318:6:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 985,
														"src": "3318:6:7"
													},
													"referencedDeclaration": 985,
													"src": "3318:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$985",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1204,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3340:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1245,
												"src": "3332:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1203,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3332:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1206,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3357:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1245,
												"src": "3349:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1205,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3349:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3317:46:7"
									},
									"returnParameters": {
										"id": 1208,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3373:0:7"
									},
									"scope": 1337,
									"src": "3296:380:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1286,
										"nodeType": "Block",
										"src": "4129:559:7",
										"statements": [
											{
												"assignments": [
													1255
												],
												"declarations": [
													{
														"constant": false,
														"id": 1255,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "4491:10:7",
														"nodeType": "VariableDeclaration",
														"scope": 1286,
														"src": "4478:23:7",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1254,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "4478:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1263,
												"initialValue": {
													"arguments": [
														{
															"id": 1261,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1251,
															"src": "4532:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 1258,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1249,
																	"src": "4512:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$985",
																		"typeString": "contract IERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$985",
																		"typeString": "contract IERC20"
																	}
																],
																"id": 1257,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "4504:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1256,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "4504:7:7",
																	"typeDescriptions": {}
																}
															},
															"id": 1259,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4504:14:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1260,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4519:12:7",
														"memberName": "functionCall",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1411,
														"src": "4504:27:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$attached_to$_t_address_$",
															"typeString": "function (address,bytes memory) returns (bytes memory)"
														}
													},
													"id": 1262,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4504:33:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4478:59:7"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1276,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1267,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 1264,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1255,
																"src": "4551:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 1265,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4562:6:7",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "4551:17:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"hexValue": "30",
															"id": 1266,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4572:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "4551:22:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"id": 1275,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "4577:31:7",
														"subExpression": {
															"arguments": [
																{
																	"id": 1270,
																	"name": "returndata",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1255,
																	"src": "4589:10:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																},
																{
																	"components": [
																		{
																			"id": 1272,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "4602:4:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_bool_$",
																				"typeString": "type(bool)"
																			},
																			"typeName": {
																				"id": 1271,
																				"name": "bool",
																				"nodeType": "ElementaryTypeName",
																				"src": "4602:4:7",
																				"typeDescriptions": {}
																			}
																		}
																	],
																	"id": 1273,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "4601:6:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bool_$",
																		"typeString": "type(bool)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	},
																	{
																		"typeIdentifier": "t_type$_t_bool_$",
																		"typeString": "type(bool)"
																	}
																],
																"expression": {
																	"id": 1268,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "4578:3:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 1269,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "4582:6:7",
																"memberName": "decode",
																"nodeType": "MemberAccess",
																"src": "4578:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 1274,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4578:30:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "4551:57:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1285,
												"nodeType": "IfStatement",
												"src": "4547:135:7",
												"trueBody": {
													"id": 1284,
													"nodeType": "Block",
													"src": "4610:72:7",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 1280,
																				"name": "token",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1249,
																				"src": "4664:5:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_IERC20_$985",
																					"typeString": "contract IERC20"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_IERC20_$985",
																					"typeString": "contract IERC20"
																				}
																			],
																			"id": 1279,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "4656:7:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1278,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "4656:7:7",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1281,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4656:14:7",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1277,
																	"name": "SafeERC20FailedOperation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1064,
																	"src": "4631:24:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 1282,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4631:40:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1283,
															"nodeType": "RevertStatement",
															"src": "4624:47:7"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1246,
										"nodeType": "StructuredDocumentation",
										"src": "3682:372:7",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants)."
									},
									"id": 1287,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturn",
									"nameLocation": "4068:19:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1252,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1249,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "4095:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1287,
												"src": "4088:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$985",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 1248,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1247,
														"name": "IERC20",
														"nameLocations": [
															"4088:6:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 985,
														"src": "4088:6:7"
													},
													"referencedDeclaration": 985,
													"src": "4088:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$985",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1251,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4115:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1287,
												"src": "4102:17:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1250,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4102:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4087:33:7"
									},
									"returnParameters": {
										"id": 1253,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4129:0:7"
									},
									"scope": 1337,
									"src": "4059:629:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1335,
										"nodeType": "Block",
										"src": "5278:489:7",
										"statements": [
											{
												"assignments": [
													1299,
													1301
												],
												"declarations": [
													{
														"constant": false,
														"id": 1299,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "5579:7:7",
														"nodeType": "VariableDeclaration",
														"scope": 1335,
														"src": "5574:12:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1298,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "5574:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1301,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "5601:10:7",
														"nodeType": "VariableDeclaration",
														"scope": 1335,
														"src": "5588:23:7",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1300,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5588:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1309,
												"initialValue": {
													"arguments": [
														{
															"id": 1307,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1293,
															"src": "5635:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 1304,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1291,
																	"src": "5623:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$985",
																		"typeString": "contract IERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$985",
																		"typeString": "contract IERC20"
																	}
																],
																"id": 1303,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "5615:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1302,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "5615:7:7",
																	"typeDescriptions": {}
																}
															},
															"id": 1305,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5615:14:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1306,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5630:4:7",
														"memberName": "call",
														"nodeType": "MemberAccess",
														"src": "5615:19:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1308,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5615:25:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5573:67:7"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1333,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 1324,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1310,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1299,
															"src": "5657:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&&",
														"rightExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"id": 1322,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1314,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"expression": {
																				"id": 1311,
																				"name": "returndata",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1301,
																				"src": "5669:10:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			},
																			"id": 1312,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "5680:6:7",
																			"memberName": "length",
																			"nodeType": "MemberAccess",
																			"src": "5669:17:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 1313,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "5690:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "5669:22:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "||",
																	"rightExpression": {
																		"arguments": [
																			{
																				"id": 1317,
																				"name": "returndata",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1301,
																				"src": "5706:10:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			},
																			{
																				"components": [
																					{
																						"id": 1319,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "5719:4:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_bool_$",
																							"typeString": "type(bool)"
																						},
																						"typeName": {
																							"id": 1318,
																							"name": "bool",
																							"nodeType": "ElementaryTypeName",
																							"src": "5719:4:7",
																							"typeDescriptions": {}
																						}
																					}
																				],
																				"id": 1320,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "5718:6:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				},
																				{
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			],
																			"expression": {
																				"id": 1315,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967295,
																				"src": "5695:3:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 1316,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberLocation": "5699:6:7",
																			"memberName": "decode",
																			"nodeType": "MemberAccess",
																			"src": "5695:10:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 1321,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5695:30:7",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"src": "5669:56:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																}
															],
															"id": 1323,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "5668:58:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "5657:69:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1332,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 1327,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1291,
																			"src": "5738:5:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$985",
																				"typeString": "contract IERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_IERC20_$985",
																				"typeString": "contract IERC20"
																			}
																		],
																		"id": 1326,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "5730:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1325,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "5730:7:7",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1328,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5730:14:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 1329,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5745:4:7",
																"memberName": "code",
																"nodeType": "MemberAccess",
																"src": "5730:19:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 1330,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5750:6:7",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "5730:26:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 1331,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5759:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "5730:30:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "5657:103:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1297,
												"id": 1334,
												"nodeType": "Return",
												"src": "5650:110:7"
											}
										]
									},
									"documentation": {
										"id": 1288,
										"nodeType": "StructuredDocumentation",
										"src": "4694:490:7",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants).\n This is a variant of {_callOptionalReturn} that silents catches all reverts and returns a bool instead."
									},
									"id": 1336,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturnBool",
									"nameLocation": "5198:23:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1294,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1291,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "5229:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1336,
												"src": "5222:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$985",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 1290,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1289,
														"name": "IERC20",
														"nameLocations": [
															"5222:6:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 985,
														"src": "5222:6:7"
													},
													"referencedDeclaration": 985,
													"src": "5222:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$985",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1293,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5249:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1336,
												"src": "5236:17:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1292,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5236:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5221:33:7"
									},
									"returnParameters": {
										"id": 1297,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1296,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1336,
												"src": "5272:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1295,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5272:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5271:6:7"
									},
									"scope": 1337,
									"src": "5189:578:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1338,
							"src": "751:5018:7",
							"usedErrors": [
								1064,
								1073
							],
							"usedEvents": []
						}
					],
					"src": "115:5655:7"
				},
				"id": 7
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
					"exportedSymbols": {
						"Address": [
							1590
						]
					},
					"id": 1591,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1339,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:8"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Address",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1340,
								"nodeType": "StructuredDocumentation",
								"src": "127:67:8",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 1590,
							"linearizedBaseContracts": [
								1590
							],
							"name": "Address",
							"nameLocation": "203:7:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1341,
										"nodeType": "StructuredDocumentation",
										"src": "217:94:8",
										"text": " @dev The ETH balance of the account is not enough to perform the operation."
									},
									"errorSelector": "cd786059",
									"id": 1345,
									"name": "AddressInsufficientBalance",
									"nameLocation": "322:26:8",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1344,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1343,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "357:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1345,
												"src": "349:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1342,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "349:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "348:17:8"
									},
									"src": "316:50:8"
								},
								{
									"documentation": {
										"id": 1346,
										"nodeType": "StructuredDocumentation",
										"src": "372:75:8",
										"text": " @dev There's no code at `target` (it is not a contract)."
									},
									"errorSelector": "9996b315",
									"id": 1350,
									"name": "AddressEmptyCode",
									"nameLocation": "458:16:8",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1349,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1348,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "483:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1350,
												"src": "475:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1347,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "475:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "474:16:8"
									},
									"src": "452:39:8"
								},
								{
									"documentation": {
										"id": 1351,
										"nodeType": "StructuredDocumentation",
										"src": "497:89:8",
										"text": " @dev A call to an address target failed. The target may have reverted."
									},
									"errorSelector": "1425ea42",
									"id": 1353,
									"name": "FailedInnerCall",
									"nameLocation": "597:15:8",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1352,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "612:2:8"
									},
									"src": "591:24:8"
								},
								{
									"body": {
										"id": 1393,
										"nodeType": "Block",
										"src": "1602:260:8",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1367,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1363,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "1624:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Address_$1590",
																		"typeString": "library Address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Address_$1590",
																		"typeString": "library Address"
																	}
																],
																"id": 1362,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1616:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1361,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1616:7:8",
																	"typeDescriptions": {}
																}
															},
															"id": 1364,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1616:13:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1365,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1630:7:8",
														"memberName": "balance",
														"nodeType": "MemberAccess",
														"src": "1616:21:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 1366,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1358,
														"src": "1640:6:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1616:30:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1376,
												"nodeType": "IfStatement",
												"src": "1612:109:8",
												"trueBody": {
													"id": 1375,
													"nodeType": "Block",
													"src": "1648:73:8",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 1371,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "1704:4:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_Address_$1590",
																					"typeString": "library Address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_Address_$1590",
																					"typeString": "library Address"
																				}
																			],
																			"id": 1370,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1696:7:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1369,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1696:7:8",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1372,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1696:13:8",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1368,
																	"name": "AddressInsufficientBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1345,
																	"src": "1669:26:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 1373,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1669:41:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1374,
															"nodeType": "RevertStatement",
															"src": "1662:48:8"
														}
													]
												}
											},
											{
												"assignments": [
													1378,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 1378,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "1737:7:8",
														"nodeType": "VariableDeclaration",
														"scope": 1393,
														"src": "1732:12:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1377,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "1732:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 1385,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 1383,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1780:2:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 1379,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1356,
																"src": "1750:9:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 1380,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1760:4:8",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "1750:14:8",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 1382,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 1381,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1358,
																"src": "1772:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "1750:29:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1384,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1750:33:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1731:52:8"
											},
											{
												"condition": {
													"id": 1387,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "1797:8:8",
													"subExpression": {
														"id": 1386,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1378,
														"src": "1798:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1392,
												"nodeType": "IfStatement",
												"src": "1793:63:8",
												"trueBody": {
													"id": 1391,
													"nodeType": "Block",
													"src": "1807:49:8",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1388,
																	"name": "FailedInnerCall",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1353,
																	"src": "1828:15:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 1389,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1828:17:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1390,
															"nodeType": "RevertStatement",
															"src": "1821:24:8"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1354,
										"nodeType": "StructuredDocumentation",
										"src": "621:905:8",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 1394,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nameLocation": "1540:9:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1359,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1356,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "1566:9:8",
												"nodeType": "VariableDeclaration",
												"scope": 1394,
												"src": "1550:25:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 1355,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1550:15:8",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1358,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1585:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1394,
												"src": "1577:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1357,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1577:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1549:43:8"
									},
									"returnParameters": {
										"id": 1360,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1602:0:8"
									},
									"scope": 1590,
									"src": "1531:331:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1410,
										"nodeType": "Block",
										"src": "2794:62:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1405,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1397,
															"src": "2833:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1406,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1399,
															"src": "2841:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 1407,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2847:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															}
														],
														"id": 1404,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1457,
														"src": "2811:21:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256) returns (bytes memory)"
														}
													},
													"id": 1408,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2811:38:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1403,
												"id": 1409,
												"nodeType": "Return",
												"src": "2804:45:8"
											}
										]
									},
									"documentation": {
										"id": 1395,
										"nodeType": "StructuredDocumentation",
										"src": "1868:832:8",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason or custom error, it is bubbled\n up by this function (like regular Solidity function calls). However, if\n the call reverted with no returned reason, this function reverts with a\n {FailedInnerCall} error.\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert."
									},
									"id": 1411,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "2714:12:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1400,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1397,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "2735:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1411,
												"src": "2727:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1396,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2727:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1399,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2756:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1411,
												"src": "2743:17:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1398,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2743:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2726:35:8"
									},
									"returnParameters": {
										"id": 1403,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1402,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1411,
												"src": "2780:12:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1401,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2780:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2779:14:8"
									},
									"scope": 1590,
									"src": "2705:151:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1456,
										"nodeType": "Block",
										"src": "3293:279:8",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1429,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1425,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "3315:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Address_$1590",
																		"typeString": "library Address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Address_$1590",
																		"typeString": "library Address"
																	}
																],
																"id": 1424,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3307:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1423,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3307:7:8",
																	"typeDescriptions": {}
																}
															},
															"id": 1426,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3307:13:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1427,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3321:7:8",
														"memberName": "balance",
														"nodeType": "MemberAccess",
														"src": "3307:21:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 1428,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1418,
														"src": "3331:5:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3307:29:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1438,
												"nodeType": "IfStatement",
												"src": "3303:108:8",
												"trueBody": {
													"id": 1437,
													"nodeType": "Block",
													"src": "3338:73:8",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 1433,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "3394:4:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_Address_$1590",
																					"typeString": "library Address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_Address_$1590",
																					"typeString": "library Address"
																				}
																			],
																			"id": 1432,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "3386:7:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1431,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "3386:7:8",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1434,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3386:13:8",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1430,
																	"name": "AddressInsufficientBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1345,
																	"src": "3359:26:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 1435,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3359:41:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1436,
															"nodeType": "RevertStatement",
															"src": "3352:48:8"
														}
													]
												}
											},
											{
												"assignments": [
													1440,
													1442
												],
												"declarations": [
													{
														"constant": false,
														"id": 1440,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "3426:7:8",
														"nodeType": "VariableDeclaration",
														"scope": 1456,
														"src": "3421:12:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1439,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "3421:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1442,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "3448:10:8",
														"nodeType": "VariableDeclaration",
														"scope": 1456,
														"src": "3435:23:8",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1441,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3435:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1449,
												"initialValue": {
													"arguments": [
														{
															"id": 1447,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1416,
															"src": "3488:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 1443,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1414,
																"src": "3462:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1444,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3469:4:8",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "3462:11:8",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 1446,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 1445,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1418,
																"src": "3481:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "3462:25:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1448,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3462:31:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3420:73:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1451,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1414,
															"src": "3537:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1452,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1440,
															"src": "3545:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1453,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1442,
															"src": "3554:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1450,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1549,
														"src": "3510:26:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory) view returns (bytes memory)"
														}
													},
													"id": 1454,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3510:55:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1422,
												"id": 1455,
												"nodeType": "Return",
												"src": "3503:62:8"
											}
										]
									},
									"documentation": {
										"id": 1412,
										"nodeType": "StructuredDocumentation",
										"src": "2862:313:8",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`."
									},
									"id": 1457,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "3189:21:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1419,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1414,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3219:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1457,
												"src": "3211:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1413,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3211:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1416,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3240:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1457,
												"src": "3227:17:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1415,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3227:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1418,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3254:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1457,
												"src": "3246:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1417,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3246:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3210:50:8"
									},
									"returnParameters": {
										"id": 1422,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1421,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1457,
												"src": "3279:12:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1420,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3279:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3278:14:8"
									},
									"scope": 1590,
									"src": "3180:392:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1482,
										"nodeType": "Block",
										"src": "3811:154:8",
										"statements": [
											{
												"assignments": [
													1468,
													1470
												],
												"declarations": [
													{
														"constant": false,
														"id": 1468,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "3827:7:8",
														"nodeType": "VariableDeclaration",
														"scope": 1482,
														"src": "3822:12:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1467,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "3822:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1470,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "3849:10:8",
														"nodeType": "VariableDeclaration",
														"scope": 1482,
														"src": "3836:23:8",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1469,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3836:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1475,
												"initialValue": {
													"arguments": [
														{
															"id": 1473,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1462,
															"src": "3881:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 1471,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1460,
															"src": "3863:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1472,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3870:10:8",
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "3863:17:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 1474,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3863:23:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3821:65:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1477,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1460,
															"src": "3930:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1478,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1468,
															"src": "3938:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1479,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1470,
															"src": "3947:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1476,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1549,
														"src": "3903:26:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory) view returns (bytes memory)"
														}
													},
													"id": 1480,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3903:55:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1466,
												"id": 1481,
												"nodeType": "Return",
												"src": "3896:62:8"
											}
										]
									},
									"documentation": {
										"id": 1458,
										"nodeType": "StructuredDocumentation",
										"src": "3578:128:8",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call."
									},
									"id": 1483,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "3720:18:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1463,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1460,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3747:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1483,
												"src": "3739:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1459,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3739:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1462,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3768:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1483,
												"src": "3755:17:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1461,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3755:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3738:35:8"
									},
									"returnParameters": {
										"id": 1466,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1465,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1483,
												"src": "3797:12:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1464,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3797:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3796:14:8"
									},
									"scope": 1590,
									"src": "3711:254:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1508,
										"nodeType": "Block",
										"src": "4203:156:8",
										"statements": [
											{
												"assignments": [
													1494,
													1496
												],
												"declarations": [
													{
														"constant": false,
														"id": 1494,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "4219:7:8",
														"nodeType": "VariableDeclaration",
														"scope": 1508,
														"src": "4214:12:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1493,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4214:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1496,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "4241:10:8",
														"nodeType": "VariableDeclaration",
														"scope": 1508,
														"src": "4228:23:8",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1495,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "4228:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1501,
												"initialValue": {
													"arguments": [
														{
															"id": 1499,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1488,
															"src": "4275:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 1497,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1486,
															"src": "4255:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1498,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4262:12:8",
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"src": "4255:19:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 1500,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4255:25:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4213:67:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1503,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1486,
															"src": "4324:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1504,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1494,
															"src": "4332:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1505,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1496,
															"src": "4341:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1502,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1549,
														"src": "4297:26:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory) view returns (bytes memory)"
														}
													},
													"id": 1506,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4297:55:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1492,
												"id": 1507,
												"nodeType": "Return",
												"src": "4290:62:8"
											}
										]
									},
									"documentation": {
										"id": 1484,
										"nodeType": "StructuredDocumentation",
										"src": "3971:130:8",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call."
									},
									"id": 1509,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "4115:20:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1489,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1486,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4144:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1509,
												"src": "4136:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1485,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4136:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1488,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4165:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1509,
												"src": "4152:17:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1487,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4152:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4135:35:8"
									},
									"returnParameters": {
										"id": 1492,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1491,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1509,
												"src": "4189:12:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1490,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4189:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4188:14:8"
									},
									"scope": 1590,
									"src": "4106:253:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1548,
										"nodeType": "Block",
										"src": "4783:424:8",
										"statements": [
											{
												"condition": {
													"id": 1522,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "4797:8:8",
													"subExpression": {
														"id": 1521,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1514,
														"src": "4798:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1546,
													"nodeType": "Block",
													"src": "4857:344:8",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 1537,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1531,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"id": 1528,
																			"name": "returndata",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1516,
																			"src": "5045:10:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		"id": 1529,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "5056:6:8",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "5045:17:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 1530,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5066:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "5045:22:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&&",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1536,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"expression": {
																				"id": 1532,
																				"name": "target",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1512,
																				"src": "5071:6:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"id": 1533,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "5078:4:8",
																			"memberName": "code",
																			"nodeType": "MemberAccess",
																			"src": "5071:11:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		"id": 1534,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "5083:6:8",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "5071:18:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 1535,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5093:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "5071:23:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "5045:49:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1543,
															"nodeType": "IfStatement",
															"src": "5041:119:8",
															"trueBody": {
																"id": 1542,
																"nodeType": "Block",
																"src": "5096:64:8",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 1539,
																					"name": "target",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1512,
																					"src": "5138:6:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 1538,
																				"name": "AddressEmptyCode",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1350,
																				"src": "5121:16:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																					"typeString": "function (address) pure returns (error)"
																				}
																			},
																			"id": 1540,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "5121:24:8",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 1541,
																		"nodeType": "RevertStatement",
																		"src": "5114:31:8"
																	}
																]
															}
														},
														{
															"expression": {
																"id": 1544,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1516,
																"src": "5180:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 1520,
															"id": 1545,
															"nodeType": "Return",
															"src": "5173:17:8"
														}
													]
												},
												"id": 1547,
												"nodeType": "IfStatement",
												"src": "4793:408:8",
												"trueBody": {
													"id": 1527,
													"nodeType": "Block",
													"src": "4807:44:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1524,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1516,
																		"src": "4829:10:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 1523,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1589,
																	"src": "4821:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory) pure"
																	}
																},
																"id": 1525,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4821:19:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1526,
															"nodeType": "ExpressionStatement",
															"src": "4821:19:8"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1510,
										"nodeType": "StructuredDocumentation",
										"src": "4365:255:8",
										"text": " @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\n was not a contract or bubbling up the revert reason (falling back to {FailedInnerCall}) in case of an\n unsuccessful call."
									},
									"id": 1549,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResultFromTarget",
									"nameLocation": "4634:26:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1517,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1512,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4678:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1549,
												"src": "4670:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1511,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4670:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1514,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "4699:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1549,
												"src": "4694:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1513,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4694:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1516,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "4729:10:8",
												"nodeType": "VariableDeclaration",
												"scope": 1549,
												"src": "4716:23:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1515,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4716:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4660:85:8"
									},
									"returnParameters": {
										"id": 1520,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1519,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1549,
												"src": "4769:12:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1518,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4769:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4768:14:8"
									},
									"scope": 1590,
									"src": "4625:582:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1570,
										"nodeType": "Block",
										"src": "5509:122:8",
										"statements": [
											{
												"condition": {
													"id": 1560,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "5523:8:8",
													"subExpression": {
														"id": 1559,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1552,
														"src": "5524:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1568,
													"nodeType": "Block",
													"src": "5583:42:8",
													"statements": [
														{
															"expression": {
																"id": 1566,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1554,
																"src": "5604:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 1558,
															"id": 1567,
															"nodeType": "Return",
															"src": "5597:17:8"
														}
													]
												},
												"id": 1569,
												"nodeType": "IfStatement",
												"src": "5519:106:8",
												"trueBody": {
													"id": 1565,
													"nodeType": "Block",
													"src": "5533:44:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1562,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1554,
																		"src": "5555:10:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 1561,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1589,
																	"src": "5547:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory) pure"
																	}
																},
																"id": 1563,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5547:19:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1564,
															"nodeType": "ExpressionStatement",
															"src": "5547:19:8"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1550,
										"nodeType": "StructuredDocumentation",
										"src": "5213:189:8",
										"text": " @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\n revert reason or with a default {FailedInnerCall} error."
									},
									"id": 1571,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResult",
									"nameLocation": "5416:16:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1555,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1552,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "5438:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1571,
												"src": "5433:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1551,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5433:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1554,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "5460:10:8",
												"nodeType": "VariableDeclaration",
												"scope": 1571,
												"src": "5447:23:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1553,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5447:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5432:39:8"
									},
									"returnParameters": {
										"id": 1558,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1557,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1571,
												"src": "5495:12:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1556,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5495:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5494:14:8"
									},
									"scope": 1590,
									"src": "5407:224:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1588,
										"nodeType": "Block",
										"src": "5798:461:8",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1580,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1577,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1574,
															"src": "5874:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1578,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5885:6:8",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "5874:17:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1579,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5894:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5874:21:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1586,
													"nodeType": "Block",
													"src": "6204:49:8",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1583,
																	"name": "FailedInnerCall",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1353,
																	"src": "6225:15:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 1584,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6225:17:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1585,
															"nodeType": "RevertStatement",
															"src": "6218:24:8"
														}
													]
												},
												"id": 1587,
												"nodeType": "IfStatement",
												"src": "5870:383:8",
												"trueBody": {
													"id": 1582,
													"nodeType": "Block",
													"src": "5897:301:8",
													"statements": [
														{
															"AST": {
																"nativeSrc": "6055:133:8",
																"nodeType": "YulBlock",
																"src": "6055:133:8",
																"statements": [
																	{
																		"nativeSrc": "6073:40:8",
																		"nodeType": "YulVariableDeclaration",
																		"src": "6073:40:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "returndata",
																					"nativeSrc": "6102:10:8",
																					"nodeType": "YulIdentifier",
																					"src": "6102:10:8"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "6096:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "6096:5:8"
																			},
																			"nativeSrc": "6096:17:8",
																			"nodeType": "YulFunctionCall",
																			"src": "6096:17:8"
																		},
																		"variables": [
																			{
																				"name": "returndata_size",
																				"nativeSrc": "6077:15:8",
																				"nodeType": "YulTypedName",
																				"src": "6077:15:8",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "6141:2:8",
																							"nodeType": "YulLiteral",
																							"src": "6141:2:8",
																							"type": "",
																							"value": "32"
																						},
																						{
																							"name": "returndata",
																							"nativeSrc": "6145:10:8",
																							"nodeType": "YulIdentifier",
																							"src": "6145:10:8"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "6137:3:8",
																						"nodeType": "YulIdentifier",
																						"src": "6137:3:8"
																					},
																					"nativeSrc": "6137:19:8",
																					"nodeType": "YulFunctionCall",
																					"src": "6137:19:8"
																				},
																				{
																					"name": "returndata_size",
																					"nativeSrc": "6158:15:8",
																					"nodeType": "YulIdentifier",
																					"src": "6158:15:8"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "6130:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "6130:6:8"
																			},
																			"nativeSrc": "6130:44:8",
																			"nodeType": "YulFunctionCall",
																			"src": "6130:44:8"
																		},
																		"nativeSrc": "6130:44:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "6130:44:8"
																	}
																]
															},
															"documentation": "@solidity memory-safe-assembly",
															"evmVersion": "cancun",
															"externalReferences": [
																{
																	"declaration": 1574,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "6102:10:8",
																	"valueSize": 1
																},
																{
																	"declaration": 1574,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "6145:10:8",
																	"valueSize": 1
																}
															],
															"id": 1581,
															"nodeType": "InlineAssembly",
															"src": "6046:142:8"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1572,
										"nodeType": "StructuredDocumentation",
										"src": "5637:101:8",
										"text": " @dev Reverts with returndata if present. Otherwise reverts with {FailedInnerCall}."
									},
									"id": 1589,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_revert",
									"nameLocation": "5752:7:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1575,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1574,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "5773:10:8",
												"nodeType": "VariableDeclaration",
												"scope": 1589,
												"src": "5760:23:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1573,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5760:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5759:25:8"
									},
									"returnParameters": {
										"id": 1576,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5798:0:8"
									},
									"scope": 1590,
									"src": "5743:516:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1591,
							"src": "195:6066:8",
							"usedErrors": [
								1345,
								1350,
								1353
							],
							"usedEvents": []
						}
					],
					"src": "101:6161:8"
				},
				"id": 8
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							1620
						]
					},
					"id": 1621,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1592,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:9"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1593,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:9",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 1620,
							"linearizedBaseContracts": [
								1620
							],
							"name": "Context",
							"nameLocation": "642:7:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1601,
										"nodeType": "Block",
										"src": "718:34:9",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1598,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:9",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1599,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:9",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:9",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1597,
												"id": 1600,
												"nodeType": "Return",
												"src": "728:17:9"
											}
										]
									},
									"id": 1602,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1594,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:9"
									},
									"returnParameters": {
										"id": 1597,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1596,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1602,
												"src": "709:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1595,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:9"
									},
									"scope": 1620,
									"src": "656:96:9",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1610,
										"nodeType": "Block",
										"src": "825:32:9",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1607,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:9",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1608,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:9",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 1606,
												"id": 1609,
												"nodeType": "Return",
												"src": "835:15:9"
											}
										]
									},
									"id": 1611,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1603,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:9"
									},
									"returnParameters": {
										"id": 1606,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1605,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1611,
												"src": "809:14:9",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1604,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:9"
									},
									"scope": 1620,
									"src": "758:99:9",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1618,
										"nodeType": "Block",
										"src": "935:25:9",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 1616,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:9",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 1615,
												"id": 1617,
												"nodeType": "Return",
												"src": "945:8:9"
											}
										]
									},
									"id": 1619,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1612,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:9"
									},
									"returnParameters": {
										"id": 1615,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1614,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1619,
												"src": "926:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1613,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:9"
									},
									"scope": 1620,
									"src": "863:97:9",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1621,
							"src": "624:338:9",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:9"
				},
				"id": 9
			},
			"@openzeppelin/contracts/utils/math/Math.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/math/Math.sol",
					"exportedSymbols": {
						"Math": [
							2674
						]
					},
					"id": 2675,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1622,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "103:24:10"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Math",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1623,
								"nodeType": "StructuredDocumentation",
								"src": "129:73:10",
								"text": " @dev Standard math utilities missing in the Solidity language."
							},
							"fullyImplemented": true,
							"id": 2674,
							"linearizedBaseContracts": [
								2674
							],
							"name": "Math",
							"nameLocation": "211:4:10",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1624,
										"nodeType": "StructuredDocumentation",
										"src": "222:50:10",
										"text": " @dev Muldiv operation overflow."
									},
									"errorSelector": "227bc153",
									"id": 1626,
									"name": "MathOverflowedMulDiv",
									"nameLocation": "283:20:10",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1625,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "303:2:10"
									},
									"src": "277:29:10"
								},
								{
									"canonicalName": "Math.Rounding",
									"id": 1631,
									"members": [
										{
											"id": 1627,
											"name": "Floor",
											"nameLocation": "336:5:10",
											"nodeType": "EnumValue",
											"src": "336:5:10"
										},
										{
											"id": 1628,
											"name": "Ceil",
											"nameLocation": "379:4:10",
											"nodeType": "EnumValue",
											"src": "379:4:10"
										},
										{
											"id": 1629,
											"name": "Trunc",
											"nameLocation": "421:5:10",
											"nodeType": "EnumValue",
											"src": "421:5:10"
										},
										{
											"id": 1630,
											"name": "Expand",
											"nameLocation": "451:6:10",
											"nodeType": "EnumValue",
											"src": "451:6:10"
										}
									],
									"name": "Rounding",
									"nameLocation": "317:8:10",
									"nodeType": "EnumDefinition",
									"src": "312:169:10"
								},
								{
									"body": {
										"id": 1662,
										"nodeType": "Block",
										"src": "661:140:10",
										"statements": [
											{
												"id": 1661,
												"nodeType": "UncheckedBlock",
												"src": "671:124:10",
												"statements": [
													{
														"assignments": [
															1644
														],
														"declarations": [
															{
																"constant": false,
																"id": 1644,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "703:1:10",
																"nodeType": "VariableDeclaration",
																"scope": 1661,
																"src": "695:9:10",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1643,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "695:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1648,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1647,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1645,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1634,
																"src": "707:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 1646,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1636,
																"src": "711:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "707:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "695:17:10"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1651,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1649,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1644,
																"src": "730:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 1650,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1634,
																"src": "734:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "730:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1656,
														"nodeType": "IfStatement",
														"src": "726:28:10",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1652,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "745:5:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1653,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "752:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1654,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "744:10:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1642,
															"id": 1655,
															"nodeType": "Return",
															"src": "737:17:10"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1657,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "776:4:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 1658,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1644,
																	"src": "782:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1659,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "775:9:10",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1642,
														"id": 1660,
														"nodeType": "Return",
														"src": "768:16:10"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1632,
										"nodeType": "StructuredDocumentation",
										"src": "487:93:10",
										"text": " @dev Returns the addition of two unsigned integers, with an overflow flag."
									},
									"id": 1663,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryAdd",
									"nameLocation": "594:6:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1637,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1634,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "609:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1663,
												"src": "601:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1633,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "601:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1636,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "620:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1663,
												"src": "612:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1635,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "612:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "600:22:10"
									},
									"returnParameters": {
										"id": 1642,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1639,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1663,
												"src": "646:4:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1638,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "646:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1641,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1663,
												"src": "652:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1640,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "652:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "645:15:10"
									},
									"scope": 2674,
									"src": "585:216:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1690,
										"nodeType": "Block",
										"src": "984:113:10",
										"statements": [
											{
												"id": 1689,
												"nodeType": "UncheckedBlock",
												"src": "994:97:10",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1677,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1675,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1668,
																"src": "1022:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 1676,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1666,
																"src": "1026:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1022:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1682,
														"nodeType": "IfStatement",
														"src": "1018:28:10",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1678,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1037:5:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1679,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1044:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1680,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1036:10:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1674,
															"id": 1681,
															"nodeType": "Return",
															"src": "1029:17:10"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1683,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1068:4:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1686,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1684,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1666,
																		"src": "1074:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 1685,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1668,
																		"src": "1078:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1074:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1687,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1067:13:10",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1674,
														"id": 1688,
														"nodeType": "Return",
														"src": "1060:20:10"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1664,
										"nodeType": "StructuredDocumentation",
										"src": "807:96:10",
										"text": " @dev Returns the subtraction of two unsigned integers, with an overflow flag."
									},
									"id": 1691,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySub",
									"nameLocation": "917:6:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1669,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1666,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "932:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1691,
												"src": "924:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1665,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "924:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1668,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "943:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1691,
												"src": "935:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1667,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "935:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "923:22:10"
									},
									"returnParameters": {
										"id": 1674,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1671,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1691,
												"src": "969:4:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1670,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "969:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1673,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1691,
												"src": "975:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1672,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "975:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "968:15:10"
									},
									"scope": 2674,
									"src": "908:189:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1732,
										"nodeType": "Block",
										"src": "1283:417:10",
										"statements": [
											{
												"id": 1731,
												"nodeType": "UncheckedBlock",
												"src": "1293:401:10",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1705,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1703,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1694,
																"src": "1551:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1704,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1556:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1551:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1710,
														"nodeType": "IfStatement",
														"src": "1547:28:10",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "74727565",
																		"id": 1706,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1567:4:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "true"
																	},
																	{
																		"hexValue": "30",
																		"id": 1707,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1573:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1708,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1566:9:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1702,
															"id": 1709,
															"nodeType": "Return",
															"src": "1559:16:10"
														}
													},
													{
														"assignments": [
															1712
														],
														"declarations": [
															{
																"constant": false,
																"id": 1712,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "1597:1:10",
																"nodeType": "VariableDeclaration",
																"scope": 1731,
																"src": "1589:9:10",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1711,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1589:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1716,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1715,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1713,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1694,
																"src": "1601:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 1714,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1696,
																"src": "1605:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1601:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "1589:17:10"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1721,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1719,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1717,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1712,
																	"src": "1624:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 1718,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1694,
																	"src": "1628:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1624:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 1720,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1696,
																"src": "1633:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1624:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1726,
														"nodeType": "IfStatement",
														"src": "1620:33:10",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1722,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1644:5:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1723,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1651:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1724,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1643:10:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1702,
															"id": 1725,
															"nodeType": "Return",
															"src": "1636:17:10"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1727,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1675:4:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 1728,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1712,
																	"src": "1681:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1729,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1674:9:10",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1702,
														"id": 1730,
														"nodeType": "Return",
														"src": "1667:16:10"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1692,
										"nodeType": "StructuredDocumentation",
										"src": "1103:99:10",
										"text": " @dev Returns the multiplication of two unsigned integers, with an overflow flag."
									},
									"id": 1733,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMul",
									"nameLocation": "1216:6:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1697,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1694,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1231:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1733,
												"src": "1223:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1693,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1223:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1696,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1242:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1733,
												"src": "1234:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1695,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1234:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1222:22:10"
									},
									"returnParameters": {
										"id": 1702,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1699,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1733,
												"src": "1268:4:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1698,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1268:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1701,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1733,
												"src": "1274:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1700,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1274:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1267:15:10"
									},
									"scope": 2674,
									"src": "1207:493:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1760,
										"nodeType": "Block",
										"src": "1887:114:10",
										"statements": [
											{
												"id": 1759,
												"nodeType": "UncheckedBlock",
												"src": "1897:98:10",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1747,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1745,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1738,
																"src": "1925:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1746,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1930:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1925:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1752,
														"nodeType": "IfStatement",
														"src": "1921:29:10",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1748,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1941:5:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1749,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1948:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1750,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1940:10:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1744,
															"id": 1751,
															"nodeType": "Return",
															"src": "1933:17:10"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1753,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1972:4:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1756,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1754,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1736,
																		"src": "1978:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 1755,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1738,
																		"src": "1982:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1978:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1757,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1971:13:10",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1744,
														"id": 1758,
														"nodeType": "Return",
														"src": "1964:20:10"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1734,
										"nodeType": "StructuredDocumentation",
										"src": "1706:100:10",
										"text": " @dev Returns the division of two unsigned integers, with a division by zero flag."
									},
									"id": 1761,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryDiv",
									"nameLocation": "1820:6:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1739,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1736,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1835:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1761,
												"src": "1827:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1735,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1827:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1738,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1846:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1761,
												"src": "1838:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1737,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1838:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1826:22:10"
									},
									"returnParameters": {
										"id": 1744,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1741,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1761,
												"src": "1872:4:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1740,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1872:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1743,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1761,
												"src": "1878:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1742,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1878:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1871:15:10"
									},
									"scope": 2674,
									"src": "1811:190:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1788,
										"nodeType": "Block",
										"src": "2198:114:10",
										"statements": [
											{
												"id": 1787,
												"nodeType": "UncheckedBlock",
												"src": "2208:98:10",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1775,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1773,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1766,
																"src": "2236:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1774,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2241:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2236:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1780,
														"nodeType": "IfStatement",
														"src": "2232:29:10",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1776,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2252:5:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1777,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2259:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1778,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2251:10:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1772,
															"id": 1779,
															"nodeType": "Return",
															"src": "2244:17:10"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1781,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2283:4:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1784,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1782,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1764,
																		"src": "2289:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "%",
																	"rightExpression": {
																		"id": 1783,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1766,
																		"src": "2293:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2289:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1785,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2282:13:10",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1772,
														"id": 1786,
														"nodeType": "Return",
														"src": "2275:20:10"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1762,
										"nodeType": "StructuredDocumentation",
										"src": "2007:110:10",
										"text": " @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag."
									},
									"id": 1789,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMod",
									"nameLocation": "2131:6:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1767,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1764,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2146:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1789,
												"src": "2138:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1763,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2138:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1766,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2157:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1789,
												"src": "2149:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1765,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2149:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2137:22:10"
									},
									"returnParameters": {
										"id": 1772,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1769,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1789,
												"src": "2183:4:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1768,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2183:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1771,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1789,
												"src": "2189:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1770,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2189:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2182:15:10"
									},
									"scope": 2674,
									"src": "2122:190:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1806,
										"nodeType": "Block",
										"src": "2449:37:10",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1801,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1799,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1792,
															"src": "2466:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"id": 1800,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1794,
															"src": "2470:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2466:5:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 1803,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1794,
														"src": "2478:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1804,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "2466:13:10",
													"trueExpression": {
														"id": 1802,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1792,
														"src": "2474:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1798,
												"id": 1805,
												"nodeType": "Return",
												"src": "2459:20:10"
											}
										]
									},
									"documentation": {
										"id": 1790,
										"nodeType": "StructuredDocumentation",
										"src": "2318:59:10",
										"text": " @dev Returns the largest of two numbers."
									},
									"id": 1807,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "max",
									"nameLocation": "2391:3:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1795,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1792,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2403:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1807,
												"src": "2395:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1791,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2395:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1794,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2414:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1807,
												"src": "2406:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1793,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2406:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2394:22:10"
									},
									"returnParameters": {
										"id": 1798,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1797,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1807,
												"src": "2440:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1796,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2440:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2439:9:10"
									},
									"scope": 2674,
									"src": "2382:104:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1824,
										"nodeType": "Block",
										"src": "2624:37:10",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1819,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1817,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1810,
															"src": "2641:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 1818,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1812,
															"src": "2645:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2641:5:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 1821,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1812,
														"src": "2653:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1822,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "2641:13:10",
													"trueExpression": {
														"id": 1820,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1810,
														"src": "2649:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1816,
												"id": 1823,
												"nodeType": "Return",
												"src": "2634:20:10"
											}
										]
									},
									"documentation": {
										"id": 1808,
										"nodeType": "StructuredDocumentation",
										"src": "2492:60:10",
										"text": " @dev Returns the smallest of two numbers."
									},
									"id": 1825,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "min",
									"nameLocation": "2566:3:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1813,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1810,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2578:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1825,
												"src": "2570:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1809,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1812,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2589:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1825,
												"src": "2581:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1811,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2581:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:22:10"
									},
									"returnParameters": {
										"id": 1816,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1815,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1825,
												"src": "2615:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1814,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2615:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2614:9:10"
									},
									"scope": 2674,
									"src": "2557:104:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1847,
										"nodeType": "Block",
										"src": "2845:82:10",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1845,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1837,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1835,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1828,
																	"src": "2900:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 1836,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1830,
																	"src": "2904:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2900:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1838,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "2899:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1844,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1841,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1839,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1828,
																		"src": "2910:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "^",
																	"rightExpression": {
																		"id": 1840,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1830,
																		"src": "2914:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2910:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1842,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2909:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"hexValue": "32",
															"id": 1843,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2919:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "2909:11:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2899:21:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1834,
												"id": 1846,
												"nodeType": "Return",
												"src": "2892:28:10"
											}
										]
									},
									"documentation": {
										"id": 1826,
										"nodeType": "StructuredDocumentation",
										"src": "2667:102:10",
										"text": " @dev Returns the average of two numbers. The result is rounded towards\n zero."
									},
									"id": 1848,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "average",
									"nameLocation": "2783:7:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1831,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1828,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2799:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1848,
												"src": "2791:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1827,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2791:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1830,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2810:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1848,
												"src": "2802:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1829,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2802:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2790:22:10"
									},
									"returnParameters": {
										"id": 1834,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1833,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1848,
												"src": "2836:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1832,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2836:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2835:9:10"
									},
									"scope": 2674,
									"src": "2774:153:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1881,
										"nodeType": "Block",
										"src": "3219:260:10",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1860,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1858,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1853,
														"src": "3233:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1859,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3238:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3233:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1866,
												"nodeType": "IfStatement",
												"src": "3229:127:10",
												"trueBody": {
													"id": 1865,
													"nodeType": "Block",
													"src": "3241:115:10",
													"statements": [
														{
															"expression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1863,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1861,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1851,
																	"src": "3340:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 1862,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1853,
																	"src": "3344:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3340:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 1857,
															"id": 1864,
															"nodeType": "Return",
															"src": "3333:12:10"
														}
													]
												}
											},
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1869,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1867,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1851,
															"src": "3444:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 1868,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3449:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "3444:6:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1878,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1876,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1873,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1871,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1851,
																			"src": "3458:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 1872,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3462:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "3458:5:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 1874,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "3457:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 1875,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1853,
																"src": "3467:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3457:11:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 1877,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3471:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "3457:15:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1879,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "3444:28:10",
													"trueExpression": {
														"hexValue": "30",
														"id": 1870,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3453:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1857,
												"id": 1880,
												"nodeType": "Return",
												"src": "3437:35:10"
											}
										]
									},
									"documentation": {
										"id": 1849,
										"nodeType": "StructuredDocumentation",
										"src": "2933:210:10",
										"text": " @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds towards infinity instead\n of rounding towards zero."
									},
									"id": 1882,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ceilDiv",
									"nameLocation": "3157:7:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1854,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1851,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3173:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1882,
												"src": "3165:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1850,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3165:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1853,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3184:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1882,
												"src": "3176:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1852,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3176:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3164:22:10"
									},
									"returnParameters": {
										"id": 1857,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1856,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1882,
												"src": "3210:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1855,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3210:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3209:9:10"
									},
									"scope": 2674,
									"src": "3148:331:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2007,
										"nodeType": "Block",
										"src": "3901:4018:10",
										"statements": [
											{
												"id": 2006,
												"nodeType": "UncheckedBlock",
												"src": "3911:4002:10",
												"statements": [
													{
														"assignments": [
															1895
														],
														"declarations": [
															{
																"constant": false,
																"id": 1895,
																"mutability": "mutable",
																"name": "prod0",
																"nameLocation": "4240:5:10",
																"nodeType": "VariableDeclaration",
																"scope": 2006,
																"src": "4232:13:10",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1894,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "4232:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1899,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1898,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1896,
																"name": "x",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1885,
																"src": "4248:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 1897,
																"name": "y",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1887,
																"src": "4252:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4248:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "4232:21:10"
													},
													{
														"assignments": [
															1901
														],
														"declarations": [
															{
																"constant": false,
																"id": 1901,
																"mutability": "mutable",
																"name": "prod1",
																"nameLocation": "4320:5:10",
																"nodeType": "VariableDeclaration",
																"scope": 2006,
																"src": "4312:13:10",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1900,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "4312:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1902,
														"nodeType": "VariableDeclarationStatement",
														"src": "4312:13:10"
													},
													{
														"AST": {
															"nativeSrc": "4392:122:10",
															"nodeType": "YulBlock",
															"src": "4392:122:10",
															"statements": [
																{
																	"nativeSrc": "4410:30:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4410:30:10",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nativeSrc": "4427:1:10",
																				"nodeType": "YulIdentifier",
																				"src": "4427:1:10"
																			},
																			{
																				"name": "y",
																				"nativeSrc": "4430:1:10",
																				"nodeType": "YulIdentifier",
																				"src": "4430:1:10"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "4437:1:10",
																						"nodeType": "YulLiteral",
																						"src": "4437:1:10",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "4433:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "4433:3:10"
																				},
																				"nativeSrc": "4433:6:10",
																				"nodeType": "YulFunctionCall",
																				"src": "4433:6:10"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nativeSrc": "4420:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "4420:6:10"
																		},
																		"nativeSrc": "4420:20:10",
																		"nodeType": "YulFunctionCall",
																		"src": "4420:20:10"
																	},
																	"variables": [
																		{
																			"name": "mm",
																			"nativeSrc": "4414:2:10",
																			"nodeType": "YulTypedName",
																			"src": "4414:2:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4457:43:10",
																	"nodeType": "YulAssignment",
																	"src": "4457:43:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nativeSrc": "4474:2:10",
																						"nodeType": "YulIdentifier",
																						"src": "4474:2:10"
																					},
																					{
																						"name": "prod0",
																						"nativeSrc": "4478:5:10",
																						"nodeType": "YulIdentifier",
																						"src": "4478:5:10"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "4470:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "4470:3:10"
																				},
																				"nativeSrc": "4470:14:10",
																				"nodeType": "YulFunctionCall",
																				"src": "4470:14:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nativeSrc": "4489:2:10",
																						"nodeType": "YulIdentifier",
																						"src": "4489:2:10"
																					},
																					{
																						"name": "prod0",
																						"nativeSrc": "4493:5:10",
																						"nodeType": "YulIdentifier",
																						"src": "4493:5:10"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "4486:2:10",
																					"nodeType": "YulIdentifier",
																					"src": "4486:2:10"
																				},
																				"nativeSrc": "4486:13:10",
																				"nodeType": "YulFunctionCall",
																				"src": "4486:13:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4466:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "4466:3:10"
																		},
																		"nativeSrc": "4466:34:10",
																		"nodeType": "YulFunctionCall",
																		"src": "4466:34:10"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nativeSrc": "4457:5:10",
																			"nodeType": "YulIdentifier",
																			"src": "4457:5:10"
																		}
																	]
																}
															]
														},
														"evmVersion": "cancun",
														"externalReferences": [
															{
																"declaration": 1895,
																"isOffset": false,
																"isSlot": false,
																"src": "4478:5:10",
																"valueSize": 1
															},
															{
																"declaration": 1895,
																"isOffset": false,
																"isSlot": false,
																"src": "4493:5:10",
																"valueSize": 1
															},
															{
																"declaration": 1901,
																"isOffset": false,
																"isSlot": false,
																"src": "4457:5:10",
																"valueSize": 1
															},
															{
																"declaration": 1885,
																"isOffset": false,
																"isSlot": false,
																"src": "4427:1:10",
																"valueSize": 1
															},
															{
																"declaration": 1887,
																"isOffset": false,
																"isSlot": false,
																"src": "4430:1:10",
																"valueSize": 1
															}
														],
														"id": 1903,
														"nodeType": "InlineAssembly",
														"src": "4383:131:10"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1906,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1904,
																"name": "prod1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1901,
																"src": "4595:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1905,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4604:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "4595:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1912,
														"nodeType": "IfStatement",
														"src": "4591:368:10",
														"trueBody": {
															"id": 1911,
															"nodeType": "Block",
															"src": "4607:352:10",
															"statements": [
																{
																	"expression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1909,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1907,
																			"name": "prod0",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1895,
																			"src": "4925:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "/",
																		"rightExpression": {
																			"id": 1908,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1889,
																			"src": "4933:11:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "4925:19:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"functionReturnParameters": 1893,
																	"id": 1910,
																	"nodeType": "Return",
																	"src": "4918:26:10"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1915,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1913,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1889,
																"src": "5065:11:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 1914,
																"name": "prod1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1901,
																"src": "5080:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5065:20:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1920,
														"nodeType": "IfStatement",
														"src": "5061:88:10",
														"trueBody": {
															"id": 1919,
															"nodeType": "Block",
															"src": "5087:62:10",
															"statements": [
																{
																	"errorCall": {
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 1916,
																			"name": "MathOverflowedMulDiv",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1626,
																			"src": "5112:20:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																				"typeString": "function () pure returns (error)"
																			}
																		},
																		"id": 1917,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5112:22:10",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_error",
																			"typeString": "error"
																		}
																	},
																	"id": 1918,
																	"nodeType": "RevertStatement",
																	"src": "5105:29:10"
																}
															]
														}
													},
													{
														"assignments": [
															1922
														],
														"declarations": [
															{
																"constant": false,
																"id": 1922,
																"mutability": "mutable",
																"name": "remainder",
																"nameLocation": "5412:9:10",
																"nodeType": "VariableDeclaration",
																"scope": 2006,
																"src": "5404:17:10",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1921,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "5404:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1923,
														"nodeType": "VariableDeclarationStatement",
														"src": "5404:17:10"
													},
													{
														"AST": {
															"nativeSrc": "5444:291:10",
															"nodeType": "YulBlock",
															"src": "5444:291:10",
															"statements": [
																{
																	"nativeSrc": "5513:38:10",
																	"nodeType": "YulAssignment",
																	"src": "5513:38:10",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nativeSrc": "5533:1:10",
																				"nodeType": "YulIdentifier",
																				"src": "5533:1:10"
																			},
																			{
																				"name": "y",
																				"nativeSrc": "5536:1:10",
																				"nodeType": "YulIdentifier",
																				"src": "5536:1:10"
																			},
																			{
																				"name": "denominator",
																				"nativeSrc": "5539:11:10",
																				"nodeType": "YulIdentifier",
																				"src": "5539:11:10"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nativeSrc": "5526:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "5526:6:10"
																		},
																		"nativeSrc": "5526:25:10",
																		"nodeType": "YulFunctionCall",
																		"src": "5526:25:10"
																	},
																	"variableNames": [
																		{
																			"name": "remainder",
																			"nativeSrc": "5513:9:10",
																			"nodeType": "YulIdentifier",
																			"src": "5513:9:10"
																		}
																	]
																},
																{
																	"nativeSrc": "5633:41:10",
																	"nodeType": "YulAssignment",
																	"src": "5633:41:10",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod1",
																				"nativeSrc": "5646:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "5646:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "remainder",
																						"nativeSrc": "5656:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "5656:9:10"
																					},
																					{
																						"name": "prod0",
																						"nativeSrc": "5667:5:10",
																						"nodeType": "YulIdentifier",
																						"src": "5667:5:10"
																					}
																				],
																				"functionName": {
																					"name": "gt",
																					"nativeSrc": "5653:2:10",
																					"nodeType": "YulIdentifier",
																					"src": "5653:2:10"
																				},
																				"nativeSrc": "5653:20:10",
																				"nodeType": "YulFunctionCall",
																				"src": "5653:20:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5642:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "5642:3:10"
																		},
																		"nativeSrc": "5642:32:10",
																		"nodeType": "YulFunctionCall",
																		"src": "5642:32:10"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nativeSrc": "5633:5:10",
																			"nodeType": "YulIdentifier",
																			"src": "5633:5:10"
																		}
																	]
																},
																{
																	"nativeSrc": "5691:30:10",
																	"nodeType": "YulAssignment",
																	"src": "5691:30:10",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nativeSrc": "5704:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "5704:5:10"
																			},
																			{
																				"name": "remainder",
																				"nativeSrc": "5711:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "5711:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5700:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "5700:3:10"
																		},
																		"nativeSrc": "5700:21:10",
																		"nodeType": "YulFunctionCall",
																		"src": "5700:21:10"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nativeSrc": "5691:5:10",
																			"nodeType": "YulIdentifier",
																			"src": "5691:5:10"
																		}
																	]
																}
															]
														},
														"evmVersion": "cancun",
														"externalReferences": [
															{
																"declaration": 1889,
																"isOffset": false,
																"isSlot": false,
																"src": "5539:11:10",
																"valueSize": 1
															},
															{
																"declaration": 1895,
																"isOffset": false,
																"isSlot": false,
																"src": "5667:5:10",
																"valueSize": 1
															},
															{
																"declaration": 1895,
																"isOffset": false,
																"isSlot": false,
																"src": "5691:5:10",
																"valueSize": 1
															},
															{
																"declaration": 1895,
																"isOffset": false,
																"isSlot": false,
																"src": "5704:5:10",
																"valueSize": 1
															},
															{
																"declaration": 1901,
																"isOffset": false,
																"isSlot": false,
																"src": "5633:5:10",
																"valueSize": 1
															},
															{
																"declaration": 1901,
																"isOffset": false,
																"isSlot": false,
																"src": "5646:5:10",
																"valueSize": 1
															},
															{
																"declaration": 1922,
																"isOffset": false,
																"isSlot": false,
																"src": "5513:9:10",
																"valueSize": 1
															},
															{
																"declaration": 1922,
																"isOffset": false,
																"isSlot": false,
																"src": "5656:9:10",
																"valueSize": 1
															},
															{
																"declaration": 1922,
																"isOffset": false,
																"isSlot": false,
																"src": "5711:9:10",
																"valueSize": 1
															},
															{
																"declaration": 1885,
																"isOffset": false,
																"isSlot": false,
																"src": "5533:1:10",
																"valueSize": 1
															},
															{
																"declaration": 1887,
																"isOffset": false,
																"isSlot": false,
																"src": "5536:1:10",
																"valueSize": 1
															}
														],
														"id": 1924,
														"nodeType": "InlineAssembly",
														"src": "5435:300:10"
													},
													{
														"assignments": [
															1926
														],
														"declarations": [
															{
																"constant": false,
																"id": 1926,
																"mutability": "mutable",
																"name": "twos",
																"nameLocation": "5947:4:10",
																"nodeType": "VariableDeclaration",
																"scope": 2006,
																"src": "5939:12:10",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1925,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "5939:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1933,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1932,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1927,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1889,
																"src": "5954:11:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1930,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "30",
																			"id": 1928,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "5969:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"id": 1929,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1889,
																			"src": "5973:11:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "5969:15:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 1931,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "5968:17:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5954:31:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "5939:46:10"
													},
													{
														"AST": {
															"nativeSrc": "6008:362:10",
															"nodeType": "YulBlock",
															"src": "6008:362:10",
															"statements": [
																{
																	"nativeSrc": "6073:37:10",
																	"nodeType": "YulAssignment",
																	"src": "6073:37:10",
																	"value": {
																		"arguments": [
																			{
																				"name": "denominator",
																				"nativeSrc": "6092:11:10",
																				"nodeType": "YulIdentifier",
																				"src": "6092:11:10"
																			},
																			{
																				"name": "twos",
																				"nativeSrc": "6105:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "6105:4:10"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nativeSrc": "6088:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "6088:3:10"
																		},
																		"nativeSrc": "6088:22:10",
																		"nodeType": "YulFunctionCall",
																		"src": "6088:22:10"
																	},
																	"variableNames": [
																		{
																			"name": "denominator",
																			"nativeSrc": "6073:11:10",
																			"nodeType": "YulIdentifier",
																			"src": "6073:11:10"
																		}
																	]
																},
																{
																	"nativeSrc": "6177:25:10",
																	"nodeType": "YulAssignment",
																	"src": "6177:25:10",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nativeSrc": "6190:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "6190:5:10"
																			},
																			{
																				"name": "twos",
																				"nativeSrc": "6197:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "6197:4:10"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nativeSrc": "6186:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "6186:3:10"
																		},
																		"nativeSrc": "6186:16:10",
																		"nodeType": "YulFunctionCall",
																		"src": "6186:16:10"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nativeSrc": "6177:5:10",
																			"nodeType": "YulIdentifier",
																			"src": "6177:5:10"
																		}
																	]
																},
																{
																	"nativeSrc": "6317:39:10",
																	"nodeType": "YulAssignment",
																	"src": "6317:39:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "6337:1:10",
																								"nodeType": "YulLiteral",
																								"src": "6337:1:10",
																								"type": "",
																								"value": "0"
																							},
																							{
																								"name": "twos",
																								"nativeSrc": "6340:4:10",
																								"nodeType": "YulIdentifier",
																								"src": "6340:4:10"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "6333:3:10",
																							"nodeType": "YulIdentifier",
																							"src": "6333:3:10"
																						},
																						"nativeSrc": "6333:12:10",
																						"nodeType": "YulFunctionCall",
																						"src": "6333:12:10"
																					},
																					{
																						"name": "twos",
																						"nativeSrc": "6347:4:10",
																						"nodeType": "YulIdentifier",
																						"src": "6347:4:10"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nativeSrc": "6329:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "6329:3:10"
																				},
																				"nativeSrc": "6329:23:10",
																				"nodeType": "YulFunctionCall",
																				"src": "6329:23:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6354:1:10",
																				"nodeType": "YulLiteral",
																				"src": "6354:1:10",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6325:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "6325:3:10"
																		},
																		"nativeSrc": "6325:31:10",
																		"nodeType": "YulFunctionCall",
																		"src": "6325:31:10"
																	},
																	"variableNames": [
																		{
																			"name": "twos",
																			"nativeSrc": "6317:4:10",
																			"nodeType": "YulIdentifier",
																			"src": "6317:4:10"
																		}
																	]
																}
															]
														},
														"evmVersion": "cancun",
														"externalReferences": [
															{
																"declaration": 1889,
																"isOffset": false,
																"isSlot": false,
																"src": "6073:11:10",
																"valueSize": 1
															},
															{
																"declaration": 1889,
																"isOffset": false,
																"isSlot": false,
																"src": "6092:11:10",
																"valueSize": 1
															},
															{
																"declaration": 1895,
																"isOffset": false,
																"isSlot": false,
																"src": "6177:5:10",
																"valueSize": 1
															},
															{
																"declaration": 1895,
																"isOffset": false,
																"isSlot": false,
																"src": "6190:5:10",
																"valueSize": 1
															},
															{
																"declaration": 1926,
																"isOffset": false,
																"isSlot": false,
																"src": "6105:4:10",
																"valueSize": 1
															},
															{
																"declaration": 1926,
																"isOffset": false,
																"isSlot": false,
																"src": "6197:4:10",
																"valueSize": 1
															},
															{
																"declaration": 1926,
																"isOffset": false,
																"isSlot": false,
																"src": "6317:4:10",
																"valueSize": 1
															},
															{
																"declaration": 1926,
																"isOffset": false,
																"isSlot": false,
																"src": "6340:4:10",
																"valueSize": 1
															},
															{
																"declaration": 1926,
																"isOffset": false,
																"isSlot": false,
																"src": "6347:4:10",
																"valueSize": 1
															}
														],
														"id": 1934,
														"nodeType": "InlineAssembly",
														"src": "5999:371:10"
													},
													{
														"expression": {
															"id": 1939,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1935,
																"name": "prod0",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1895,
																"src": "6436:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "|=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1938,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1936,
																	"name": "prod1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1901,
																	"src": "6445:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 1937,
																	"name": "twos",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1926,
																	"src": "6453:4:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6445:12:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6436:21:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1940,
														"nodeType": "ExpressionStatement",
														"src": "6436:21:10"
													},
													{
														"assignments": [
															1942
														],
														"declarations": [
															{
																"constant": false,
																"id": 1942,
																"mutability": "mutable",
																"name": "inverse",
																"nameLocation": "6783:7:10",
																"nodeType": "VariableDeclaration",
																"scope": 2006,
																"src": "6775:15:10",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1941,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "6775:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1949,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1948,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1945,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "33",
																			"id": 1943,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "6794:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_3_by_1",
																				"typeString": "int_const 3"
																			},
																			"value": "3"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"id": 1944,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1889,
																			"src": "6798:11:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6794:15:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 1946,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "6793:17:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "^",
															"rightExpression": {
																"hexValue": "32",
																"id": 1947,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6813:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "6793:21:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "6775:39:10"
													},
													{
														"expression": {
															"id": 1956,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1950,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1942,
																"src": "7031:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1955,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1951,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7042:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1954,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1952,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1889,
																		"src": "7046:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1953,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1942,
																		"src": "7060:7:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7046:21:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7042:25:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7031:36:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1957,
														"nodeType": "ExpressionStatement",
														"src": "7031:36:10"
													},
													{
														"expression": {
															"id": 1964,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1958,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1942,
																"src": "7100:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1963,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1959,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7111:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1962,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1960,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1889,
																		"src": "7115:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1961,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1942,
																		"src": "7129:7:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7115:21:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7111:25:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7100:36:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1965,
														"nodeType": "ExpressionStatement",
														"src": "7100:36:10"
													},
													{
														"expression": {
															"id": 1972,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1966,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1942,
																"src": "7170:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1971,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1967,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7181:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1970,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1968,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1889,
																		"src": "7185:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1969,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1942,
																		"src": "7199:7:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7185:21:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7181:25:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7170:36:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1973,
														"nodeType": "ExpressionStatement",
														"src": "7170:36:10"
													},
													{
														"expression": {
															"id": 1980,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1974,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1942,
																"src": "7240:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1979,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1975,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7251:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1978,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1976,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1889,
																		"src": "7255:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1977,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1942,
																		"src": "7269:7:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7255:21:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7251:25:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7240:36:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1981,
														"nodeType": "ExpressionStatement",
														"src": "7240:36:10"
													},
													{
														"expression": {
															"id": 1988,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1982,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1942,
																"src": "7310:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1987,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1983,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7321:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1986,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1984,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1889,
																		"src": "7325:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1985,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1942,
																		"src": "7339:7:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7325:21:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7321:25:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7310:36:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1989,
														"nodeType": "ExpressionStatement",
														"src": "7310:36:10"
													},
													{
														"expression": {
															"id": 1996,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1990,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1942,
																"src": "7381:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1995,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1991,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7392:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1994,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1992,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1889,
																		"src": "7396:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1993,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1942,
																		"src": "7410:7:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7396:21:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7392:25:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7381:36:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1997,
														"nodeType": "ExpressionStatement",
														"src": "7381:36:10"
													},
													{
														"expression": {
															"id": 2002,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1998,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1892,
																"src": "7851:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2001,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1999,
																	"name": "prod0",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1895,
																	"src": "7860:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 2000,
																	"name": "inverse",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1942,
																	"src": "7868:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7860:15:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7851:24:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2003,
														"nodeType": "ExpressionStatement",
														"src": "7851:24:10"
													},
													{
														"expression": {
															"id": 2004,
															"name": "result",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1892,
															"src": "7896:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1893,
														"id": 2005,
														"nodeType": "Return",
														"src": "7889:13:10"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1883,
										"nodeType": "StructuredDocumentation",
										"src": "3485:313:10",
										"text": " @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n denominator == 0.\n @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n Uniswap Labs also under MIT license."
									},
									"id": 2008,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "3812:6:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1890,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1885,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "3827:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 2008,
												"src": "3819:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1884,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3819:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1887,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "3838:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 2008,
												"src": "3830:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1886,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3830:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1889,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "3849:11:10",
												"nodeType": "VariableDeclaration",
												"scope": 2008,
												"src": "3841:19:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1888,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3841:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3818:43:10"
									},
									"returnParameters": {
										"id": 1893,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1892,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "3893:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 2008,
												"src": "3885:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1891,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3885:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3884:16:10"
									},
									"scope": 2674,
									"src": "3803:4116:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2050,
										"nodeType": "Block",
										"src": "8161:192:10",
										"statements": [
											{
												"assignments": [
													2024
												],
												"declarations": [
													{
														"constant": false,
														"id": 2024,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "8179:6:10",
														"nodeType": "VariableDeclaration",
														"scope": 2050,
														"src": "8171:14:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2023,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8171:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2030,
												"initialValue": {
													"arguments": [
														{
															"id": 2026,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2011,
															"src": "8195:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2027,
															"name": "y",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2013,
															"src": "8198:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2028,
															"name": "denominator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2015,
															"src": "8201:11:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2025,
														"name": "mulDiv",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2008,
															2051
														],
														"referencedDeclaration": 2008,
														"src": "8188:6:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 2029,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8188:25:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8171:42:10"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 2041,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 2032,
																"name": "rounding",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2018,
																"src": "8244:8:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_Rounding_$1631",
																	"typeString": "enum Math.Rounding"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_enum$_Rounding_$1631",
																	"typeString": "enum Math.Rounding"
																}
															],
															"id": 2031,
															"name": "unsignedRoundsUp",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2673,
															"src": "8227:16:10",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$1631_$returns$_t_bool_$",
																"typeString": "function (enum Math.Rounding) pure returns (bool)"
															}
														},
														"id": 2033,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8227:26:10",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2040,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 2035,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2011,
																	"src": "8264:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 2036,
																	"name": "y",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2013,
																	"src": "8267:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 2037,
																	"name": "denominator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2015,
																	"src": "8270:11:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2034,
																"name": "mulmod",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967280,
																"src": "8257:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 2038,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8257:25:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 2039,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8285:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "8257:29:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "8227:59:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2047,
												"nodeType": "IfStatement",
												"src": "8223:101:10",
												"trueBody": {
													"id": 2046,
													"nodeType": "Block",
													"src": "8288:36:10",
													"statements": [
														{
															"expression": {
																"id": 2044,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2042,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2024,
																	"src": "8302:6:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"hexValue": "31",
																	"id": 2043,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8312:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "8302:11:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2045,
															"nodeType": "ExpressionStatement",
															"src": "8302:11:10"
														}
													]
												}
											},
											{
												"expression": {
													"id": 2048,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2024,
													"src": "8340:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2022,
												"id": 2049,
												"nodeType": "Return",
												"src": "8333:13:10"
											}
										]
									},
									"documentation": {
										"id": 2009,
										"nodeType": "StructuredDocumentation",
										"src": "7925:121:10",
										"text": " @notice Calculates x * y / denominator with full precision, following the selected rounding direction."
									},
									"id": 2051,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "8060:6:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2019,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2011,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "8075:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 2051,
												"src": "8067:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2010,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8067:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2013,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "8086:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 2051,
												"src": "8078:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2012,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8078:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2015,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "8097:11:10",
												"nodeType": "VariableDeclaration",
												"scope": 2051,
												"src": "8089:19:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2014,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8089:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2018,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "8119:8:10",
												"nodeType": "VariableDeclaration",
												"scope": 2051,
												"src": "8110:17:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1631",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2017,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2016,
														"name": "Rounding",
														"nameLocations": [
															"8110:8:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1631,
														"src": "8110:8:10"
													},
													"referencedDeclaration": 1631,
													"src": "8110:8:10",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1631",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8066:62:10"
									},
									"returnParameters": {
										"id": 2022,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2021,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2051,
												"src": "8152:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2020,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8152:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8151:9:10"
									},
									"scope": 2674,
									"src": "8051:302:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2162,
										"nodeType": "Block",
										"src": "8644:1585:10",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2061,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2059,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2054,
														"src": "8658:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 2060,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8663:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "8658:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2065,
												"nodeType": "IfStatement",
												"src": "8654:45:10",
												"trueBody": {
													"id": 2064,
													"nodeType": "Block",
													"src": "8666:33:10",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 2062,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8687:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 2058,
															"id": 2063,
															"nodeType": "Return",
															"src": "8680:8:10"
														}
													]
												}
											},
											{
												"assignments": [
													2067
												],
												"declarations": [
													{
														"constant": false,
														"id": 2067,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "9386:6:10",
														"nodeType": "VariableDeclaration",
														"scope": 2162,
														"src": "9378:14:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2066,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9378:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2076,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2075,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "31",
														"id": 2068,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9395:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"nodeType": "BinaryOperation",
													"operator": "<<",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2073,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"id": 2070,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2054,
																			"src": "9406:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 2069,
																		"name": "log2",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [
																			2330,
																			2365
																		],
																		"referencedDeclaration": 2330,
																		"src": "9401:4:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256) pure returns (uint256)"
																		}
																	},
																	"id": 2071,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "9401:7:10",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2072,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9412:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9401:12:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 2074,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "9400:14:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9395:19:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9378:36:10"
											},
											{
												"id": 2161,
												"nodeType": "UncheckedBlock",
												"src": "9815:408:10",
												"statements": [
													{
														"expression": {
															"id": 2086,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2077,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2067,
																"src": "9839:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2085,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2082,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2078,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2067,
																				"src": "9849:6:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2081,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2079,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2054,
																					"src": "9858:1:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2080,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2067,
																					"src": "9862:6:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "9858:10:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9849:19:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2083,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9848:21:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2084,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9873:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9848:26:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9839:35:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2087,
														"nodeType": "ExpressionStatement",
														"src": "9839:35:10"
													},
													{
														"expression": {
															"id": 2097,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2088,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2067,
																"src": "9888:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2096,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2093,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2089,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2067,
																				"src": "9898:6:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2092,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2090,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2054,
																					"src": "9907:1:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2091,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2067,
																					"src": "9911:6:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "9907:10:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9898:19:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2094,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9897:21:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2095,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9922:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9897:26:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9888:35:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2098,
														"nodeType": "ExpressionStatement",
														"src": "9888:35:10"
													},
													{
														"expression": {
															"id": 2108,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2099,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2067,
																"src": "9937:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2107,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2104,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2100,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2067,
																				"src": "9947:6:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2103,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2101,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2054,
																					"src": "9956:1:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2102,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2067,
																					"src": "9960:6:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "9956:10:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9947:19:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2105,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9946:21:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2106,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9971:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9946:26:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9937:35:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2109,
														"nodeType": "ExpressionStatement",
														"src": "9937:35:10"
													},
													{
														"expression": {
															"id": 2119,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2110,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2067,
																"src": "9986:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2118,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2115,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2111,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2067,
																				"src": "9996:6:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2114,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2112,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2054,
																					"src": "10005:1:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2113,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2067,
																					"src": "10009:6:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10005:10:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9996:19:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2116,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9995:21:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2117,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10020:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9995:26:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9986:35:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2120,
														"nodeType": "ExpressionStatement",
														"src": "9986:35:10"
													},
													{
														"expression": {
															"id": 2130,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2121,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2067,
																"src": "10035:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2129,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2126,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2122,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2067,
																				"src": "10045:6:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2125,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2123,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2054,
																					"src": "10054:1:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2124,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2067,
																					"src": "10058:6:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10054:10:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "10045:19:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2127,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "10044:21:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2128,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10069:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10044:26:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10035:35:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2131,
														"nodeType": "ExpressionStatement",
														"src": "10035:35:10"
													},
													{
														"expression": {
															"id": 2141,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2132,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2067,
																"src": "10084:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2140,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2137,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2133,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2067,
																				"src": "10094:6:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2136,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2134,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2054,
																					"src": "10103:1:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2135,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2067,
																					"src": "10107:6:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10103:10:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "10094:19:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2138,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "10093:21:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2139,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10118:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10093:26:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10084:35:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2142,
														"nodeType": "ExpressionStatement",
														"src": "10084:35:10"
													},
													{
														"expression": {
															"id": 2152,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2143,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2067,
																"src": "10133:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2151,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2148,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2144,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2067,
																				"src": "10143:6:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2147,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2145,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2054,
																					"src": "10152:1:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2146,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2067,
																					"src": "10156:6:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10152:10:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "10143:19:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2149,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "10142:21:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2150,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10167:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10142:26:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10133:35:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2153,
														"nodeType": "ExpressionStatement",
														"src": "10133:35:10"
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 2155,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2067,
																	"src": "10193:6:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2158,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2156,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2054,
																		"src": "10201:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 2157,
																		"name": "result",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2067,
																		"src": "10205:6:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "10201:10:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2154,
																"name": "min",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1825,
																"src": "10189:3:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 2159,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10189:23:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2058,
														"id": 2160,
														"nodeType": "Return",
														"src": "10182:30:10"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2052,
										"nodeType": "StructuredDocumentation",
										"src": "8359:223:10",
										"text": " @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n towards zero.\n Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11)."
									},
									"id": 2163,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "8596:4:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2055,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2054,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "8609:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 2163,
												"src": "8601:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2053,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8601:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8600:11:10"
									},
									"returnParameters": {
										"id": 2058,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2057,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2163,
												"src": "8635:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2056,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8635:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8634:9:10"
									},
									"scope": 2674,
									"src": "8587:1642:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2197,
										"nodeType": "Block",
										"src": "10405:164:10",
										"statements": [
											{
												"id": 2196,
												"nodeType": "UncheckedBlock",
												"src": "10415:148:10",
												"statements": [
													{
														"assignments": [
															2175
														],
														"declarations": [
															{
																"constant": false,
																"id": 2175,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "10447:6:10",
																"nodeType": "VariableDeclaration",
																"scope": 2196,
																"src": "10439:14:10",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2174,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "10439:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2179,
														"initialValue": {
															"arguments": [
																{
																	"id": 2177,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2166,
																	"src": "10461:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2176,
																"name": "sqrt",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2163,
																	2198
																],
																"referencedDeclaration": 2163,
																"src": "10456:4:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 2178,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10456:7:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "10439:24:10"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2194,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2180,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2175,
																"src": "10484:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 2189,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 2182,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2169,
																						"src": "10511:8:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$1631",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$1631",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 2181,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2673,
																					"src": "10494:16:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$1631_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 2183,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "10494:26:10",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2188,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2186,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 2184,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2175,
																						"src": "10524:6:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "*",
																					"rightExpression": {
																						"id": 2185,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2175,
																						"src": "10533:6:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "10524:15:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 2187,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2166,
																					"src": "10542:1:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10524:19:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "10494:49:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 2191,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10550:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 2192,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "10494:57:10",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 2190,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10546:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 2193,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "10493:59:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "10484:68:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2173,
														"id": 2195,
														"nodeType": "Return",
														"src": "10477:75:10"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2164,
										"nodeType": "StructuredDocumentation",
										"src": "10235:89:10",
										"text": " @notice Calculates sqrt(a), following the selected rounding direction."
									},
									"id": 2198,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "10338:4:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2170,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2166,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "10351:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 2198,
												"src": "10343:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2165,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10343:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2169,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "10363:8:10",
												"nodeType": "VariableDeclaration",
												"scope": 2198,
												"src": "10354:17:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1631",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2168,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2167,
														"name": "Rounding",
														"nameLocations": [
															"10354:8:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1631,
														"src": "10354:8:10"
													},
													"referencedDeclaration": 1631,
													"src": "10354:8:10",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1631",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10342:30:10"
									},
									"returnParameters": {
										"id": 2173,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2172,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2198,
												"src": "10396:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2171,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10396:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10395:9:10"
									},
									"scope": 2674,
									"src": "10329:240:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2329,
										"nodeType": "Block",
										"src": "10760:922:10",
										"statements": [
											{
												"assignments": [
													2207
												],
												"declarations": [
													{
														"constant": false,
														"id": 2207,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "10778:6:10",
														"nodeType": "VariableDeclaration",
														"scope": 2329,
														"src": "10770:14:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2206,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10770:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2209,
												"initialValue": {
													"hexValue": "30",
													"id": 2208,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "10787:1:10",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10770:18:10"
											},
											{
												"id": 2326,
												"nodeType": "UncheckedBlock",
												"src": "10798:855:10",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2214,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2212,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2210,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2201,
																	"src": "10826:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "313238",
																	"id": 2211,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10835:3:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "10826:12:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2213,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10841:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "10826:16:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2224,
														"nodeType": "IfStatement",
														"src": "10822:99:10",
														"trueBody": {
															"id": 2223,
															"nodeType": "Block",
															"src": "10844:77:10",
															"statements": [
																{
																	"expression": {
																		"id": 2217,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2215,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2201,
																			"src": "10862:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 2216,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10872:3:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "10862:13:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2218,
																	"nodeType": "ExpressionStatement",
																	"src": "10862:13:10"
																},
																{
																	"expression": {
																		"id": 2221,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2219,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2207,
																			"src": "10893:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 2220,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10903:3:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "10893:13:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2222,
																	"nodeType": "ExpressionStatement",
																	"src": "10893:13:10"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2229,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2227,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2225,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2201,
																	"src": "10938:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 2226,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10947:2:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "10938:11:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2228,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10952:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "10938:15:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2239,
														"nodeType": "IfStatement",
														"src": "10934:96:10",
														"trueBody": {
															"id": 2238,
															"nodeType": "Block",
															"src": "10955:75:10",
															"statements": [
																{
																	"expression": {
																		"id": 2232,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2230,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2201,
																			"src": "10973:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 2231,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10983:2:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "10973:12:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2233,
																	"nodeType": "ExpressionStatement",
																	"src": "10973:12:10"
																},
																{
																	"expression": {
																		"id": 2236,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2234,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2207,
																			"src": "11003:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 2235,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11013:2:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "11003:12:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2237,
																	"nodeType": "ExpressionStatement",
																	"src": "11003:12:10"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2244,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2242,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2240,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2201,
																	"src": "11047:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 2241,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11056:2:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "11047:11:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2243,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11061:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11047:15:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2254,
														"nodeType": "IfStatement",
														"src": "11043:96:10",
														"trueBody": {
															"id": 2253,
															"nodeType": "Block",
															"src": "11064:75:10",
															"statements": [
																{
																	"expression": {
																		"id": 2247,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2245,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2201,
																			"src": "11082:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 2246,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11092:2:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "11082:12:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2248,
																	"nodeType": "ExpressionStatement",
																	"src": "11082:12:10"
																},
																{
																	"expression": {
																		"id": 2251,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2249,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2207,
																			"src": "11112:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 2250,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11122:2:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "11112:12:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2252,
																	"nodeType": "ExpressionStatement",
																	"src": "11112:12:10"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2259,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2257,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2255,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2201,
																	"src": "11156:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 2256,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11165:2:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "11156:11:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2258,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11170:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11156:15:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2269,
														"nodeType": "IfStatement",
														"src": "11152:96:10",
														"trueBody": {
															"id": 2268,
															"nodeType": "Block",
															"src": "11173:75:10",
															"statements": [
																{
																	"expression": {
																		"id": 2262,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2260,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2201,
																			"src": "11191:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2261,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11201:2:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "11191:12:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2263,
																	"nodeType": "ExpressionStatement",
																	"src": "11191:12:10"
																},
																{
																	"expression": {
																		"id": 2266,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2264,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2207,
																			"src": "11221:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2265,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11231:2:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "11221:12:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2267,
																	"nodeType": "ExpressionStatement",
																	"src": "11221:12:10"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2274,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2272,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2270,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2201,
																	"src": "11265:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 2271,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11274:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "11265:10:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2273,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11278:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11265:14:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2284,
														"nodeType": "IfStatement",
														"src": "11261:93:10",
														"trueBody": {
															"id": 2283,
															"nodeType": "Block",
															"src": "11281:73:10",
															"statements": [
																{
																	"expression": {
																		"id": 2277,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2275,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2201,
																			"src": "11299:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 2276,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11309:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "11299:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2278,
																	"nodeType": "ExpressionStatement",
																	"src": "11299:11:10"
																},
																{
																	"expression": {
																		"id": 2281,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2279,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2207,
																			"src": "11328:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 2280,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11338:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "11328:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2282,
																	"nodeType": "ExpressionStatement",
																	"src": "11328:11:10"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2289,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2287,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2285,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2201,
																	"src": "11371:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 2286,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11380:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "11371:10:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2288,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11384:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11371:14:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2299,
														"nodeType": "IfStatement",
														"src": "11367:93:10",
														"trueBody": {
															"id": 2298,
															"nodeType": "Block",
															"src": "11387:73:10",
															"statements": [
																{
																	"expression": {
																		"id": 2292,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2290,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2201,
																			"src": "11405:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 2291,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11415:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "11405:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2293,
																	"nodeType": "ExpressionStatement",
																	"src": "11405:11:10"
																},
																{
																	"expression": {
																		"id": 2296,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2294,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2207,
																			"src": "11434:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 2295,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11444:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "11434:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2297,
																	"nodeType": "ExpressionStatement",
																	"src": "11434:11:10"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2304,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2302,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2300,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2201,
																	"src": "11477:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 2301,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11486:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "11477:10:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2303,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11490:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11477:14:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2314,
														"nodeType": "IfStatement",
														"src": "11473:93:10",
														"trueBody": {
															"id": 2313,
															"nodeType": "Block",
															"src": "11493:73:10",
															"statements": [
																{
																	"expression": {
																		"id": 2307,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2305,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2201,
																			"src": "11511:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 2306,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11521:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "11511:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2308,
																	"nodeType": "ExpressionStatement",
																	"src": "11511:11:10"
																},
																{
																	"expression": {
																		"id": 2311,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2309,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2207,
																			"src": "11540:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 2310,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11550:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "11540:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2312,
																	"nodeType": "ExpressionStatement",
																	"src": "11540:11:10"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2319,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2317,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2315,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2201,
																	"src": "11583:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2316,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11592:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "11583:10:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2318,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11596:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11583:14:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2325,
														"nodeType": "IfStatement",
														"src": "11579:64:10",
														"trueBody": {
															"id": 2324,
															"nodeType": "Block",
															"src": "11599:44:10",
															"statements": [
																{
																	"expression": {
																		"id": 2322,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2320,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2207,
																			"src": "11617:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 2321,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11627:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "11617:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2323,
																	"nodeType": "ExpressionStatement",
																	"src": "11617:11:10"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 2327,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2207,
													"src": "11669:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2205,
												"id": 2328,
												"nodeType": "Return",
												"src": "11662:13:10"
											}
										]
									},
									"documentation": {
										"id": 2199,
										"nodeType": "StructuredDocumentation",
										"src": "10575:119:10",
										"text": " @dev Return the log in base 2 of a positive value rounded towards zero.\n Returns 0 if given 0."
									},
									"id": 2330,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log2",
									"nameLocation": "10708:4:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2202,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2201,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10721:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 2330,
												"src": "10713:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2200,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10713:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10712:15:10"
									},
									"returnParameters": {
										"id": 2205,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2204,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2330,
												"src": "10751:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2203,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10751:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10750:9:10"
									},
									"scope": 2674,
									"src": "10699:983:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2364,
										"nodeType": "Block",
										"src": "11915:168:10",
										"statements": [
											{
												"id": 2363,
												"nodeType": "UncheckedBlock",
												"src": "11925:152:10",
												"statements": [
													{
														"assignments": [
															2342
														],
														"declarations": [
															{
																"constant": false,
																"id": 2342,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "11957:6:10",
																"nodeType": "VariableDeclaration",
																"scope": 2363,
																"src": "11949:14:10",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2341,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "11949:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2346,
														"initialValue": {
															"arguments": [
																{
																	"id": 2344,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2333,
																	"src": "11971:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2343,
																"name": "log2",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2330,
																	2365
																],
																"referencedDeclaration": 2330,
																"src": "11966:4:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 2345,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11966:11:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "11949:28:10"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2361,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2347,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2342,
																"src": "11998:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 2356,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 2349,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2336,
																						"src": "12025:8:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$1631",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$1631",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 2348,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2673,
																					"src": "12008:16:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$1631_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 2350,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "12008:26:10",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2355,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2353,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "31",
																						"id": 2351,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "12038:1:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<<",
																					"rightExpression": {
																						"id": 2352,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2342,
																						"src": "12043:6:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "12038:11:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 2354,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2333,
																					"src": "12052:5:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "12038:19:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "12008:49:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 2358,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12064:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 2359,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "12008:57:10",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 2357,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12060:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 2360,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "12007:59:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "11998:68:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2340,
														"id": 2362,
														"nodeType": "Return",
														"src": "11991:75:10"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2331,
										"nodeType": "StructuredDocumentation",
										"src": "11688:142:10",
										"text": " @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 2365,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log2",
									"nameLocation": "11844:4:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2337,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2333,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "11857:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 2365,
												"src": "11849:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2332,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11849:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2336,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "11873:8:10",
												"nodeType": "VariableDeclaration",
												"scope": 2365,
												"src": "11864:17:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1631",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2335,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2334,
														"name": "Rounding",
														"nameLocations": [
															"11864:8:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1631,
														"src": "11864:8:10"
													},
													"referencedDeclaration": 1631,
													"src": "11864:8:10",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1631",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11848:34:10"
									},
									"returnParameters": {
										"id": 2340,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2339,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2365,
												"src": "11906:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2338,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11906:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11905:9:10"
									},
									"scope": 2674,
									"src": "11835:248:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2493,
										"nodeType": "Block",
										"src": "12276:854:10",
										"statements": [
											{
												"assignments": [
													2374
												],
												"declarations": [
													{
														"constant": false,
														"id": 2374,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "12294:6:10",
														"nodeType": "VariableDeclaration",
														"scope": 2493,
														"src": "12286:14:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2373,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "12286:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2376,
												"initialValue": {
													"hexValue": "30",
													"id": 2375,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "12303:1:10",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12286:18:10"
											},
											{
												"id": 2490,
												"nodeType": "UncheckedBlock",
												"src": "12314:787:10",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2381,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2377,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2368,
																"src": "12342:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(57 digits omitted)...0000"
																},
																"id": 2380,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2378,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12351:2:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 2379,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12357:2:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "12351:8:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(57 digits omitted)...0000"
																}
															},
															"src": "12342:17:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2393,
														"nodeType": "IfStatement",
														"src": "12338:103:10",
														"trueBody": {
															"id": 2392,
															"nodeType": "Block",
															"src": "12361:80:10",
															"statements": [
																{
																	"expression": {
																		"id": 2386,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2382,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2368,
																			"src": "12379:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(57 digits omitted)...0000"
																			},
																			"id": 2385,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2383,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12388:2:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3634",
																				"id": 2384,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12394:2:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_64_by_1",
																					"typeString": "int_const 64"
																				},
																				"value": "64"
																			},
																			"src": "12388:8:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(57 digits omitted)...0000"
																			}
																		},
																		"src": "12379:17:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2387,
																	"nodeType": "ExpressionStatement",
																	"src": "12379:17:10"
																},
																{
																	"expression": {
																		"id": 2390,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2388,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2374,
																			"src": "12414:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 2389,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12424:2:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "12414:12:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2391,
																	"nodeType": "ExpressionStatement",
																	"src": "12414:12:10"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2398,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2394,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2368,
																"src": "12458:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(25 digits omitted)...0000"
																},
																"id": 2397,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2395,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12467:2:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 2396,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12473:2:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "12467:8:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(25 digits omitted)...0000"
																}
															},
															"src": "12458:17:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2410,
														"nodeType": "IfStatement",
														"src": "12454:103:10",
														"trueBody": {
															"id": 2409,
															"nodeType": "Block",
															"src": "12477:80:10",
															"statements": [
																{
																	"expression": {
																		"id": 2403,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2399,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2368,
																			"src": "12495:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(25 digits omitted)...0000"
																			},
																			"id": 2402,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2400,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12504:2:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3332",
																				"id": 2401,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12510:2:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_32_by_1",
																					"typeString": "int_const 32"
																				},
																				"value": "32"
																			},
																			"src": "12504:8:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(25 digits omitted)...0000"
																			}
																		},
																		"src": "12495:17:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2404,
																	"nodeType": "ExpressionStatement",
																	"src": "12495:17:10"
																},
																{
																	"expression": {
																		"id": 2407,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2405,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2374,
																			"src": "12530:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 2406,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12540:2:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "12530:12:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2408,
																	"nodeType": "ExpressionStatement",
																	"src": "12530:12:10"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2415,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2411,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2368,
																"src": "12574:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000000000_by_1",
																	"typeString": "int_const 10000000000000000"
																},
																"id": 2414,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2412,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12583:2:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 2413,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12589:2:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "12583:8:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000_by_1",
																	"typeString": "int_const 10000000000000000"
																}
															},
															"src": "12574:17:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2427,
														"nodeType": "IfStatement",
														"src": "12570:103:10",
														"trueBody": {
															"id": 2426,
															"nodeType": "Block",
															"src": "12593:80:10",
															"statements": [
																{
																	"expression": {
																		"id": 2420,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2416,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2368,
																			"src": "12611:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000000000000000_by_1",
																				"typeString": "int_const 10000000000000000"
																			},
																			"id": 2419,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2417,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12620:2:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3136",
																				"id": 2418,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12626:2:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_16_by_1",
																					"typeString": "int_const 16"
																				},
																				"value": "16"
																			},
																			"src": "12620:8:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000000000000000_by_1",
																				"typeString": "int_const 10000000000000000"
																			}
																		},
																		"src": "12611:17:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2421,
																	"nodeType": "ExpressionStatement",
																	"src": "12611:17:10"
																},
																{
																	"expression": {
																		"id": 2424,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2422,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2374,
																			"src": "12646:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2423,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12656:2:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "12646:12:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2425,
																	"nodeType": "ExpressionStatement",
																	"src": "12646:12:10"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2432,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2428,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2368,
																"src": "12690:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																},
																"id": 2431,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2429,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12699:2:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 2430,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12705:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "12699:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																}
															},
															"src": "12690:16:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2444,
														"nodeType": "IfStatement",
														"src": "12686:100:10",
														"trueBody": {
															"id": 2443,
															"nodeType": "Block",
															"src": "12708:78:10",
															"statements": [
																{
																	"expression": {
																		"id": 2437,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2433,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2368,
																			"src": "12726:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			},
																			"id": 2436,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2434,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12735:2:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "38",
																				"id": 2435,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12741:1:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_8_by_1",
																					"typeString": "int_const 8"
																				},
																				"value": "8"
																			},
																			"src": "12735:7:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			}
																		},
																		"src": "12726:16:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2438,
																	"nodeType": "ExpressionStatement",
																	"src": "12726:16:10"
																},
																{
																	"expression": {
																		"id": 2441,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2439,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2374,
																			"src": "12760:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 2440,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12770:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "12760:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2442,
																	"nodeType": "ExpressionStatement",
																	"src": "12760:11:10"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2449,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2445,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2368,
																"src": "12803:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																},
																"id": 2448,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2446,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12812:2:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 2447,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12818:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "12812:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																}
															},
															"src": "12803:16:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2461,
														"nodeType": "IfStatement",
														"src": "12799:100:10",
														"trueBody": {
															"id": 2460,
															"nodeType": "Block",
															"src": "12821:78:10",
															"statements": [
																{
																	"expression": {
																		"id": 2454,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2450,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2368,
																			"src": "12839:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			},
																			"id": 2453,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2451,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12848:2:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "34",
																				"id": 2452,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12854:1:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_4_by_1",
																					"typeString": "int_const 4"
																				},
																				"value": "4"
																			},
																			"src": "12848:7:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			}
																		},
																		"src": "12839:16:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2455,
																	"nodeType": "ExpressionStatement",
																	"src": "12839:16:10"
																},
																{
																	"expression": {
																		"id": 2458,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2456,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2374,
																			"src": "12873:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 2457,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12883:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "12873:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2459,
																	"nodeType": "ExpressionStatement",
																	"src": "12873:11:10"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2466,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2462,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2368,
																"src": "12916:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																},
																"id": 2465,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2463,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12925:2:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 2464,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12931:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "12925:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																}
															},
															"src": "12916:16:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2478,
														"nodeType": "IfStatement",
														"src": "12912:100:10",
														"trueBody": {
															"id": 2477,
															"nodeType": "Block",
															"src": "12934:78:10",
															"statements": [
																{
																	"expression": {
																		"id": 2471,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2467,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2368,
																			"src": "12952:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			},
																			"id": 2470,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2468,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12961:2:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "32",
																				"id": 2469,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12967:1:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_2_by_1",
																					"typeString": "int_const 2"
																				},
																				"value": "2"
																			},
																			"src": "12961:7:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			}
																		},
																		"src": "12952:16:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2472,
																	"nodeType": "ExpressionStatement",
																	"src": "12952:16:10"
																},
																{
																	"expression": {
																		"id": 2475,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2473,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2374,
																			"src": "12986:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 2474,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12996:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "12986:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2476,
																	"nodeType": "ExpressionStatement",
																	"src": "12986:11:10"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2483,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2479,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2368,
																"src": "13029:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																},
																"id": 2482,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2480,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13038:2:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2481,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13044:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "13038:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																}
															},
															"src": "13029:16:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2489,
														"nodeType": "IfStatement",
														"src": "13025:66:10",
														"trueBody": {
															"id": 2488,
															"nodeType": "Block",
															"src": "13047:44:10",
															"statements": [
																{
																	"expression": {
																		"id": 2486,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2484,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2374,
																			"src": "13065:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 2485,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13075:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "13065:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2487,
																	"nodeType": "ExpressionStatement",
																	"src": "13065:11:10"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 2491,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2374,
													"src": "13117:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2372,
												"id": 2492,
												"nodeType": "Return",
												"src": "13110:13:10"
											}
										]
									},
									"documentation": {
										"id": 2366,
										"nodeType": "StructuredDocumentation",
										"src": "12089:120:10",
										"text": " @dev Return the log in base 10 of a positive value rounded towards zero.\n Returns 0 if given 0."
									},
									"id": 2494,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log10",
									"nameLocation": "12223:5:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2369,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2368,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "12237:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 2494,
												"src": "12229:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2367,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12229:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12228:15:10"
									},
									"returnParameters": {
										"id": 2372,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2371,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2494,
												"src": "12267:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2370,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12267:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12266:9:10"
									},
									"scope": 2674,
									"src": "12214:916:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2528,
										"nodeType": "Block",
										"src": "13365:170:10",
										"statements": [
											{
												"id": 2527,
												"nodeType": "UncheckedBlock",
												"src": "13375:154:10",
												"statements": [
													{
														"assignments": [
															2506
														],
														"declarations": [
															{
																"constant": false,
																"id": 2506,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "13407:6:10",
																"nodeType": "VariableDeclaration",
																"scope": 2527,
																"src": "13399:14:10",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2505,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "13399:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2510,
														"initialValue": {
															"arguments": [
																{
																	"id": 2508,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2497,
																	"src": "13422:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2507,
																"name": "log10",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2494,
																	2529
																],
																"referencedDeclaration": 2494,
																"src": "13416:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 2509,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13416:12:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "13399:29:10"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2525,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2511,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2506,
																"src": "13449:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 2520,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 2513,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2500,
																						"src": "13476:8:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$1631",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$1631",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 2512,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2673,
																					"src": "13459:16:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$1631_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 2514,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "13459:26:10",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2519,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2517,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "3130",
																						"id": 2515,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "13489:2:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_10_by_1",
																							"typeString": "int_const 10"
																						},
																						"value": "10"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "**",
																					"rightExpression": {
																						"id": 2516,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2506,
																						"src": "13495:6:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "13489:12:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 2518,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2497,
																					"src": "13504:5:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "13489:20:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "13459:50:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 2522,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13516:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 2523,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "13459:58:10",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 2521,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13512:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 2524,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "13458:60:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "13449:69:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2504,
														"id": 2526,
														"nodeType": "Return",
														"src": "13442:76:10"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2495,
										"nodeType": "StructuredDocumentation",
										"src": "13136:143:10",
										"text": " @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 2529,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log10",
									"nameLocation": "13293:5:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2501,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2497,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "13307:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 2529,
												"src": "13299:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2496,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13299:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2500,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "13323:8:10",
												"nodeType": "VariableDeclaration",
												"scope": 2529,
												"src": "13314:17:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1631",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2499,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2498,
														"name": "Rounding",
														"nameLocations": [
															"13314:8:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1631,
														"src": "13314:8:10"
													},
													"referencedDeclaration": 1631,
													"src": "13314:8:10",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1631",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13298:34:10"
									},
									"returnParameters": {
										"id": 2504,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2503,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2529,
												"src": "13356:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2502,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13356:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13355:9:10"
									},
									"scope": 2674,
									"src": "13284:251:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2615,
										"nodeType": "Block",
										"src": "13855:600:10",
										"statements": [
											{
												"assignments": [
													2538
												],
												"declarations": [
													{
														"constant": false,
														"id": 2538,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "13873:6:10",
														"nodeType": "VariableDeclaration",
														"scope": 2615,
														"src": "13865:14:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2537,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "13865:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2540,
												"initialValue": {
													"hexValue": "30",
													"id": 2539,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "13882:1:10",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "13865:18:10"
											},
											{
												"id": 2612,
												"nodeType": "UncheckedBlock",
												"src": "13893:533:10",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2545,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2543,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2541,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2532,
																	"src": "13921:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "313238",
																	"id": 2542,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13930:3:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "13921:12:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2544,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "13936:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "13921:16:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2555,
														"nodeType": "IfStatement",
														"src": "13917:98:10",
														"trueBody": {
															"id": 2554,
															"nodeType": "Block",
															"src": "13939:76:10",
															"statements": [
																{
																	"expression": {
																		"id": 2548,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2546,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2532,
																			"src": "13957:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 2547,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13967:3:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "13957:13:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2549,
																	"nodeType": "ExpressionStatement",
																	"src": "13957:13:10"
																},
																{
																	"expression": {
																		"id": 2552,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2550,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2538,
																			"src": "13988:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2551,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13998:2:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "13988:12:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2553,
																	"nodeType": "ExpressionStatement",
																	"src": "13988:12:10"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2560,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2558,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2556,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2532,
																	"src": "14032:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 2557,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14041:2:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "14032:11:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2559,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14046:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14032:15:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2570,
														"nodeType": "IfStatement",
														"src": "14028:95:10",
														"trueBody": {
															"id": 2569,
															"nodeType": "Block",
															"src": "14049:74:10",
															"statements": [
																{
																	"expression": {
																		"id": 2563,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2561,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2532,
																			"src": "14067:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 2562,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14077:2:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "14067:12:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2564,
																	"nodeType": "ExpressionStatement",
																	"src": "14067:12:10"
																},
																{
																	"expression": {
																		"id": 2567,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2565,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2538,
																			"src": "14097:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 2566,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14107:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "14097:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2568,
																	"nodeType": "ExpressionStatement",
																	"src": "14097:11:10"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2575,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2573,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2571,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2532,
																	"src": "14140:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 2572,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14149:2:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "14140:11:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2574,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14154:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14140:15:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2585,
														"nodeType": "IfStatement",
														"src": "14136:95:10",
														"trueBody": {
															"id": 2584,
															"nodeType": "Block",
															"src": "14157:74:10",
															"statements": [
																{
																	"expression": {
																		"id": 2578,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2576,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2532,
																			"src": "14175:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 2577,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14185:2:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "14175:12:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2579,
																	"nodeType": "ExpressionStatement",
																	"src": "14175:12:10"
																},
																{
																	"expression": {
																		"id": 2582,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2580,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2538,
																			"src": "14205:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 2581,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14215:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "14205:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2583,
																	"nodeType": "ExpressionStatement",
																	"src": "14205:11:10"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2590,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2588,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2586,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2532,
																	"src": "14248:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 2587,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14257:2:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "14248:11:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2589,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14262:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14248:15:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2600,
														"nodeType": "IfStatement",
														"src": "14244:95:10",
														"trueBody": {
															"id": 2599,
															"nodeType": "Block",
															"src": "14265:74:10",
															"statements": [
																{
																	"expression": {
																		"id": 2593,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2591,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2532,
																			"src": "14283:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2592,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14293:2:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "14283:12:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2594,
																	"nodeType": "ExpressionStatement",
																	"src": "14283:12:10"
																},
																{
																	"expression": {
																		"id": 2597,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2595,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2538,
																			"src": "14313:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 2596,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14323:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "14313:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2598,
																	"nodeType": "ExpressionStatement",
																	"src": "14313:11:10"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2605,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2603,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2601,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2532,
																	"src": "14356:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 2602,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14365:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "14356:10:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2604,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14369:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14356:14:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2611,
														"nodeType": "IfStatement",
														"src": "14352:64:10",
														"trueBody": {
															"id": 2610,
															"nodeType": "Block",
															"src": "14372:44:10",
															"statements": [
																{
																	"expression": {
																		"id": 2608,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2606,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2538,
																			"src": "14390:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 2607,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14400:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "14390:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2609,
																	"nodeType": "ExpressionStatement",
																	"src": "14390:11:10"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 2613,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2538,
													"src": "14442:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2536,
												"id": 2614,
												"nodeType": "Return",
												"src": "14435:13:10"
											}
										]
									},
									"documentation": {
										"id": 2530,
										"nodeType": "StructuredDocumentation",
										"src": "13541:246:10",
										"text": " @dev Return the log in base 256 of a positive value rounded towards zero.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."
									},
									"id": 2616,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log256",
									"nameLocation": "13801:6:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2533,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2532,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "13816:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 2616,
												"src": "13808:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2531,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13808:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13807:15:10"
									},
									"returnParameters": {
										"id": 2536,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2535,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2616,
												"src": "13846:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2534,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13846:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13845:9:10"
									},
									"scope": 2674,
									"src": "13792:663:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2653,
										"nodeType": "Block",
										"src": "14692:177:10",
										"statements": [
											{
												"id": 2652,
												"nodeType": "UncheckedBlock",
												"src": "14702:161:10",
												"statements": [
													{
														"assignments": [
															2628
														],
														"declarations": [
															{
																"constant": false,
																"id": 2628,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "14734:6:10",
																"nodeType": "VariableDeclaration",
																"scope": 2652,
																"src": "14726:14:10",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2627,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "14726:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2632,
														"initialValue": {
															"arguments": [
																{
																	"id": 2630,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2619,
																	"src": "14750:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2629,
																"name": "log256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2616,
																	2654
																],
																"referencedDeclaration": 2616,
																"src": "14743:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 2631,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14743:13:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "14726:30:10"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2650,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2633,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2628,
																"src": "14777:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 2645,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 2635,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2622,
																						"src": "14804:8:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$1631",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$1631",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 2634,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2673,
																					"src": "14787:16:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$1631_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 2636,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "14787:26:10",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2644,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2642,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "31",
																						"id": 2637,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "14817:1:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<<",
																					"rightExpression": {
																						"components": [
																							{
																								"commonType": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								"id": 2640,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"id": 2638,
																									"name": "result",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 2628,
																									"src": "14823:6:10",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "<<",
																								"rightExpression": {
																									"hexValue": "33",
																									"id": 2639,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "14833:1:10",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_3_by_1",
																										"typeString": "int_const 3"
																									},
																									"value": "3"
																								},
																								"src": "14823:11:10",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"id": 2641,
																						"isConstant": false,
																						"isInlineArray": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "TupleExpression",
																						"src": "14822:13:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "14817:18:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 2643,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2619,
																					"src": "14838:5:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "14817:26:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "14787:56:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 2647,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14850:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 2648,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "14787:64:10",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 2646,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14846:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 2649,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "14786:66:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "14777:75:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2626,
														"id": 2651,
														"nodeType": "Return",
														"src": "14770:82:10"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2617,
										"nodeType": "StructuredDocumentation",
										"src": "14461:144:10",
										"text": " @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 2654,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log256",
									"nameLocation": "14619:6:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2623,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2619,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "14634:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 2654,
												"src": "14626:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2618,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14626:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2622,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "14650:8:10",
												"nodeType": "VariableDeclaration",
												"scope": 2654,
												"src": "14641:17:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1631",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2621,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2620,
														"name": "Rounding",
														"nameLocations": [
															"14641:8:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1631,
														"src": "14641:8:10"
													},
													"referencedDeclaration": 1631,
													"src": "14641:8:10",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1631",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14625:34:10"
									},
									"returnParameters": {
										"id": 2626,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2625,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2654,
												"src": "14683:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2624,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14683:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14682:9:10"
									},
									"scope": 2674,
									"src": "14610:259:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2672,
										"nodeType": "Block",
										"src": "15067:48:10",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													},
													"id": 2670,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														},
														"id": 2668,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 2665,
																	"name": "rounding",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2658,
																	"src": "15090:8:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_Rounding_$1631",
																		"typeString": "enum Math.Rounding"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_enum$_Rounding_$1631",
																		"typeString": "enum Math.Rounding"
																	}
																],
																"id": 2664,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "15084:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint8_$",
																	"typeString": "type(uint8)"
																},
																"typeName": {
																	"id": 2663,
																	"name": "uint8",
																	"nodeType": "ElementaryTypeName",
																	"src": "15084:5:10",
																	"typeDescriptions": {}
																}
															},
															"id": 2666,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "15084:15:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "%",
														"rightExpression": {
															"hexValue": "32",
															"id": 2667,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "15102:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "15084:19:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "31",
														"id": 2669,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "15107:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "15084:24:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 2662,
												"id": 2671,
												"nodeType": "Return",
												"src": "15077:31:10"
											}
										]
									},
									"documentation": {
										"id": 2655,
										"nodeType": "StructuredDocumentation",
										"src": "14875:113:10",
										"text": " @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers."
									},
									"id": 2673,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "unsignedRoundsUp",
									"nameLocation": "15002:16:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2659,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2658,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "15028:8:10",
												"nodeType": "VariableDeclaration",
												"scope": 2673,
												"src": "15019:17:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1631",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2657,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2656,
														"name": "Rounding",
														"nameLocations": [
															"15019:8:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1631,
														"src": "15019:8:10"
													},
													"referencedDeclaration": 1631,
													"src": "15019:8:10",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1631",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15018:19:10"
									},
									"returnParameters": {
										"id": 2662,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2661,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2673,
												"src": "15061:4:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2660,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "15061:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15060:6:10"
									},
									"scope": 2674,
									"src": "14993:122:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2675,
							"src": "203:14914:10",
							"usedErrors": [
								1626
							],
							"usedEvents": []
						}
					],
					"src": "103:15015:10"
				},
				"id": 10
			},
			"contracts/real-estate-marketplace/Shares.sol": {
				"ast": {
					"absolutePath": "contracts/real-estate-marketplace/Shares.sol",
					"exportedSymbols": {
						"Address": [
							1590
						],
						"Context": [
							1620
						],
						"ERC20": [
							907
						],
						"IERC20": [
							985
						],
						"IERC20Errors": [
							189
						],
						"IERC20Metadata": [
							1011
						],
						"IERC20Permit": [
							1047
						],
						"Math": [
							2674
						],
						"Ownable": [
							147
						],
						"Pausable": [
							392
						],
						"SafeERC20": [
							1337
						],
						"Shares": [
							3074
						]
					},
					"id": 3075,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2676,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:11"
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 2677,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3075,
							"sourceUnit": 148,
							"src": "57:52:11",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/security/Pausable.sol",
							"file": "@openzeppelin/contracts/security/Pausable.sol",
							"id": 2678,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3075,
							"sourceUnit": 393,
							"src": "110:55:11",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"id": 2679,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3075,
							"sourceUnit": 908,
							"src": "166:55:11",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/Math.sol",
							"file": "@openzeppelin/contracts/utils/math/Math.sol",
							"id": 2680,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3075,
							"sourceUnit": 2675,
							"src": "222:53:11",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
							"id": 2681,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3075,
							"sourceUnit": 1338,
							"src": "276:65:11",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 2682,
										"name": "ERC20",
										"nameLocations": [
											"362:5:11"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 907,
										"src": "362:5:11"
									},
									"id": 2683,
									"nodeType": "InheritanceSpecifier",
									"src": "362:5:11"
								},
								{
									"baseName": {
										"id": 2684,
										"name": "Ownable",
										"nameLocations": [
											"369:7:11"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 147,
										"src": "369:7:11"
									},
									"id": 2685,
									"nodeType": "InheritanceSpecifier",
									"src": "369:7:11"
								},
								{
									"baseName": {
										"id": 2686,
										"name": "Pausable",
										"nameLocations": [
											"378:8:11"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 392,
										"src": "378:8:11"
									},
									"id": 2687,
									"nodeType": "InheritanceSpecifier",
									"src": "378:8:11"
								}
							],
							"canonicalName": "Shares",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 3074,
							"linearizedBaseContracts": [
								3074,
								392,
								147,
								907,
								189,
								1011,
								985,
								1620
							],
							"name": "Shares",
							"nameLocation": "352:6:11",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 2690,
									"libraryName": {
										"id": 2688,
										"name": "Math",
										"nameLocations": [
											"399:4:11"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2674,
										"src": "399:4:11"
									},
									"nodeType": "UsingForDirective",
									"src": "393:23:11",
									"typeName": {
										"id": 2689,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "408:7:11",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"global": false,
									"id": 2694,
									"libraryName": {
										"id": 2691,
										"name": "SafeERC20",
										"nameLocations": [
											"427:9:11"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1337,
										"src": "427:9:11"
									},
									"nodeType": "UsingForDirective",
									"src": "421:27:11",
									"typeName": {
										"id": 2693,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 2692,
											"name": "IERC20",
											"nameLocations": [
												"441:6:11"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 985,
											"src": "441:6:11"
										},
										"referencedDeclaration": 985,
										"src": "441:6:11",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$985",
											"typeString": "contract IERC20"
										}
									}
								},
								{
									"canonicalName": "Shares.ShareBasket",
									"id": 2702,
									"members": [
										{
											"constant": false,
											"id": 2696,
											"mutability": "mutable",
											"name": "basketId",
											"nameLocation": "491:8:11",
											"nodeType": "VariableDeclaration",
											"scope": 2702,
											"src": "483:16:11",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2695,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "483:7:11",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2699,
											"mutability": "mutable",
											"name": "propertyIds",
											"nameLocation": "519:11:11",
											"nodeType": "VariableDeclaration",
											"scope": 2702,
											"src": "509:21:11",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
												"typeString": "uint256[]"
											},
											"typeName": {
												"baseType": {
													"id": 2697,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "509:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2698,
												"nodeType": "ArrayTypeName",
												"src": "509:9:11",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
													"typeString": "uint256[]"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2701,
											"mutability": "mutable",
											"name": "totalShares",
											"nameLocation": "548:11:11",
											"nodeType": "VariableDeclaration",
											"scope": 2702,
											"src": "540:19:11",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2700,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "540:7:11",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "ShareBasket",
									"nameLocation": "461:11:11",
									"nodeType": "StructDefinition",
									"scope": 3074,
									"src": "454:112:11",
									"visibility": "public"
								},
								{
									"canonicalName": "Shares.PropertyShares",
									"id": 2711,
									"members": [
										{
											"constant": false,
											"id": 2704,
											"mutability": "mutable",
											"name": "totalShares",
											"nameLocation": "612:11:11",
											"nodeType": "VariableDeclaration",
											"scope": 2711,
											"src": "604:19:11",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2703,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "604:7:11",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2706,
											"mutability": "mutable",
											"name": "availableShares",
											"nameLocation": "641:15:11",
											"nodeType": "VariableDeclaration",
											"scope": 2711,
											"src": "633:23:11",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2705,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "633:7:11",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2710,
											"mutability": "mutable",
											"name": "shareholders",
											"nameLocation": "694:12:11",
											"nodeType": "VariableDeclaration",
											"scope": 2711,
											"src": "666:40:11",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"typeName": {
												"id": 2709,
												"keyName": "",
												"keyNameLocation": "-1:-1:-1",
												"keyType": {
													"id": 2707,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "674:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "Mapping",
												"src": "666:27:11",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
													"typeString": "mapping(address => uint256)"
												},
												"valueName": "",
												"valueNameLocation": "-1:-1:-1",
												"valueType": {
													"id": 2708,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "685:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												}
											},
											"visibility": "internal"
										}
									],
									"name": "PropertyShares",
									"nameLocation": "579:14:11",
									"nodeType": "StructDefinition",
									"scope": 3074,
									"src": "572:141:11",
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "a60ed374",
									"id": 2716,
									"mutability": "mutable",
									"name": "baskets",
									"nameLocation": "758:7:11",
									"nodeType": "VariableDeclaration",
									"scope": 3074,
									"src": "719:46:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_ShareBasket_$2702_storage_$",
										"typeString": "mapping(uint256 => struct Shares.ShareBasket)"
									},
									"typeName": {
										"id": 2715,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 2712,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "727:7:11",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "719:31:11",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_ShareBasket_$2702_storage_$",
											"typeString": "mapping(uint256 => struct Shares.ShareBasket)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 2714,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 2713,
												"name": "ShareBasket",
												"nameLocations": [
													"738:11:11"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2702,
												"src": "738:11:11"
											},
											"referencedDeclaration": 2702,
											"src": "738:11:11",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_ShareBasket_$2702_storage_ptr",
												"typeString": "struct Shares.ShareBasket"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "4885cf0a",
									"id": 2720,
									"mutability": "mutable",
									"name": "basketShares",
									"nameLocation": "806:12:11",
									"nodeType": "VariableDeclaration",
									"scope": 3074,
									"src": "771:47:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
										"typeString": "mapping(uint256 => uint256)"
									},
									"typeName": {
										"id": 2719,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 2717,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "779:7:11",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "771:27:11",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
											"typeString": "mapping(uint256 => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 2718,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "790:7:11",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "b7b551ed",
									"id": 2725,
									"mutability": "mutable",
									"name": "propertyShares",
									"nameLocation": "866:14:11",
									"nodeType": "VariableDeclaration",
									"scope": 3074,
									"src": "824:56:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_PropertyShares_$2711_storage_$",
										"typeString": "mapping(uint256 => struct Shares.PropertyShares)"
									},
									"typeName": {
										"id": 2724,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 2721,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "832:7:11",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "824:34:11",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_PropertyShares_$2711_storage_$",
											"typeString": "mapping(uint256 => struct Shares.PropertyShares)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 2723,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 2722,
												"name": "PropertyShares",
												"nameLocations": [
													"843:14:11"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2711,
												"src": "843:14:11"
											},
											"referencedDeclaration": 2711,
											"src": "843:14:11",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_PropertyShares_$2711_storage_ptr",
												"typeString": "struct Shares.PropertyShares"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "7f2af083",
									"id": 2729,
									"mutability": "mutable",
									"name": "propertyOwners",
									"nameLocation": "921:14:11",
									"nodeType": "VariableDeclaration",
									"scope": 3074,
									"src": "886:49:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
										"typeString": "mapping(uint256 => address)"
									},
									"typeName": {
										"id": 2728,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 2726,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "894:7:11",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "886:27:11",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
											"typeString": "mapping(uint256 => address)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 2727,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "905:7:11",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										}
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"eventSelector": "6b3332210c2263e1008f810d148fc1c61a002c8f5dfcf18fe06858064bc49e69",
									"id": 2737,
									"name": "SharesIssued",
									"nameLocation": "948:12:11",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2736,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2731,
												"indexed": true,
												"mutability": "mutable",
												"name": "investor",
												"nameLocation": "977:8:11",
												"nodeType": "VariableDeclaration",
												"scope": 2737,
												"src": "961:24:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2730,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "961:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2733,
												"indexed": false,
												"mutability": "mutable",
												"name": "propertyId",
												"nameLocation": "995:10:11",
												"nodeType": "VariableDeclaration",
												"scope": 2737,
												"src": "987:18:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2732,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "987:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2735,
												"indexed": false,
												"mutability": "mutable",
												"name": "sharesIssued",
												"nameLocation": "1015:12:11",
												"nodeType": "VariableDeclaration",
												"scope": 2737,
												"src": "1007:20:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2734,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1007:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "960:68:11"
									},
									"src": "942:87:11"
								},
								{
									"anonymous": false,
									"eventSelector": "1ba44e8b79687fed555749cae6dcccf9bc5df37a2739fbc73062f07b534cf03e",
									"id": 2747,
									"name": "SharesTransferred",
									"nameLocation": "1040:17:11",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2746,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2739,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1074:4:11",
												"nodeType": "VariableDeclaration",
												"scope": 2747,
												"src": "1058:20:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2738,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1058:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2741,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1096:2:11",
												"nodeType": "VariableDeclaration",
												"scope": 2747,
												"src": "1080:18:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2740,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1080:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2743,
												"indexed": false,
												"mutability": "mutable",
												"name": "propertyId",
												"nameLocation": "1108:10:11",
												"nodeType": "VariableDeclaration",
												"scope": 2747,
												"src": "1100:18:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2742,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1100:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2745,
												"indexed": false,
												"mutability": "mutable",
												"name": "sharesTransferred",
												"nameLocation": "1128:17:11",
												"nodeType": "VariableDeclaration",
												"scope": 2747,
												"src": "1120:25:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2744,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1120:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1057:89:11"
									},
									"src": "1034:113:11"
								},
								{
									"body": {
										"id": 2758,
										"nodeType": "Block",
										"src": "1219:7:11",
										"statements": []
									},
									"id": 2759,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"hexValue": "50726f70657274795368617265",
													"id": 2750,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1173:15:11",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_df94e1c7d20e4c723fd4a28311af0ca1254d53f98de687a86623341044c6ce5c",
														"typeString": "literal_string \"PropertyShare\""
													},
													"value": "PropertyShare"
												},
												{
													"hexValue": "5348415245",
													"id": 2751,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1190:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_6ecee827156c952a04f57a0610c4ec267270d7865b010b3163aa1d3657d9a421",
														"typeString": "literal_string \"SHARE\""
													},
													"value": "SHARE"
												}
											],
											"id": 2752,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 2749,
												"name": "ERC20",
												"nameLocations": [
													"1167:5:11"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 907,
												"src": "1167:5:11"
											},
											"nodeType": "ModifierInvocation",
											"src": "1167:31:11"
										},
										{
											"arguments": [
												{
													"expression": {
														"id": 2754,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "1207:3:11",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 2755,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "1211:6:11",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "1207:10:11",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 2756,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 2753,
												"name": "Ownable",
												"nameLocations": [
													"1199:7:11"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 147,
												"src": "1199:7:11"
											},
											"nodeType": "ModifierInvocation",
											"src": "1199:19:11"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2748,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1164:2:11"
									},
									"returnParameters": {
										"id": 2757,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1219:0:11"
									},
									"scope": 3074,
									"src": "1153:73:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2787,
										"nodeType": "Block",
										"src": "1342:214:11",
										"statements": [
											{
												"expression": {
													"id": 2779,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2771,
															"name": "baskets",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2716,
															"src": "1352:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_ShareBasket_$2702_storage_$",
																"typeString": "mapping(uint256 => struct Shares.ShareBasket storage ref)"
															}
														},
														"id": 2773,
														"indexExpression": {
															"id": 2772,
															"name": "basketId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2761,
															"src": "1360:8:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1352:17:11",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_ShareBasket_$2702_storage",
															"typeString": "struct Shares.ShareBasket storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 2775,
																"name": "basketId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2761,
																"src": "1408:8:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 2776,
																"name": "propertyIds",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2764,
																"src": "1443:11:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																	"typeString": "uint256[] memory"
																}
															},
															{
																"id": 2777,
																"name": "totalShares",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2766,
																"src": "1481:11:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																	"typeString": "uint256[] memory"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 2774,
															"name": "ShareBasket",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2702,
															"src": "1372:11:11",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_struct$_ShareBasket_$2702_storage_ptr_$",
																"typeString": "type(struct Shares.ShareBasket storage pointer)"
															}
														},
														"id": 2778,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "structConstructorCall",
														"lValueRequested": false,
														"nameLocations": [
															"1398:8:11",
															"1430:11:11",
															"1468:11:11"
														],
														"names": [
															"basketId",
															"propertyIds",
															"totalShares"
														],
														"nodeType": "FunctionCall",
														"src": "1372:131:11",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_ShareBasket_$2702_memory_ptr",
															"typeString": "struct Shares.ShareBasket memory"
														}
													},
													"src": "1352:151:11",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ShareBasket_$2702_storage",
														"typeString": "struct Shares.ShareBasket storage ref"
													}
												},
												"id": 2780,
												"nodeType": "ExpressionStatement",
												"src": "1352:151:11"
											},
											{
												"expression": {
													"id": 2785,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2781,
															"name": "basketShares",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2720,
															"src": "1513:12:11",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																"typeString": "mapping(uint256 => uint256)"
															}
														},
														"id": 2783,
														"indexExpression": {
															"id": 2782,
															"name": "basketId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2761,
															"src": "1526:8:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1513:22:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2784,
														"name": "totalShares",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2766,
														"src": "1538:11:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1513:36:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2786,
												"nodeType": "ExpressionStatement",
												"src": "1513:36:11"
											}
										]
									},
									"functionSelector": "51111b72",
									"id": 2788,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2769,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2768,
												"name": "onlyOwner",
												"nameLocations": [
													"1332:9:11"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "1332:9:11"
											},
											"nodeType": "ModifierInvocation",
											"src": "1332:9:11"
										}
									],
									"name": "createBasket",
									"nameLocation": "1241:12:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2767,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2761,
												"mutability": "mutable",
												"name": "basketId",
												"nameLocation": "1262:8:11",
												"nodeType": "VariableDeclaration",
												"scope": 2788,
												"src": "1254:16:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2760,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1254:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2764,
												"mutability": "mutable",
												"name": "propertyIds",
												"nameLocation": "1289:11:11",
												"nodeType": "VariableDeclaration",
												"scope": 2788,
												"src": "1272:28:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 2762,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "1272:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2763,
													"nodeType": "ArrayTypeName",
													"src": "1272:9:11",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2766,
												"mutability": "mutable",
												"name": "totalShares",
												"nameLocation": "1310:11:11",
												"nodeType": "VariableDeclaration",
												"scope": 2788,
												"src": "1302:19:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2765,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1302:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1253:69:11"
									},
									"returnParameters": {
										"id": 2770,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1342:0:11"
									},
									"scope": 3074,
									"src": "1232:324:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2819,
										"nodeType": "Block",
										"src": "1648:160:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2804,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"id": 2800,
																	"name": "basketShares",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2720,
																	"src": "1666:12:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																		"typeString": "mapping(uint256 => uint256)"
																	}
																},
																"id": 2802,
																"indexExpression": {
																	"id": 2801,
																	"name": "basketId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2790,
																	"src": "1679:8:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "1666:22:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 2803,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2794,
																"src": "1692:6:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1666:32:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e73756666696369656e742073686172657320617661696c61626c65",
															"id": 2805,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1700:31:11",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d734de04f0d687b15d55ff3d832ab64e9874494a5534ef409e8a102ba868cc4c",
																"typeString": "literal_string \"Insufficient shares available\""
															},
															"value": "Insufficient shares available"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d734de04f0d687b15d55ff3d832ab64e9874494a5534ef409e8a102ba868cc4c",
																"typeString": "literal_string \"Insufficient shares available\""
															}
														],
														"id": 2799,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1658:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2806,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1658:74:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2807,
												"nodeType": "ExpressionStatement",
												"src": "1658:74:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2809,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2792,
															"src": "1748:2:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2810,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2794,
															"src": "1752:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2808,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 747,
														"src": "1742:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 2811,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1742:17:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2812,
												"nodeType": "ExpressionStatement",
												"src": "1742:17:11"
											},
											{
												"expression": {
													"id": 2817,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2813,
															"name": "basketShares",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2720,
															"src": "1769:12:11",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																"typeString": "mapping(uint256 => uint256)"
															}
														},
														"id": 2815,
														"indexExpression": {
															"id": 2814,
															"name": "basketId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2790,
															"src": "1782:8:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1769:22:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 2816,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2794,
														"src": "1795:6:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1769:32:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2818,
												"nodeType": "ExpressionStatement",
												"src": "1769:32:11"
											}
										]
									},
									"functionSelector": "dd8aa6f6",
									"id": 2820,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2797,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2796,
												"name": "onlyOwner",
												"nameLocations": [
													"1638:9:11"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "1638:9:11"
											},
											"nodeType": "ModifierInvocation",
											"src": "1638:9:11"
										}
									],
									"name": "issueShares",
									"nameLocation": "1571:11:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2795,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2790,
												"mutability": "mutable",
												"name": "basketId",
												"nameLocation": "1591:8:11",
												"nodeType": "VariableDeclaration",
												"scope": 2820,
												"src": "1583:16:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2789,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1583:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2792,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1609:2:11",
												"nodeType": "VariableDeclaration",
												"scope": 2820,
												"src": "1601:10:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2791,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1601:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2794,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1621:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 2820,
												"src": "1613:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2793,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1613:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1582:46:11"
									},
									"returnParameters": {
										"id": 2798,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1648:0:11"
									},
									"scope": 3074,
									"src": "1562:246:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2832,
										"nodeType": "Block",
										"src": "1901:41:11",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 2828,
														"name": "baskets",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2716,
														"src": "1918:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_ShareBasket_$2702_storage_$",
															"typeString": "mapping(uint256 => struct Shares.ShareBasket storage ref)"
														}
													},
													"id": 2830,
													"indexExpression": {
														"id": 2829,
														"name": "basketId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2822,
														"src": "1926:8:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "1918:17:11",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ShareBasket_$2702_storage",
														"typeString": "struct Shares.ShareBasket storage ref"
													}
												},
												"functionReturnParameters": 2827,
												"id": 2831,
												"nodeType": "Return",
												"src": "1911:24:11"
											}
										]
									},
									"functionSelector": "ff03e8c2",
									"id": 2833,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBasketDetails",
									"nameLocation": "1823:16:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2823,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2822,
												"mutability": "mutable",
												"name": "basketId",
												"nameLocation": "1848:8:11",
												"nodeType": "VariableDeclaration",
												"scope": 2833,
												"src": "1840:16:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2821,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1840:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1839:18:11"
									},
									"returnParameters": {
										"id": 2827,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2826,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2833,
												"src": "1881:18:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_ShareBasket_$2702_memory_ptr",
													"typeString": "struct Shares.ShareBasket"
												},
												"typeName": {
													"id": 2825,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2824,
														"name": "ShareBasket",
														"nameLocations": [
															"1881:11:11"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2702,
														"src": "1881:11:11"
													},
													"referencedDeclaration": 2702,
													"src": "1881:11:11",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ShareBasket_$2702_storage_ptr",
														"typeString": "struct Shares.ShareBasket"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1880:20:11"
									},
									"scope": 3074,
									"src": "1814:128:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2896,
										"nodeType": "Block",
										"src": "2064:451:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2849,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2847,
																"name": "shares",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2839,
																"src": "2082:6:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2848,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2091:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2082:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "536861726573206d7573742062652067726561746572207468616e2030",
															"id": 2850,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2094:31:11",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e24294be76b1cbd498453a3d6554ab510b6a9cdded1dafd11ec001f9ab7ca039",
																"typeString": "literal_string \"Shares must be greater than 0\""
															},
															"value": "Shares must be greater than 0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e24294be76b1cbd498453a3d6554ab510b6a9cdded1dafd11ec001f9ab7ca039",
																"typeString": "literal_string \"Shares must be greater than 0\""
															}
														],
														"id": 2846,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2074:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2851,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2074:52:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2852,
												"nodeType": "ExpressionStatement",
												"src": "2074:52:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2859,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"baseExpression": {
																		"id": 2854,
																		"name": "propertyShares",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2725,
																		"src": "2144:14:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_PropertyShares_$2711_storage_$",
																			"typeString": "mapping(uint256 => struct Shares.PropertyShares storage ref)"
																		}
																	},
																	"id": 2856,
																	"indexExpression": {
																		"id": 2855,
																		"name": "propertyId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2835,
																		"src": "2159:10:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "2144:26:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_PropertyShares_$2711_storage",
																		"typeString": "struct Shares.PropertyShares storage ref"
																	}
																},
																"id": 2857,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2171:15:11",
																"memberName": "availableShares",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2706,
																"src": "2144:42:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 2858,
																"name": "shares",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2839,
																"src": "2190:6:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2144:52:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f7420656e6f7567682073686172657320617661696c61626c65",
															"id": 2860,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2198:29:11",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c2664836f08f089a39d927da540bfbfc322ded0e69c3d2ff852ad8874067c6e6",
																"typeString": "literal_string \"Not enough shares available\""
															},
															"value": "Not enough shares available"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c2664836f08f089a39d927da540bfbfc322ded0e69c3d2ff852ad8874067c6e6",
																"typeString": "literal_string \"Not enough shares available\""
															}
														],
														"id": 2853,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2136:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2861,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2136:92:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2862,
												"nodeType": "ExpressionStatement",
												"src": "2136:92:11"
											},
											{
												"assignments": [
													2865
												],
												"declarations": [
													{
														"constant": false,
														"id": 2865,
														"mutability": "mutable",
														"name": "sharesData",
														"nameLocation": "2270:10:11",
														"nodeType": "VariableDeclaration",
														"scope": 2896,
														"src": "2247:33:11",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PropertyShares_$2711_storage_ptr",
															"typeString": "struct Shares.PropertyShares"
														},
														"typeName": {
															"id": 2864,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 2863,
																"name": "PropertyShares",
																"nameLocations": [
																	"2247:14:11"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 2711,
																"src": "2247:14:11"
															},
															"referencedDeclaration": 2711,
															"src": "2247:14:11",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PropertyShares_$2711_storage_ptr",
																"typeString": "struct Shares.PropertyShares"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2869,
												"initialValue": {
													"baseExpression": {
														"id": 2866,
														"name": "propertyShares",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2725,
														"src": "2283:14:11",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_PropertyShares_$2711_storage_$",
															"typeString": "mapping(uint256 => struct Shares.PropertyShares storage ref)"
														}
													},
													"id": 2868,
													"indexExpression": {
														"id": 2867,
														"name": "propertyId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2835,
														"src": "2298:10:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2283:26:11",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PropertyShares_$2711_storage",
														"typeString": "struct Shares.PropertyShares storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2247:62:11"
											},
											{
												"expression": {
													"id": 2874,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 2870,
															"name": "sharesData",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2865,
															"src": "2319:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PropertyShares_$2711_storage_ptr",
																"typeString": "struct Shares.PropertyShares storage pointer"
															}
														},
														"id": 2872,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "2330:11:11",
														"memberName": "totalShares",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2704,
														"src": "2319:22:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 2873,
														"name": "shares",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2839,
														"src": "2345:6:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2319:32:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2875,
												"nodeType": "ExpressionStatement",
												"src": "2319:32:11"
											},
											{
												"expression": {
													"id": 2880,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 2876,
															"name": "sharesData",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2865,
															"src": "2361:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PropertyShares_$2711_storage_ptr",
																"typeString": "struct Shares.PropertyShares storage pointer"
															}
														},
														"id": 2878,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "2372:15:11",
														"memberName": "availableShares",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2706,
														"src": "2361:26:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 2879,
														"name": "shares",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2839,
														"src": "2391:6:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2361:36:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2881,
												"nodeType": "ExpressionStatement",
												"src": "2361:36:11"
											},
											{
												"expression": {
													"id": 2888,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"expression": {
																"id": 2882,
																"name": "sharesData",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2865,
																"src": "2407:10:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_PropertyShares_$2711_storage_ptr",
																	"typeString": "struct Shares.PropertyShares storage pointer"
																}
															},
															"id": 2885,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2418:12:11",
															"memberName": "shareholders",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2710,
															"src": "2407:23:11",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 2886,
														"indexExpression": {
															"id": 2884,
															"name": "investor",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2837,
															"src": "2431:8:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2407:33:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 2887,
														"name": "shares",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2839,
														"src": "2444:6:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2407:43:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2889,
												"nodeType": "ExpressionStatement",
												"src": "2407:43:11"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 2891,
															"name": "investor",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2837,
															"src": "2479:8:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2892,
															"name": "propertyId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2835,
															"src": "2489:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2893,
															"name": "shares",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2839,
															"src": "2501:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2890,
														"name": "SharesIssued",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2737,
														"src": "2466:12:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256)"
														}
													},
													"id": 2894,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2466:42:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2895,
												"nodeType": "EmitStatement",
												"src": "2461:47:11"
											}
										]
									},
									"functionSelector": "b543cf38",
									"id": 2897,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2842,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2841,
												"name": "onlyOwner",
												"nameLocations": [
													"2040:9:11"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2040:9:11"
											},
											"nodeType": "ModifierInvocation",
											"src": "2040:9:11"
										},
										{
											"id": 2844,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2843,
												"name": "whenNotPaused",
												"nameLocations": [
													"2050:13:11"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 319,
												"src": "2050:13:11"
											},
											"nodeType": "ModifierInvocation",
											"src": "2050:13:11"
										}
									],
									"name": "issuePropertyShares",
									"nameLocation": "1957:19:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2840,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2835,
												"mutability": "mutable",
												"name": "propertyId",
												"nameLocation": "1985:10:11",
												"nodeType": "VariableDeclaration",
												"scope": 2897,
												"src": "1977:18:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2834,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1977:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2837,
												"mutability": "mutable",
												"name": "investor",
												"nameLocation": "2005:8:11",
												"nodeType": "VariableDeclaration",
												"scope": 2897,
												"src": "1997:16:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2836,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1997:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2839,
												"mutability": "mutable",
												"name": "shares",
												"nameLocation": "2023:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 2897,
												"src": "2015:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2838,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2015:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1976:54:11"
									},
									"returnParameters": {
										"id": 2845,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2064:0:11"
									},
									"scope": 3074,
									"src": "1948:567:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2963,
										"nodeType": "Block",
										"src": "2616:436:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 2914,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2909,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2901,
																"src": "2634:2:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 2912,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2648:1:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 2911,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2640:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 2910,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2640:7:11",
																		"typeDescriptions": {}
																	}
																},
																"id": 2913,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2640:10:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2634:16:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c696420726563697069656e742061646472657373",
															"id": 2915,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2652:27:11",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9296ff0c00c9773aeb7dfef423d0c5484d831f800b943533b0cf1300a3d8e8df",
																"typeString": "literal_string \"Invalid recipient address\""
															},
															"value": "Invalid recipient address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9296ff0c00c9773aeb7dfef423d0c5484d831f800b943533b0cf1300a3d8e8df",
																"typeString": "literal_string \"Invalid recipient address\""
															}
														],
														"id": 2908,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2626:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2916,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2626:54:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2917,
												"nodeType": "ExpressionStatement",
												"src": "2626:54:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2927,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"expression": {
																		"baseExpression": {
																			"id": 2919,
																			"name": "propertyShares",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2725,
																			"src": "2698:14:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_PropertyShares_$2711_storage_$",
																				"typeString": "mapping(uint256 => struct Shares.PropertyShares storage ref)"
																			}
																		},
																		"id": 2921,
																		"indexExpression": {
																			"id": 2920,
																			"name": "propertyId",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2899,
																			"src": "2713:10:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "2698:26:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_PropertyShares_$2711_storage",
																			"typeString": "struct Shares.PropertyShares storage ref"
																		}
																	},
																	"id": 2922,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2725:12:11",
																	"memberName": "shareholders",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2710,
																	"src": "2698:39:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 2925,
																"indexExpression": {
																	"expression": {
																		"id": 2923,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "2738:3:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 2924,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2742:6:11",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "2738:10:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "2698:51:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 2926,
																"name": "shares",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2903,
																"src": "2753:6:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2698:61:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f7420656e6f7567682073686172657320746f207472616e73666572",
															"id": 2928,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2761:31:11",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0857c57456ecf2726586715f2441db771764d06c344926f01279ec4ec08abc3b",
																"typeString": "literal_string \"Not enough shares to transfer\""
															},
															"value": "Not enough shares to transfer"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0857c57456ecf2726586715f2441db771764d06c344926f01279ec4ec08abc3b",
																"typeString": "literal_string \"Not enough shares to transfer\""
															}
														],
														"id": 2918,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2690:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2929,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2690:103:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2930,
												"nodeType": "ExpressionStatement",
												"src": "2690:103:11"
											},
											{
												"assignments": [
													2933
												],
												"declarations": [
													{
														"constant": false,
														"id": 2933,
														"mutability": "mutable",
														"name": "sharesData",
														"nameLocation": "2835:10:11",
														"nodeType": "VariableDeclaration",
														"scope": 2963,
														"src": "2812:33:11",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PropertyShares_$2711_storage_ptr",
															"typeString": "struct Shares.PropertyShares"
														},
														"typeName": {
															"id": 2932,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 2931,
																"name": "PropertyShares",
																"nameLocations": [
																	"2812:14:11"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 2711,
																"src": "2812:14:11"
															},
															"referencedDeclaration": 2711,
															"src": "2812:14:11",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PropertyShares_$2711_storage_ptr",
																"typeString": "struct Shares.PropertyShares"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2937,
												"initialValue": {
													"baseExpression": {
														"id": 2934,
														"name": "propertyShares",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2725,
														"src": "2848:14:11",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_PropertyShares_$2711_storage_$",
															"typeString": "mapping(uint256 => struct Shares.PropertyShares storage ref)"
														}
													},
													"id": 2936,
													"indexExpression": {
														"id": 2935,
														"name": "propertyId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2899,
														"src": "2863:10:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2848:26:11",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PropertyShares_$2711_storage",
														"typeString": "struct Shares.PropertyShares storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2812:62:11"
											},
											{
												"expression": {
													"id": 2945,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"expression": {
																"id": 2938,
																"name": "sharesData",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2933,
																"src": "2884:10:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_PropertyShares_$2711_storage_ptr",
																	"typeString": "struct Shares.PropertyShares storage pointer"
																}
															},
															"id": 2942,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2895:12:11",
															"memberName": "shareholders",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2710,
															"src": "2884:23:11",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 2943,
														"indexExpression": {
															"expression": {
																"id": 2940,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2908:3:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2941,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2912:6:11",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2908:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2884:35:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 2944,
														"name": "shares",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2903,
														"src": "2923:6:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2884:45:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2946,
												"nodeType": "ExpressionStatement",
												"src": "2884:45:11"
											},
											{
												"expression": {
													"id": 2953,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"expression": {
																"id": 2947,
																"name": "sharesData",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2933,
																"src": "2939:10:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_PropertyShares_$2711_storage_ptr",
																	"typeString": "struct Shares.PropertyShares storage pointer"
																}
															},
															"id": 2950,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2950:12:11",
															"memberName": "shareholders",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2710,
															"src": "2939:23:11",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 2951,
														"indexExpression": {
															"id": 2949,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2901,
															"src": "2963:2:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2939:27:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 2952,
														"name": "shares",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2903,
														"src": "2970:6:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2939:37:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2954,
												"nodeType": "ExpressionStatement",
												"src": "2939:37:11"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 2956,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3010:3:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2957,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3014:6:11",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3010:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2958,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2901,
															"src": "3022:2:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2959,
															"name": "propertyId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2899,
															"src": "3026:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2960,
															"name": "shares",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2903,
															"src": "3038:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2955,
														"name": "SharesTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2747,
														"src": "2992:17:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 2961,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2992:53:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2962,
												"nodeType": "EmitStatement",
												"src": "2987:58:11"
											}
										]
									},
									"functionSelector": "84b9a6e6",
									"id": 2964,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2906,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2905,
												"name": "whenNotPaused",
												"nameLocations": [
													"2602:13:11"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 319,
												"src": "2602:13:11"
											},
											"nodeType": "ModifierInvocation",
											"src": "2602:13:11"
										}
									],
									"name": "transferShares",
									"nameLocation": "2530:14:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2904,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2899,
												"mutability": "mutable",
												"name": "propertyId",
												"nameLocation": "2553:10:11",
												"nodeType": "VariableDeclaration",
												"scope": 2964,
												"src": "2545:18:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2898,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2545:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2901,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2573:2:11",
												"nodeType": "VariableDeclaration",
												"scope": 2964,
												"src": "2565:10:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2900,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2565:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2903,
												"mutability": "mutable",
												"name": "shares",
												"nameLocation": "2585:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 2964,
												"src": "2577:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2902,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2577:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2544:48:11"
									},
									"returnParameters": {
										"id": 2907,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2616:0:11"
									},
									"scope": 3074,
									"src": "2521:531:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2980,
										"nodeType": "Block",
										"src": "3150:76:11",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"expression": {
															"baseExpression": {
																"id": 2973,
																"name": "propertyShares",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2725,
																"src": "3167:14:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_PropertyShares_$2711_storage_$",
																	"typeString": "mapping(uint256 => struct Shares.PropertyShares storage ref)"
																}
															},
															"id": 2975,
															"indexExpression": {
																"id": 2974,
																"name": "propertyId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2966,
																"src": "3182:10:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "3167:26:11",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PropertyShares_$2711_storage",
																"typeString": "struct Shares.PropertyShares storage ref"
															}
														},
														"id": 2976,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3194:12:11",
														"memberName": "shareholders",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2710,
														"src": "3167:39:11",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 2978,
													"indexExpression": {
														"id": 2977,
														"name": "shareholder",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2968,
														"src": "3207:11:11",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3167:52:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2972,
												"id": 2979,
												"nodeType": "Return",
												"src": "3160:59:11"
											}
										]
									},
									"functionSelector": "75c0b9fe",
									"id": 2981,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getShares",
									"nameLocation": "3067:9:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2969,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2966,
												"mutability": "mutable",
												"name": "propertyId",
												"nameLocation": "3085:10:11",
												"nodeType": "VariableDeclaration",
												"scope": 2981,
												"src": "3077:18:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2965,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3077:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2968,
												"mutability": "mutable",
												"name": "shareholder",
												"nameLocation": "3105:11:11",
												"nodeType": "VariableDeclaration",
												"scope": 2981,
												"src": "3097:19:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2967,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3097:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3076:41:11"
									},
									"returnParameters": {
										"id": 2972,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2971,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2981,
												"src": "3141:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2970,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3141:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3140:9:11"
									},
									"scope": 3074,
									"src": "3058:168:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2993,
										"nodeType": "Block",
										"src": "3308:62:11",
										"statements": [
											{
												"expression": {
													"expression": {
														"baseExpression": {
															"id": 2988,
															"name": "propertyShares",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2725,
															"src": "3325:14:11",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_PropertyShares_$2711_storage_$",
																"typeString": "mapping(uint256 => struct Shares.PropertyShares storage ref)"
															}
														},
														"id": 2990,
														"indexExpression": {
															"id": 2989,
															"name": "propertyId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2983,
															"src": "3340:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3325:26:11",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PropertyShares_$2711_storage",
															"typeString": "struct Shares.PropertyShares storage ref"
														}
													},
													"id": 2991,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "3352:11:11",
													"memberName": "totalShares",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 2704,
													"src": "3325:38:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2987,
												"id": 2992,
												"nodeType": "Return",
												"src": "3318:45:11"
											}
										]
									},
									"functionSelector": "85fff858",
									"id": 2994,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getTotalShares",
									"nameLocation": "3241:14:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2984,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2983,
												"mutability": "mutable",
												"name": "propertyId",
												"nameLocation": "3264:10:11",
												"nodeType": "VariableDeclaration",
												"scope": 2994,
												"src": "3256:18:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2982,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3256:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3255:20:11"
									},
									"returnParameters": {
										"id": 2987,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2986,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2994,
												"src": "3299:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2985,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3299:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3298:9:11"
									},
									"scope": 3074,
									"src": "3232:138:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 3006,
										"nodeType": "Block",
										"src": "3456:66:11",
										"statements": [
											{
												"expression": {
													"expression": {
														"baseExpression": {
															"id": 3001,
															"name": "propertyShares",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2725,
															"src": "3473:14:11",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_PropertyShares_$2711_storage_$",
																"typeString": "mapping(uint256 => struct Shares.PropertyShares storage ref)"
															}
														},
														"id": 3003,
														"indexExpression": {
															"id": 3002,
															"name": "propertyId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2996,
															"src": "3488:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3473:26:11",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PropertyShares_$2711_storage",
															"typeString": "struct Shares.PropertyShares storage ref"
														}
													},
													"id": 3004,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "3500:15:11",
													"memberName": "availableShares",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 2706,
													"src": "3473:42:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 3000,
												"id": 3005,
												"nodeType": "Return",
												"src": "3466:49:11"
											}
										]
									},
									"functionSelector": "dcd9d12d",
									"id": 3007,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getAvailableShares",
									"nameLocation": "3385:18:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2997,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2996,
												"mutability": "mutable",
												"name": "propertyId",
												"nameLocation": "3412:10:11",
												"nodeType": "VariableDeclaration",
												"scope": 3007,
												"src": "3404:18:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2995,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3404:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3403:20:11"
									},
									"returnParameters": {
										"id": 3000,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2999,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3007,
												"src": "3447:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2998,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3447:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3446:9:11"
									},
									"scope": 3074,
									"src": "3376:146:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 3032,
										"nodeType": "Block",
										"src": "3608:114:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 3022,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3017,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3011,
																"src": "3626:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 3020,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3643:1:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 3019,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3635:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 3018,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "3635:7:11",
																		"typeDescriptions": {}
																	}
																},
																"id": 3021,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3635:10:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "3626:19:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c6964206f776e65722061646472657373",
															"id": 3023,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3647:23:11",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_854cf043fa623ebed8453fda259d33de3f6e7493e6b8ff90fcfdd906ab498ce3",
																"typeString": "literal_string \"Invalid owner address\""
															},
															"value": "Invalid owner address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_854cf043fa623ebed8453fda259d33de3f6e7493e6b8ff90fcfdd906ab498ce3",
																"typeString": "literal_string \"Invalid owner address\""
															}
														],
														"id": 3016,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3618:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 3024,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3618:53:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3025,
												"nodeType": "ExpressionStatement",
												"src": "3618:53:11"
											},
											{
												"expression": {
													"id": 3030,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 3026,
															"name": "propertyOwners",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2729,
															"src": "3681:14:11",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																"typeString": "mapping(uint256 => address)"
															}
														},
														"id": 3028,
														"indexExpression": {
															"id": 3027,
															"name": "propertyId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3009,
															"src": "3696:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3681:26:11",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 3029,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3011,
														"src": "3710:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3681:34:11",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 3031,
												"nodeType": "ExpressionStatement",
												"src": "3681:34:11"
											}
										]
									},
									"functionSelector": "5813a683",
									"id": 3033,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 3014,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 3013,
												"name": "onlyOwner",
												"nameLocations": [
													"3598:9:11"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "3598:9:11"
											},
											"nodeType": "ModifierInvocation",
											"src": "3598:9:11"
										}
									],
									"name": "setPropertyOwner",
									"nameLocation": "3537:16:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3012,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3009,
												"mutability": "mutable",
												"name": "propertyId",
												"nameLocation": "3562:10:11",
												"nodeType": "VariableDeclaration",
												"scope": 3033,
												"src": "3554:18:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3008,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3554:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3011,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3582:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 3033,
												"src": "3574:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3010,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3574:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3553:35:11"
									},
									"returnParameters": {
										"id": 3015,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3608:0:11"
									},
									"scope": 3074,
									"src": "3528:194:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 3044,
										"nodeType": "Block",
										"src": "3806:50:11",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 3040,
														"name": "propertyOwners",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2729,
														"src": "3823:14:11",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
															"typeString": "mapping(uint256 => address)"
														}
													},
													"id": 3042,
													"indexExpression": {
														"id": 3041,
														"name": "propertyId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3035,
														"src": "3838:10:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3823:26:11",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 3039,
												"id": 3043,
												"nodeType": "Return",
												"src": "3816:33:11"
											}
										]
									},
									"functionSelector": "e34fc531",
									"id": 3045,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getPropertyOwner",
									"nameLocation": "3737:16:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3036,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3035,
												"mutability": "mutable",
												"name": "propertyId",
												"nameLocation": "3762:10:11",
												"nodeType": "VariableDeclaration",
												"scope": 3045,
												"src": "3754:18:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3034,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3754:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3753:20:11"
									},
									"returnParameters": {
										"id": 3039,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3038,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3045,
												"src": "3797:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3037,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3797:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3796:9:11"
									},
									"scope": 3074,
									"src": "3728:128:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 3053,
										"nodeType": "Block",
										"src": "3898:25:11",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 3050,
														"name": "_pause",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 375,
														"src": "3908:6:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 3051,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3908:8:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3052,
												"nodeType": "ExpressionStatement",
												"src": "3908:8:11"
											}
										]
									},
									"functionSelector": "8456cb59",
									"id": 3054,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 3048,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 3047,
												"name": "onlyOwner",
												"nameLocations": [
													"3888:9:11"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "3888:9:11"
											},
											"nodeType": "ModifierInvocation",
											"src": "3888:9:11"
										}
									],
									"name": "pause",
									"nameLocation": "3871:5:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3046,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3876:2:11"
									},
									"returnParameters": {
										"id": 3049,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3898:0:11"
									},
									"scope": 3074,
									"src": "3862:61:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 3062,
										"nodeType": "Block",
										"src": "3967:27:11",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 3059,
														"name": "_unpause",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 391,
														"src": "3977:8:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 3060,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3977:10:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3061,
												"nodeType": "ExpressionStatement",
												"src": "3977:10:11"
											}
										]
									},
									"functionSelector": "3f4ba83a",
									"id": 3063,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 3057,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 3056,
												"name": "onlyOwner",
												"nameLocations": [
													"3957:9:11"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "3957:9:11"
											},
											"nodeType": "ModifierInvocation",
											"src": "3957:9:11"
										}
									],
									"name": "unpause",
									"nameLocation": "3938:7:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3055,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3945:2:11"
									},
									"returnParameters": {
										"id": 3058,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3967:0:11"
									},
									"scope": 3074,
									"src": "3929:65:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 3072,
										"nodeType": "Block",
										"src": "4092:65:11",
										"statements": [
											{
												"expression": {
													"hexValue": "74727565",
													"id": 3070,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4146:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 3069,
												"id": 3071,
												"nodeType": "Return",
												"src": "4139:11:11"
											}
										]
									},
									"functionSelector": "5dfe7721",
									"id": 3073,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "integrateWithExternalSystem",
									"nameLocation": "4009:27:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3066,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3065,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3073,
												"src": "4037:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3064,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4037:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4036:26:11"
									},
									"returnParameters": {
										"id": 3069,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3068,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3073,
												"src": "4086:4:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 3067,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4086:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4085:6:11"
									},
									"scope": 3074,
									"src": "4000:157:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 3075,
							"src": "343:3816:11",
							"usedErrors": [
								13,
								18,
								159,
								164,
								169,
								178,
								183,
								188
							],
							"usedEvents": [
								24,
								295,
								300,
								919,
								928,
								2737,
								2747
							]
						}
					],
					"src": "32:4127:11"
				},
				"id": 11
			}
		}
	}
}